!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABS	gmacros.h	223;"	d
ABS	gmacros.h	224;"	d
ATEXIT	gutils.h	227;"	d
CLAMP	gmacros.h	226;"	d
CLAMP	gmacros.h	227;"	d
C_	gi18n-lib.h	35;"	d
C_	gi18n.h	31;"	d
FALSE	gmacros.h	210;"	d
GAllocator	deprecated/gallocator.h	/^typedef struct _GAllocator GAllocator;$/;"	t	typeref:struct:_GAllocator
GArray	garray.h	/^typedef struct _GArray		GArray;$/;"	t	typeref:struct:_GArray
GAsciiType	gstrfuncs.h	/^} GAsciiType;$/;"	t	typeref:enum:__anon28
GAsyncQueue	gasyncqueue.h	/^typedef struct _GAsyncQueue GAsyncQueue;$/;"	t	typeref:struct:_GAsyncQueue
GBookmarkFile	gbookmarkfile.h	/^typedef struct _GBookmarkFile GBookmarkFile;$/;"	t	typeref:struct:_GBookmarkFile
GBookmarkFileError	gbookmarkfile.h	/^} GBookmarkFileError;$/;"	t	typeref:enum:__anon43
GByteArray	garray.h	/^typedef struct _GByteArray	GByteArray;$/;"	t	typeref:struct:_GByteArray
GBytes	garray.h	/^typedef struct _GBytes          GBytes;$/;"	t	typeref:struct:_GBytes
GCache	deprecated/gcache.h	/^typedef struct _GCache          GCache;$/;"	t	typeref:struct:_GCache
GCacheDestroyFunc	deprecated/gcache.h	/^typedef void            (*GCacheDestroyFunc)    (gpointer       value);$/;"	t
GCacheDupFunc	deprecated/gcache.h	/^typedef gpointer        (*GCacheDupFunc)        (gpointer       value);$/;"	t
GCacheNewFunc	deprecated/gcache.h	/^typedef gpointer        (*GCacheNewFunc)        (gpointer       key);$/;"	t
GChecksum	gchecksum.h	/^typedef struct _GChecksum       GChecksum;$/;"	t	typeref:struct:_GChecksum
GChecksumType	gchecksum.h	/^} GChecksumType;$/;"	t	typeref:enum:__anon8
GChildWatchFunc	gmain.h	/^typedef void     (*GChildWatchFunc)   (GPid     pid,$/;"	t
GCompareDataFunc	gtypes.h	/^typedef gint            (*GCompareDataFunc)     (gconstpointer  a,$/;"	t
GCompareFunc	gtypes.h	/^typedef gint            (*GCompareFunc)         (gconstpointer  a,$/;"	t
GCompletion	deprecated/gcompletion.h	/^typedef struct _GCompletion     GCompletion;$/;"	t	typeref:struct:_GCompletion
GCompletionFunc	deprecated/gcompletion.h	/^typedef gchar*          (*GCompletionFunc)      (gpointer);$/;"	t
GCompletionStrncmpFunc	deprecated/gcompletion.h	/^typedef gint (*GCompletionStrncmpFunc) (const gchar *s1,$/;"	t
GCond	gthread.h	/^typedef struct _GCond           GCond;$/;"	t	typeref:struct:_GCond
GConvertError	gconvert.h	/^} GConvertError;$/;"	t	typeref:enum:__anon20
GCopyFunc	gnode.h	/^typedef gpointer	(*GCopyFunc)            (gconstpointer  src,$/;"	t
GData	gdataset.h	/^typedef struct _GData           GData;$/;"	t	typeref:struct:_GData
GDataForeachFunc	gdataset.h	/^typedef void            (*GDataForeachFunc)     (GQuark         key_id,$/;"	t
GDate	gdate.h	/^typedef struct _GDate GDate;$/;"	t	typeref:struct:_GDate
GDateDMY	gdate.h	/^} GDateDMY;$/;"	t	typeref:enum:__anon21
GDateDay	gdate.h	/^typedef guint8  GDateDay;   \/* day of the month *\/$/;"	t
GDateMonth	gdate.h	/^} GDateMonth;$/;"	t	typeref:enum:__anon23
GDateTime	gdatetime.h	/^typedef struct _GDateTime GDateTime;$/;"	t	typeref:struct:_GDateTime
GDateWeekday	gdate.h	/^} GDateWeekday;$/;"	t	typeref:enum:__anon22
GDateYear	gdate.h	/^typedef guint16 GDateYear;$/;"	t
GDebugKey	gutils.h	/^typedef struct _GDebugKey GDebugKey;$/;"	t	typeref:struct:_GDebugKey
GDestroyNotify	gtypes.h	/^typedef void            (*GDestroyNotify)       (gpointer       data);$/;"	t
GDir	gdir.h	/^typedef struct _GDir GDir;$/;"	t	typeref:struct:_GDir
GDoubleIEEE754	gtypes.h	/^typedef union  _GDoubleIEEE754	GDoubleIEEE754;$/;"	t	typeref:union:_GDoubleIEEE754
GEqualFunc	gtypes.h	/^typedef gboolean        (*GEqualFunc)           (gconstpointer  a,$/;"	t
GError	gerror.h	/^typedef struct _GError GError;$/;"	t	typeref:struct:_GError
GErrorType	gscanner.h	/^} GErrorType;$/;"	t	typeref:enum:__anon9
GFileError	gfileutils.h	/^} GFileError;$/;"	t	typeref:enum:__anon18
GFileTest	gfileutils.h	/^} GFileTest;$/;"	t	typeref:enum:__anon19
GFloatIEEE754	gtypes.h	/^typedef union  _GFloatIEEE754	GFloatIEEE754;$/;"	t	typeref:union:_GFloatIEEE754
GFormatSizeFlags	gutils.h	/^} GFormatSizeFlags;$/;"	t	typeref:enum:__anon42
GFreeFunc	gtypes.h	/^typedef void            (*GFreeFunc)            (gpointer       data);$/;"	t
GFunc	gtypes.h	/^typedef void            (*GFunc)                (gpointer       data,$/;"	t
GHFunc	gtypes.h	/^typedef void            (*GHFunc)               (gpointer       key,$/;"	t
GHRFunc	ghash.h	/^typedef gboolean  (*GHRFunc)  (gpointer  key,$/;"	t
GHashFunc	gtypes.h	/^typedef guint           (*GHashFunc)            (gconstpointer  key);$/;"	t
GHashTable	ghash.h	/^typedef struct _GHashTable  GHashTable;$/;"	t	typeref:struct:_GHashTable
GHashTableIter	ghash.h	/^typedef struct _GHashTableIter GHashTableIter;$/;"	t	typeref:struct:_GHashTableIter
GHmac	ghmac.h	/^typedef struct _GHmac       GHmac;$/;"	t	typeref:struct:_GHmac
GHook	ghook.h	/^typedef struct _GHook		GHook;$/;"	t	typeref:struct:_GHook
GHookCheckFunc	ghook.h	/^typedef gboolean	(*GHookCheckFunc)	(gpointer	 data);$/;"	t
GHookCheckMarshaller	ghook.h	/^typedef gboolean	(*GHookCheckMarshaller)	(GHook		*hook,$/;"	t
GHookCompareFunc	ghook.h	/^typedef gint		(*GHookCompareFunc)	(GHook		*new_hook,$/;"	t
GHookFinalizeFunc	ghook.h	/^typedef void		(*GHookFinalizeFunc)	(GHookList      *hook_list,$/;"	t
GHookFindFunc	ghook.h	/^typedef gboolean	(*GHookFindFunc)	(GHook		*hook,$/;"	t
GHookFlagMask	ghook.h	/^} GHookFlagMask;$/;"	t	typeref:enum:__anon56
GHookFunc	ghook.h	/^typedef void		(*GHookFunc)		(gpointer	 data);$/;"	t
GHookList	ghook.h	/^typedef struct _GHookList	GHookList;$/;"	t	typeref:struct:_GHookList
GHookMarshaller	ghook.h	/^typedef void		(*GHookMarshaller)	(GHook		*hook,$/;"	t
GIConv	gconvert.h	/^typedef struct _GIConv *GIConv;$/;"	t	typeref:struct:_GIConv
GINT16_FROM_BE	gtypes.h	349;"	d
GINT16_FROM_LE	gtypes.h	347;"	d
GINT32_FROM_BE	gtypes.h	353;"	d
GINT32_FROM_LE	gtypes.h	351;"	d
GINT64_FROM_BE	gtypes.h	358;"	d
GINT64_FROM_LE	gtypes.h	356;"	d
GINT_FROM_BE	gtypes.h	368;"	d
GINT_FROM_LE	gtypes.h	366;"	d
GIOChannel	giochannel.h	/^typedef struct _GIOChannel	GIOChannel;$/;"	t	typeref:struct:_GIOChannel
GIOChannelError	giochannel.h	/^} GIOChannelError;$/;"	t	typeref:enum:__anon34
GIOCondition	giochannel.h	/^} GIOCondition;$/;"	t	typeref:enum:__anon37
GIOError	giochannel.h	/^} GIOError;$/;"	t	typeref:enum:__anon33
GIOFlags	giochannel.h	/^} GIOFlags;$/;"	t	typeref:enum:__anon38
GIOFunc	giochannel.h	/^typedef gboolean (*GIOFunc) (GIOChannel   *source,$/;"	t
GIOFuncs	giochannel.h	/^typedef struct _GIOFuncs        GIOFuncs;$/;"	t	typeref:struct:_GIOFuncs
GIOStatus	giochannel.h	/^} GIOStatus;$/;"	t	typeref:enum:__anon35
GKeyFile	gkeyfile.h	/^typedef struct _GKeyFile GKeyFile;$/;"	t	typeref:struct:_GKeyFile
GKeyFileError	gkeyfile.h	/^} GKeyFileError;$/;"	t	typeref:enum:__anon16
GKeyFileFlags	gkeyfile.h	/^} GKeyFileFlags;$/;"	t	typeref:enum:__anon17
GLIB_AVAILABLE_IN_2_26	gversionmacros.h	165;"	d
GLIB_AVAILABLE_IN_2_26	gversionmacros.h	167;"	d
GLIB_AVAILABLE_IN_2_28	gversionmacros.h	179;"	d
GLIB_AVAILABLE_IN_2_28	gversionmacros.h	181;"	d
GLIB_AVAILABLE_IN_2_30	gversionmacros.h	193;"	d
GLIB_AVAILABLE_IN_2_30	gversionmacros.h	195;"	d
GLIB_AVAILABLE_IN_2_32	gversionmacros.h	207;"	d
GLIB_AVAILABLE_IN_2_32	gversionmacros.h	209;"	d
GLIB_CHECK_VERSION	gversion.h	48;"	d
GLIB_DEPRECATED	gmacros.h	334;"	d
GLIB_DEPRECATED	gmacros.h	338;"	d
GLIB_DEPRECATED_FOR	gmacros.h	335;"	d
GLIB_DEPRECATED_FOR	gmacros.h	339;"	d
GLIB_DEPRECATED_IN_2_26	gversionmacros.h	157;"	d
GLIB_DEPRECATED_IN_2_26	gversionmacros.h	160;"	d
GLIB_DEPRECATED_IN_2_26_FOR	gversionmacros.h	158;"	d
GLIB_DEPRECATED_IN_2_26_FOR	gversionmacros.h	161;"	d
GLIB_DEPRECATED_IN_2_28	gversionmacros.h	171;"	d
GLIB_DEPRECATED_IN_2_28	gversionmacros.h	174;"	d
GLIB_DEPRECATED_IN_2_28_FOR	gversionmacros.h	172;"	d
GLIB_DEPRECATED_IN_2_28_FOR	gversionmacros.h	175;"	d
GLIB_DEPRECATED_IN_2_30	gversionmacros.h	185;"	d
GLIB_DEPRECATED_IN_2_30	gversionmacros.h	188;"	d
GLIB_DEPRECATED_IN_2_30_FOR	gversionmacros.h	186;"	d
GLIB_DEPRECATED_IN_2_30_FOR	gversionmacros.h	189;"	d
GLIB_DEPRECATED_IN_2_32	gversionmacros.h	199;"	d
GLIB_DEPRECATED_IN_2_32	gversionmacros.h	202;"	d
GLIB_DEPRECATED_IN_2_32_FOR	gversionmacros.h	200;"	d
GLIB_DEPRECATED_IN_2_32_FOR	gversionmacros.h	203;"	d
GLIB_SYSDEF_POLLERR	giochannel.h	/^  G_IO_ERR	GLIB_SYSDEF_POLLERR,$/;"	e	enum:__anon37
GLIB_SYSDEF_POLLHUP	giochannel.h	/^  G_IO_HUP	GLIB_SYSDEF_POLLHUP,$/;"	e	enum:__anon37
GLIB_SYSDEF_POLLIN	giochannel.h	/^  G_IO_IN	GLIB_SYSDEF_POLLIN,$/;"	e	enum:__anon37
GLIB_SYSDEF_POLLNVAL	giochannel.h	/^  G_IO_NVAL	GLIB_SYSDEF_POLLNVAL$/;"	e	enum:__anon37
GLIB_SYSDEF_POLLOUT	giochannel.h	/^  G_IO_OUT	GLIB_SYSDEF_POLLOUT,$/;"	e	enum:__anon37
GLIB_SYSDEF_POLLPRI	giochannel.h	/^  G_IO_PRI	GLIB_SYSDEF_POLLPRI,$/;"	e	enum:__anon37
GLIB_UNAVAILABLE	gmacros.h	336;"	d
GLIB_UNAVAILABLE	gmacros.h	340;"	d
GLIB_VAR	gtypes.h	467;"	d
GLIB_VERSION_2_26	gversionmacros.h	48;"	d
GLIB_VERSION_2_28	gversionmacros.h	58;"	d
GLIB_VERSION_2_30	gversionmacros.h	68;"	d
GLIB_VERSION_2_32	gversionmacros.h	78;"	d
GLIB_VERSION_CUR_STABLE	gversionmacros.h	84;"	d
GLIB_VERSION_CUR_STABLE	gversionmacros.h	86;"	d
GLIB_VERSION_MAX_ALLOWED	gversionmacros.h	134;"	d
GLIB_VERSION_MAX_ALLOWED	gversionmacros.h	136;"	d
GLIB_VERSION_MIN_REQUIRED	gversionmacros.h	113;"	d
GLIB_VERSION_PREV_STABLE	gversionmacros.h	91;"	d
GLIB_VERSION_PREV_STABLE	gversionmacros.h	93;"	d
GLONG_FROM_BE	gtypes.h	363;"	d
GLONG_FROM_LE	gtypes.h	361;"	d
GList	glist.h	/^typedef struct _GList GList;$/;"	t	typeref:struct:_GList
GLogFunc	gmessages.h	/^typedef void            (*GLogFunc)             (const gchar   *log_domain,$/;"	t
GLogLevelFlags	gmessages.h	/^} GLogLevelFlags;$/;"	t	typeref:enum:__anon48
GMainContext	gmain.h	/^typedef struct _GMainContext            GMainContext;$/;"	t	typeref:struct:_GMainContext
GMainLoop	gmain.h	/^typedef struct _GMainLoop               GMainLoop;$/;"	t	typeref:struct:_GMainLoop
GMappedFile	gmappedfile.h	/^typedef struct _GMappedFile GMappedFile;$/;"	t	typeref:struct:_GMappedFile
GMarkupCollectType	gmarkup.h	/^} GMarkupCollectType;$/;"	t	typeref:enum:__anon59
GMarkupError	gmarkup.h	/^} GMarkupError;$/;"	t	typeref:enum:__anon57
GMarkupParseContext	gmarkup.h	/^typedef struct _GMarkupParseContext GMarkupParseContext;$/;"	t	typeref:struct:_GMarkupParseContext
GMarkupParseFlags	gmarkup.h	/^} GMarkupParseFlags;$/;"	t	typeref:enum:__anon58
GMarkupParser	gmarkup.h	/^typedef struct _GMarkupParser GMarkupParser;$/;"	t	typeref:struct:_GMarkupParser
GMatchInfo	gregex.h	/^typedef struct _GMatchInfo	GMatchInfo;$/;"	t	typeref:struct:_GMatchInfo
GMemChunk	deprecated/gallocator.h	/^typedef struct _GMemChunk  GMemChunk;$/;"	t	typeref:struct:_GMemChunk
GMemVTable	gmem.h	/^typedef struct _GMemVTable GMemVTable;$/;"	t	typeref:struct:_GMemVTable
GMutex	gthread.h	/^typedef union  _GMutex          GMutex;$/;"	t	typeref:union:_GMutex
GNode	gnode.h	/^typedef struct _GNode		GNode;$/;"	t	typeref:struct:_GNode
GNodeForeachFunc	gnode.h	/^typedef void		(*GNodeForeachFunc)	(GNode	       *node,$/;"	t
GNodeTraverseFunc	gnode.h	/^typedef gboolean	(*GNodeTraverseFunc)	(GNode	       *node,$/;"	t
GNormalizeMode	gunicode.h	/^} GNormalizeMode;$/;"	t	typeref:enum:__anon27
GOnce	gthread.h	/^typedef struct _GOnce           GOnce;$/;"	t	typeref:struct:_GOnce
GOnceStatus	gthread.h	/^} GOnceStatus;$/;"	t	typeref:enum:__anon47
GOptionArg	goption.h	/^} GOptionArg;$/;"	t	typeref:enum:__anon50
GOptionArgFunc	goption.h	/^typedef gboolean (*GOptionArgFunc) (const gchar    *option_name,$/;"	t
GOptionContext	goption.h	/^typedef struct _GOptionContext GOptionContext;$/;"	t	typeref:struct:_GOptionContext
GOptionEntry	goption.h	/^typedef struct _GOptionEntry   GOptionEntry;$/;"	t	typeref:struct:_GOptionEntry
GOptionError	goption.h	/^} GOptionError;$/;"	t	typeref:enum:__anon51
GOptionErrorFunc	goption.h	/^typedef void (*GOptionErrorFunc) (GOptionContext *context,$/;"	t
GOptionFlags	goption.h	/^} GOptionFlags;$/;"	t	typeref:enum:__anon49
GOptionGroup	goption.h	/^typedef struct _GOptionGroup   GOptionGroup;$/;"	t	typeref:struct:_GOptionGroup
GOptionParseFunc	goption.h	/^typedef gboolean (*GOptionParseFunc) (GOptionContext *context,$/;"	t
GPOINTER_TO_SIZE	gmacros.h	237;"	d
GPatternSpec	gpattern.h	/^typedef struct _GPatternSpec    GPatternSpec;$/;"	t	typeref:struct:_GPatternSpec
GPollFD	gpoll.h	/^typedef struct _GPollFD GPollFD;$/;"	t	typeref:struct:_GPollFD
GPollFunc	gpoll.h	/^typedef gint    (*GPollFunc)    (GPollFD *ufds,$/;"	t
GPrintFunc	gmessages.h	/^typedef void    (*GPrintFunc)           (const gchar    *string);$/;"	t
GPrivate	gthread.h	/^typedef struct _GPrivate        GPrivate;$/;"	t	typeref:struct:_GPrivate
GPtrArray	garray.h	/^typedef struct _GPtrArray	GPtrArray;$/;"	t	typeref:struct:_GPtrArray
GQuark	gquark.h	/^typedef guint32 GQuark;$/;"	t
GQueue	gqueue.h	/^typedef struct _GQueue GQueue;$/;"	t	typeref:struct:_GQueue
GRWLock	gthread.h	/^typedef struct _GRWLock         GRWLock;$/;"	t	typeref:struct:_GRWLock
GRand	grand.h	/^typedef struct _GRand           GRand;$/;"	t	typeref:struct:_GRand
GRecMutex	gthread.h	/^typedef struct _GRecMutex       GRecMutex;$/;"	t	typeref:struct:_GRecMutex
GRegex	gregex.h	/^typedef struct _GRegex		GRegex;$/;"	t	typeref:struct:_GRegex
GRegexCompileFlags	gregex.h	/^} GRegexCompileFlags;$/;"	t	typeref:enum:__anon3
GRegexError	gregex.h	/^} GRegexError;$/;"	t	typeref:enum:__anon2
GRegexEvalCallback	gregex.h	/^typedef gboolean (*GRegexEvalCallback)		(const GMatchInfo *match_info,$/;"	t
GRegexMatchFlags	gregex.h	/^} GRegexMatchFlags;$/;"	t	typeref:enum:__anon4
GRelation	deprecated/grel.h	/^typedef struct _GRelation       GRelation;$/;"	t	typeref:struct:_GRelation
GSIZE_FROM_BE	gtypes.h	373;"	d
GSIZE_FROM_LE	gtypes.h	371;"	d
GSIZE_TO_POINTER	gmacros.h	238;"	d
GSList	gslist.h	/^typedef struct _GSList GSList;$/;"	t	typeref:struct:_GSList
GSSIZE_FROM_BE	gtypes.h	374;"	d
GSSIZE_FROM_LE	gtypes.h	372;"	d
GScanner	gscanner.h	/^typedef struct _GScanner	GScanner;$/;"	t	typeref:struct:_GScanner
GScannerConfig	gscanner.h	/^typedef struct _GScannerConfig	GScannerConfig;$/;"	t	typeref:struct:_GScannerConfig
GScannerMsgFunc	gscanner.h	/^typedef void		(*GScannerMsgFunc)	(GScanner      *scanner,$/;"	t
GSeekType	giochannel.h	/^} GSeekType;$/;"	t	typeref:enum:__anon36
GSequence	gsequence.h	/^typedef struct _GSequence      GSequence;$/;"	t	typeref:struct:_GSequence
GSequenceIter	gsequence.h	/^typedef struct _GSequenceNode  GSequenceIter;$/;"	t	typeref:struct:_GSequenceNode
GSequenceIterCompareFunc	gsequence.h	/^typedef gint (* GSequenceIterCompareFunc) (GSequenceIter *a,$/;"	t
GShellError	gshell.h	/^} GShellError;$/;"	t	typeref:enum:__anon1
GSliceConfig	gslice.h	/^} GSliceConfig;$/;"	t	typeref:enum:__anon52
GSource	gmain.h	/^typedef struct _GSource                 GSource;$/;"	t	typeref:struct:_GSource
GSourceCallbackFuncs	gmain.h	/^typedef struct _GSourceCallbackFuncs    GSourceCallbackFuncs;$/;"	t	typeref:struct:_GSourceCallbackFuncs
GSourceDummyMarshal	gmain.h	/^typedef void (*GSourceDummyMarshal) (void);$/;"	t
GSourceFunc	gmain.h	/^typedef gboolean (*GSourceFunc)       (gpointer user_data);$/;"	t
GSourceFuncs	gmain.h	/^typedef struct _GSourceFuncs            GSourceFuncs;$/;"	t	typeref:struct:_GSourceFuncs
GSourcePrivate	gmain.h	/^typedef struct _GSourcePrivate          GSourcePrivate;$/;"	t	typeref:struct:_GSourcePrivate
GSpawnChildSetupFunc	gspawn.h	/^typedef void (* GSpawnChildSetupFunc) (gpointer user_data);$/;"	t
GSpawnError	gspawn.h	/^} GSpawnError;$/;"	t	typeref:enum:__anon6
GSpawnFlags	gspawn.h	/^} GSpawnFlags;$/;"	t	typeref:enum:__anon7
GStatBuf	gstdio.h	/^typedef struct _stat32 GStatBuf;$/;"	t	typeref:struct:_stat32
GStaticMutex	deprecated/gthread.h	/^} GStaticMutex;$/;"	t	typeref:struct:__anon54
GStaticPrivate	deprecated/gthread.h	/^typedef struct _GStaticPrivate  GStaticPrivate;$/;"	t	typeref:struct:_GStaticPrivate
GStaticRWLock	deprecated/gthread.h	/^typedef struct _GStaticRWLock GStaticRWLock;$/;"	t	typeref:struct:_GStaticRWLock
GStaticRecMutex	deprecated/gthread.h	/^typedef struct _GStaticRecMutex GStaticRecMutex;$/;"	t	typeref:struct:_GStaticRecMutex
GString	gstring.h	/^typedef struct _GString         GString;$/;"	t	typeref:struct:_GString
GStringChunk	gstringchunk.h	/^typedef struct _GStringChunk GStringChunk;$/;"	t	typeref:struct:_GStringChunk
GTestCase	gtestutils.h	/^typedef struct GTestCase  GTestCase;$/;"	t	typeref:struct:GTestCase
GTestConfig	gtestutils.h	/^} GTestConfig;$/;"	t	typeref:struct:__anon12
GTestDataFunc	gtestutils.h	/^typedef void (*GTestDataFunc)    (gconstpointer user_data);$/;"	t
GTestFixtureFunc	gtestutils.h	/^typedef void (*GTestFixtureFunc) (gpointer      fixture,$/;"	t
GTestFunc	gtestutils.h	/^typedef void (*GTestFunc)        (void);$/;"	t
GTestLogBuffer	gtestutils.h	/^} GTestLogBuffer;$/;"	t	typeref:struct:__anon15
GTestLogFatalFunc	gtestutils.h	/^typedef gboolean        (*GTestLogFatalFunc)    (const gchar    *log_domain,$/;"	t
GTestLogMsg	gtestutils.h	/^} GTestLogMsg;$/;"	t	typeref:struct:__anon14
GTestLogType	gtestutils.h	/^} GTestLogType;$/;"	t	typeref:enum:__anon13
GTestSuite	gtestutils.h	/^typedef struct GTestSuite GTestSuite;$/;"	t	typeref:struct:GTestSuite
GTestTrapFlags	gtestutils.h	/^} GTestTrapFlags;$/;"	t	typeref:enum:__anon11
GThread	gthread.h	/^typedef struct _GThread         GThread;$/;"	t	typeref:struct:_GThread
GThreadError	gthread.h	/^} GThreadError;$/;"	t	typeref:enum:__anon46
GThreadFunc	gthread.h	/^typedef gpointer (*GThreadFunc) (gpointer data);$/;"	t
GThreadFunctions	deprecated/gthread.h	/^typedef struct _GThreadFunctions GThreadFunctions;$/;"	t	typeref:struct:_GThreadFunctions
GThreadPool	gthreadpool.h	/^typedef struct _GThreadPool GThreadPool;$/;"	t	typeref:struct:_GThreadPool
GThreadPriority	deprecated/gthread.h	/^} GThreadPriority;$/;"	t	typeref:enum:__anon53
GTime	gdate.h	/^typedef gint32  GTime;$/;"	t
GTimeSpan	gdatetime.h	/^typedef gint64 GTimeSpan;$/;"	t
GTimeType	gtimezone.h	/^} GTimeType;$/;"	t	typeref:enum:__anon5
GTimeVal	gtypes.h	/^typedef struct _GTimeVal                GTimeVal;$/;"	t	typeref:struct:_GTimeVal
GTimeZone	gtimezone.h	/^typedef struct _GTimeZone GTimeZone;$/;"	t	typeref:struct:_GTimeZone
GTimer	gtimer.h	/^typedef struct _GTimer		GTimer;$/;"	t	typeref:struct:_GTimer
GTokenType	gscanner.h	/^} GTokenType;$/;"	t	typeref:enum:__anon10
GTokenValue	gscanner.h	/^typedef union  _GTokenValue     GTokenValue;$/;"	t	typeref:union:_GTokenValue
GTranslateFunc	gtypes.h	/^typedef const gchar *   (*GTranslateFunc)       (const gchar   *str,$/;"	t
GTrashStack	gtrashstack.h	/^typedef struct _GTrashStack GTrashStack;$/;"	t	typeref:struct:_GTrashStack
GTraverseFlags	gnode.h	/^} GTraverseFlags;$/;"	t	typeref:enum:__anon44
GTraverseFunc	gtree.h	/^typedef gboolean (*GTraverseFunc) (gpointer  key,$/;"	t
GTraverseType	gnode.h	/^} GTraverseType;$/;"	t	typeref:enum:__anon45
GTree	gtree.h	/^typedef struct _GTree  GTree;$/;"	t	typeref:struct:_GTree
GTuples	deprecated/grel.h	/^typedef struct _GTuples         GTuples;$/;"	t	typeref:struct:_GTuples
GUINT16_FROM_BE	gtypes.h	350;"	d
GUINT16_FROM_LE	gtypes.h	348;"	d
GUINT16_SWAP_BE_PDP	gtypes.h	336;"	d
GUINT16_SWAP_LE_BE	gtypes.h	244;"	d
GUINT16_SWAP_LE_BE	gtypes.h	284;"	d
GUINT16_SWAP_LE_BE	gtypes.h	313;"	d
GUINT16_SWAP_LE_BE	gtypes.h	321;"	d
GUINT16_SWAP_LE_BE	gtypes.h	330;"	d
GUINT16_SWAP_LE_BE_CONSTANT	gtypes.h	153;"	d
GUINT16_SWAP_LE_BE_IA32	gtypes.h	191;"	d
GUINT16_SWAP_LE_BE_IA64	gtypes.h	252;"	d
GUINT16_SWAP_LE_PDP	gtypes.h	335;"	d
GUINT32_FROM_BE	gtypes.h	354;"	d
GUINT32_FROM_LE	gtypes.h	352;"	d
GUINT32_SWAP_BE_PDP	gtypes.h	340;"	d
GUINT32_SWAP_LE_BE	gtypes.h	186;"	d
GUINT32_SWAP_LE_BE	gtypes.h	246;"	d
GUINT32_SWAP_LE_BE	gtypes.h	286;"	d
GUINT32_SWAP_LE_BE	gtypes.h	315;"	d
GUINT32_SWAP_LE_BE	gtypes.h	323;"	d
GUINT32_SWAP_LE_BE	gtypes.h	331;"	d
GUINT32_SWAP_LE_BE_CONSTANT	gtypes.h	157;"	d
GUINT32_SWAP_LE_BE_IA32	gtypes.h	205;"	d
GUINT32_SWAP_LE_BE_IA32	gtypes.h	219;"	d
GUINT32_SWAP_LE_BE_IA64	gtypes.h	263;"	d
GUINT32_SWAP_LE_BE_X86_64	gtypes.h	292;"	d
GUINT32_SWAP_LE_PDP	gtypes.h	337;"	d
GUINT64_FROM_BE	gtypes.h	359;"	d
GUINT64_FROM_LE	gtypes.h	357;"	d
GUINT64_SWAP_LE_BE	gtypes.h	187;"	d
GUINT64_SWAP_LE_BE	gtypes.h	249;"	d
GUINT64_SWAP_LE_BE	gtypes.h	289;"	d
GUINT64_SWAP_LE_BE	gtypes.h	318;"	d
GUINT64_SWAP_LE_BE	gtypes.h	326;"	d
GUINT64_SWAP_LE_BE	gtypes.h	332;"	d
GUINT64_SWAP_LE_BE_CONSTANT	gtypes.h	163;"	d
GUINT64_SWAP_LE_BE_IA32	gtypes.h	230;"	d
GUINT64_SWAP_LE_BE_IA64	gtypes.h	274;"	d
GUINT64_SWAP_LE_BE_X86_64	gtypes.h	302;"	d
GUINT_FROM_BE	gtypes.h	369;"	d
GUINT_FROM_LE	gtypes.h	367;"	d
GULONG_FROM_BE	gtypes.h	364;"	d
GULONG_FROM_LE	gtypes.h	362;"	d
GUnicodeBreakType	gunicode.h	/^} GUnicodeBreakType;$/;"	t	typeref:enum:__anon25
GUnicodeScript	gunicode.h	/^} GUnicodeScript;$/;"	t	typeref:enum:__anon26
GUnicodeType	gunicode.h	/^} GUnicodeType;$/;"	t	typeref:enum:__anon24
GUserDirectory	gutils.h	/^} GUserDirectory;$/;"	t	typeref:enum:__anon41
GVariant	gvariant.h	/^typedef struct _GVariant        GVariant;$/;"	t	typeref:struct:_GVariant
GVariantBuilder	gvariant.h	/^typedef struct _GVariantBuilder GVariantBuilder;$/;"	t	typeref:struct:_GVariantBuilder
GVariantClass	gvariant.h	/^} GVariantClass;$/;"	t	typeref:enum:__anon39
GVariantIter	gvariant.h	/^typedef struct _GVariantIter GVariantIter;$/;"	t	typeref:struct:_GVariantIter
GVariantParseError	gvariant.h	/^} GVariantParseError;$/;"	t	typeref:enum:__anon40
GVariantType	gvarianttype.h	/^typedef struct _GVariantType GVariantType;$/;"	t	typeref:struct:_GVariantType
GVoidFunc	gutils.h	/^typedef void (*GVoidFunc) (void);$/;"	t
G_ALLOCATOR_LIST	deprecated/gallocator.h	34;"	d
G_ALLOCATOR_NODE	deprecated/gallocator.h	36;"	d
G_ALLOCATOR_SLIST	deprecated/gallocator.h	35;"	d
G_ALLOC_AND_FREE	deprecated/gallocator.h	33;"	d
G_ALLOC_ONLY	deprecated/gallocator.h	32;"	d
G_ASCII_ALNUM	gstrfuncs.h	/^  G_ASCII_ALNUM  = 1 << 0,$/;"	e	enum:__anon28
G_ASCII_ALPHA	gstrfuncs.h	/^  G_ASCII_ALPHA  = 1 << 1,$/;"	e	enum:__anon28
G_ASCII_CNTRL	gstrfuncs.h	/^  G_ASCII_CNTRL  = 1 << 2,$/;"	e	enum:__anon28
G_ASCII_DIGIT	gstrfuncs.h	/^  G_ASCII_DIGIT  = 1 << 3,$/;"	e	enum:__anon28
G_ASCII_DTOSTR_BUF_SIZE	gstrfuncs.h	144;"	d
G_ASCII_GRAPH	gstrfuncs.h	/^  G_ASCII_GRAPH  = 1 << 4,$/;"	e	enum:__anon28
G_ASCII_LOWER	gstrfuncs.h	/^  G_ASCII_LOWER  = 1 << 5,$/;"	e	enum:__anon28
G_ASCII_PRINT	gstrfuncs.h	/^  G_ASCII_PRINT  = 1 << 6,$/;"	e	enum:__anon28
G_ASCII_PUNCT	gstrfuncs.h	/^  G_ASCII_PUNCT  = 1 << 7,$/;"	e	enum:__anon28
G_ASCII_SPACE	gstrfuncs.h	/^  G_ASCII_SPACE  = 1 << 8,$/;"	e	enum:__anon28
G_ASCII_UPPER	gstrfuncs.h	/^  G_ASCII_UPPER  = 1 << 9,$/;"	e	enum:__anon28
G_ASCII_XDIGIT	gstrfuncs.h	/^  G_ASCII_XDIGIT = 1 << 10$/;"	e	enum:__anon28
G_BEGIN_DECLS	gmacros.h	189;"	d
G_BEGIN_DECLS	gmacros.h	192;"	d
G_BIG_ENDIAN	gtypes.h	147;"	d
G_BOOKMARK_FILE_ERROR	gbookmarkfile.h	39;"	d
G_BOOKMARK_FILE_ERROR_APP_NOT_REGISTERED	gbookmarkfile.h	/^  G_BOOKMARK_FILE_ERROR_APP_NOT_REGISTERED,$/;"	e	enum:__anon43
G_BOOKMARK_FILE_ERROR_FILE_NOT_FOUND	gbookmarkfile.h	/^  G_BOOKMARK_FILE_ERROR_FILE_NOT_FOUND$/;"	e	enum:__anon43
G_BOOKMARK_FILE_ERROR_INVALID_URI	gbookmarkfile.h	/^  G_BOOKMARK_FILE_ERROR_INVALID_URI,$/;"	e	enum:__anon43
G_BOOKMARK_FILE_ERROR_INVALID_VALUE	gbookmarkfile.h	/^  G_BOOKMARK_FILE_ERROR_INVALID_VALUE,$/;"	e	enum:__anon43
G_BOOKMARK_FILE_ERROR_READ	gbookmarkfile.h	/^  G_BOOKMARK_FILE_ERROR_READ,$/;"	e	enum:__anon43
G_BOOKMARK_FILE_ERROR_UNKNOWN_ENCODING	gbookmarkfile.h	/^  G_BOOKMARK_FILE_ERROR_UNKNOWN_ENCODING,$/;"	e	enum:__anon43
G_BOOKMARK_FILE_ERROR_URI_NOT_FOUND	gbookmarkfile.h	/^  G_BOOKMARK_FILE_ERROR_URI_NOT_FOUND,$/;"	e	enum:__anon43
G_BOOKMARK_FILE_ERROR_WRITE	gbookmarkfile.h	/^  G_BOOKMARK_FILE_ERROR_WRITE,$/;"	e	enum:__anon43
G_BREAKPOINT	gbacktrace.h	51;"	d
G_BREAKPOINT	gbacktrace.h	53;"	d
G_BREAKPOINT	gbacktrace.h	55;"	d
G_BREAKPOINT	gbacktrace.h	57;"	d
G_BREAKPOINT	gbacktrace.h	59;"	d
G_CAN_INLINE	gutils.h	78;"	d
G_CHECKSUM_MD5	gchecksum.h	/^  G_CHECKSUM_MD5,$/;"	e	enum:__anon8
G_CHECKSUM_SHA1	gchecksum.h	/^  G_CHECKSUM_SHA1,$/;"	e	enum:__anon8
G_CHECKSUM_SHA256	gchecksum.h	/^  G_CHECKSUM_SHA256$/;"	e	enum:__anon8
G_CONST_RETURN	gmacros.h	272;"	d
G_CONST_RETURN	gmacros.h	274;"	d
G_CONVERT_ERROR	gconvert.h	67;"	d
G_CONVERT_ERROR_BAD_URI	gconvert.h	/^  G_CONVERT_ERROR_BAD_URI,$/;"	e	enum:__anon20
G_CONVERT_ERROR_FAILED	gconvert.h	/^  G_CONVERT_ERROR_FAILED,$/;"	e	enum:__anon20
G_CONVERT_ERROR_ILLEGAL_SEQUENCE	gconvert.h	/^  G_CONVERT_ERROR_ILLEGAL_SEQUENCE,$/;"	e	enum:__anon20
G_CONVERT_ERROR_NOT_ABSOLUTE_PATH	gconvert.h	/^  G_CONVERT_ERROR_NOT_ABSOLUTE_PATH$/;"	e	enum:__anon20
G_CONVERT_ERROR_NO_CONVERSION	gconvert.h	/^  G_CONVERT_ERROR_NO_CONVERSION,$/;"	e	enum:__anon20
G_CONVERT_ERROR_PARTIAL_INPUT	gconvert.h	/^  G_CONVERT_ERROR_PARTIAL_INPUT,$/;"	e	enum:__anon20
G_CSET_A_2_Z	gscanner.h	51;"	d
G_CSET_DIGITS	gscanner.h	53;"	d
G_CSET_LATINC	gscanner.h	54;"	d
G_CSET_LATINS	gscanner.h	58;"	d
G_CSET_a_2_z	gscanner.h	52;"	d
G_DATALIST_FLAGS_MASK	gdataset.h	67;"	d
G_DATE_APRIL	gdate.h	/^  G_DATE_APRIL     = 4,$/;"	e	enum:__anon23
G_DATE_AUGUST	gdate.h	/^  G_DATE_AUGUST    = 8,$/;"	e	enum:__anon23
G_DATE_BAD_DAY	gdate.h	93;"	d
G_DATE_BAD_JULIAN	gdate.h	92;"	d
G_DATE_BAD_MONTH	gdate.h	/^  G_DATE_BAD_MONTH = 0,$/;"	e	enum:__anon23
G_DATE_BAD_WEEKDAY	gdate.h	/^  G_DATE_BAD_WEEKDAY  = 0,$/;"	e	enum:__anon22
G_DATE_BAD_YEAR	gdate.h	94;"	d
G_DATE_DAY	gdate.h	/^  G_DATE_DAY   = 0,$/;"	e	enum:__anon21
G_DATE_DECEMBER	gdate.h	/^  G_DATE_DECEMBER  = 12$/;"	e	enum:__anon23
G_DATE_FEBRUARY	gdate.h	/^  G_DATE_FEBRUARY  = 2,$/;"	e	enum:__anon23
G_DATE_FRIDAY	gdate.h	/^  G_DATE_FRIDAY       = 5,$/;"	e	enum:__anon22
G_DATE_JANUARY	gdate.h	/^  G_DATE_JANUARY   = 1,$/;"	e	enum:__anon23
G_DATE_JULY	gdate.h	/^  G_DATE_JULY      = 7,$/;"	e	enum:__anon23
G_DATE_JUNE	gdate.h	/^  G_DATE_JUNE      = 6,$/;"	e	enum:__anon23
G_DATE_MARCH	gdate.h	/^  G_DATE_MARCH     = 3,$/;"	e	enum:__anon23
G_DATE_MAY	gdate.h	/^  G_DATE_MAY       = 5,$/;"	e	enum:__anon23
G_DATE_MONDAY	gdate.h	/^  G_DATE_MONDAY       = 1,$/;"	e	enum:__anon22
G_DATE_MONTH	gdate.h	/^  G_DATE_MONTH = 1,$/;"	e	enum:__anon21
G_DATE_NOVEMBER	gdate.h	/^  G_DATE_NOVEMBER  = 11,$/;"	e	enum:__anon23
G_DATE_OCTOBER	gdate.h	/^  G_DATE_OCTOBER   = 10,$/;"	e	enum:__anon23
G_DATE_SATURDAY	gdate.h	/^  G_DATE_SATURDAY     = 6,$/;"	e	enum:__anon22
G_DATE_SEPTEMBER	gdate.h	/^  G_DATE_SEPTEMBER = 9,$/;"	e	enum:__anon23
G_DATE_SUNDAY	gdate.h	/^  G_DATE_SUNDAY       = 7$/;"	e	enum:__anon22
G_DATE_THURSDAY	gdate.h	/^  G_DATE_THURSDAY     = 4,$/;"	e	enum:__anon22
G_DATE_TUESDAY	gdate.h	/^  G_DATE_TUESDAY      = 2,$/;"	e	enum:__anon22
G_DATE_WEDNESDAY	gdate.h	/^  G_DATE_WEDNESDAY    = 3,$/;"	e	enum:__anon22
G_DATE_YEAR	gdate.h	/^  G_DATE_YEAR  = 2$/;"	e	enum:__anon21
G_DEPRECATED	gmacros.h	304;"	d
G_DEPRECATED	gmacros.h	306;"	d
G_DEPRECATED	gmacros.h	308;"	d
G_DEPRECATED_FOR	gmacros.h	312;"	d
G_DEPRECATED_FOR	gmacros.h	314;"	d
G_DEPRECATED_FOR	gmacros.h	316;"	d
G_DIR_SEPARATOR	gfileutils.h	139;"	d
G_DIR_SEPARATOR	gfileutils.h	147;"	d
G_DIR_SEPARATOR_S	gfileutils.h	140;"	d
G_DIR_SEPARATOR_S	gfileutils.h	148;"	d
G_E	gtypes.h	133;"	d
G_ENCODE_VERSION	gversionmacros.h	36;"	d
G_END_DECLS	gmacros.h	190;"	d
G_END_DECLS	gmacros.h	193;"	d
G_ERR_DIGIT_RADIX	gscanner.h	/^  G_ERR_DIGIT_RADIX,$/;"	e	enum:__anon9
G_ERR_FLOAT_MALFORMED	gscanner.h	/^  G_ERR_FLOAT_MALFORMED$/;"	e	enum:__anon9
G_ERR_FLOAT_RADIX	gscanner.h	/^  G_ERR_FLOAT_RADIX,$/;"	e	enum:__anon9
G_ERR_NON_DIGIT_IN_CONST	gscanner.h	/^  G_ERR_NON_DIGIT_IN_CONST,$/;"	e	enum:__anon9
G_ERR_UNEXP_EOF	gscanner.h	/^  G_ERR_UNEXP_EOF,$/;"	e	enum:__anon9
G_ERR_UNEXP_EOF_IN_COMMENT	gscanner.h	/^  G_ERR_UNEXP_EOF_IN_COMMENT,$/;"	e	enum:__anon9
G_ERR_UNEXP_EOF_IN_STRING	gscanner.h	/^  G_ERR_UNEXP_EOF_IN_STRING,$/;"	e	enum:__anon9
G_ERR_UNKNOWN	gscanner.h	/^  G_ERR_UNKNOWN,$/;"	e	enum:__anon9
G_FILE_ERROR	gfileutils.h	32;"	d
G_FILE_ERROR_ACCES	gfileutils.h	/^  G_FILE_ERROR_ACCES,$/;"	e	enum:__anon18
G_FILE_ERROR_AGAIN	gfileutils.h	/^  G_FILE_ERROR_AGAIN,$/;"	e	enum:__anon18
G_FILE_ERROR_BADF	gfileutils.h	/^  G_FILE_ERROR_BADF,$/;"	e	enum:__anon18
G_FILE_ERROR_EXIST	gfileutils.h	/^  G_FILE_ERROR_EXIST,$/;"	e	enum:__anon18
G_FILE_ERROR_FAILED	gfileutils.h	/^  G_FILE_ERROR_FAILED$/;"	e	enum:__anon18
G_FILE_ERROR_FAULT	gfileutils.h	/^  G_FILE_ERROR_FAULT,$/;"	e	enum:__anon18
G_FILE_ERROR_INTR	gfileutils.h	/^  G_FILE_ERROR_INTR,$/;"	e	enum:__anon18
G_FILE_ERROR_INVAL	gfileutils.h	/^  G_FILE_ERROR_INVAL,$/;"	e	enum:__anon18
G_FILE_ERROR_IO	gfileutils.h	/^  G_FILE_ERROR_IO,$/;"	e	enum:__anon18
G_FILE_ERROR_ISDIR	gfileutils.h	/^  G_FILE_ERROR_ISDIR,$/;"	e	enum:__anon18
G_FILE_ERROR_LOOP	gfileutils.h	/^  G_FILE_ERROR_LOOP,$/;"	e	enum:__anon18
G_FILE_ERROR_MFILE	gfileutils.h	/^  G_FILE_ERROR_MFILE,$/;"	e	enum:__anon18
G_FILE_ERROR_NAMETOOLONG	gfileutils.h	/^  G_FILE_ERROR_NAMETOOLONG,$/;"	e	enum:__anon18
G_FILE_ERROR_NFILE	gfileutils.h	/^  G_FILE_ERROR_NFILE,$/;"	e	enum:__anon18
G_FILE_ERROR_NODEV	gfileutils.h	/^  G_FILE_ERROR_NODEV,$/;"	e	enum:__anon18
G_FILE_ERROR_NOENT	gfileutils.h	/^  G_FILE_ERROR_NOENT,$/;"	e	enum:__anon18
G_FILE_ERROR_NOMEM	gfileutils.h	/^  G_FILE_ERROR_NOMEM,$/;"	e	enum:__anon18
G_FILE_ERROR_NOSPC	gfileutils.h	/^  G_FILE_ERROR_NOSPC,$/;"	e	enum:__anon18
G_FILE_ERROR_NOSYS	gfileutils.h	/^  G_FILE_ERROR_NOSYS,$/;"	e	enum:__anon18
G_FILE_ERROR_NOTDIR	gfileutils.h	/^  G_FILE_ERROR_NOTDIR,$/;"	e	enum:__anon18
G_FILE_ERROR_NXIO	gfileutils.h	/^  G_FILE_ERROR_NXIO,$/;"	e	enum:__anon18
G_FILE_ERROR_PERM	gfileutils.h	/^  G_FILE_ERROR_PERM,$/;"	e	enum:__anon18
G_FILE_ERROR_PIPE	gfileutils.h	/^  G_FILE_ERROR_PIPE,$/;"	e	enum:__anon18
G_FILE_ERROR_ROFS	gfileutils.h	/^  G_FILE_ERROR_ROFS,$/;"	e	enum:__anon18
G_FILE_ERROR_TXTBSY	gfileutils.h	/^  G_FILE_ERROR_TXTBSY,$/;"	e	enum:__anon18
G_FILE_TEST_EXISTS	gfileutils.h	/^  G_FILE_TEST_EXISTS        = 1 << 4$/;"	e	enum:__anon19
G_FILE_TEST_IS_DIR	gfileutils.h	/^  G_FILE_TEST_IS_DIR        = 1 << 2,$/;"	e	enum:__anon19
G_FILE_TEST_IS_EXECUTABLE	gfileutils.h	/^  G_FILE_TEST_IS_EXECUTABLE = 1 << 3,$/;"	e	enum:__anon19
G_FILE_TEST_IS_REGULAR	gfileutils.h	/^  G_FILE_TEST_IS_REGULAR    = 1 << 0,$/;"	e	enum:__anon19
G_FILE_TEST_IS_SYMLINK	gfileutils.h	/^  G_FILE_TEST_IS_SYMLINK    = 1 << 1,$/;"	e	enum:__anon19
G_FORMAT_SIZE_DEFAULT	gutils.h	/^  G_FORMAT_SIZE_DEFAULT     = 0,$/;"	e	enum:__anon42
G_FORMAT_SIZE_IEC_UNITS	gutils.h	/^  G_FORMAT_SIZE_IEC_UNITS   = 1 << 1$/;"	e	enum:__anon42
G_FORMAT_SIZE_LONG_FORMAT	gutils.h	/^  G_FORMAT_SIZE_LONG_FORMAT = 1 << 0,$/;"	e	enum:__anon42
G_GNUC_ALLOC_SIZE	gmacros.h	71;"	d
G_GNUC_ALLOC_SIZE	gmacros.h	74;"	d
G_GNUC_ALLOC_SIZE2	gmacros.h	72;"	d
G_GNUC_ALLOC_SIZE2	gmacros.h	75;"	d
G_GNUC_BEGIN_IGNORE_DEPRECATIONS	gmacros.h	118;"	d
G_GNUC_BEGIN_IGNORE_DEPRECATIONS	gmacros.h	124;"	d
G_GNUC_CONST	gmacros.h	87;"	d
G_GNUC_CONST	gmacros.h	98;"	d
G_GNUC_DEPRECATED	gmacros.h	104;"	d
G_GNUC_DEPRECATED	gmacros.h	107;"	d
G_GNUC_DEPRECATED_FOR	gmacros.h	111;"	d
G_GNUC_DEPRECATED_FOR	gmacros.h	114;"	d
G_GNUC_END_IGNORE_DEPRECATIONS	gmacros.h	121;"	d
G_GNUC_END_IGNORE_DEPRECATIONS	gmacros.h	125;"	d
G_GNUC_EXTENSION	gmacros.h	47;"	d
G_GNUC_EXTENSION	gmacros.h	49;"	d
G_GNUC_FORMAT	gmacros.h	83;"	d
G_GNUC_FORMAT	gmacros.h	96;"	d
G_GNUC_FUNCTION	gmacros.h	147;"	d
G_GNUC_FUNCTION	gmacros.h	150;"	d
G_GNUC_MALLOC	gmacros.h	57;"	d
G_GNUC_MALLOC	gmacros.h	61;"	d
G_GNUC_MAY_ALIAS	gmacros.h	129;"	d
G_GNUC_MAY_ALIAS	gmacros.h	131;"	d
G_GNUC_NORETURN	gmacros.h	85;"	d
G_GNUC_NORETURN	gmacros.h	97;"	d
G_GNUC_NO_INSTRUMENT	gmacros.h	100;"	d
G_GNUC_NO_INSTRUMENT	gmacros.h	91;"	d
G_GNUC_NULL_TERMINATED	gfileutils.h	/^                               ...) G_GNUC_MALLOC G_GNUC_NULL_TERMINATED;$/;"	v
G_GNUC_NULL_TERMINATED	gmacros.h	65;"	d
G_GNUC_NULL_TERMINATED	gmacros.h	67;"	d
G_GNUC_NULL_TERMINATED	gstrfuncs.h	/^					...) G_GNUC_MALLOC G_GNUC_NULL_TERMINATED;$/;"	v
G_GNUC_PRETTY_FUNCTION	gmacros.h	148;"	d
G_GNUC_PRETTY_FUNCTION	gmacros.h	151;"	d
G_GNUC_PRINTF	gmacros.h	79;"	d
G_GNUC_PRINTF	gmacros.h	94;"	d
G_GNUC_PURE	gmacros.h	55;"	d
G_GNUC_PURE	gmacros.h	60;"	d
G_GNUC_SCANF	gmacros.h	81;"	d
G_GNUC_SCANF	gmacros.h	95;"	d
G_GNUC_UNUSED	gmacros.h	89;"	d
G_GNUC_UNUSED	gmacros.h	99;"	d
G_GNUC_WARN_UNUSED_RESULT	gmacros.h	135;"	d
G_GNUC_WARN_UNUSED_RESULT	gmacros.h	138;"	d
G_HOOK	ghook.h	89;"	d
G_HOOK_ACTIVE	ghook.h	91;"	d
G_HOOK_FLAGS	ghook.h	90;"	d
G_HOOK_FLAG_ACTIVE	ghook.h	/^  G_HOOK_FLAG_ACTIVE	    = 1 << 0,$/;"	e	enum:__anon56
G_HOOK_FLAG_IN_CALL	ghook.h	/^  G_HOOK_FLAG_IN_CALL	    = 1 << 1,$/;"	e	enum:__anon56
G_HOOK_FLAG_MASK	ghook.h	/^  G_HOOK_FLAG_MASK	    = 0x0f$/;"	e	enum:__anon56
G_HOOK_FLAG_USER_SHIFT	ghook.h	61;"	d
G_HOOK_IN_CALL	ghook.h	93;"	d
G_HOOK_IS_UNLINKED	ghook.h	98;"	d
G_HOOK_IS_VALID	ghook.h	95;"	d
G_IEEE754_DOUBLE_BIAS	gtypes.h	404;"	d
G_IEEE754_FLOAT_BIAS	gtypes.h	403;"	d
G_INLINE_FUNC	gutils.h	77;"	d
G_IN_ORDER	gnode.h	/^  G_IN_ORDER,$/;"	e	enum:__anon45
G_IO_CHANNEL_ERROR	giochannel.h	54;"	d
G_IO_CHANNEL_ERROR_FAILED	giochannel.h	/^  G_IO_CHANNEL_ERROR_FAILED$/;"	e	enum:__anon34
G_IO_CHANNEL_ERROR_FBIG	giochannel.h	/^  G_IO_CHANNEL_ERROR_FBIG,$/;"	e	enum:__anon34
G_IO_CHANNEL_ERROR_INVAL	giochannel.h	/^  G_IO_CHANNEL_ERROR_INVAL,$/;"	e	enum:__anon34
G_IO_CHANNEL_ERROR_IO	giochannel.h	/^  G_IO_CHANNEL_ERROR_IO,$/;"	e	enum:__anon34
G_IO_CHANNEL_ERROR_ISDIR	giochannel.h	/^  G_IO_CHANNEL_ERROR_ISDIR,$/;"	e	enum:__anon34
G_IO_CHANNEL_ERROR_NOSPC	giochannel.h	/^  G_IO_CHANNEL_ERROR_NOSPC,$/;"	e	enum:__anon34
G_IO_CHANNEL_ERROR_NXIO	giochannel.h	/^  G_IO_CHANNEL_ERROR_NXIO,$/;"	e	enum:__anon34
G_IO_CHANNEL_ERROR_OVERFLOW	giochannel.h	/^  G_IO_CHANNEL_ERROR_OVERFLOW,$/;"	e	enum:__anon34
G_IO_CHANNEL_ERROR_PIPE	giochannel.h	/^  G_IO_CHANNEL_ERROR_PIPE,$/;"	e	enum:__anon34
G_IO_ERR	giochannel.h	/^  G_IO_ERR	GLIB_SYSDEF_POLLERR,$/;"	e	enum:__anon37
G_IO_ERROR_AGAIN	giochannel.h	/^  G_IO_ERROR_AGAIN,$/;"	e	enum:__anon33
G_IO_ERROR_INVAL	giochannel.h	/^  G_IO_ERROR_INVAL,$/;"	e	enum:__anon33
G_IO_ERROR_NONE	giochannel.h	/^  G_IO_ERROR_NONE,$/;"	e	enum:__anon33
G_IO_ERROR_UNKNOWN	giochannel.h	/^  G_IO_ERROR_UNKNOWN$/;"	e	enum:__anon33
G_IO_FLAG_APPEND	giochannel.h	/^  G_IO_FLAG_APPEND = 1 << 0,$/;"	e	enum:__anon38
G_IO_FLAG_GET_MASK	giochannel.h	/^  G_IO_FLAG_GET_MASK = G_IO_FLAG_MASK,$/;"	e	enum:__anon38
G_IO_FLAG_IS_READABLE	giochannel.h	/^  G_IO_FLAG_IS_READABLE = 1 << 2,	\/* Read only flag *\/$/;"	e	enum:__anon38
G_IO_FLAG_IS_SEEKABLE	giochannel.h	/^  G_IO_FLAG_IS_SEEKABLE = 1 << 4,	\/* Read only flag *\/$/;"	e	enum:__anon38
G_IO_FLAG_IS_WRITABLE	giochannel.h	/^  G_IO_FLAG_IS_WRITABLE = 1 << 3,	\/* Read only flag *\/$/;"	e	enum:__anon38
G_IO_FLAG_IS_WRITEABLE	giochannel.h	109;"	d
G_IO_FLAG_MASK	giochannel.h	/^  G_IO_FLAG_MASK = (1 << 5) - 1,$/;"	e	enum:__anon38
G_IO_FLAG_NONBLOCK	giochannel.h	/^  G_IO_FLAG_NONBLOCK = 1 << 1,$/;"	e	enum:__anon38
G_IO_FLAG_SET_MASK	giochannel.h	/^  G_IO_FLAG_SET_MASK = G_IO_FLAG_APPEND | G_IO_FLAG_NONBLOCK$/;"	e	enum:__anon38
G_IO_HUP	giochannel.h	/^  G_IO_HUP	GLIB_SYSDEF_POLLHUP,$/;"	e	enum:__anon37
G_IO_IN	giochannel.h	/^  G_IO_IN	GLIB_SYSDEF_POLLIN,$/;"	e	enum:__anon37
G_IO_NVAL	giochannel.h	/^  G_IO_NVAL	GLIB_SYSDEF_POLLNVAL$/;"	e	enum:__anon37
G_IO_OUT	giochannel.h	/^  G_IO_OUT	GLIB_SYSDEF_POLLOUT,$/;"	e	enum:__anon37
G_IO_PRI	giochannel.h	/^  G_IO_PRI	GLIB_SYSDEF_POLLPRI,$/;"	e	enum:__anon37
G_IO_STATUS_AGAIN	giochannel.h	/^  G_IO_STATUS_AGAIN$/;"	e	enum:__anon35
G_IO_STATUS_EOF	giochannel.h	/^  G_IO_STATUS_EOF,$/;"	e	enum:__anon35
G_IO_STATUS_ERROR	giochannel.h	/^  G_IO_STATUS_ERROR,$/;"	e	enum:__anon35
G_IO_STATUS_NORMAL	giochannel.h	/^  G_IO_STATUS_NORMAL,$/;"	e	enum:__anon35
G_IS_DIR_SEPARATOR	gfileutils.h	141;"	d
G_IS_DIR_SEPARATOR	gfileutils.h	149;"	d
G_KEY_FILE_DESKTOP_GROUP	gkeyfile.h	240;"	d
G_KEY_FILE_DESKTOP_KEY_CATEGORIES	gkeyfile.h	257;"	d
G_KEY_FILE_DESKTOP_KEY_COMMENT	gkeyfile.h	247;"	d
G_KEY_FILE_DESKTOP_KEY_EXEC	gkeyfile.h	253;"	d
G_KEY_FILE_DESKTOP_KEY_FULLNAME	gkeyfile.h	262;"	d
G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME	gkeyfile.h	245;"	d
G_KEY_FILE_DESKTOP_KEY_GETTEXT_DOMAIN	gkeyfile.h	261;"	d
G_KEY_FILE_DESKTOP_KEY_HIDDEN	gkeyfile.h	249;"	d
G_KEY_FILE_DESKTOP_KEY_ICON	gkeyfile.h	248;"	d
G_KEY_FILE_DESKTOP_KEY_KEYWORDS	gkeyfile.h	263;"	d
G_KEY_FILE_DESKTOP_KEY_MIME_TYPE	gkeyfile.h	256;"	d
G_KEY_FILE_DESKTOP_KEY_NAME	gkeyfile.h	244;"	d
G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN	gkeyfile.h	251;"	d
G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY	gkeyfile.h	246;"	d
G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN	gkeyfile.h	250;"	d
G_KEY_FILE_DESKTOP_KEY_PATH	gkeyfile.h	254;"	d
G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY	gkeyfile.h	258;"	d
G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS	gkeyfile.h	259;"	d
G_KEY_FILE_DESKTOP_KEY_TERMINAL	gkeyfile.h	255;"	d
G_KEY_FILE_DESKTOP_KEY_TRY_EXEC	gkeyfile.h	252;"	d
G_KEY_FILE_DESKTOP_KEY_TYPE	gkeyfile.h	242;"	d
G_KEY_FILE_DESKTOP_KEY_URL	gkeyfile.h	260;"	d
G_KEY_FILE_DESKTOP_KEY_VERSION	gkeyfile.h	243;"	d
G_KEY_FILE_DESKTOP_TYPE_APPLICATION	gkeyfile.h	265;"	d
G_KEY_FILE_DESKTOP_TYPE_DIRECTORY	gkeyfile.h	267;"	d
G_KEY_FILE_DESKTOP_TYPE_LINK	gkeyfile.h	266;"	d
G_KEY_FILE_ERROR	gkeyfile.h	44;"	d
G_KEY_FILE_ERROR_GROUP_NOT_FOUND	gkeyfile.h	/^  G_KEY_FILE_ERROR_GROUP_NOT_FOUND,$/;"	e	enum:__anon16
G_KEY_FILE_ERROR_INVALID_VALUE	gkeyfile.h	/^  G_KEY_FILE_ERROR_INVALID_VALUE$/;"	e	enum:__anon16
G_KEY_FILE_ERROR_KEY_NOT_FOUND	gkeyfile.h	/^  G_KEY_FILE_ERROR_KEY_NOT_FOUND,$/;"	e	enum:__anon16
G_KEY_FILE_ERROR_NOT_FOUND	gkeyfile.h	/^  G_KEY_FILE_ERROR_NOT_FOUND,$/;"	e	enum:__anon16
G_KEY_FILE_ERROR_PARSE	gkeyfile.h	/^  G_KEY_FILE_ERROR_PARSE,$/;"	e	enum:__anon16
G_KEY_FILE_ERROR_UNKNOWN_ENCODING	gkeyfile.h	/^  G_KEY_FILE_ERROR_UNKNOWN_ENCODING,$/;"	e	enum:__anon16
G_KEY_FILE_KEEP_COMMENTS	gkeyfile.h	/^  G_KEY_FILE_KEEP_COMMENTS     = 1 << 0,$/;"	e	enum:__anon17
G_KEY_FILE_KEEP_TRANSLATIONS	gkeyfile.h	/^  G_KEY_FILE_KEEP_TRANSLATIONS = 1 << 1$/;"	e	enum:__anon17
G_KEY_FILE_NONE	gkeyfile.h	/^  G_KEY_FILE_NONE              = 0,$/;"	e	enum:__anon17
G_LEVEL_ORDER	gnode.h	/^  G_LEVEL_ORDER$/;"	e	enum:__anon45
G_LIKELY	gmacros.h	296;"	d
G_LIKELY	gmacros.h	299;"	d
G_LITTLE_ENDIAN	gtypes.h	146;"	d
G_LN10	gtypes.h	135;"	d
G_LN2	gtypes.h	134;"	d
G_LOCK	gthread.h	115;"	d
G_LOCK	gthread.h	135;"	d
G_LOCK_DEFINE	gthread.h	111;"	d
G_LOCK_DEFINE_STATIC	gthread.h	110;"	d
G_LOCK_EXTERN	gthread.h	112;"	d
G_LOCK_NAME	gthread.h	109;"	d
G_LOG_2_BASE_10	gtypes.h	406;"	d
G_LOG_DOMAIN	gmessages.h	133;"	d
G_LOG_FATAL_MASK	gmessages.h	76;"	d
G_LOG_FLAG_FATAL	gmessages.h	/^  G_LOG_FLAG_FATAL              = 1 << 1,$/;"	e	enum:__anon48
G_LOG_FLAG_RECURSION	gmessages.h	/^  G_LOG_FLAG_RECURSION          = 1 << 0,$/;"	e	enum:__anon48
G_LOG_LEVEL_CRITICAL	gmessages.h	/^  G_LOG_LEVEL_CRITICAL          = 1 << 3,$/;"	e	enum:__anon48
G_LOG_LEVEL_DEBUG	gmessages.h	/^  G_LOG_LEVEL_DEBUG             = 1 << 7,$/;"	e	enum:__anon48
G_LOG_LEVEL_ERROR	gmessages.h	/^  G_LOG_LEVEL_ERROR             = 1 << 2,       \/* always fatal *\/$/;"	e	enum:__anon48
G_LOG_LEVEL_INFO	gmessages.h	/^  G_LOG_LEVEL_INFO              = 1 << 6,$/;"	e	enum:__anon48
G_LOG_LEVEL_MASK	gmessages.h	/^  G_LOG_LEVEL_MASK              = ~(G_LOG_FLAG_RECURSION | G_LOG_FLAG_FATAL)$/;"	e	enum:__anon48
G_LOG_LEVEL_MESSAGE	gmessages.h	/^  G_LOG_LEVEL_MESSAGE           = 1 << 5,$/;"	e	enum:__anon48
G_LOG_LEVEL_USER_SHIFT	gmessages.h	54;"	d
G_LOG_LEVEL_WARNING	gmessages.h	/^  G_LOG_LEVEL_WARNING           = 1 << 4,$/;"	e	enum:__anon48
G_MARKUP_COLLECT_BOOLEAN	gmarkup.h	/^  G_MARKUP_COLLECT_BOOLEAN,$/;"	e	enum:__anon59
G_MARKUP_COLLECT_INVALID	gmarkup.h	/^  G_MARKUP_COLLECT_INVALID,$/;"	e	enum:__anon59
G_MARKUP_COLLECT_OPTIONAL	gmarkup.h	/^  G_MARKUP_COLLECT_OPTIONAL = (1 << 16)$/;"	e	enum:__anon59
G_MARKUP_COLLECT_STRDUP	gmarkup.h	/^  G_MARKUP_COLLECT_STRDUP,$/;"	e	enum:__anon59
G_MARKUP_COLLECT_STRING	gmarkup.h	/^  G_MARKUP_COLLECT_STRING,$/;"	e	enum:__anon59
G_MARKUP_COLLECT_TRISTATE	gmarkup.h	/^  G_MARKUP_COLLECT_TRISTATE,$/;"	e	enum:__anon59
G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG	gmarkup.h	/^  G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG = 1 << 0,$/;"	e	enum:__anon58
G_MARKUP_ERROR	gmarkup.h	72;"	d
G_MARKUP_ERROR_BAD_UTF8	gmarkup.h	/^  G_MARKUP_ERROR_BAD_UTF8,$/;"	e	enum:__anon57
G_MARKUP_ERROR_EMPTY	gmarkup.h	/^  G_MARKUP_ERROR_EMPTY,$/;"	e	enum:__anon57
G_MARKUP_ERROR_INVALID_CONTENT	gmarkup.h	/^  G_MARKUP_ERROR_INVALID_CONTENT,$/;"	e	enum:__anon57
G_MARKUP_ERROR_MISSING_ATTRIBUTE	gmarkup.h	/^  G_MARKUP_ERROR_MISSING_ATTRIBUTE$/;"	e	enum:__anon57
G_MARKUP_ERROR_PARSE	gmarkup.h	/^  G_MARKUP_ERROR_PARSE,$/;"	e	enum:__anon57
G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE	gmarkup.h	/^  G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE,$/;"	e	enum:__anon57
G_MARKUP_ERROR_UNKNOWN_ELEMENT	gmarkup.h	/^  G_MARKUP_ERROR_UNKNOWN_ELEMENT,$/;"	e	enum:__anon57
G_MARKUP_PREFIX_ERROR_POSITION	gmarkup.h	/^  G_MARKUP_PREFIX_ERROR_POSITION            = 1 << 2$/;"	e	enum:__anon58
G_MARKUP_TREAT_CDATA_AS_TEXT	gmarkup.h	/^  G_MARKUP_TREAT_CDATA_AS_TEXT              = 1 << 1,$/;"	e	enum:__anon58
G_MAXINT16	gtypes.h	68;"	d
G_MAXINT32	gtypes.h	72;"	d
G_MAXINT64	gtypes.h	76;"	d
G_MAXINT8	gtypes.h	64;"	d
G_MAXUINT16	gtypes.h	69;"	d
G_MAXUINT32	gtypes.h	73;"	d
G_MAXUINT64	gtypes.h	77;"	d
G_MAXUINT8	gtypes.h	65;"	d
G_MEM_ALIGN	gmem.h	61;"	d
G_MEM_ALIGN	gmem.h	63;"	d
G_MININT16	gtypes.h	67;"	d
G_MININT32	gtypes.h	71;"	d
G_MININT64	gtypes.h	75;"	d
G_MININT8	gtypes.h	63;"	d
G_NATIVE_ATEXIT	gutils.h	229;"	d
G_NODE_IS_LEAF	gnode.h	113;"	d
G_NODE_IS_ROOT	gnode.h	100;"	d
G_NORMALIZE_ALL	gunicode.h	/^  G_NORMALIZE_ALL,$/;"	e	enum:__anon27
G_NORMALIZE_ALL_COMPOSE	gunicode.h	/^  G_NORMALIZE_ALL_COMPOSE,$/;"	e	enum:__anon27
G_NORMALIZE_DEFAULT	gunicode.h	/^  G_NORMALIZE_DEFAULT,$/;"	e	enum:__anon27
G_NORMALIZE_DEFAULT_COMPOSE	gunicode.h	/^  G_NORMALIZE_DEFAULT_COMPOSE,$/;"	e	enum:__anon27
G_NORMALIZE_NFC	gunicode.h	/^  G_NORMALIZE_NFC = G_NORMALIZE_DEFAULT_COMPOSE,$/;"	e	enum:__anon27
G_NORMALIZE_NFD	gunicode.h	/^  G_NORMALIZE_NFD = G_NORMALIZE_DEFAULT,$/;"	e	enum:__anon27
G_NORMALIZE_NFKC	gunicode.h	/^  G_NORMALIZE_NFKC = G_NORMALIZE_ALL_COMPOSE$/;"	e	enum:__anon27
G_NORMALIZE_NFKD	gunicode.h	/^  G_NORMALIZE_NFKD = G_NORMALIZE_ALL,$/;"	e	enum:__anon27
G_N_ELEMENTS	gmacros.h	233;"	d
G_ONCE_INIT	gthread.h	102;"	d
G_ONCE_STATUS_NOTCALLED	gthread.h	/^  G_ONCE_STATUS_NOTCALLED,$/;"	e	enum:__anon47
G_ONCE_STATUS_PROGRESS	gthread.h	/^  G_ONCE_STATUS_PROGRESS,$/;"	e	enum:__anon47
G_ONCE_STATUS_READY	gthread.h	/^  G_ONCE_STATUS_READY$/;"	e	enum:__anon47
G_OPTION_ARG_CALLBACK	goption.h	/^  G_OPTION_ARG_CALLBACK,$/;"	e	enum:__anon50
G_OPTION_ARG_DOUBLE	goption.h	/^  G_OPTION_ARG_DOUBLE,$/;"	e	enum:__anon50
G_OPTION_ARG_FILENAME	goption.h	/^  G_OPTION_ARG_FILENAME,$/;"	e	enum:__anon50
G_OPTION_ARG_FILENAME_ARRAY	goption.h	/^  G_OPTION_ARG_FILENAME_ARRAY,$/;"	e	enum:__anon50
G_OPTION_ARG_INT	goption.h	/^  G_OPTION_ARG_INT,$/;"	e	enum:__anon50
G_OPTION_ARG_INT64	goption.h	/^  G_OPTION_ARG_INT64$/;"	e	enum:__anon50
G_OPTION_ARG_NONE	goption.h	/^  G_OPTION_ARG_NONE,$/;"	e	enum:__anon50
G_OPTION_ARG_STRING	goption.h	/^  G_OPTION_ARG_STRING,$/;"	e	enum:__anon50
G_OPTION_ARG_STRING_ARRAY	goption.h	/^  G_OPTION_ARG_STRING_ARRAY,$/;"	e	enum:__anon50
G_OPTION_ERROR	goption.h	193;"	d
G_OPTION_ERROR_BAD_VALUE	goption.h	/^  G_OPTION_ERROR_BAD_VALUE,$/;"	e	enum:__anon51
G_OPTION_ERROR_FAILED	goption.h	/^  G_OPTION_ERROR_FAILED$/;"	e	enum:__anon51
G_OPTION_ERROR_UNKNOWN_OPTION	goption.h	/^  G_OPTION_ERROR_UNKNOWN_OPTION,$/;"	e	enum:__anon51
G_OPTION_FLAG_FILENAME	goption.h	/^  G_OPTION_FLAG_FILENAME	= 1 << 4,$/;"	e	enum:__anon49
G_OPTION_FLAG_HIDDEN	goption.h	/^  G_OPTION_FLAG_HIDDEN		= 1 << 0,$/;"	e	enum:__anon49
G_OPTION_FLAG_IN_MAIN	goption.h	/^  G_OPTION_FLAG_IN_MAIN		= 1 << 1,$/;"	e	enum:__anon49
G_OPTION_FLAG_NOALIAS	goption.h	/^  G_OPTION_FLAG_NOALIAS	        = 1 << 6$/;"	e	enum:__anon49
G_OPTION_FLAG_NO_ARG	goption.h	/^  G_OPTION_FLAG_NO_ARG		= 1 << 3,$/;"	e	enum:__anon49
G_OPTION_FLAG_OPTIONAL_ARG	goption.h	/^  G_OPTION_FLAG_OPTIONAL_ARG    = 1 << 5,$/;"	e	enum:__anon49
G_OPTION_FLAG_REVERSE	goption.h	/^  G_OPTION_FLAG_REVERSE		= 1 << 2,$/;"	e	enum:__anon49
G_OPTION_REMAINING	goption.h	308;"	d
G_PASTE	gmacros.h	160;"	d
G_PASTE_ARGS	gmacros.h	159;"	d
G_PDP_ENDIAN	gtypes.h	148;"	d
G_PI	gtypes.h	136;"	d
G_PI_2	gtypes.h	137;"	d
G_PI_4	gtypes.h	138;"	d
G_POLLFD_FORMAT	gpoll.h	106;"	d
G_POLLFD_FORMAT	gpoll.h	108;"	d
G_POLLFD_FORMAT	gpoll.h	111;"	d
G_POST_ORDER	gnode.h	/^  G_POST_ORDER,$/;"	e	enum:__anon45
G_PRE_ORDER	gnode.h	/^  G_PRE_ORDER,$/;"	e	enum:__anon45
G_PRIORITY_DEFAULT	gmain.h	230;"	d
G_PRIORITY_DEFAULT_IDLE	gmain.h	252;"	d
G_PRIORITY_HIGH	gmain.h	219;"	d
G_PRIORITY_HIGH_IDLE	gmain.h	242;"	d
G_PRIORITY_LOW	gmain.h	261;"	d
G_PRIVATE_INIT	gthread.h	86;"	d
G_QUEUE_INIT	gqueue.h	70;"	d
G_REGEX_ANCHORED	gregex.h	/^  G_REGEX_ANCHORED          = 1 << 4,$/;"	e	enum:__anon3
G_REGEX_CASELESS	gregex.h	/^  G_REGEX_CASELESS          = 1 << 0,$/;"	e	enum:__anon3
G_REGEX_DOLLAR_ENDONLY	gregex.h	/^  G_REGEX_DOLLAR_ENDONLY    = 1 << 5,$/;"	e	enum:__anon3
G_REGEX_DOTALL	gregex.h	/^  G_REGEX_DOTALL            = 1 << 2,$/;"	e	enum:__anon3
G_REGEX_DUPNAMES	gregex.h	/^  G_REGEX_DUPNAMES          = 1 << 19,$/;"	e	enum:__anon3
G_REGEX_ERROR	gregex.h	174;"	d
G_REGEX_ERROR_ASSERTION_EXPECTED	gregex.h	/^  G_REGEX_ERROR_ASSERTION_EXPECTED = 128,$/;"	e	enum:__anon2
G_REGEX_ERROR_COMPILE	gregex.h	/^  G_REGEX_ERROR_COMPILE,$/;"	e	enum:__anon2
G_REGEX_ERROR_DEFINE_REPETION	gregex.h	/^  G_REGEX_ERROR_DEFINE_REPETION = 155,$/;"	e	enum:__anon2
G_REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME	gregex.h	/^  G_REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME = 143,$/;"	e	enum:__anon2
G_REGEX_ERROR_EXPRESSION_TOO_LARGE	gregex.h	/^  G_REGEX_ERROR_EXPRESSION_TOO_LARGE = 120,$/;"	e	enum:__anon2
G_REGEX_ERROR_HEX_CODE_TOO_LARGE	gregex.h	/^  G_REGEX_ERROR_HEX_CODE_TOO_LARGE = 134,$/;"	e	enum:__anon2
G_REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS	gregex.h	/^  G_REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS = 156,$/;"	e	enum:__anon2
G_REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE	gregex.h	/^  G_REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE = 115,$/;"	e	enum:__anon2
G_REGEX_ERROR_INFINITE_LOOP	gregex.h	/^  G_REGEX_ERROR_INFINITE_LOOP = 140,$/;"	e	enum:__anon2
G_REGEX_ERROR_INTERNAL	gregex.h	/^  G_REGEX_ERROR_INTERNAL,$/;"	e	enum:__anon2
G_REGEX_ERROR_INVALID_CONDITION	gregex.h	/^  G_REGEX_ERROR_INVALID_CONDITION = 135,$/;"	e	enum:__anon2
G_REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS	gregex.h	/^  G_REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS = 107,$/;"	e	enum:__anon2
G_REGEX_ERROR_INVALID_OCTAL_VALUE	gregex.h	/^  G_REGEX_ERROR_INVALID_OCTAL_VALUE = 151,$/;"	e	enum:__anon2
G_REGEX_ERROR_MALFORMED_CONDITION	gregex.h	/^  G_REGEX_ERROR_MALFORMED_CONDITION = 126,$/;"	e	enum:__anon2
G_REGEX_ERROR_MALFORMED_PROPERTY	gregex.h	/^  G_REGEX_ERROR_MALFORMED_PROPERTY = 146,$/;"	e	enum:__anon2
G_REGEX_ERROR_MATCH	gregex.h	/^  G_REGEX_ERROR_MATCH,$/;"	e	enum:__anon2
G_REGEX_ERROR_MEMORY_ERROR	gregex.h	/^  G_REGEX_ERROR_MEMORY_ERROR = 121,$/;"	e	enum:__anon2
G_REGEX_ERROR_MISSING_BACK_REFERENCE	gregex.h	/^  G_REGEX_ERROR_MISSING_BACK_REFERENCE = 157$/;"	e	enum:__anon2
G_REGEX_ERROR_MISSING_CONTROL_CHAR	gregex.h	/^  G_REGEX_ERROR_MISSING_CONTROL_CHAR = 102,$/;"	e	enum:__anon2
G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR	gregex.h	/^  G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR = 142,$/;"	e	enum:__anon2
G_REGEX_ERROR_NOTHING_TO_REPEAT	gregex.h	/^  G_REGEX_ERROR_NOTHING_TO_REPEAT = 109,$/;"	e	enum:__anon2
G_REGEX_ERROR_OPTIMIZE	gregex.h	/^  G_REGEX_ERROR_OPTIMIZE,$/;"	e	enum:__anon2
G_REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED	gregex.h	/^  G_REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED = 131,$/;"	e	enum:__anon2
G_REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS	gregex.h	/^  G_REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS = 113,$/;"	e	enum:__anon2
G_REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER	gregex.h	/^  G_REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER = 104,$/;"	e	enum:__anon2
G_REGEX_ERROR_QUANTIFIER_TOO_BIG	gregex.h	/^  G_REGEX_ERROR_QUANTIFIER_TOO_BIG = 105,$/;"	e	enum:__anon2
G_REGEX_ERROR_RANGE_OUT_OF_ORDER	gregex.h	/^  G_REGEX_ERROR_RANGE_OUT_OF_ORDER = 108,$/;"	e	enum:__anon2
G_REGEX_ERROR_REPLACE	gregex.h	/^  G_REGEX_ERROR_REPLACE,$/;"	e	enum:__anon2
G_REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND	gregex.h	/^  G_REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND = 136,$/;"	e	enum:__anon2
G_REGEX_ERROR_STRAY_BACKSLASH	gregex.h	/^  G_REGEX_ERROR_STRAY_BACKSLASH = 101,$/;"	e	enum:__anon2
G_REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG	gregex.h	/^  G_REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG = 148,$/;"	e	enum:__anon2
G_REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE	gregex.h	/^  G_REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE = 154,$/;"	e	enum:__anon2
G_REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES	gregex.h	/^  G_REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES = 127,$/;"	e	enum:__anon2
G_REGEX_ERROR_TOO_MANY_SUBPATTERNS	gregex.h	/^  G_REGEX_ERROR_TOO_MANY_SUBPATTERNS = 149,$/;"	e	enum:__anon2
G_REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME	gregex.h	/^  G_REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME = 130,$/;"	e	enum:__anon2
G_REGEX_ERROR_UNKNOWN_PROPERTY	gregex.h	/^  G_REGEX_ERROR_UNKNOWN_PROPERTY = 147,$/;"	e	enum:__anon2
G_REGEX_ERROR_UNMATCHED_PARENTHESIS	gregex.h	/^  G_REGEX_ERROR_UNMATCHED_PARENTHESIS = 114,$/;"	e	enum:__anon2
G_REGEX_ERROR_UNRECOGNIZED_CHARACTER	gregex.h	/^  G_REGEX_ERROR_UNRECOGNIZED_CHARACTER = 112,$/;"	e	enum:__anon2
G_REGEX_ERROR_UNRECOGNIZED_ESCAPE	gregex.h	/^  G_REGEX_ERROR_UNRECOGNIZED_ESCAPE = 103,$/;"	e	enum:__anon2
G_REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS	gregex.h	/^  G_REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS = 106,$/;"	e	enum:__anon2
G_REGEX_ERROR_UNTERMINATED_COMMENT	gregex.h	/^  G_REGEX_ERROR_UNTERMINATED_COMMENT = 118,$/;"	e	enum:__anon2
G_REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND	gregex.h	/^  G_REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND = 125,$/;"	e	enum:__anon2
G_REGEX_EXTENDED	gregex.h	/^  G_REGEX_EXTENDED          = 1 << 3,$/;"	e	enum:__anon3
G_REGEX_MATCH_ANCHORED	gregex.h	/^  G_REGEX_MATCH_ANCHORED      = 1 << 4,$/;"	e	enum:__anon4
G_REGEX_MATCH_NEWLINE_ANY	gregex.h	/^  G_REGEX_MATCH_NEWLINE_ANY   = 1 << 22$/;"	e	enum:__anon4
G_REGEX_MATCH_NEWLINE_CR	gregex.h	/^  G_REGEX_MATCH_NEWLINE_CR    = 1 << 20,$/;"	e	enum:__anon4
G_REGEX_MATCH_NEWLINE_CRLF	gregex.h	/^  G_REGEX_MATCH_NEWLINE_CRLF  = G_REGEX_MATCH_NEWLINE_CR | G_REGEX_MATCH_NEWLINE_LF,$/;"	e	enum:__anon4
G_REGEX_MATCH_NEWLINE_LF	gregex.h	/^  G_REGEX_MATCH_NEWLINE_LF    = 1 << 21,$/;"	e	enum:__anon4
G_REGEX_MATCH_NOTBOL	gregex.h	/^  G_REGEX_MATCH_NOTBOL        = 1 << 7,$/;"	e	enum:__anon4
G_REGEX_MATCH_NOTEMPTY	gregex.h	/^  G_REGEX_MATCH_NOTEMPTY      = 1 << 10,$/;"	e	enum:__anon4
G_REGEX_MATCH_NOTEOL	gregex.h	/^  G_REGEX_MATCH_NOTEOL        = 1 << 8,$/;"	e	enum:__anon4
G_REGEX_MATCH_PARTIAL	gregex.h	/^  G_REGEX_MATCH_PARTIAL       = 1 << 15,$/;"	e	enum:__anon4
G_REGEX_MULTILINE	gregex.h	/^  G_REGEX_MULTILINE         = 1 << 1,$/;"	e	enum:__anon3
G_REGEX_NEWLINE_CR	gregex.h	/^  G_REGEX_NEWLINE_CR        = 1 << 20,$/;"	e	enum:__anon3
G_REGEX_NEWLINE_CRLF	gregex.h	/^  G_REGEX_NEWLINE_CRLF      = G_REGEX_NEWLINE_CR | G_REGEX_NEWLINE_LF$/;"	e	enum:__anon3
G_REGEX_NEWLINE_LF	gregex.h	/^  G_REGEX_NEWLINE_LF        = 1 << 21,$/;"	e	enum:__anon3
G_REGEX_NO_AUTO_CAPTURE	gregex.h	/^  G_REGEX_NO_AUTO_CAPTURE   = 1 << 12,$/;"	e	enum:__anon3
G_REGEX_OPTIMIZE	gregex.h	/^  G_REGEX_OPTIMIZE          = 1 << 13,$/;"	e	enum:__anon3
G_REGEX_RAW	gregex.h	/^  G_REGEX_RAW               = 1 << 11,$/;"	e	enum:__anon3
G_REGEX_UNGREEDY	gregex.h	/^  G_REGEX_UNGREEDY          = 1 << 9,$/;"	e	enum:__anon3
G_SEARCHPATH_SEPARATOR	gfileutils.h	142;"	d
G_SEARCHPATH_SEPARATOR	gfileutils.h	150;"	d
G_SEARCHPATH_SEPARATOR_S	gfileutils.h	143;"	d
G_SEARCHPATH_SEPARATOR_S	gfileutils.h	151;"	d
G_SEEK_CUR	giochannel.h	/^  G_SEEK_CUR,$/;"	e	enum:__anon36
G_SEEK_END	giochannel.h	/^  G_SEEK_END$/;"	e	enum:__anon36
G_SEEK_SET	giochannel.h	/^  G_SEEK_SET,$/;"	e	enum:__anon36
G_SHELL_ERROR	gshell.h	32;"	d
G_SHELL_ERROR_BAD_QUOTING	gshell.h	/^  G_SHELL_ERROR_BAD_QUOTING,$/;"	e	enum:__anon1
G_SHELL_ERROR_EMPTY_STRING	gshell.h	/^  G_SHELL_ERROR_EMPTY_STRING,$/;"	e	enum:__anon1
G_SHELL_ERROR_FAILED	gshell.h	/^  G_SHELL_ERROR_FAILED$/;"	e	enum:__anon1
G_SLICE_CONFIG_ALWAYS_MALLOC	gslice.h	/^  G_SLICE_CONFIG_ALWAYS_MALLOC = 1,$/;"	e	enum:__anon52
G_SLICE_CONFIG_BYPASS_MAGAZINES	gslice.h	/^  G_SLICE_CONFIG_BYPASS_MAGAZINES,$/;"	e	enum:__anon52
G_SLICE_CONFIG_CHUNK_SIZES	gslice.h	/^  G_SLICE_CONFIG_CHUNK_SIZES,$/;"	e	enum:__anon52
G_SLICE_CONFIG_COLOR_INCREMENT	gslice.h	/^  G_SLICE_CONFIG_COLOR_INCREMENT,$/;"	e	enum:__anon52
G_SLICE_CONFIG_CONTENTION_COUNTER	gslice.h	/^  G_SLICE_CONFIG_CONTENTION_COUNTER$/;"	e	enum:__anon52
G_SLICE_CONFIG_WORKING_SET_MSECS	gslice.h	/^  G_SLICE_CONFIG_WORKING_SET_MSECS,$/;"	e	enum:__anon52
G_SOURCE_CONTINUE	gmain.h	281;"	d
G_SOURCE_REMOVE	gmain.h	271;"	d
G_SPAWN_CHILD_INHERITS_STDIN	gspawn.h	/^  G_SPAWN_CHILD_INHERITS_STDIN   = 1 << 5,$/;"	e	enum:__anon7
G_SPAWN_DO_NOT_REAP_CHILD	gspawn.h	/^  G_SPAWN_DO_NOT_REAP_CHILD      = 1 << 1,$/;"	e	enum:__anon7
G_SPAWN_ERROR	gspawn.h	41;"	d
G_SPAWN_ERROR_2BIG	gspawn.h	/^  G_SPAWN_ERROR_2BIG = G_SPAWN_ERROR_TOO_BIG,$/;"	e	enum:__anon6
G_SPAWN_ERROR_ACCES	gspawn.h	/^  G_SPAWN_ERROR_ACCES,  \/* execv() returned EACCES *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_CHDIR	gspawn.h	/^  G_SPAWN_ERROR_CHDIR,  \/* changing to working dir failed *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_FAILED	gspawn.h	/^  G_SPAWN_ERROR_FAILED       \/* other fatal failure, error->message$/;"	e	enum:__anon6
G_SPAWN_ERROR_FORK	gspawn.h	/^  G_SPAWN_ERROR_FORK,   \/* fork failed due to lack of memory *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_INVAL	gspawn.h	/^  G_SPAWN_ERROR_INVAL,       \/* ""  "" EINVAL *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_IO	gspawn.h	/^  G_SPAWN_ERROR_IO,          \/* ""  "" EIO *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_ISDIR	gspawn.h	/^  G_SPAWN_ERROR_ISDIR,       \/* ""  "" EISDIR *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_LIBBAD	gspawn.h	/^  G_SPAWN_ERROR_LIBBAD,      \/* ""  "" ELIBBAD *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_LOOP	gspawn.h	/^  G_SPAWN_ERROR_LOOP,        \/* ""  "" ELOOP   *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_MFILE	gspawn.h	/^  G_SPAWN_ERROR_MFILE,       \/* ""  "" EMFLE *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_NAMETOOLONG	gspawn.h	/^  G_SPAWN_ERROR_NAMETOOLONG, \/* ""  "" ENAMETOOLONG *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_NFILE	gspawn.h	/^  G_SPAWN_ERROR_NFILE,       \/* ""  "" ENFILE *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_NOENT	gspawn.h	/^  G_SPAWN_ERROR_NOENT,       \/* ""  "" ENOENT *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_NOEXEC	gspawn.h	/^  G_SPAWN_ERROR_NOEXEC, \/* execv() returned ENOEXEC *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_NOMEM	gspawn.h	/^  G_SPAWN_ERROR_NOMEM,       \/* ""  "" ENOMEM *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_NOTDIR	gspawn.h	/^  G_SPAWN_ERROR_NOTDIR,      \/* ""  "" ENOTDIR *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_PERM	gspawn.h	/^  G_SPAWN_ERROR_PERM,   \/* execv() returned EPERM *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_READ	gspawn.h	/^  G_SPAWN_ERROR_READ,   \/* read or select on pipes failed *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_TOO_BIG	gspawn.h	/^  G_SPAWN_ERROR_TOO_BIG,\/* execv() returned E2BIG *\/$/;"	e	enum:__anon6
G_SPAWN_ERROR_TXTBUSY	gspawn.h	/^  G_SPAWN_ERROR_TXTBUSY,     \/* ""  "" ETXTBUSY *\/$/;"	e	enum:__anon6
G_SPAWN_FILE_AND_ARGV_ZERO	gspawn.h	/^  G_SPAWN_FILE_AND_ARGV_ZERO     = 1 << 6$/;"	e	enum:__anon7
G_SPAWN_LEAVE_DESCRIPTORS_OPEN	gspawn.h	/^  G_SPAWN_LEAVE_DESCRIPTORS_OPEN = 1 << 0,$/;"	e	enum:__anon7
G_SPAWN_SEARCH_PATH	gspawn.h	/^  G_SPAWN_SEARCH_PATH            = 1 << 2,$/;"	e	enum:__anon7
G_SPAWN_STDERR_TO_DEV_NULL	gspawn.h	/^  G_SPAWN_STDERR_TO_DEV_NULL     = 1 << 4,$/;"	e	enum:__anon7
G_SPAWN_STDOUT_TO_DEV_NULL	gspawn.h	/^  G_SPAWN_STDOUT_TO_DEV_NULL     = 1 << 3,$/;"	e	enum:__anon7
G_SQRT2	gtypes.h	139;"	d
G_STATIC_ASSERT	gmacros.h	162;"	d
G_STATIC_ASSERT	gmacros.h	164;"	d
G_STATIC_ASSERT_EXPR	gmacros.h	166;"	d
G_STATIC_MUTEX_INIT	deprecated/gthread.h	127;"	d
G_STATIC_PRIVATE_INIT	deprecated/gthread.h	240;"	d
G_STATIC_REC_MUTEX_INIT	deprecated/gthread.h	168;"	d
G_STATIC_RW_LOCK_INIT	deprecated/gthread.h	204;"	d
G_STMT_END	gmacros.h	266;"	d
G_STMT_START	gmacros.h	265;"	d
G_STRFUNC	gmacros.h	178;"	d
G_STRFUNC	gmacros.h	180;"	d
G_STRFUNC	gmacros.h	182;"	d
G_STRFUNC	gmacros.h	184;"	d
G_STRINGIFY	gmacros.h	155;"	d
G_STRINGIFY_ARG	gmacros.h	156;"	d
G_STRLOC	gmacros.h	171;"	d
G_STRLOC	gmacros.h	173;"	d
G_STRUCT_MEMBER	gmacros.h	254;"	d
G_STRUCT_MEMBER_P	gmacros.h	252;"	d
G_STRUCT_OFFSET	gmacros.h	245;"	d
G_STRUCT_OFFSET	gmacros.h	248;"	d
G_STR_DELIMITERS	gstrfuncs.h	99;"	d
G_TEST_LOG_ERROR	gtestutils.h	/^  G_TEST_LOG_ERROR,             \/* s:msg *\/$/;"	e	enum:__anon13
G_TEST_LOG_LIST_CASE	gtestutils.h	/^  G_TEST_LOG_LIST_CASE,         \/* s:testpath *\/$/;"	e	enum:__anon13
G_TEST_LOG_MAX_RESULT	gtestutils.h	/^  G_TEST_LOG_MAX_RESULT,        \/* s:blurb d:result *\/$/;"	e	enum:__anon13
G_TEST_LOG_MESSAGE	gtestutils.h	/^  G_TEST_LOG_MESSAGE            \/* s:blurb *\/$/;"	e	enum:__anon13
G_TEST_LOG_MIN_RESULT	gtestutils.h	/^  G_TEST_LOG_MIN_RESULT,        \/* s:blurb d:result *\/$/;"	e	enum:__anon13
G_TEST_LOG_NONE	gtestutils.h	/^  G_TEST_LOG_NONE,$/;"	e	enum:__anon13
G_TEST_LOG_SKIP_CASE	gtestutils.h	/^  G_TEST_LOG_SKIP_CASE,         \/* s:testpath *\/$/;"	e	enum:__anon13
G_TEST_LOG_START_BINARY	gtestutils.h	/^  G_TEST_LOG_START_BINARY,      \/* s:binaryname s:seed *\/$/;"	e	enum:__anon13
G_TEST_LOG_START_CASE	gtestutils.h	/^  G_TEST_LOG_START_CASE,        \/* s:testpath *\/$/;"	e	enum:__anon13
G_TEST_LOG_STOP_CASE	gtestutils.h	/^  G_TEST_LOG_STOP_CASE,         \/* d:status d:nforks d:elapsed *\/$/;"	e	enum:__anon13
G_TEST_TRAP_INHERIT_STDIN	gtestutils.h	/^  G_TEST_TRAP_INHERIT_STDIN     = 1 << 9$/;"	e	enum:__anon11
G_TEST_TRAP_SILENCE_STDERR	gtestutils.h	/^  G_TEST_TRAP_SILENCE_STDERR    = 1 << 8,$/;"	e	enum:__anon11
G_TEST_TRAP_SILENCE_STDOUT	gtestutils.h	/^  G_TEST_TRAP_SILENCE_STDOUT    = 1 << 7,$/;"	e	enum:__anon11
G_THREAD_ERROR	gthread.h	39;"	d
G_THREAD_ERROR_AGAIN	gthread.h	/^  G_THREAD_ERROR_AGAIN \/* Resource temporarily unavailable *\/$/;"	e	enum:__anon46
G_THREAD_PRIORITY_HIGH	deprecated/gthread.h	/^  G_THREAD_PRIORITY_HIGH,$/;"	e	enum:__anon53
G_THREAD_PRIORITY_LOW	deprecated/gthread.h	/^  G_THREAD_PRIORITY_LOW,$/;"	e	enum:__anon53
G_THREAD_PRIORITY_NORMAL	deprecated/gthread.h	/^  G_THREAD_PRIORITY_NORMAL,$/;"	e	enum:__anon53
G_THREAD_PRIORITY_URGENT	deprecated/gthread.h	/^  G_THREAD_PRIORITY_URGENT$/;"	e	enum:__anon53
G_TIME_SPAN_DAY	gdatetime.h	44;"	d
G_TIME_SPAN_HOUR	gdatetime.h	53;"	d
G_TIME_SPAN_MILLISECOND	gdatetime.h	80;"	d
G_TIME_SPAN_MINUTE	gdatetime.h	62;"	d
G_TIME_SPAN_SECOND	gdatetime.h	71;"	d
G_TIME_TYPE_DAYLIGHT	gtimezone.h	/^  G_TIME_TYPE_DAYLIGHT,$/;"	e	enum:__anon5
G_TIME_TYPE_STANDARD	gtimezone.h	/^  G_TIME_TYPE_STANDARD,$/;"	e	enum:__anon5
G_TIME_TYPE_UNIVERSAL	gtimezone.h	/^  G_TIME_TYPE_UNIVERSAL$/;"	e	enum:__anon5
G_TOKEN_BINARY	gscanner.h	/^  G_TOKEN_BINARY,$/;"	e	enum:__anon10
G_TOKEN_CHAR	gscanner.h	/^  G_TOKEN_CHAR,$/;"	e	enum:__anon10
G_TOKEN_COMMA	gscanner.h	/^  G_TOKEN_COMMA			= ',',$/;"	e	enum:__anon10
G_TOKEN_COMMENT_MULTI	gscanner.h	/^  G_TOKEN_COMMENT_MULTI,$/;"	e	enum:__anon10
G_TOKEN_COMMENT_SINGLE	gscanner.h	/^  G_TOKEN_COMMENT_SINGLE,$/;"	e	enum:__anon10
G_TOKEN_EOF	gscanner.h	/^  G_TOKEN_EOF			=   0,$/;"	e	enum:__anon10
G_TOKEN_EQUAL_SIGN	gscanner.h	/^  G_TOKEN_EQUAL_SIGN		= '=',$/;"	e	enum:__anon10
G_TOKEN_ERROR	gscanner.h	/^  G_TOKEN_ERROR,$/;"	e	enum:__anon10
G_TOKEN_FLOAT	gscanner.h	/^  G_TOKEN_FLOAT,$/;"	e	enum:__anon10
G_TOKEN_HEX	gscanner.h	/^  G_TOKEN_HEX,$/;"	e	enum:__anon10
G_TOKEN_IDENTIFIER	gscanner.h	/^  G_TOKEN_IDENTIFIER,$/;"	e	enum:__anon10
G_TOKEN_IDENTIFIER_NULL	gscanner.h	/^  G_TOKEN_IDENTIFIER_NULL,$/;"	e	enum:__anon10
G_TOKEN_INT	gscanner.h	/^  G_TOKEN_INT,$/;"	e	enum:__anon10
G_TOKEN_LAST	gscanner.h	/^  G_TOKEN_LAST$/;"	e	enum:__anon10
G_TOKEN_LEFT_BRACE	gscanner.h	/^  G_TOKEN_LEFT_BRACE		= '[',$/;"	e	enum:__anon10
G_TOKEN_LEFT_CURLY	gscanner.h	/^  G_TOKEN_LEFT_CURLY		= '{',$/;"	e	enum:__anon10
G_TOKEN_LEFT_PAREN	gscanner.h	/^  G_TOKEN_LEFT_PAREN		= '(',$/;"	e	enum:__anon10
G_TOKEN_NONE	gscanner.h	/^  G_TOKEN_NONE			= 256,$/;"	e	enum:__anon10
G_TOKEN_OCTAL	gscanner.h	/^  G_TOKEN_OCTAL,$/;"	e	enum:__anon10
G_TOKEN_RIGHT_BRACE	gscanner.h	/^  G_TOKEN_RIGHT_BRACE		= ']',$/;"	e	enum:__anon10
G_TOKEN_RIGHT_CURLY	gscanner.h	/^  G_TOKEN_RIGHT_CURLY		= '}',$/;"	e	enum:__anon10
G_TOKEN_RIGHT_PAREN	gscanner.h	/^  G_TOKEN_RIGHT_PAREN		= ')',$/;"	e	enum:__anon10
G_TOKEN_STRING	gscanner.h	/^  G_TOKEN_STRING,$/;"	e	enum:__anon10
G_TOKEN_SYMBOL	gscanner.h	/^  G_TOKEN_SYMBOL,$/;"	e	enum:__anon10
G_TRAVERSE_ALL	gnode.h	/^  G_TRAVERSE_ALL        = G_TRAVERSE_LEAVES | G_TRAVERSE_NON_LEAVES,$/;"	e	enum:__anon44
G_TRAVERSE_LEAFS	gnode.h	/^  G_TRAVERSE_LEAFS      = G_TRAVERSE_LEAVES,$/;"	e	enum:__anon44
G_TRAVERSE_LEAVES	gnode.h	/^  G_TRAVERSE_LEAVES     = 1 << 0,$/;"	e	enum:__anon44
G_TRAVERSE_MASK	gnode.h	/^  G_TRAVERSE_MASK       = 0x03,$/;"	e	enum:__anon44
G_TRAVERSE_NON_LEAFS	gnode.h	/^  G_TRAVERSE_NON_LEAFS  = G_TRAVERSE_NON_LEAVES$/;"	e	enum:__anon44
G_TRAVERSE_NON_LEAVES	gnode.h	/^  G_TRAVERSE_NON_LEAVES = 1 << 1,$/;"	e	enum:__anon44
G_TRYLOCK	gthread.h	129;"	d
G_TRYLOCK	gthread.h	137;"	d
G_UNAVAILABLE	gmacros.h	320;"	d
G_UNAVAILABLE	gmacros.h	322;"	d
G_UNAVAILABLE	gmacros.h	324;"	d
G_UNICHAR_MAX_DECOMPOSITION_LENGTH	gunicode.h	584;"	d
G_UNICODE_BREAK_AFTER	gunicode.h	/^  G_UNICODE_BREAK_AFTER,$/;"	e	enum:__anon25
G_UNICODE_BREAK_ALPHABETIC	gunicode.h	/^  G_UNICODE_BREAK_ALPHABETIC,$/;"	e	enum:__anon25
G_UNICODE_BREAK_AMBIGUOUS	gunicode.h	/^  G_UNICODE_BREAK_AMBIGUOUS,$/;"	e	enum:__anon25
G_UNICODE_BREAK_BEFORE	gunicode.h	/^  G_UNICODE_BREAK_BEFORE,$/;"	e	enum:__anon25
G_UNICODE_BREAK_BEFORE_AND_AFTER	gunicode.h	/^  G_UNICODE_BREAK_BEFORE_AND_AFTER,$/;"	e	enum:__anon25
G_UNICODE_BREAK_CARRIAGE_RETURN	gunicode.h	/^  G_UNICODE_BREAK_CARRIAGE_RETURN,$/;"	e	enum:__anon25
G_UNICODE_BREAK_CLOSE_PARANTHESIS	gunicode.h	/^  G_UNICODE_BREAK_CLOSE_PARANTHESIS,$/;"	e	enum:__anon25
G_UNICODE_BREAK_CLOSE_PUNCTUATION	gunicode.h	/^  G_UNICODE_BREAK_CLOSE_PUNCTUATION,$/;"	e	enum:__anon25
G_UNICODE_BREAK_COMBINING_MARK	gunicode.h	/^  G_UNICODE_BREAK_COMBINING_MARK,$/;"	e	enum:__anon25
G_UNICODE_BREAK_COMPLEX_CONTEXT	gunicode.h	/^  G_UNICODE_BREAK_COMPLEX_CONTEXT,$/;"	e	enum:__anon25
G_UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER	gunicode.h	/^  G_UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER,$/;"	e	enum:__anon25
G_UNICODE_BREAK_CONTINGENT	gunicode.h	/^  G_UNICODE_BREAK_CONTINGENT,$/;"	e	enum:__anon25
G_UNICODE_BREAK_EXCLAMATION	gunicode.h	/^  G_UNICODE_BREAK_EXCLAMATION,$/;"	e	enum:__anon25
G_UNICODE_BREAK_HANGUL_LVT_SYLLABLE	gunicode.h	/^  G_UNICODE_BREAK_HANGUL_LVT_SYLLABLE,$/;"	e	enum:__anon25
G_UNICODE_BREAK_HANGUL_LV_SYLLABLE	gunicode.h	/^  G_UNICODE_BREAK_HANGUL_LV_SYLLABLE,$/;"	e	enum:__anon25
G_UNICODE_BREAK_HANGUL_L_JAMO	gunicode.h	/^  G_UNICODE_BREAK_HANGUL_L_JAMO,$/;"	e	enum:__anon25
G_UNICODE_BREAK_HANGUL_T_JAMO	gunicode.h	/^  G_UNICODE_BREAK_HANGUL_T_JAMO,$/;"	e	enum:__anon25
G_UNICODE_BREAK_HANGUL_V_JAMO	gunicode.h	/^  G_UNICODE_BREAK_HANGUL_V_JAMO,$/;"	e	enum:__anon25
G_UNICODE_BREAK_HEBREW_LETTER	gunicode.h	/^  G_UNICODE_BREAK_HEBREW_LETTER$/;"	e	enum:__anon25
G_UNICODE_BREAK_HYPHEN	gunicode.h	/^  G_UNICODE_BREAK_HYPHEN,$/;"	e	enum:__anon25
G_UNICODE_BREAK_IDEOGRAPHIC	gunicode.h	/^  G_UNICODE_BREAK_IDEOGRAPHIC,$/;"	e	enum:__anon25
G_UNICODE_BREAK_INFIX_SEPARATOR	gunicode.h	/^  G_UNICODE_BREAK_INFIX_SEPARATOR,$/;"	e	enum:__anon25
G_UNICODE_BREAK_INSEPARABLE	gunicode.h	/^  G_UNICODE_BREAK_INSEPARABLE,$/;"	e	enum:__anon25
G_UNICODE_BREAK_LINE_FEED	gunicode.h	/^  G_UNICODE_BREAK_LINE_FEED,$/;"	e	enum:__anon25
G_UNICODE_BREAK_MANDATORY	gunicode.h	/^  G_UNICODE_BREAK_MANDATORY,$/;"	e	enum:__anon25
G_UNICODE_BREAK_NEXT_LINE	gunicode.h	/^  G_UNICODE_BREAK_NEXT_LINE,$/;"	e	enum:__anon25
G_UNICODE_BREAK_NON_BREAKING_GLUE	gunicode.h	/^  G_UNICODE_BREAK_NON_BREAKING_GLUE,$/;"	e	enum:__anon25
G_UNICODE_BREAK_NON_STARTER	gunicode.h	/^  G_UNICODE_BREAK_NON_STARTER,$/;"	e	enum:__anon25
G_UNICODE_BREAK_NUMERIC	gunicode.h	/^  G_UNICODE_BREAK_NUMERIC,$/;"	e	enum:__anon25
G_UNICODE_BREAK_OPEN_PUNCTUATION	gunicode.h	/^  G_UNICODE_BREAK_OPEN_PUNCTUATION,$/;"	e	enum:__anon25
G_UNICODE_BREAK_POSTFIX	gunicode.h	/^  G_UNICODE_BREAK_POSTFIX,$/;"	e	enum:__anon25
G_UNICODE_BREAK_PREFIX	gunicode.h	/^  G_UNICODE_BREAK_PREFIX,$/;"	e	enum:__anon25
G_UNICODE_BREAK_QUOTATION	gunicode.h	/^  G_UNICODE_BREAK_QUOTATION,$/;"	e	enum:__anon25
G_UNICODE_BREAK_SPACE	gunicode.h	/^  G_UNICODE_BREAK_SPACE,$/;"	e	enum:__anon25
G_UNICODE_BREAK_SURROGATE	gunicode.h	/^  G_UNICODE_BREAK_SURROGATE,$/;"	e	enum:__anon25
G_UNICODE_BREAK_SYMBOL	gunicode.h	/^  G_UNICODE_BREAK_SYMBOL,$/;"	e	enum:__anon25
G_UNICODE_BREAK_UNKNOWN	gunicode.h	/^  G_UNICODE_BREAK_UNKNOWN,$/;"	e	enum:__anon25
G_UNICODE_BREAK_WORD_JOINER	gunicode.h	/^  G_UNICODE_BREAK_WORD_JOINER,$/;"	e	enum:__anon25
G_UNICODE_BREAK_ZERO_WIDTH_SPACE	gunicode.h	/^  G_UNICODE_BREAK_ZERO_WIDTH_SPACE,$/;"	e	enum:__anon25
G_UNICODE_CLOSE_PUNCTUATION	gunicode.h	/^  G_UNICODE_CLOSE_PUNCTUATION,$/;"	e	enum:__anon24
G_UNICODE_COMBINING_MARK	gunicode.h	160;"	d
G_UNICODE_CONNECT_PUNCTUATION	gunicode.h	/^  G_UNICODE_CONNECT_PUNCTUATION,$/;"	e	enum:__anon24
G_UNICODE_CONTROL	gunicode.h	/^  G_UNICODE_CONTROL,$/;"	e	enum:__anon24
G_UNICODE_CURRENCY_SYMBOL	gunicode.h	/^  G_UNICODE_CURRENCY_SYMBOL,$/;"	e	enum:__anon24
G_UNICODE_DASH_PUNCTUATION	gunicode.h	/^  G_UNICODE_DASH_PUNCTUATION,$/;"	e	enum:__anon24
G_UNICODE_DECIMAL_NUMBER	gunicode.h	/^  G_UNICODE_DECIMAL_NUMBER,$/;"	e	enum:__anon24
G_UNICODE_ENCLOSING_MARK	gunicode.h	/^  G_UNICODE_ENCLOSING_MARK,$/;"	e	enum:__anon24
G_UNICODE_FINAL_PUNCTUATION	gunicode.h	/^  G_UNICODE_FINAL_PUNCTUATION,$/;"	e	enum:__anon24
G_UNICODE_FORMAT	gunicode.h	/^  G_UNICODE_FORMAT,$/;"	e	enum:__anon24
G_UNICODE_INITIAL_PUNCTUATION	gunicode.h	/^  G_UNICODE_INITIAL_PUNCTUATION,$/;"	e	enum:__anon24
G_UNICODE_LETTER_NUMBER	gunicode.h	/^  G_UNICODE_LETTER_NUMBER,$/;"	e	enum:__anon24
G_UNICODE_LINE_SEPARATOR	gunicode.h	/^  G_UNICODE_LINE_SEPARATOR,$/;"	e	enum:__anon24
G_UNICODE_LOWERCASE_LETTER	gunicode.h	/^  G_UNICODE_LOWERCASE_LETTER,$/;"	e	enum:__anon24
G_UNICODE_MATH_SYMBOL	gunicode.h	/^  G_UNICODE_MATH_SYMBOL,$/;"	e	enum:__anon24
G_UNICODE_MODIFIER_LETTER	gunicode.h	/^  G_UNICODE_MODIFIER_LETTER,$/;"	e	enum:__anon24
G_UNICODE_MODIFIER_SYMBOL	gunicode.h	/^  G_UNICODE_MODIFIER_SYMBOL,$/;"	e	enum:__anon24
G_UNICODE_NON_SPACING_MARK	gunicode.h	/^  G_UNICODE_NON_SPACING_MARK,$/;"	e	enum:__anon24
G_UNICODE_OPEN_PUNCTUATION	gunicode.h	/^  G_UNICODE_OPEN_PUNCTUATION,$/;"	e	enum:__anon24
G_UNICODE_OTHER_LETTER	gunicode.h	/^  G_UNICODE_OTHER_LETTER,$/;"	e	enum:__anon24
G_UNICODE_OTHER_NUMBER	gunicode.h	/^  G_UNICODE_OTHER_NUMBER,$/;"	e	enum:__anon24
G_UNICODE_OTHER_PUNCTUATION	gunicode.h	/^  G_UNICODE_OTHER_PUNCTUATION,$/;"	e	enum:__anon24
G_UNICODE_OTHER_SYMBOL	gunicode.h	/^  G_UNICODE_OTHER_SYMBOL,$/;"	e	enum:__anon24
G_UNICODE_PARAGRAPH_SEPARATOR	gunicode.h	/^  G_UNICODE_PARAGRAPH_SEPARATOR,$/;"	e	enum:__anon24
G_UNICODE_PRIVATE_USE	gunicode.h	/^  G_UNICODE_PRIVATE_USE,$/;"	e	enum:__anon24
G_UNICODE_SCRIPT_ARABIC	gunicode.h	/^  G_UNICODE_SCRIPT_ARABIC,             \/* Arab *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_ARMENIAN	gunicode.h	/^  G_UNICODE_SCRIPT_ARMENIAN,           \/* Armn *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_AVESTAN	gunicode.h	/^  G_UNICODE_SCRIPT_AVESTAN,                \/* Avst *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_BALINESE	gunicode.h	/^  G_UNICODE_SCRIPT_BALINESE,           \/* Bali *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_BAMUM	gunicode.h	/^  G_UNICODE_SCRIPT_BAMUM,                  \/* Bamu *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_BATAK	gunicode.h	/^  G_UNICODE_SCRIPT_BATAK,                  \/* Batk *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_BENGALI	gunicode.h	/^  G_UNICODE_SCRIPT_BENGALI,            \/* Beng *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_BOPOMOFO	gunicode.h	/^  G_UNICODE_SCRIPT_BOPOMOFO,           \/* Bopo *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_BRAHMI	gunicode.h	/^  G_UNICODE_SCRIPT_BRAHMI,                 \/* Brah *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_BRAILLE	gunicode.h	/^  G_UNICODE_SCRIPT_BRAILLE,            \/* Brai *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_BUGINESE	gunicode.h	/^  G_UNICODE_SCRIPT_BUGINESE,           \/* Bugi *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_BUHID	gunicode.h	/^  G_UNICODE_SCRIPT_BUHID,              \/* Buhd *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL	gunicode.h	/^  G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL, \/* Cans *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_CARIAN	gunicode.h	/^  G_UNICODE_SCRIPT_CARIAN,             \/* Cari *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_CHAKMA	gunicode.h	/^  G_UNICODE_SCRIPT_CHAKMA,                 \/* Cakm *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_CHAM	gunicode.h	/^  G_UNICODE_SCRIPT_CHAM,               \/* Cham *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_CHEROKEE	gunicode.h	/^  G_UNICODE_SCRIPT_CHEROKEE,           \/* Cher *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_COMMON	gunicode.h	/^  G_UNICODE_SCRIPT_COMMON       = 0,   \/* Zyyy *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_COPTIC	gunicode.h	/^  G_UNICODE_SCRIPT_COPTIC,             \/* Copt (Qaac) *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_CUNEIFORM	gunicode.h	/^  G_UNICODE_SCRIPT_CUNEIFORM,          \/* Xsux *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_CYPRIOT	gunicode.h	/^  G_UNICODE_SCRIPT_CYPRIOT,            \/* Cprt *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_CYRILLIC	gunicode.h	/^  G_UNICODE_SCRIPT_CYRILLIC,           \/* Cyrl (Cyrs) *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_DESERET	gunicode.h	/^  G_UNICODE_SCRIPT_DESERET,            \/* Dsrt *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_DEVANAGARI	gunicode.h	/^  G_UNICODE_SCRIPT_DEVANAGARI,         \/* Deva *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS	gunicode.h	/^  G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS,   \/* Egyp *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_ETHIOPIC	gunicode.h	/^  G_UNICODE_SCRIPT_ETHIOPIC,           \/* Ethi *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_GEORGIAN	gunicode.h	/^  G_UNICODE_SCRIPT_GEORGIAN,           \/* Geor (Geon, Geoa) *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_GLAGOLITIC	gunicode.h	/^  G_UNICODE_SCRIPT_GLAGOLITIC,         \/* Glag *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_GOTHIC	gunicode.h	/^  G_UNICODE_SCRIPT_GOTHIC,             \/* Goth *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_GREEK	gunicode.h	/^  G_UNICODE_SCRIPT_GREEK,              \/* Grek *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_GUJARATI	gunicode.h	/^  G_UNICODE_SCRIPT_GUJARATI,           \/* Gujr *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_GURMUKHI	gunicode.h	/^  G_UNICODE_SCRIPT_GURMUKHI,           \/* Guru *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_HAN	gunicode.h	/^  G_UNICODE_SCRIPT_HAN,                \/* Hani *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_HANGUL	gunicode.h	/^  G_UNICODE_SCRIPT_HANGUL,             \/* Hang *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_HANUNOO	gunicode.h	/^  G_UNICODE_SCRIPT_HANUNOO,            \/* Hano *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_HEBREW	gunicode.h	/^  G_UNICODE_SCRIPT_HEBREW,             \/* Hebr *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_HIRAGANA	gunicode.h	/^  G_UNICODE_SCRIPT_HIRAGANA,           \/* Hira *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC	gunicode.h	/^  G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC,       \/* Armi *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_INHERITED	gunicode.h	/^  G_UNICODE_SCRIPT_INHERITED,          \/* Zinh (Qaai) *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI	gunicode.h	/^  G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI,  \/* Phli *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN	gunicode.h	/^  G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN, \/* Prti *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_INVALID_CODE	gunicode.h	/^  G_UNICODE_SCRIPT_INVALID_CODE = -1,$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_JAVANESE	gunicode.h	/^  G_UNICODE_SCRIPT_JAVANESE,               \/* Java *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_KAITHI	gunicode.h	/^  G_UNICODE_SCRIPT_KAITHI,                 \/* Kthi *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_KANNADA	gunicode.h	/^  G_UNICODE_SCRIPT_KANNADA,            \/* Knda *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_KATAKANA	gunicode.h	/^  G_UNICODE_SCRIPT_KATAKANA,           \/* Kana *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_KAYAH_LI	gunicode.h	/^  G_UNICODE_SCRIPT_KAYAH_LI,           \/* Kali *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_KHAROSHTHI	gunicode.h	/^  G_UNICODE_SCRIPT_KHAROSHTHI,         \/* Khar *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_KHMER	gunicode.h	/^  G_UNICODE_SCRIPT_KHMER,              \/* Khmr *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_LAO	gunicode.h	/^  G_UNICODE_SCRIPT_LAO,                \/* Laoo *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_LATIN	gunicode.h	/^  G_UNICODE_SCRIPT_LATIN,              \/* Latn (Latf, Latg) *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_LEPCHA	gunicode.h	/^  G_UNICODE_SCRIPT_LEPCHA,             \/* Lepc *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_LIMBU	gunicode.h	/^  G_UNICODE_SCRIPT_LIMBU,              \/* Limb *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_LINEAR_B	gunicode.h	/^  G_UNICODE_SCRIPT_LINEAR_B,           \/* Linb *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_LISU	gunicode.h	/^  G_UNICODE_SCRIPT_LISU,                   \/* Lisu *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_LYCIAN	gunicode.h	/^  G_UNICODE_SCRIPT_LYCIAN,             \/* Lyci *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_LYDIAN	gunicode.h	/^  G_UNICODE_SCRIPT_LYDIAN,             \/* Lydi *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_MALAYALAM	gunicode.h	/^  G_UNICODE_SCRIPT_MALAYALAM,          \/* Mlym *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_MANDAIC	gunicode.h	/^  G_UNICODE_SCRIPT_MANDAIC,                \/* Mand *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_MEETEI_MAYEK	gunicode.h	/^  G_UNICODE_SCRIPT_MEETEI_MAYEK,           \/* Mtei *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_MEROITIC_CURSIVE	gunicode.h	/^  G_UNICODE_SCRIPT_MEROITIC_CURSIVE,       \/* Merc *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS	gunicode.h	/^  G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS,   \/* Mero *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_MIAO	gunicode.h	/^  G_UNICODE_SCRIPT_MIAO,                   \/* Plrd *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_MONGOLIAN	gunicode.h	/^  G_UNICODE_SCRIPT_MONGOLIAN,          \/* Mong *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_MYANMAR	gunicode.h	/^  G_UNICODE_SCRIPT_MYANMAR,            \/* Mymr *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_NEW_TAI_LUE	gunicode.h	/^  G_UNICODE_SCRIPT_NEW_TAI_LUE,        \/* Talu *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_NKO	gunicode.h	/^  G_UNICODE_SCRIPT_NKO,                \/* Nkoo *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_OGHAM	gunicode.h	/^  G_UNICODE_SCRIPT_OGHAM,              \/* Ogam *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_OLD_ITALIC	gunicode.h	/^  G_UNICODE_SCRIPT_OLD_ITALIC,         \/* Ital *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_OLD_PERSIAN	gunicode.h	/^  G_UNICODE_SCRIPT_OLD_PERSIAN,        \/* Xpeo *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN	gunicode.h	/^  G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN,      \/* Sarb *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_OLD_TURKIC	gunicode.h	/^  G_UNICODE_SCRIPT_OLD_TURKIC,             \/* Orkh *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_OL_CHIKI	gunicode.h	/^  G_UNICODE_SCRIPT_OL_CHIKI,           \/* Olck *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_ORIYA	gunicode.h	/^  G_UNICODE_SCRIPT_ORIYA,              \/* Orya *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_OSMANYA	gunicode.h	/^  G_UNICODE_SCRIPT_OSMANYA,            \/* Osma *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_PHAGS_PA	gunicode.h	/^  G_UNICODE_SCRIPT_PHAGS_PA,           \/* Phag *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_PHOENICIAN	gunicode.h	/^  G_UNICODE_SCRIPT_PHOENICIAN,         \/* Phnx *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_REJANG	gunicode.h	/^  G_UNICODE_SCRIPT_REJANG,             \/* Rjng *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_RUNIC	gunicode.h	/^  G_UNICODE_SCRIPT_RUNIC,              \/* Runr *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_SAMARITAN	gunicode.h	/^  G_UNICODE_SCRIPT_SAMARITAN,              \/* Samr *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_SAURASHTRA	gunicode.h	/^  G_UNICODE_SCRIPT_SAURASHTRA,         \/* Saur *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_SHARADA	gunicode.h	/^  G_UNICODE_SCRIPT_SHARADA,                \/* Shrd *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_SHAVIAN	gunicode.h	/^  G_UNICODE_SCRIPT_SHAVIAN,            \/* Shaw *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_SINHALA	gunicode.h	/^  G_UNICODE_SCRIPT_SINHALA,            \/* Sinh *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_SORA_SOMPENG	gunicode.h	/^  G_UNICODE_SCRIPT_SORA_SOMPENG,           \/* Sora *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_SUNDANESE	gunicode.h	/^  G_UNICODE_SCRIPT_SUNDANESE,          \/* Sund *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_SYLOTI_NAGRI	gunicode.h	/^  G_UNICODE_SCRIPT_SYLOTI_NAGRI,       \/* Sylo *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_SYRIAC	gunicode.h	/^  G_UNICODE_SCRIPT_SYRIAC,             \/* Syrc (Syrj, Syrn, Syre) *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_TAGALOG	gunicode.h	/^  G_UNICODE_SCRIPT_TAGALOG,            \/* Tglg *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_TAGBANWA	gunicode.h	/^  G_UNICODE_SCRIPT_TAGBANWA,           \/* Tagb *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_TAI_LE	gunicode.h	/^  G_UNICODE_SCRIPT_TAI_LE,             \/* Tale *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_TAI_THAM	gunicode.h	/^  G_UNICODE_SCRIPT_TAI_THAM,               \/* Lana *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_TAI_VIET	gunicode.h	/^  G_UNICODE_SCRIPT_TAI_VIET,               \/* Tavt *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_TAKRI	gunicode.h	/^  G_UNICODE_SCRIPT_TAKRI                   \/* Takr *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_TAMIL	gunicode.h	/^  G_UNICODE_SCRIPT_TAMIL,              \/* Taml *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_TELUGU	gunicode.h	/^  G_UNICODE_SCRIPT_TELUGU,             \/* Telu *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_THAANA	gunicode.h	/^  G_UNICODE_SCRIPT_THAANA,             \/* Thaa *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_THAI	gunicode.h	/^  G_UNICODE_SCRIPT_THAI,               \/* Thai *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_TIBETAN	gunicode.h	/^  G_UNICODE_SCRIPT_TIBETAN,            \/* Tibt *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_TIFINAGH	gunicode.h	/^  G_UNICODE_SCRIPT_TIFINAGH,           \/* Tfng *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_UGARITIC	gunicode.h	/^  G_UNICODE_SCRIPT_UGARITIC,           \/* Ugar *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_UNKNOWN	gunicode.h	/^  G_UNICODE_SCRIPT_UNKNOWN,            \/* Zzzz *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_VAI	gunicode.h	/^  G_UNICODE_SCRIPT_VAI,                \/* Vaii *\/$/;"	e	enum:__anon26
G_UNICODE_SCRIPT_YI	gunicode.h	/^  G_UNICODE_SCRIPT_YI,                 \/* Yiii *\/$/;"	e	enum:__anon26
G_UNICODE_SPACE_SEPARATOR	gunicode.h	/^  G_UNICODE_SPACE_SEPARATOR$/;"	e	enum:__anon24
G_UNICODE_SPACING_MARK	gunicode.h	/^  G_UNICODE_SPACING_MARK,$/;"	e	enum:__anon24
G_UNICODE_SURROGATE	gunicode.h	/^  G_UNICODE_SURROGATE,$/;"	e	enum:__anon24
G_UNICODE_TITLECASE_LETTER	gunicode.h	/^  G_UNICODE_TITLECASE_LETTER,$/;"	e	enum:__anon24
G_UNICODE_UNASSIGNED	gunicode.h	/^  G_UNICODE_UNASSIGNED,$/;"	e	enum:__anon24
G_UNICODE_UPPERCASE_LETTER	gunicode.h	/^  G_UNICODE_UPPERCASE_LETTER,$/;"	e	enum:__anon24
G_UNLIKELY	gmacros.h	297;"	d
G_UNLIKELY	gmacros.h	300;"	d
G_UNLOCK	gthread.h	122;"	d
G_UNLOCK	gthread.h	136;"	d
G_URI_RESERVED_CHARS_ALLOWED_IN_PATH	gurifuncs.h	60;"	d
G_URI_RESERVED_CHARS_ALLOWED_IN_PATH_ELEMENT	gurifuncs.h	53;"	d
G_URI_RESERVED_CHARS_ALLOWED_IN_USERINFO	gurifuncs.h	67;"	d
G_URI_RESERVED_CHARS_GENERIC_DELIMITERS	gurifuncs.h	39;"	d
G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS	gurifuncs.h	46;"	d
G_USEC_PER_SEC	gtimer.h	44;"	d
G_USER_DIRECTORY_DESKTOP	gutils.h	/^  G_USER_DIRECTORY_DESKTOP,$/;"	e	enum:__anon41
G_USER_DIRECTORY_DOCUMENTS	gutils.h	/^  G_USER_DIRECTORY_DOCUMENTS,$/;"	e	enum:__anon41
G_USER_DIRECTORY_DOWNLOAD	gutils.h	/^  G_USER_DIRECTORY_DOWNLOAD,$/;"	e	enum:__anon41
G_USER_DIRECTORY_MUSIC	gutils.h	/^  G_USER_DIRECTORY_MUSIC,$/;"	e	enum:__anon41
G_USER_DIRECTORY_PICTURES	gutils.h	/^  G_USER_DIRECTORY_PICTURES,$/;"	e	enum:__anon41
G_USER_DIRECTORY_PUBLIC_SHARE	gutils.h	/^  G_USER_DIRECTORY_PUBLIC_SHARE,$/;"	e	enum:__anon41
G_USER_DIRECTORY_TEMPLATES	gutils.h	/^  G_USER_DIRECTORY_TEMPLATES,$/;"	e	enum:__anon41
G_USER_DIRECTORY_VIDEOS	gutils.h	/^  G_USER_DIRECTORY_VIDEOS,$/;"	e	enum:__anon41
G_USER_N_DIRECTORIES	gutils.h	/^  G_USER_N_DIRECTORIES$/;"	e	enum:__anon41
G_VARIANT_CLASS_ARRAY	gvariant.h	/^  G_VARIANT_CLASS_ARRAY         = 'a',$/;"	e	enum:__anon39
G_VARIANT_CLASS_BOOLEAN	gvariant.h	/^  G_VARIANT_CLASS_BOOLEAN       = 'b',$/;"	e	enum:__anon39
G_VARIANT_CLASS_BYTE	gvariant.h	/^  G_VARIANT_CLASS_BYTE          = 'y',$/;"	e	enum:__anon39
G_VARIANT_CLASS_DICT_ENTRY	gvariant.h	/^  G_VARIANT_CLASS_DICT_ENTRY    = '{'$/;"	e	enum:__anon39
G_VARIANT_CLASS_DOUBLE	gvariant.h	/^  G_VARIANT_CLASS_DOUBLE        = 'd',$/;"	e	enum:__anon39
G_VARIANT_CLASS_HANDLE	gvariant.h	/^  G_VARIANT_CLASS_HANDLE        = 'h',$/;"	e	enum:__anon39
G_VARIANT_CLASS_INT16	gvariant.h	/^  G_VARIANT_CLASS_INT16         = 'n',$/;"	e	enum:__anon39
G_VARIANT_CLASS_INT32	gvariant.h	/^  G_VARIANT_CLASS_INT32         = 'i',$/;"	e	enum:__anon39
G_VARIANT_CLASS_INT64	gvariant.h	/^  G_VARIANT_CLASS_INT64         = 'x',$/;"	e	enum:__anon39
G_VARIANT_CLASS_MAYBE	gvariant.h	/^  G_VARIANT_CLASS_MAYBE         = 'm',$/;"	e	enum:__anon39
G_VARIANT_CLASS_OBJECT_PATH	gvariant.h	/^  G_VARIANT_CLASS_OBJECT_PATH   = 'o',$/;"	e	enum:__anon39
G_VARIANT_CLASS_SIGNATURE	gvariant.h	/^  G_VARIANT_CLASS_SIGNATURE     = 'g',$/;"	e	enum:__anon39
G_VARIANT_CLASS_STRING	gvariant.h	/^  G_VARIANT_CLASS_STRING        = 's',$/;"	e	enum:__anon39
G_VARIANT_CLASS_TUPLE	gvariant.h	/^  G_VARIANT_CLASS_TUPLE         = '(',$/;"	e	enum:__anon39
G_VARIANT_CLASS_UINT16	gvariant.h	/^  G_VARIANT_CLASS_UINT16        = 'q',$/;"	e	enum:__anon39
G_VARIANT_CLASS_UINT32	gvariant.h	/^  G_VARIANT_CLASS_UINT32        = 'u',$/;"	e	enum:__anon39
G_VARIANT_CLASS_UINT64	gvariant.h	/^  G_VARIANT_CLASS_UINT64        = 't',$/;"	e	enum:__anon39
G_VARIANT_CLASS_VARIANT	gvariant.h	/^  G_VARIANT_CLASS_VARIANT       = 'v',$/;"	e	enum:__anon39
G_VARIANT_PARSE_ERROR	gvariant.h	231;"	d
G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED	gvariant.h	/^  G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE	gvariant.h	/^  G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED	gvariant.h	/^  G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_FAILED	gvariant.h	/^  G_VARIANT_PARSE_ERROR_FAILED,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END	gvariant.h	/^  G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_INVALID_CHARACTER	gvariant.h	/^  G_VARIANT_PARSE_ERROR_INVALID_CHARACTER,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING	gvariant.h	/^  G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH	gvariant.h	/^  G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE	gvariant.h	/^  G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING	gvariant.h	/^  G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE	gvariant.h	/^  G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE	gvariant.h	/^  G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG	gvariant.h	/^  G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_TYPE_ERROR	gvariant.h	/^  G_VARIANT_PARSE_ERROR_TYPE_ERROR,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN	gvariant.h	/^  G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD	gvariant.h	/^  G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT	gvariant.h	/^  G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT,$/;"	e	enum:__anon40
G_VARIANT_PARSE_ERROR_VALUE_EXPECTED	gvariant.h	/^  G_VARIANT_PARSE_ERROR_VALUE_EXPECTED$/;"	e	enum:__anon40
G_VARIANT_TYPE	gvarianttype.h	291;"	d
G_VARIANT_TYPE	gvarianttype.h	293;"	d
G_VARIANT_TYPE_ANY	gvarianttype.h	185;"	d
G_VARIANT_TYPE_ARRAY	gvarianttype.h	207;"	d
G_VARIANT_TYPE_BASIC	gvarianttype.h	193;"	d
G_VARIANT_TYPE_BOOLEAN	gvarianttype.h	51;"	d
G_VARIANT_TYPE_BYTE	gvarianttype.h	58;"	d
G_VARIANT_TYPE_BYTESTRING	gvarianttype.h	256;"	d
G_VARIANT_TYPE_BYTESTRING_ARRAY	gvarianttype.h	263;"	d
G_VARIANT_TYPE_DICTIONARY	gvarianttype.h	232;"	d
G_VARIANT_TYPE_DICT_ENTRY	gvarianttype.h	223;"	d
G_VARIANT_TYPE_DOUBLE	gvarianttype.h	117;"	d
G_VARIANT_TYPE_HANDLE	gvarianttype.h	169;"	d
G_VARIANT_TYPE_INT16	gvarianttype.h	65;"	d
G_VARIANT_TYPE_INT32	gvarianttype.h	81;"	d
G_VARIANT_TYPE_INT64	gvarianttype.h	97;"	d
G_VARIANT_TYPE_MAYBE	gvarianttype.h	200;"	d
G_VARIANT_TYPE_OBJECT_PATH	gvarianttype.h	137;"	d
G_VARIANT_TYPE_OBJECT_PATH_ARRAY	gvarianttype.h	246;"	d
G_VARIANT_TYPE_SIGNATURE	gvarianttype.h	149;"	d
G_VARIANT_TYPE_STRING	gvarianttype.h	124;"	d
G_VARIANT_TYPE_STRING_ARRAY	gvarianttype.h	239;"	d
G_VARIANT_TYPE_TUPLE	gvarianttype.h	215;"	d
G_VARIANT_TYPE_UINT16	gvarianttype.h	73;"	d
G_VARIANT_TYPE_UINT32	gvarianttype.h	89;"	d
G_VARIANT_TYPE_UINT64	gvarianttype.h	106;"	d
G_VARIANT_TYPE_UNIT	gvarianttype.h	177;"	d
G_VARIANT_TYPE_VARDICT	gvarianttype.h	273;"	d
G_VARIANT_TYPE_VARIANT	gvarianttype.h	157;"	d
G_VA_COPY	gutils.h	44;"	d
G_WIN32_DLLMAIN_FOR_DLL_NAME	gutils.h	344;"	d
G_WIN32_HAVE_WIDECHAR_API	gwin32.h	112;"	d
G_WIN32_IS_NT_BASED	gwin32.h	111;"	d
G_WIN32_MSG_HANDLE	giochannel.h	319;"	d
MAX	gmacros.h	217;"	d
MAX	gmacros.h	218;"	d
MAXPATHLEN	gwin32.h	41;"	d
MIN	gmacros.h	220;"	d
MIN	gmacros.h	221;"	d
NC_	gi18n-lib.h	36;"	d
NC_	gi18n.h	32;"	d
NULL	gmacros.h	203;"	d
NULL	gmacros.h	205;"	d
N_	gi18n-lib.h	34;"	d
N_	gi18n.h	30;"	d
Q_	gi18n-lib.h	33;"	d
Q_	gi18n.h	29;"	d
TRUE	gmacros.h	214;"	d
_	gi18n-lib.h	32;"	d
_	gi18n.h	28;"	d
_GArray	garray.h	/^struct _GArray$/;"	s
_GByteArray	garray.h	/^struct _GByteArray$/;"	s
_GCompletion	deprecated/gcompletion.h	/^struct _GCompletion$/;"	s
_GCond	gthread.h	/^struct _GCond$/;"	s
_GDate	gdate.h	/^struct _GDate$/;"	s
_GDebugKey	gutils.h	/^struct _GDebugKey$/;"	s
_GDoubleIEEE754	gtypes.h	/^union _GDoubleIEEE754$/;"	u
_GError	gerror.h	/^struct _GError$/;"	s
_GFloatIEEE754	gtypes.h	/^union _GFloatIEEE754$/;"	u
_GHashTableIter	ghash.h	/^struct _GHashTableIter$/;"	s
_GHook	ghook.h	/^struct _GHook$/;"	s
_GHookList	ghook.h	/^struct _GHookList$/;"	s
_GIOChannel	giochannel.h	/^struct _GIOChannel$/;"	s
_GIOFuncs	giochannel.h	/^struct _GIOFuncs$/;"	s
_GList	glist.h	/^struct _GList$/;"	s
_GMarkupParser	gmarkup.h	/^struct _GMarkupParser$/;"	s
_GMemVTable	gmem.h	/^struct _GMemVTable {$/;"	s
_GMutex	gthread.h	/^union _GMutex$/;"	u
_GNode	gnode.h	/^struct _GNode$/;"	s
_GOnce	gthread.h	/^struct _GOnce$/;"	s
_GOptionEntry	goption.h	/^struct _GOptionEntry$/;"	s
_GPollFD	gpoll.h	/^struct _GPollFD$/;"	s
_GPrivate	gthread.h	/^struct _GPrivate$/;"	s
_GPtrArray	garray.h	/^struct _GPtrArray$/;"	s
_GQueue	gqueue.h	/^struct _GQueue$/;"	s
_GRWLock	gthread.h	/^struct _GRWLock$/;"	s
_GRecMutex	gthread.h	/^struct _GRecMutex$/;"	s
_GSList	gslist.h	/^struct _GSList$/;"	s
_GScanner	gscanner.h	/^struct	_GScanner$/;"	s
_GScannerConfig	gscanner.h	/^struct	_GScannerConfig$/;"	s
_GSource	gmain.h	/^struct _GSource$/;"	s
_GSourceCallbackFuncs	gmain.h	/^struct _GSourceCallbackFuncs$/;"	s
_GSourceFuncs	gmain.h	/^struct _GSourceFuncs$/;"	s
_GStaticPrivate	deprecated/gthread.h	/^struct _GStaticPrivate$/;"	s
_GStaticRWLock	deprecated/gthread.h	/^struct _GStaticRWLock$/;"	s
_GStaticRecMutex	deprecated/gthread.h	/^struct _GStaticRecMutex$/;"	s
_GString	gstring.h	/^struct _GString$/;"	s
_GThread	deprecated/gthread.h	/^struct  _GThread$/;"	s
_GThreadFunctions	deprecated/gthread.h	/^struct _GThreadFunctions$/;"	s
_GThreadPool	gthreadpool.h	/^struct _GThreadPool$/;"	s
_GTimeVal	gtypes.h	/^struct _GTimeVal$/;"	s
_GTokenValue	gscanner.h	/^union	_GTokenValue$/;"	u
_GTrashStack	gtrashstack.h	/^struct _GTrashStack$/;"	s
_GTuples	deprecated/grel.h	/^struct _GTuples$/;"	s
_GVariantBuilder	gvariant.h	/^struct _GVariantBuilder {$/;"	s
_GVariantIter	gvariant.h	/^struct _GVariantIter {$/;"	s
_G_BOOLEAN_EXPR	gmacros.h	287;"	d
_G_NEW	gmem.h	101;"	d
_G_NEW	gmem.h	134;"	d
_G_RENEW	gmem.h	115;"	d
_G_RENEW	gmem.h	136;"	d
__G_ALLOCATOR_H__	deprecated/gallocator.h	23;"	d
__G_ALLOCA_H__	galloca.h	32;"	d
__G_ARRAY_H__	garray.h	32;"	d
__G_ASYNCQUEUE_H__	gasyncqueue.h	32;"	d
__G_ATOMIC_H__	gatomic.h	27;"	d
__G_BACKTRACE_H__	gbacktrace.h	32;"	d
__G_BASE64_H__	gbase64.h	26;"	d
__G_BITLOCK_H__	gbitlock.h	24;"	d
__G_BOOKMARK_FILE_H__	gbookmarkfile.h	25;"	d
__G_BYTES_H__	gbytes.h	29;"	d
__G_CACHE_H__	deprecated/gcache.h	32;"	d
__G_CHARSET_H__	gcharset.h	26;"	d
__G_CHECKSUM_H__	gchecksum.h	26;"	d
__G_COMPLETION_H__	deprecated/gcompletion.h	32;"	d
__G_CONVERT_H__	gconvert.h	32;"	d
__G_DATASET_H__	gdataset.h	32;"	d
__G_DATE_H__	gdate.h	32;"	d
__G_DATE_TIME_H__	gdatetime.h	31;"	d
__G_DEPRECATED_MAIN_H__	deprecated/gmain.h	32;"	d
__G_DEPRECATED_THREAD_H__	deprecated/gthread.h	32;"	d
__G_DIR_H__	gdir.h	29;"	d
__G_ENVIRON_H__	genviron.h	32;"	d
__G_ERROR_H__	gerror.h	26;"	d
__G_FILEUTILS_H__	gfileutils.h	26;"	d
__G_GETTEXT_H__	ggettext.h	32;"	d
__G_HASH_H__	ghash.h	32;"	d
__G_HMAC_H__	ghmac.h	26;"	d
__G_HOOK_H__	ghook.h	32;"	d
__G_HOST_UTILS_H__	ghostutils.h	25;"	d
__G_I18N_H__	gi18n.h	21;"	d
__G_I18N_LIB_H__	gi18n-lib.h	21;"	d
__G_IOCHANNEL_H__	giochannel.h	32;"	d
__G_KEY_FILE_H__	gkeyfile.h	28;"	d
__G_LIST_H__	glist.h	32;"	d
__G_MACROS_H__	gmacros.h	36;"	d
__G_MAIN_H__	gmain.h	25;"	d
__G_MAPPED_FILE_H__	gmappedfile.h	27;"	d
__G_MARKUP_H__	gmarkup.h	26;"	d
__G_MEM_H__	gmem.h	32;"	d
__G_MESSAGES_H__	gmessages.h	32;"	d
__G_NODE_H__	gnode.h	32;"	d
__G_OPTION_H__	goption.h	26;"	d
__G_PATTERN_H__	gpattern.h	25;"	d
__G_POLL_H__	gpoll.h	25;"	d
__G_PRIMES_H__	gprimes.h	32;"	d
__G_PRINTF_H__	gprintf.h	21;"	d
__G_QSORT_H__	gqsort.h	32;"	d
__G_QUARK_H__	gquark.h	32;"	d
__G_QUEUE_H__	gqueue.h	32;"	d
__G_RAND_H__	grand.h	32;"	d
__G_REGEX_H__	gregex.h	27;"	d
__G_REL_H__	deprecated/grel.h	32;"	d
__G_SCANNER_H__	gscanner.h	32;"	d
__G_SEQUENCE_H__	gsequence.h	26;"	d
__G_SHELL_H__	gshell.h	26;"	d
__G_SLICE_H__	gslice.h	25;"	d
__G_SLIST_H__	gslist.h	32;"	d
__G_SPAWN_H__	gspawn.h	26;"	d
__G_STDIO_H__	gstdio.h	22;"	d
__G_STRFUNCS_H__	gstrfuncs.h	32;"	d
__G_STRINGCHUNK_H__	gstringchunk.h	32;"	d
__G_STRING_H__	gstring.h	32;"	d
__G_TEST_UTILS_H__	gtestutils.h	26;"	d
__G_THREADPOOL_H__	gthreadpool.h	32;"	d
__G_THREAD_H__	gthread.h	32;"	d
__G_TIMER_H__	gtimer.h	32;"	d
__G_TIME_ZONE_H__	gtimezone.h	27;"	d
__G_TRASH_STACK_H__	gtrashstack.h	32;"	d
__G_TREE_H__	gtree.h	32;"	d
__G_TYPES_H__	gtypes.h	32;"	d
__G_UNICODE_H__	gunicode.h	27;"	d
__G_URI_FUNCS_H__	gurifuncs.h	28;"	d
__G_UTILS_H__	gutils.h	32;"	d
__G_VARIANT_H__	gvariant.h	28;"	d
__G_VARIANT_TYPE_H__	gvarianttype.h	28;"	d
__G_VERSION_H__	gversion.h	32;"	d
__G_VERSION_MACROS_H__	gversionmacros.h	32;"	d
__G_WIN32_H__	gwin32.h	32;"	d
_g_log_fallback_handler	gmessages.h	/^G_GNUC_INTERNAL void	_g_log_fallback_handler	(const gchar   *log_domain,$/;"	p
_g_utf8_make_valid	gunicode.h	/^gchar *_g_utf8_make_valid (const gchar *name);$/;"	p
_g_win32_get_system_data_dirs	gutils.h	/^_g_win32_get_system_data_dirs (void)$/;"	f
alloca	galloca.h	/^char *alloca ();$/;"	p
alloca	galloca.h	38;"	d
alloca	galloca.h	39;"	d
alloca	galloca.h	46;"	d
allocated_len	gstring.h	/^  gsize allocated_len;$/;"	m	struct:_GString
arg	goption.h	/^  GOptionArg   arg;$/;"	m	struct:_GOptionEntry
arg_data	goption.h	/^  gpointer     arg_data;$/;"	m	struct:_GOptionEntry
arg_description	goption.h	/^  const gchar *arg_description;$/;"	m	struct:_GOptionEntry
atexit	gutils.h	/^int atexit (void (*)(void));$/;"	p
biased_exponent	gtypes.h	/^    guint biased_exponent : 11;$/;"	m	struct:_GDoubleIEEE754::__anon30
biased_exponent	gtypes.h	/^    guint biased_exponent : 11;$/;"	m	struct:_GDoubleIEEE754::__anon32
biased_exponent	gtypes.h	/^    guint biased_exponent : 8;$/;"	m	struct:_GFloatIEEE754::__anon29
biased_exponent	gtypes.h	/^    guint biased_exponent : 8;$/;"	m	struct:_GFloatIEEE754::__anon31
buf_size	giochannel.h	/^  gsize buf_size;$/;"	m	struct:_GIOChannel
buffer	gscanner.h	/^  gchar			*buffer;$/;"	m	struct:_GScanner
cache	deprecated/gcompletion.h	/^  GList* cache;$/;"	m	struct:_GCompletion
callback_data	gmain.h	/^  gpointer callback_data;$/;"	m	struct:_GSource
callback_funcs	gmain.h	/^  GSourceCallbackFuncs *callback_funcs;$/;"	m	struct:_GSource
calloc	gmem.h	/^  gpointer (*calloc)      (gsize    n_blocks,$/;"	m	struct:_GMemVTable
case_sensitive	gscanner.h	/^  guint		case_sensitive : 1;$/;"	m	struct:_GScannerConfig
char_2_token	gscanner.h	/^  guint		char_2_token : 1;		\/* return G_TOKEN_CHAR? *\/$/;"	m	struct:_GScannerConfig
check	gmain.h	/^  gboolean (*check)    (GSource    *source);$/;"	m	struct:_GSourceFuncs
children	gnode.h	/^  GNode	  *children;$/;"	m	struct:_GNode
close_on_unref	giochannel.h	/^  guint close_on_unref : 1;	\/* Close the channel on final unref *\/$/;"	m	struct:_GIOChannel
closure_callback	gmain.h	/^  GSourceFunc     closure_callback;        $/;"	m	struct:_GSourceFuncs
closure_marshal	gmain.h	/^  GSourceDummyMarshal closure_marshal; \/* Really is of type GClosureMarshal *\/$/;"	m	struct:_GSourceFuncs
code	gerror.h	/^  gint         code;$/;"	m	struct:_GError
cond_broadcast	deprecated/gthread.h	/^  void     (*cond_broadcast)      (GCond                *cond);$/;"	m	struct:_GThreadFunctions
cond_free	deprecated/gthread.h	/^  void      (*cond_free)          (GCond                *cond);$/;"	m	struct:_GThreadFunctions
cond_new	deprecated/gthread.h	/^  GCond*   (*cond_new)            (void);$/;"	m	struct:_GThreadFunctions
cond_signal	deprecated/gthread.h	/^  void     (*cond_signal)         (GCond                *cond);$/;"	m	struct:_GThreadFunctions
cond_timed_wait	deprecated/gthread.h	/^  gboolean (*cond_timed_wait)     (GCond                *cond,$/;"	m	struct:_GThreadFunctions
cond_wait	deprecated/gthread.h	/^  void     (*cond_wait)           (GCond                *cond,$/;"	m	struct:_GThreadFunctions
config	gscanner.h	/^  GScannerConfig	*config;$/;"	m	struct:_GScanner
context	gmain.h	/^  GMainContext *context;$/;"	m	struct:_GSource
cpair_comment_single	gscanner.h	/^  gchar		*cpair_comment_single;		\/* default: "#\\n" *\/$/;"	m	struct:_GScannerConfig
cset_identifier_first	gscanner.h	/^  gchar		*cset_identifier_first;$/;"	m	struct:_GScannerConfig
cset_identifier_nth	gscanner.h	/^  gchar		*cset_identifier_nth;$/;"	m	struct:_GScannerConfig
cset_skip_characters	gscanner.h	/^  gchar		*cset_skip_characters;		\/* default: " \\t\\n" *\/$/;"	m	struct:_GScannerConfig
data	deprecated/gthread.h	/^  gpointer data;$/;"	m	struct:_GThread
data	garray.h	/^  gchar *data;$/;"	m	struct:_GArray
data	garray.h	/^  guint8 *data;$/;"	m	struct:_GByteArray
data	ghook.h	/^  gpointer	 data;$/;"	m	struct:_GHook
data	glist.h	/^  gpointer data;$/;"	m	struct:_GList
data	gnode.h	/^  gpointer data;$/;"	m	struct:_GNode
data	gslist.h	/^  gpointer data;$/;"	m	struct:_GSList
data	gtestutils.h	/^  GString     *data;$/;"	m	struct:__anon15
day	gdate.h	/^  guint day    : 6;$/;"	m	struct:_GDate
depth	deprecated/gthread.h	/^  guint depth;$/;"	m	struct:_GStaticRecMutex
description	goption.h	/^  const gchar *description;$/;"	m	struct:_GOptionEntry
destroy	ghook.h	/^  GDestroyNotify destroy;$/;"	m	struct:_GHook
dispatch	gmain.h	/^  gboolean (*dispatch) (GSource    *source,$/;"	m	struct:_GSourceFuncs
dmy	gdate.h	/^  guint dmy    : 1;    \/* dmy is valid *\/$/;"	m	struct:_GDate
do_encode	giochannel.h	/^  guint do_encode      : 1;	\/* The encoding uses the GIConv coverters *\/$/;"	m	struct:_GIOChannel
domain	gerror.h	/^  GQuark       domain;$/;"	m	struct:_GError
dummy	deprecated/gthread.h	/^    gdouble dummy;$/;"	m	union:_GStaticRecMutex::__anon55
dummy	ghook.h	/^  gpointer	    dummy[2];$/;"	m	struct:_GHookList
dummy1	ghash.h	/^  gpointer      dummy1;$/;"	m	struct:_GHashTableIter
dummy2	ghash.h	/^  gpointer      dummy2;$/;"	m	struct:_GHashTableIter
dummy3	ghash.h	/^  gpointer      dummy3;$/;"	m	struct:_GHashTableIter
dummy3	ghook.h	/^  gpointer	    dummy3;$/;"	m	struct:_GHookList
dummy4	ghash.h	/^  int           dummy4;$/;"	m	struct:_GHashTableIter
dummy5	ghash.h	/^  gboolean      dummy5;$/;"	m	struct:_GHashTableIter
dummy6	ghash.h	/^  gpointer      dummy6;$/;"	m	struct:_GHashTableIter
encoded_read_buf	giochannel.h	/^  GString *encoded_read_buf;    \/* Channel data converted to UTF-8 *\/$/;"	m	struct:_GIOChannel
encoding	giochannel.h	/^  gchar *encoding;$/;"	m	struct:_GIOChannel
end_element	gmarkup.h	/^  void (*end_element)    (GMarkupParseContext *context,$/;"	m	struct:_GMarkupParser
error	gmarkup.h	/^  void (*error)          (GMarkupParseContext *context,$/;"	m	struct:_GMarkupParser
events	gpoll.h	/^  gushort 	events;$/;"	m	struct:_GPollFD
exclusive	gthreadpool.h	/^  gboolean exclusive;$/;"	m	struct:_GThreadPool
fd	gpoll.h	/^  gint64	fd;$/;"	m	struct:_GPollFD
finalize	gmain.h	/^  void     (*finalize) (GSource    *source); \/* Can be NULL *\/$/;"	m	struct:_GSourceFuncs
finalize_hook	ghook.h	/^  GHookFinalizeFunc finalize_hook;$/;"	m	struct:_GHookList
flags	ghook.h	/^  guint		 flags;$/;"	m	struct:_GHook
flags	gmain.h	/^  guint flags;$/;"	m	struct:_GSource
flags	goption.h	/^  gint         flags;$/;"	m	struct:_GOptionEntry
free	gmem.h	/^  void     (*free)        (gpointer mem);$/;"	m	struct:_GMemVTable
func	deprecated/gcompletion.h	/^  GCompletionFunc func;$/;"	m	struct:_GCompletion
func	deprecated/gthread.h	/^  GThreadFunc func;$/;"	m	struct:_GThread
func	ghook.h	/^  gpointer	 func;$/;"	m	struct:_GHook
func	gthreadpool.h	/^  GFunc func;$/;"	m	struct:_GThreadPool
funcs	giochannel.h	/^  GIOFuncs *funcs;$/;"	m	struct:_GIOChannel
future	gthread.h	/^  gpointer future[2];$/;"	m	struct:_GPrivate
g_access	gstdio.h	/^int g_access    (const gchar *filename,$/;"	p
g_access	gstdio.h	/^int g_access (const gchar *filename,$/;"	p
g_alloca	galloca.h	98;"	d
g_allocator_free	deprecated/gallocator.h	/^void            g_allocator_free        (GAllocator   *allocator);$/;"	p
g_allocator_new	deprecated/gallocator.h	/^GAllocator *    g_allocator_new         (const gchar  *name,$/;"	p
g_array_append_val	garray.h	66;"	d
g_array_append_vals	garray.h	/^GArray* g_array_append_vals       (GArray           *array,$/;"	p
g_array_free	garray.h	/^gchar*  g_array_free              (GArray           *array,$/;"	p
g_array_get_element_size	garray.h	/^guint   g_array_get_element_size  (GArray           *array);$/;"	p
g_array_index	garray.h	69;"	d
g_array_insert_val	garray.h	68;"	d
g_array_insert_vals	garray.h	/^GArray* g_array_insert_vals       (GArray           *array,$/;"	p
g_array_new	garray.h	/^GArray* g_array_new               (gboolean          zero_terminated,$/;"	p
g_array_prepend_val	garray.h	67;"	d
g_array_prepend_vals	garray.h	/^GArray* g_array_prepend_vals      (GArray           *array,$/;"	p
g_array_ref	garray.h	/^GArray *g_array_ref               (GArray           *array);$/;"	p
g_array_remove_index	garray.h	/^GArray* g_array_remove_index      (GArray           *array,$/;"	p
g_array_remove_index_fast	garray.h	/^GArray* g_array_remove_index_fast (GArray           *array,$/;"	p
g_array_remove_range	garray.h	/^GArray* g_array_remove_range      (GArray           *array,$/;"	p
g_array_set_clear_func	garray.h	/^void    g_array_set_clear_func    (GArray           *array,$/;"	p
g_array_set_size	garray.h	/^GArray* g_array_set_size          (GArray           *array,$/;"	p
g_array_sized_new	garray.h	/^GArray* g_array_sized_new         (gboolean          zero_terminated,$/;"	p
g_array_sort	garray.h	/^void    g_array_sort              (GArray           *array,$/;"	p
g_array_sort_with_data	garray.h	/^void    g_array_sort_with_data    (GArray           *array,$/;"	p
g_array_unref	garray.h	/^void    g_array_unref             (GArray           *array);$/;"	p
g_ascii_dtostr	gstrfuncs.h	/^gchar *               g_ascii_dtostr   (gchar        *buffer,$/;"	p
g_ascii_formatd	gstrfuncs.h	/^gchar *               g_ascii_formatd  (gchar        *buffer,$/;"	p
g_ascii_isalnum	gstrfuncs.h	57;"	d
g_ascii_isalpha	gstrfuncs.h	60;"	d
g_ascii_iscntrl	gstrfuncs.h	63;"	d
g_ascii_isdigit	gstrfuncs.h	66;"	d
g_ascii_isgraph	gstrfuncs.h	69;"	d
g_ascii_islower	gstrfuncs.h	72;"	d
g_ascii_isprint	gstrfuncs.h	75;"	d
g_ascii_ispunct	gstrfuncs.h	78;"	d
g_ascii_isspace	gstrfuncs.h	81;"	d
g_ascii_isupper	gstrfuncs.h	84;"	d
g_ascii_isxdigit	gstrfuncs.h	87;"	d
g_ascii_strcasecmp	gstrfuncs.h	/^gint                  g_ascii_strcasecmp  (const gchar *s1,$/;"	p
g_ascii_strncasecmp	gstrfuncs.h	/^gint                  g_ascii_strncasecmp (const gchar *s1,$/;"	p
g_ascii_strtod	gstrfuncs.h	/^gdouble	              g_ascii_strtod   (const gchar  *nptr,$/;"	p
g_ascii_strtoll	gstrfuncs.h	/^gint64		      g_ascii_strtoll  (const gchar *nptr,$/;"	p
g_ascii_strtoull	gstrfuncs.h	/^guint64		      g_ascii_strtoull (const gchar *nptr,$/;"	p
g_ascii_table	gstrfuncs.h	/^GLIB_VAR const guint16 * const g_ascii_table;$/;"	v
g_assert	gtestutils.h	71;"	d
g_assert	gtestutils.h	74;"	d
g_assert_cmpfloat	gtestutils.h	59;"	d
g_assert_cmphex	gtestutils.h	55;"	d
g_assert_cmpint	gtestutils.h	47;"	d
g_assert_cmpstr	gtestutils.h	43;"	d
g_assert_cmpuint	gtestutils.h	51;"	d
g_assert_error	gtestutils.h	66;"	d
g_assert_no_error	gtestutils.h	63;"	d
g_assert_not_reached	gtestutils.h	70;"	d
g_assert_not_reached	gtestutils.h	73;"	d
g_async_queue_length	gasyncqueue.h	/^gint         g_async_queue_length               (GAsyncQueue      *queue);$/;"	p
g_async_queue_length_unlocked	gasyncqueue.h	/^gint         g_async_queue_length_unlocked      (GAsyncQueue      *queue);$/;"	p
g_async_queue_lock	gasyncqueue.h	/^void         g_async_queue_lock                 (GAsyncQueue      *queue);$/;"	p
g_async_queue_new	gasyncqueue.h	/^GAsyncQueue *g_async_queue_new                  (void);$/;"	p
g_async_queue_new_full	gasyncqueue.h	/^GAsyncQueue *g_async_queue_new_full             (GDestroyNotify item_free_func);$/;"	p
g_async_queue_pop	gasyncqueue.h	/^gpointer     g_async_queue_pop                  (GAsyncQueue      *queue);$/;"	p
g_async_queue_pop_unlocked	gasyncqueue.h	/^gpointer     g_async_queue_pop_unlocked         (GAsyncQueue      *queue);$/;"	p
g_async_queue_push	gasyncqueue.h	/^void         g_async_queue_push                 (GAsyncQueue      *queue,$/;"	p
g_async_queue_push_sorted	gasyncqueue.h	/^void         g_async_queue_push_sorted          (GAsyncQueue      *queue,$/;"	p
g_async_queue_push_sorted_unlocked	gasyncqueue.h	/^void         g_async_queue_push_sorted_unlocked (GAsyncQueue      *queue,$/;"	p
g_async_queue_push_unlocked	gasyncqueue.h	/^void         g_async_queue_push_unlocked        (GAsyncQueue      *queue,$/;"	p
g_async_queue_ref	gasyncqueue.h	/^GAsyncQueue *g_async_queue_ref                  (GAsyncQueue      *queue);$/;"	p
g_async_queue_sort	gasyncqueue.h	/^void         g_async_queue_sort                 (GAsyncQueue      *queue,$/;"	p
g_async_queue_sort_unlocked	gasyncqueue.h	/^void         g_async_queue_sort_unlocked        (GAsyncQueue      *queue,$/;"	p
g_async_queue_timed_pop_unlocked	gasyncqueue.h	/^gpointer     g_async_queue_timed_pop_unlocked   (GAsyncQueue      *queue,$/;"	v
g_async_queue_timeout_pop	gasyncqueue.h	/^gpointer     g_async_queue_timeout_pop          (GAsyncQueue      *queue,$/;"	p
g_async_queue_timeout_pop_unlocked	gasyncqueue.h	/^gpointer     g_async_queue_timeout_pop_unlocked (GAsyncQueue      *queue,$/;"	p
g_async_queue_try_pop	gasyncqueue.h	/^gpointer     g_async_queue_try_pop              (GAsyncQueue      *queue);$/;"	p
g_async_queue_try_pop_unlocked	gasyncqueue.h	/^gpointer     g_async_queue_try_pop_unlocked     (GAsyncQueue      *queue);$/;"	p
g_async_queue_unlock	gasyncqueue.h	/^void         g_async_queue_unlock               (GAsyncQueue      *queue);$/;"	p
g_async_queue_unref	gasyncqueue.h	/^void         g_async_queue_unref                (GAsyncQueue      *queue);$/;"	p
g_async_queue_unref_and_unlock	gasyncqueue.h	/^void         g_async_queue_unref_and_unlock     (GAsyncQueue      *queue);$/;"	v
g_atexit	gutils.h	/^void	g_atexit		(GVoidFunc    func);$/;"	p
g_atexit	gutils.h	249;"	d
g_atomic_int_add	gatomic.h	/^gint                    g_atomic_int_add                      (volatile gint  *atomic,$/;"	p
g_atomic_int_add	gatomic.h	105;"	d
g_atomic_int_and	gatomic.h	/^guint                   g_atomic_int_and                      (volatile guint *atomic,$/;"	p
g_atomic_int_and	gatomic.h	111;"	d
g_atomic_int_compare_and_exchange	gatomic.h	/^gboolean                g_atomic_int_compare_and_exchange     (volatile gint  *atomic,$/;"	p
g_atomic_int_compare_and_exchange	gatomic.h	99;"	d
g_atomic_int_dec_and_test	gatomic.h	/^gboolean                g_atomic_int_dec_and_test             (volatile gint  *atomic);$/;"	p
g_atomic_int_dec_and_test	gatomic.h	93;"	d
g_atomic_int_get	gatomic.h	/^gint                    g_atomic_int_get                      (volatile gint  *atomic);$/;"	p
g_atomic_int_get	gatomic.h	73;"	d
g_atomic_int_inc	gatomic.h	/^void                    g_atomic_int_inc                      (volatile gint  *atomic);$/;"	p
g_atomic_int_inc	gatomic.h	87;"	d
g_atomic_int_or	gatomic.h	/^guint                   g_atomic_int_or                       (volatile guint *atomic,$/;"	p
g_atomic_int_or	gatomic.h	117;"	d
g_atomic_int_set	gatomic.h	/^void                    g_atomic_int_set                      (volatile gint  *atomic,$/;"	p
g_atomic_int_set	gatomic.h	80;"	d
g_atomic_int_xor	gatomic.h	/^guint                   g_atomic_int_xor                      (volatile guint *atomic,$/;"	p
g_atomic_int_xor	gatomic.h	123;"	d
g_atomic_pointer_add	gatomic.h	/^gssize                  g_atomic_pointer_add                  (volatile void  *atomic,$/;"	p
g_atomic_pointer_add	gatomic.h	149;"	d
g_atomic_pointer_and	gatomic.h	/^gsize                   g_atomic_pointer_and                  (volatile void  *atomic,$/;"	p
g_atomic_pointer_and	gatomic.h	156;"	d
g_atomic_pointer_compare_and_exchange	gatomic.h	/^gboolean                g_atomic_pointer_compare_and_exchange (volatile void  *atomic,$/;"	p
g_atomic_pointer_compare_and_exchange	gatomic.h	143;"	d
g_atomic_pointer_get	gatomic.h	/^gpointer                g_atomic_pointer_get                  (volatile void  *atomic);$/;"	p
g_atomic_pointer_get	gatomic.h	130;"	d
g_atomic_pointer_or	gatomic.h	/^gsize                   g_atomic_pointer_or                   (volatile void  *atomic,$/;"	p
g_atomic_pointer_or	gatomic.h	163;"	d
g_atomic_pointer_set	gatomic.h	/^void                    g_atomic_pointer_set                  (volatile void  *atomic,$/;"	p
g_atomic_pointer_set	gatomic.h	136;"	d
g_atomic_pointer_xor	gatomic.h	/^gsize                   g_atomic_pointer_xor                  (volatile void  *atomic,$/;"	p
g_atomic_pointer_xor	gatomic.h	170;"	d
g_base64_decode_inplace	gbase64.h	/^guchar *g_base64_decode_inplace (gchar        *text,$/;"	p
g_base64_decode_step	gbase64.h	/^gsize   g_base64_decode_step    (const gchar  *in,$/;"	p
g_base64_encode_close	gbase64.h	/^gsize   g_base64_encode_close   (gboolean      break_lines,$/;"	p
g_base64_encode_step	gbase64.h	/^gsize   g_base64_encode_step    (const guchar *in,$/;"	p
g_bit_lock	gbitlock.h	/^void      g_bit_lock                      (volatile gint *address,$/;"	p
g_bit_nth_lsf	gutils.h	/^g_bit_nth_lsf (gulong mask,$/;"	f
g_bit_nth_msf	gutils.h	/^g_bit_nth_msf (gulong mask,$/;"	f
g_bit_storage	gutils.h	/^g_bit_storage (gulong number)$/;"	f
g_bit_trylock	gbitlock.h	/^gboolean  g_bit_trylock                   (volatile gint *address,$/;"	p
g_bit_unlock	gbitlock.h	/^void      g_bit_unlock                    (volatile gint *address,$/;"	p
g_blow_chunks	deprecated/gallocator.h	/^void            g_blow_chunks           (void);$/;"	p
g_bookmark_file_add_application	gbookmarkfile.h	/^void           g_bookmark_file_add_application     (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_add_group	gbookmarkfile.h	/^void           g_bookmark_file_add_group           (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_error_quark	gbookmarkfile.h	/^GQuark g_bookmark_file_error_quark (void);$/;"	p
g_bookmark_file_free	gbookmarkfile.h	/^void           g_bookmark_file_free                (GBookmarkFile  *bookmark);$/;"	p
g_bookmark_file_get_added	gbookmarkfile.h	/^time_t         g_bookmark_file_get_added           (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_get_app_info	gbookmarkfile.h	/^gboolean       g_bookmark_file_get_app_info        (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_get_icon	gbookmarkfile.h	/^gboolean       g_bookmark_file_get_icon            (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_get_is_private	gbookmarkfile.h	/^gboolean       g_bookmark_file_get_is_private      (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_get_modified	gbookmarkfile.h	/^time_t         g_bookmark_file_get_modified        (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_get_size	gbookmarkfile.h	/^gint           g_bookmark_file_get_size            (GBookmarkFile  *bookmark);$/;"	p
g_bookmark_file_get_visited	gbookmarkfile.h	/^time_t         g_bookmark_file_get_visited         (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_has_application	gbookmarkfile.h	/^gboolean       g_bookmark_file_has_application     (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_has_group	gbookmarkfile.h	/^gboolean       g_bookmark_file_has_group           (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_has_item	gbookmarkfile.h	/^gboolean       g_bookmark_file_has_item            (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_load_from_data	gbookmarkfile.h	/^gboolean       g_bookmark_file_load_from_data      (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_load_from_data_dirs	gbookmarkfile.h	/^gboolean       g_bookmark_file_load_from_data_dirs (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_load_from_file	gbookmarkfile.h	/^gboolean       g_bookmark_file_load_from_file      (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_move_item	gbookmarkfile.h	/^gboolean       g_bookmark_file_move_item           (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_new	gbookmarkfile.h	/^GBookmarkFile *g_bookmark_file_new                 (void);$/;"	p
g_bookmark_file_remove_application	gbookmarkfile.h	/^gboolean       g_bookmark_file_remove_application  (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_remove_group	gbookmarkfile.h	/^gboolean       g_bookmark_file_remove_group        (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_remove_item	gbookmarkfile.h	/^gboolean       g_bookmark_file_remove_item         (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_set_added	gbookmarkfile.h	/^void           g_bookmark_file_set_added           (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_set_app_info	gbookmarkfile.h	/^gboolean       g_bookmark_file_set_app_info        (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_set_description	gbookmarkfile.h	/^void           g_bookmark_file_set_description     (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_set_groups	gbookmarkfile.h	/^void           g_bookmark_file_set_groups          (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_set_icon	gbookmarkfile.h	/^void           g_bookmark_file_set_icon            (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_set_is_private	gbookmarkfile.h	/^void           g_bookmark_file_set_is_private      (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_set_mime_type	gbookmarkfile.h	/^void           g_bookmark_file_set_mime_type       (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_set_modified	gbookmarkfile.h	/^void           g_bookmark_file_set_modified        (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_set_title	gbookmarkfile.h	/^void           g_bookmark_file_set_title           (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_set_visited	gbookmarkfile.h	/^void           g_bookmark_file_set_visited         (GBookmarkFile  *bookmark,$/;"	p
g_bookmark_file_to_file	gbookmarkfile.h	/^gboolean       g_bookmark_file_to_file             (GBookmarkFile  *bookmark,$/;"	p
g_byte_array_append	garray.h	/^GByteArray* g_byte_array_append            (GByteArray       *array,$/;"	p
g_byte_array_free	garray.h	/^guint8*     g_byte_array_free              (GByteArray       *array,$/;"	p
g_byte_array_free_to_bytes	garray.h	/^GBytes*     g_byte_array_free_to_bytes     (GByteArray       *array);$/;"	p
g_byte_array_new	garray.h	/^GByteArray* g_byte_array_new               (void);$/;"	p
g_byte_array_new_take	garray.h	/^GByteArray* g_byte_array_new_take          (guint8           *data,$/;"	p
g_byte_array_prepend	garray.h	/^GByteArray* g_byte_array_prepend           (GByteArray       *array,$/;"	p
g_byte_array_ref	garray.h	/^GByteArray *g_byte_array_ref               (GByteArray       *array);$/;"	p
g_byte_array_remove_index	garray.h	/^GByteArray* g_byte_array_remove_index      (GByteArray       *array,$/;"	p
g_byte_array_remove_index_fast	garray.h	/^GByteArray* g_byte_array_remove_index_fast (GByteArray       *array,$/;"	p
g_byte_array_remove_range	garray.h	/^GByteArray* g_byte_array_remove_range      (GByteArray       *array,$/;"	p
g_byte_array_set_size	garray.h	/^GByteArray* g_byte_array_set_size          (GByteArray       *array,$/;"	p
g_byte_array_sized_new	garray.h	/^GByteArray* g_byte_array_sized_new         (guint             reserved_size);$/;"	p
g_byte_array_sort	garray.h	/^void        g_byte_array_sort              (GByteArray       *array,$/;"	p
g_byte_array_sort_with_data	garray.h	/^void        g_byte_array_sort_with_data    (GByteArray       *array,$/;"	p
g_byte_array_unref	garray.h	/^void        g_byte_array_unref             (GByteArray       *array);$/;"	p
g_bytes_compare	gbytes.h	/^gint            g_bytes_compare                 (gconstpointer   bytes1,$/;"	p
g_bytes_equal	gbytes.h	/^gboolean        g_bytes_equal                   (gconstpointer   bytes1,$/;"	p
g_bytes_get_data	gbytes.h	/^gconstpointer   g_bytes_get_data                (GBytes         *bytes,$/;"	p
g_bytes_get_size	gbytes.h	/^gsize           g_bytes_get_size                (GBytes         *bytes);$/;"	p
g_bytes_hash	gbytes.h	/^guint           g_bytes_hash                    (gconstpointer   bytes);$/;"	p
g_bytes_new	gbytes.h	/^GBytes *        g_bytes_new                     (gconstpointer   data,$/;"	p
g_bytes_new_from_bytes	gbytes.h	/^GBytes *        g_bytes_new_from_bytes          (GBytes         *bytes,$/;"	p
g_bytes_new_static	gbytes.h	/^GBytes *        g_bytes_new_static              (gconstpointer   data,$/;"	p
g_bytes_new_take	gbytes.h	/^GBytes *        g_bytes_new_take                (gpointer        data,$/;"	p
g_bytes_new_with_free_func	gbytes.h	/^GBytes *        g_bytes_new_with_free_func      (gconstpointer   data,$/;"	p
g_bytes_ref	gbytes.h	/^GBytes *        g_bytes_ref                     (GBytes         *bytes);$/;"	p
g_bytes_unref	gbytes.h	/^void            g_bytes_unref                   (GBytes         *bytes);$/;"	p
g_bytes_unref_to_array	gbytes.h	/^GByteArray *    g_bytes_unref_to_array          (GBytes         *bytes);$/;"	p
g_bytes_unref_to_data	gbytes.h	/^gpointer        g_bytes_unref_to_data           (GBytes         *bytes,$/;"	p
g_cache_destroy	deprecated/gcache.h	/^void     g_cache_destroy       (GCache            *cache);$/;"	p
g_cache_insert	deprecated/gcache.h	/^gpointer g_cache_insert        (GCache            *cache,$/;"	p
g_cache_key_foreach	deprecated/gcache.h	/^void     g_cache_key_foreach   (GCache            *cache,$/;"	p
g_cache_new	deprecated/gcache.h	/^GCache*  g_cache_new           (GCacheNewFunc      value_new_func,$/;"	p
g_cache_remove	deprecated/gcache.h	/^void     g_cache_remove        (GCache            *cache,$/;"	p
g_cache_value_foreach	deprecated/gcache.h	/^void     g_cache_value_foreach (GCache            *cache,$/;"	p
g_chdir	gstdio.h	/^int g_chdir     (const gchar *path);$/;"	p
g_chdir	gstdio.h	/^int g_chdir  (const gchar *path);$/;"	p
g_checksum_copy	gchecksum.h	/^GChecksum *           g_checksum_copy               (const GChecksum *checksum);$/;"	p
g_checksum_free	gchecksum.h	/^void                  g_checksum_free               (GChecksum       *checksum);$/;"	p
g_checksum_get_digest	gchecksum.h	/^void                  g_checksum_get_digest         (GChecksum       *checksum,$/;"	p
g_checksum_get_string	gchecksum.h	/^const gchar *         g_checksum_get_string         (GChecksum       *checksum);$/;"	p
g_checksum_new	gchecksum.h	/^GChecksum *           g_checksum_new                (GChecksumType    checksum_type);$/;"	p
g_checksum_reset	gchecksum.h	/^void                  g_checksum_reset              (GChecksum       *checksum);$/;"	p
g_checksum_type_get_length	gchecksum.h	/^gssize                g_checksum_type_get_length    (GChecksumType    checksum_type);$/;"	p
g_checksum_update	gchecksum.h	/^void                  g_checksum_update             (GChecksum       *checksum,$/;"	p
g_child_watch_add	gmain.h	/^guint    g_child_watch_add          (GPid            pid,$/;"	p
g_child_watch_add_full	gmain.h	/^guint    g_child_watch_add_full     (gint            priority,$/;"	p
g_child_watch_funcs	gmain.h	/^GLIB_VAR GSourceFuncs g_child_watch_funcs;$/;"	v
g_child_watch_source_new	gmain.h	/^GSource *g_child_watch_source_new (GPid pid);$/;"	p
g_chmod	gstdio.h	/^int g_chmod     (const gchar *filename,$/;"	p
g_chmod	gstdio.h	64;"	d
g_chunk_free	deprecated/gallocator.h	40;"	d
g_chunk_new	deprecated/gallocator.h	38;"	d
g_chunk_new0	deprecated/gallocator.h	39;"	d
g_clear_error	gerror.h	/^void     g_clear_error         (GError       **err);$/;"	p
g_completion_add_items	deprecated/gcompletion.h	/^void         g_completion_add_items     (GCompletion*    cmp,$/;"	p
g_completion_clear_items	deprecated/gcompletion.h	/^void         g_completion_clear_items   (GCompletion*    cmp);$/;"	p
g_completion_complete	deprecated/gcompletion.h	/^GList*       g_completion_complete      (GCompletion*    cmp,$/;"	p
g_completion_complete_utf8	deprecated/gcompletion.h	/^GList*       g_completion_complete_utf8 (GCompletion  *cmp,$/;"	p
g_completion_free	deprecated/gcompletion.h	/^void         g_completion_free          (GCompletion*    cmp);$/;"	p
g_completion_new	deprecated/gcompletion.h	/^GCompletion* g_completion_new           (GCompletionFunc func);$/;"	p
g_completion_remove_items	deprecated/gcompletion.h	/^void         g_completion_remove_items  (GCompletion*    cmp,$/;"	p
g_completion_set_compare	deprecated/gcompletion.h	/^void         g_completion_set_compare   (GCompletion *cmp,$/;"	p
g_compute_checksum_for_data	gchecksum.h	/^gchar                *g_compute_checksum_for_data   (GChecksumType    checksum_type,$/;"	p
g_compute_checksum_for_string	gchecksum.h	/^gchar                *g_compute_checksum_for_string (GChecksumType    checksum_type,$/;"	p
g_compute_hmac_for_data	ghmac.h	/^gchar                *g_compute_hmac_for_data       (GChecksumType  digest_type,$/;"	p
g_compute_hmac_for_string	ghmac.h	/^gchar                *g_compute_hmac_for_string     (GChecksumType  digest_type,$/;"	p
g_cond_broadcast	gthread.h	/^void            g_cond_broadcast                (GCond          *cond);$/;"	p
g_cond_clear	gthread.h	/^void            g_cond_clear                    (GCond          *cond);$/;"	p
g_cond_free	deprecated/gthread.h	/^void            g_cond_free             (GCond  *cond);$/;"	p
g_cond_init	gthread.h	/^void            g_cond_init                     (GCond          *cond);$/;"	p
g_cond_new	deprecated/gthread.h	/^GCond *         g_cond_new              (void);$/;"	p
g_cond_signal	gthread.h	/^void            g_cond_signal                   (GCond          *cond);$/;"	p
g_cond_timed_wait	deprecated/gthread.h	/^gboolean        g_cond_timed_wait       (GCond          *cond,$/;"	p
g_cond_wait	gthread.h	/^void            g_cond_wait                     (GCond          *cond,$/;"	p
g_cond_wait_until	gthread.h	/^gboolean        g_cond_wait_until               (GCond          *cond,$/;"	p
g_convert_error_quark	gconvert.h	/^GQuark g_convert_error_quark (void);$/;"	p
g_creat	gstdio.h	/^int g_creat     (const gchar *filename,$/;"	p
g_creat	gstdio.h	66;"	d
g_critical	gmessages.h	/^g_critical (const gchar *format,$/;"	f
g_critical	gmessages.h	149;"	d
g_critical	gmessages.h	169;"	d
g_datalist_clear	gdataset.h	/^void     g_datalist_clear               (GData            **datalist);$/;"	p
g_datalist_foreach	gdataset.h	/^void     g_datalist_foreach             (GData            **datalist,$/;"	p
g_datalist_get_data	gdataset.h	/^gpointer  g_datalist_get_data            (GData	 **datalist,$/;"	p
g_datalist_get_flags	gdataset.h	/^guint    g_datalist_get_flags           (GData            **datalist);$/;"	p
g_datalist_id_get_data	gdataset.h	/^gpointer g_datalist_id_get_data         (GData            **datalist,$/;"	p
g_datalist_id_remove_data	gdataset.h	77;"	d
g_datalist_id_remove_no_notify	gdataset.h	/^gpointer g_datalist_id_remove_no_notify (GData            **datalist,$/;"	p
g_datalist_id_set_data	gdataset.h	75;"	d
g_datalist_id_set_data_full	gdataset.h	/^void     g_datalist_id_set_data_full    (GData            **datalist,$/;"	p
g_datalist_init	gdataset.h	/^void     g_datalist_init                (GData            **datalist);$/;"	p
g_datalist_remove_data	gdataset.h	85;"	d
g_datalist_remove_no_notify	gdataset.h	81;"	d
g_datalist_set_data	gdataset.h	83;"	d
g_datalist_set_data_full	gdataset.h	79;"	d
g_datalist_set_flags	gdataset.h	/^void     g_datalist_set_flags           (GData            **datalist,$/;"	p
g_datalist_unset_flags	gdataset.h	/^void     g_datalist_unset_flags         (GData            **datalist,$/;"	p
g_dataset_destroy	gdataset.h	/^void      g_dataset_destroy             (gconstpointer    dataset_location);$/;"	p
g_dataset_foreach	gdataset.h	/^void      g_dataset_foreach             (gconstpointer    dataset_location,$/;"	p
g_dataset_get_data	gdataset.h	109;"	d
g_dataset_id_get_data	gdataset.h	/^gpointer  g_dataset_id_get_data         (gconstpointer    dataset_location,$/;"	p
g_dataset_id_remove_data	gdataset.h	107;"	d
g_dataset_id_remove_no_notify	gdataset.h	/^gpointer  g_dataset_id_remove_no_notify (gconstpointer    dataset_location,$/;"	p
g_dataset_id_set_data	gdataset.h	105;"	d
g_dataset_id_set_data_full	gdataset.h	/^void      g_dataset_id_set_data_full    (gconstpointer    dataset_location,$/;"	p
g_dataset_remove_data	gdataset.h	117;"	d
g_dataset_remove_no_notify	gdataset.h	113;"	d
g_dataset_set_data	gdataset.h	115;"	d
g_dataset_set_data_full	gdataset.h	111;"	d
g_date_add_days	gdate.h	/^void         g_date_add_days              (GDate       *date,$/;"	p
g_date_add_months	gdate.h	/^void         g_date_add_months            (GDate       *date,$/;"	p
g_date_add_years	gdate.h	/^void         g_date_add_years             (GDate       *date,$/;"	p
g_date_clamp	gdate.h	/^void         g_date_clamp                 (GDate *date,$/;"	p
g_date_clear	gdate.h	/^void         g_date_clear                 (GDate       *date,$/;"	p
g_date_compare	gdate.h	/^gint         g_date_compare               (const GDate *lhs,$/;"	p
g_date_day	gdate.h	251;"	d
g_date_day_of_year	gdate.h	253;"	d
g_date_days_between	gdate.h	/^gint         g_date_days_between          (const GDate *date1,$/;"	p
g_date_days_in_month	gdate.h	256;"	d
g_date_free	gdate.h	/^void         g_date_free                  (GDate       *date);$/;"	p
g_date_get_day	gdate.h	/^GDateDay     g_date_get_day               (const GDate *date);$/;"	p
g_date_get_day_of_year	gdate.h	/^guint        g_date_get_day_of_year       (const GDate *date);$/;"	p
g_date_get_iso8601_week_of_year	gdate.h	/^guint        g_date_get_iso8601_week_of_year (const GDate *date);$/;"	p
g_date_get_julian	gdate.h	/^guint32      g_date_get_julian            (const GDate *date);$/;"	p
g_date_get_monday_week_of_year	gdate.h	/^guint        g_date_get_monday_week_of_year (const GDate *date);$/;"	p
g_date_get_month	gdate.h	/^GDateMonth   g_date_get_month             (const GDate *date);$/;"	p
g_date_get_sunday_week_of_year	gdate.h	/^guint        g_date_get_sunday_week_of_year (const GDate *date);$/;"	p
g_date_get_weekday	gdate.h	/^GDateWeekday g_date_get_weekday           (const GDate *date);$/;"	p
g_date_get_year	gdate.h	/^GDateYear    g_date_get_year              (const GDate *date);$/;"	p
g_date_is_first_of_month	gdate.h	/^gboolean     g_date_is_first_of_month     (const GDate *date);$/;"	p
g_date_is_last_of_month	gdate.h	/^gboolean     g_date_is_last_of_month      (const GDate *date);$/;"	p
g_date_julian	gdate.h	252;"	d
g_date_monday_week_of_year	gdate.h	254;"	d
g_date_monday_weeks_in_year	gdate.h	257;"	d
g_date_month	gdate.h	249;"	d
g_date_new	gdate.h	/^GDate*       g_date_new                   (void);$/;"	p
g_date_new_dmy	gdate.h	/^GDate*       g_date_new_dmy               (GDateDay     day,$/;"	p
g_date_new_julian	gdate.h	/^GDate*       g_date_new_julian            (guint32      julian_day);$/;"	p
g_date_order	gdate.h	/^void         g_date_order                 (GDate *date1, GDate *date2);$/;"	p
g_date_set_day	gdate.h	/^void         g_date_set_day               (GDate       *date,$/;"	p
g_date_set_dmy	gdate.h	/^void         g_date_set_dmy               (GDate       *date,$/;"	p
g_date_set_julian	gdate.h	/^void         g_date_set_julian            (GDate       *date,$/;"	p
g_date_set_month	gdate.h	/^void         g_date_set_month             (GDate       *date,$/;"	v
g_date_set_parse	gdate.h	/^void         g_date_set_parse             (GDate       *date,$/;"	p
g_date_set_time_t	gdate.h	/^void         g_date_set_time_t            (GDate       *date,$/;"	p
g_date_set_time_val	gdate.h	/^void         g_date_set_time_val          (GDate       *date,$/;"	p
g_date_set_year	gdate.h	/^void         g_date_set_year              (GDate       *date,$/;"	p
g_date_strftime	gdate.h	/^gsize        g_date_strftime              (gchar       *s,$/;"	p
g_date_subtract_days	gdate.h	/^void         g_date_subtract_days         (GDate       *date,$/;"	p
g_date_subtract_months	gdate.h	/^void         g_date_subtract_months       (GDate       *date,$/;"	p
g_date_subtract_years	gdate.h	/^void         g_date_subtract_years        (GDate       *date,$/;"	p
g_date_sunday_week_of_year	gdate.h	255;"	d
g_date_sunday_weeks_in_year	gdate.h	258;"	d
g_date_time_add	gdatetime.h	/^GDateTime *             g_date_time_add                                 (GDateTime      *datetime,$/;"	p
g_date_time_add_days	gdatetime.h	/^GDateTime *             g_date_time_add_days                            (GDateTime      *datetime,$/;"	p
g_date_time_add_full	gdatetime.h	/^GDateTime *             g_date_time_add_full                            (GDateTime      *datetime,$/;"	p
g_date_time_add_hours	gdatetime.h	/^GDateTime *             g_date_time_add_hours                           (GDateTime      *datetime,$/;"	p
g_date_time_add_minutes	gdatetime.h	/^GDateTime *             g_date_time_add_minutes                         (GDateTime      *datetime,$/;"	p
g_date_time_add_months	gdatetime.h	/^GDateTime *             g_date_time_add_months                          (GDateTime      *datetime,$/;"	p
g_date_time_add_seconds	gdatetime.h	/^GDateTime *             g_date_time_add_seconds                         (GDateTime      *datetime,$/;"	p
g_date_time_add_weeks	gdatetime.h	/^GDateTime *             g_date_time_add_weeks                           (GDateTime      *datetime,$/;"	p
g_date_time_add_years	gdatetime.h	/^GDateTime *             g_date_time_add_years                           (GDateTime      *datetime,$/;"	p
g_date_time_compare	gdatetime.h	/^gint                    g_date_time_compare                             (gconstpointer   dt1,$/;"	p
g_date_time_difference	gdatetime.h	/^GTimeSpan               g_date_time_difference                          (GDateTime      *end,$/;"	p
g_date_time_equal	gdatetime.h	/^gboolean                g_date_time_equal                               (gconstpointer   dt1,$/;"	p
g_date_time_get_day_of_month	gdatetime.h	/^gint                    g_date_time_get_day_of_month                    (GDateTime      *datetime);$/;"	p
g_date_time_get_day_of_week	gdatetime.h	/^gint                    g_date_time_get_day_of_week                     (GDateTime      *datetime);$/;"	p
g_date_time_get_day_of_year	gdatetime.h	/^gint                    g_date_time_get_day_of_year                     (GDateTime      *datetime);$/;"	p
g_date_time_get_hour	gdatetime.h	/^gint                    g_date_time_get_hour                            (GDateTime      *datetime);$/;"	p
g_date_time_get_microsecond	gdatetime.h	/^gint                    g_date_time_get_microsecond                     (GDateTime      *datetime);$/;"	p
g_date_time_get_minute	gdatetime.h	/^gint                    g_date_time_get_minute                          (GDateTime      *datetime);$/;"	p
g_date_time_get_month	gdatetime.h	/^gint                    g_date_time_get_month                           (GDateTime      *datetime);$/;"	p
g_date_time_get_second	gdatetime.h	/^gint                    g_date_time_get_second                          (GDateTime      *datetime);$/;"	p
g_date_time_get_seconds	gdatetime.h	/^gdouble                 g_date_time_get_seconds                         (GDateTime      *datetime);$/;"	p
g_date_time_get_timezone_abbreviation	gdatetime.h	/^const gchar *           g_date_time_get_timezone_abbreviation           (GDateTime      *datetime);$/;"	p
g_date_time_get_utc_offset	gdatetime.h	/^GTimeSpan               g_date_time_get_utc_offset                      (GDateTime      *datetime);$/;"	p
g_date_time_get_week_numbering_year	gdatetime.h	/^gint                    g_date_time_get_week_numbering_year             (GDateTime      *datetime);$/;"	p
g_date_time_get_week_of_year	gdatetime.h	/^gint                    g_date_time_get_week_of_year                    (GDateTime      *datetime);$/;"	p
g_date_time_get_year	gdatetime.h	/^gint                    g_date_time_get_year                            (GDateTime      *datetime);$/;"	p
g_date_time_get_ymd	gdatetime.h	/^void                    g_date_time_get_ymd                             (GDateTime      *datetime,$/;"	p
g_date_time_hash	gdatetime.h	/^guint                   g_date_time_hash                                (gconstpointer   datetime);$/;"	p
g_date_time_is_daylight_savings	gdatetime.h	/^gboolean                g_date_time_is_daylight_savings                 (GDateTime      *datetime);$/;"	p
g_date_time_new	gdatetime.h	/^GDateTime *             g_date_time_new                                 (GTimeZone      *tz,$/;"	p
g_date_time_new_from_timeval_local	gdatetime.h	/^GDateTime *             g_date_time_new_from_timeval_local              (const GTimeVal *tv);$/;"	p
g_date_time_new_from_timeval_utc	gdatetime.h	/^GDateTime *             g_date_time_new_from_timeval_utc                (const GTimeVal *tv);$/;"	p
g_date_time_new_from_unix_local	gdatetime.h	/^GDateTime *             g_date_time_new_from_unix_local                 (gint64          t);$/;"	p
g_date_time_new_from_unix_utc	gdatetime.h	/^GDateTime *             g_date_time_new_from_unix_utc                   (gint64          t);$/;"	p
g_date_time_new_local	gdatetime.h	/^GDateTime *             g_date_time_new_local                           (gint            year,$/;"	p
g_date_time_new_now	gdatetime.h	/^GDateTime *             g_date_time_new_now                             (GTimeZone      *tz);$/;"	p
g_date_time_new_now_local	gdatetime.h	/^GDateTime *             g_date_time_new_now_local                       (void);$/;"	p
g_date_time_new_now_utc	gdatetime.h	/^GDateTime *             g_date_time_new_now_utc                         (void);$/;"	p
g_date_time_new_utc	gdatetime.h	/^GDateTime *             g_date_time_new_utc                             (gint            year,$/;"	p
g_date_time_ref	gdatetime.h	/^GDateTime *             g_date_time_ref                                 (GDateTime      *datetime);$/;"	p
g_date_time_to_local	gdatetime.h	/^GDateTime *             g_date_time_to_local                            (GDateTime      *datetime);$/;"	p
g_date_time_to_timeval	gdatetime.h	/^gboolean                g_date_time_to_timeval                          (GDateTime      *datetime,$/;"	p
g_date_time_to_timezone	gdatetime.h	/^GDateTime *             g_date_time_to_timezone                         (GDateTime      *datetime,$/;"	p
g_date_time_to_unix	gdatetime.h	/^gint64                  g_date_time_to_unix                             (GDateTime      *datetime);$/;"	p
g_date_time_to_utc	gdatetime.h	/^GDateTime *             g_date_time_to_utc                              (GDateTime      *datetime);$/;"	p
g_date_time_unref	gdatetime.h	/^void                    g_date_time_unref                               (GDateTime      *datetime);$/;"	p
g_date_to_struct_tm	gdate.h	/^void         g_date_to_struct_tm          (const GDate *date,$/;"	p
g_date_valid	gdate.h	/^gboolean     g_date_valid                 (const GDate *date);$/;"	p
g_date_weekday	gdate.h	248;"	d
g_date_year	gdate.h	250;"	d
g_debug	gmessages.h	/^g_debug (const gchar *format,$/;"	f
g_debug	gmessages.h	155;"	d
g_debug	gmessages.h	175;"	d
g_dir_close	gdir.h	/^void                     g_dir_close          (GDir         *dir);$/;"	p
g_dir_make_tmp	gfileutils.h	/^gchar   *g_dir_make_tmp       (const gchar  *tmpl,$/;"	p
g_dir_open	gdir.h	/^GDir    *                g_dir_open           (const gchar  *path,$/;"	p
g_dir_open	gdir.h	40;"	d
g_dir_read_name	gdir.h	/^const gchar *            g_dir_read_name      (GDir         *dir);$/;"	p
g_dir_read_name	gdir.h	41;"	d
g_dir_rewind	gdir.h	/^void                     g_dir_rewind         (GDir         *dir);$/;"	p
g_dirname	gfileutils.h	161;"	d
g_double_equal	ghash.h	/^gboolean g_double_equal (gconstpointer  v1,$/;"	p
g_double_hash	ghash.h	/^guint    g_double_hash  (gconstpointer  v);$/;"	p
g_environ_getenv	genviron.h	/^const gchar * g_environ_getenv   (gchar       **envp,$/;"	p
g_error	gmessages.h	/^g_error (const gchar *format,$/;"	f
g_error	gmessages.h	139;"	d
g_error	gmessages.h	159;"	d
g_error_copy	gerror.h	/^GError*  g_error_copy          (const GError  *error);$/;"	p
g_error_free	gerror.h	/^void     g_error_free          (GError        *error);$/;"	p
g_error_matches	gerror.h	/^gboolean g_error_matches       (const GError  *error,$/;"	p
g_error_new_literal	gerror.h	/^GError*  g_error_new_literal   (GQuark         domain,$/;"	p
g_error_new_valist	gerror.h	/^GError*  g_error_new_valist    (GQuark         domain,$/;"	p
g_file_error_from_errno	gfileutils.h	/^GFileError g_file_error_from_errno (gint err_no);$/;"	p
g_file_error_quark	gfileutils.h	/^GQuark     g_file_error_quark      (void);$/;"	p
g_file_get_contents	gfileutils.h	/^gboolean g_file_get_contents (const gchar  *filename,$/;"	p
g_file_get_contents	gfileutils.h	83;"	d
g_file_open_tmp	gfileutils.h	/^gint     g_file_open_tmp      (const gchar  *tmpl,$/;"	p
g_file_open_tmp	gfileutils.h	85;"	d
g_file_read_link	gfileutils.h	/^gchar   *g_file_read_link    (const gchar  *filename,$/;"	p
g_file_set_contents	gfileutils.h	/^gboolean g_file_set_contents (const gchar *filename,$/;"	p
g_file_test	gfileutils.h	/^gboolean g_file_test         (const gchar  *filename,$/;"	p
g_file_test	gfileutils.h	82;"	d
g_filename_from_uri	gconvert.h	132;"	d
g_filename_from_utf8	gconvert.h	131;"	d
g_filename_to_uri	gconvert.h	133;"	d
g_filename_to_utf8	gconvert.h	130;"	d
g_find_program_in_path	gutils.h	/^gchar*  g_find_program_in_path  (const gchar *program);$/;"	p
g_find_program_in_path	gutils.h	256;"	d
g_fopen	gstdio.h	/^FILE *g_fopen   (const gchar *filename,$/;"	p
g_fopen	gstdio.h	72;"	d
g_format_size	gutils.h	/^gchar *g_format_size        (guint64          size);$/;"	p
g_format_size_full	gutils.h	/^gchar *g_format_size_full   (guint64          size,$/;"	p
g_free	gmem.h	/^void	 g_free	          (gpointer	 mem);$/;"	p
g_freopen	gstdio.h	/^FILE *g_freopen (const gchar *filename,$/;"	p
g_freopen	gstdio.h	73;"	d
g_get_application_name	gutils.h	/^const gchar *         g_get_application_name (void);$/;"	p
g_get_charset	gcharset.h	/^gboolean              g_get_charset         (const char **charset);$/;"	p
g_get_codeset	gcharset.h	/^gchar *               g_get_codeset         (void);$/;"	p
g_get_current_dir	gfileutils.h	/^gchar *g_get_current_dir   (void);$/;"	v
g_get_current_dir	gfileutils.h	166;"	d
g_get_current_time	gmain.h	/^void   g_get_current_time                 (GTimeVal       *result);$/;"	p
g_get_environ	genviron.h	/^gchar **      g_get_environ      (void);$/;"	p
g_get_filename_charsets	gconvert.h	/^gboolean g_get_filename_charsets (const gchar ***charsets);$/;"	p
g_get_home_dir	gutils.h	/^const gchar *         g_get_home_dir         (void);$/;"	p
g_get_home_dir	gutils.h	91;"	d
g_get_host_name	gutils.h	/^const gchar *         g_get_host_name	     (void);$/;"	p
g_get_language_names	gcharset.h	/^const gchar * const * g_get_language_names  (void);$/;"	p
g_get_locale_variants	gcharset.h	/^gchar **              g_get_locale_variants (const gchar *locale);$/;"	p
g_get_monotonic_time	gmain.h	/^gint64 g_get_monotonic_time               (void);$/;"	p
g_get_prgname	gutils.h	/^gchar *               g_get_prgname          (void);$/;"	p
g_get_real_name	gutils.h	/^const gchar *         g_get_real_name        (void);$/;"	p
g_get_real_name	gutils.h	90;"	d
g_get_real_time	gmain.h	/^gint64 g_get_real_time                    (void);$/;"	p
g_get_system_config_dirs	gutils.h	/^const gchar * const * g_get_system_config_dirs (void);$/;"	p
g_get_system_data_dirs	gutils.h	/^const gchar * const * g_get_system_data_dirs   (void);$/;"	p
g_get_system_data_dirs	gutils.h	127;"	d
g_get_tmp_dir	gutils.h	/^const gchar *         g_get_tmp_dir          (void);$/;"	p
g_get_tmp_dir	gutils.h	92;"	d
g_get_user_cache_dir	gutils.h	/^const gchar *         g_get_user_cache_dir     (void);$/;"	p
g_get_user_config_dir	gutils.h	/^const gchar *         g_get_user_config_dir    (void);$/;"	p
g_get_user_data_dir	gutils.h	/^const gchar *         g_get_user_data_dir      (void);$/;"	p
g_get_user_name	gutils.h	/^const gchar *         g_get_user_name        (void);$/;"	p
g_get_user_name	gutils.h	89;"	d
g_get_user_runtime_dir	gutils.h	/^const gchar * g_get_user_runtime_dir (void);$/;"	p
g_get_user_special_dir	gutils.h	/^const gchar * g_get_user_special_dir (GUserDirectory directory);$/;"	p
g_getenv	genviron.h	/^const gchar * g_getenv           (const gchar  *variable);$/;"	p
g_getenv	genviron.h	40;"	d
g_hash_table_add	ghash.h	/^void        g_hash_table_add               (GHashTable     *hash_table,$/;"	p
g_hash_table_contains	ghash.h	/^gboolean    g_hash_table_contains          (GHashTable     *hash_table,$/;"	p
g_hash_table_destroy	ghash.h	/^void        g_hash_table_destroy           (GHashTable     *hash_table);$/;"	p
g_hash_table_find	ghash.h	/^gpointer    g_hash_table_find              (GHashTable     *hash_table,$/;"	p
g_hash_table_foreach	ghash.h	/^void        g_hash_table_foreach           (GHashTable     *hash_table,$/;"	p
g_hash_table_foreach_remove	ghash.h	/^guint       g_hash_table_foreach_remove    (GHashTable     *hash_table,$/;"	p
g_hash_table_foreach_steal	ghash.h	/^guint       g_hash_table_foreach_steal     (GHashTable     *hash_table,$/;"	p
g_hash_table_freeze	ghash.h	118;"	d
g_hash_table_get_keys	ghash.h	/^GList *     g_hash_table_get_keys          (GHashTable     *hash_table);$/;"	p
g_hash_table_get_values	ghash.h	/^GList *     g_hash_table_get_values        (GHashTable     *hash_table);$/;"	p
g_hash_table_insert	ghash.h	/^void        g_hash_table_insert            (GHashTable     *hash_table,$/;"	p
g_hash_table_iter_get_hash_table	ghash.h	/^GHashTable* g_hash_table_iter_get_hash_table (GHashTableIter *iter);$/;"	p
g_hash_table_iter_init	ghash.h	/^void        g_hash_table_iter_init         (GHashTableIter *iter,$/;"	p
g_hash_table_iter_next	ghash.h	/^gboolean    g_hash_table_iter_next         (GHashTableIter *iter,$/;"	p
g_hash_table_iter_remove	ghash.h	/^void        g_hash_table_iter_remove       (GHashTableIter *iter);$/;"	p
g_hash_table_iter_replace	ghash.h	/^void        g_hash_table_iter_replace      (GHashTableIter *iter,$/;"	p
g_hash_table_iter_steal	ghash.h	/^void        g_hash_table_iter_steal        (GHashTableIter *iter);$/;"	p
g_hash_table_lookup	ghash.h	/^gpointer    g_hash_table_lookup            (GHashTable     *hash_table,$/;"	p
g_hash_table_lookup_extended	ghash.h	/^gboolean    g_hash_table_lookup_extended   (GHashTable     *hash_table,$/;"	p
g_hash_table_new	ghash.h	/^GHashTable* g_hash_table_new               (GHashFunc       hash_func,$/;"	p
g_hash_table_new_full	ghash.h	/^GHashTable* g_hash_table_new_full          (GHashFunc       hash_func,$/;"	p
g_hash_table_ref	ghash.h	/^GHashTable* g_hash_table_ref               (GHashTable     *hash_table);$/;"	p
g_hash_table_remove	ghash.h	/^gboolean    g_hash_table_remove            (GHashTable     *hash_table,$/;"	p
g_hash_table_remove_all	ghash.h	/^void        g_hash_table_remove_all        (GHashTable     *hash_table);$/;"	p
g_hash_table_replace	ghash.h	/^void        g_hash_table_replace           (GHashTable     *hash_table,$/;"	p
g_hash_table_size	ghash.h	/^guint       g_hash_table_size              (GHashTable     *hash_table);$/;"	p
g_hash_table_steal	ghash.h	/^gboolean    g_hash_table_steal             (GHashTable     *hash_table,$/;"	p
g_hash_table_steal_all	ghash.h	/^void        g_hash_table_steal_all         (GHashTable     *hash_table);$/;"	p
g_hash_table_thaw	ghash.h	119;"	d
g_hash_table_unref	ghash.h	/^void        g_hash_table_unref             (GHashTable     *hash_table);$/;"	p
g_hmac_copy	ghmac.h	/^GHmac *               g_hmac_copy                   (const GHmac   *hmac);$/;"	p
g_hmac_get_digest	ghmac.h	/^void                  g_hmac_get_digest             (GHmac         *hmac,$/;"	p
g_hmac_get_string	ghmac.h	/^const gchar *         g_hmac_get_string             (GHmac         *hmac);$/;"	p
g_hmac_new	ghmac.h	/^GHmac *               g_hmac_new                    (GChecksumType  digest_type,$/;"	p
g_hmac_ref	ghmac.h	/^GHmac *               g_hmac_ref                    (GHmac         *hmac);$/;"	p
g_hmac_unref	ghmac.h	/^void                  g_hmac_unref                  (GHmac         *hmac);$/;"	p
g_hmac_update	ghmac.h	/^void                  g_hmac_update                 (GHmac         *hmac,$/;"	p
g_hook_alloc	ghook.h	/^GHook*	 g_hook_alloc			(GHookList		*hook_list);$/;"	p
g_hook_append	ghook.h	157;"	d
g_hook_compare_ids	ghook.h	/^gint	 g_hook_compare_ids		(GHook			*new_hook,$/;"	p
g_hook_destroy	ghook.h	/^gboolean g_hook_destroy			(GHookList		*hook_list,$/;"	p
g_hook_destroy_link	ghook.h	/^void	 g_hook_destroy_link		(GHookList		*hook_list,$/;"	p
g_hook_find	ghook.h	/^GHook*	 g_hook_find			(GHookList		*hook_list,$/;"	p
g_hook_find_data	ghook.h	/^GHook*	 g_hook_find_data		(GHookList		*hook_list,$/;"	p
g_hook_find_func	ghook.h	/^GHook*	 g_hook_find_func		(GHookList		*hook_list,$/;"	p
g_hook_find_func_data	ghook.h	/^GHook*	 g_hook_find_func_data		(GHookList		*hook_list,$/;"	p
g_hook_first_valid	ghook.h	/^GHook*	 g_hook_first_valid		(GHookList		*hook_list,$/;"	p
g_hook_free	ghook.h	/^void	 g_hook_free			(GHookList		*hook_list,$/;"	p
g_hook_get	ghook.h	/^GHook*	 g_hook_get			(GHookList		*hook_list,$/;"	p
g_hook_insert_before	ghook.h	/^void	 g_hook_insert_before		(GHookList		*hook_list,$/;"	p
g_hook_insert_sorted	ghook.h	/^void	 g_hook_insert_sorted		(GHookList		*hook_list,$/;"	p
g_hook_list_clear	ghook.h	/^void	 g_hook_list_clear		(GHookList		*hook_list);$/;"	p
g_hook_list_init	ghook.h	/^void	 g_hook_list_init		(GHookList		*hook_list,$/;"	p
g_hook_list_invoke	ghook.h	/^void	 g_hook_list_invoke		(GHookList		*hook_list,$/;"	p
g_hook_list_invoke_check	ghook.h	/^void	 g_hook_list_invoke_check	(GHookList		*hook_list,$/;"	p
g_hook_list_marshal	ghook.h	/^void	 g_hook_list_marshal		(GHookList		*hook_list,$/;"	p
g_hook_list_marshal_check	ghook.h	/^void	 g_hook_list_marshal_check	(GHookList		*hook_list,$/;"	p
g_hook_next_valid	ghook.h	/^GHook*	 g_hook_next_valid		(GHookList		*hook_list,$/;"	p
g_hook_prepend	ghook.h	/^void	 g_hook_prepend			(GHookList		*hook_list,$/;"	p
g_hook_ref	ghook.h	/^GHook *	 g_hook_ref			(GHookList		*hook_list,$/;"	p
g_hook_unref	ghook.h	/^void	 g_hook_unref			(GHookList		*hook_list,$/;"	p
g_hostname_is_ascii_encoded	ghostutils.h	/^gboolean  g_hostname_is_ascii_encoded (const gchar *hostname);$/;"	p
g_hostname_is_ip_address	ghostutils.h	/^gboolean  g_hostname_is_ip_address    (const gchar *hostname);$/;"	p
g_hostname_is_non_ascii	ghostutils.h	/^gboolean  g_hostname_is_non_ascii     (const gchar *hostname);$/;"	p
g_hostname_to_ascii	ghostutils.h	/^gchar    *g_hostname_to_ascii         (const gchar *hostname);$/;"	p
g_hostname_to_unicode	ghostutils.h	/^gchar    *g_hostname_to_unicode       (const gchar *hostname);$/;"	p
g_htonl	gtypes.h	381;"	d
g_htons	gtypes.h	382;"	d
g_iconv	gconvert.h	/^gsize  g_iconv        (GIConv        converter,$/;"	p
g_iconv_close	gconvert.h	/^gint   g_iconv_close  (GIConv        converter);$/;"	p
g_iconv_open	gconvert.h	/^GIConv g_iconv_open   (const gchar  *to_codeset,$/;"	p
g_idle_add	gmain.h	/^guint    g_idle_add                 (GSourceFunc     function,$/;"	p
g_idle_add_full	gmain.h	/^guint    g_idle_add_full            (gint            priority,$/;"	p
g_idle_funcs	gmain.h	/^GLIB_VAR GSourceFuncs g_idle_funcs;$/;"	v
g_idle_remove_by_data	gmain.h	/^gboolean g_idle_remove_by_data      (gpointer        data);$/;"	p
g_idle_source_new	gmain.h	/^GSource *g_idle_source_new        (void);$/;"	p
g_int64_equal	ghash.h	/^gboolean g_int64_equal  (gconstpointer  v1,$/;"	p
g_int64_hash	ghash.h	/^guint    g_int64_hash   (gconstpointer  v);$/;"	p
g_int_equal	ghash.h	/^gboolean g_int_equal    (gconstpointer  v1,$/;"	p
g_int_hash	ghash.h	/^guint    g_int_hash     (gconstpointer  v);$/;"	p
g_intern_static_string	gquark.h	/^const gchar *         g_intern_static_string     (const gchar *string);$/;"	p
g_intern_string	gquark.h	/^const gchar *         g_intern_string            (const gchar *string);$/;"	p
g_io_add_watch	giochannel.h	/^guint     g_io_add_watch        (GIOChannel      *channel,$/;"	p
g_io_add_watch_full	giochannel.h	/^guint     g_io_add_watch_full   (GIOChannel      *channel,$/;"	p
g_io_channel_close	giochannel.h	/^void      g_io_channel_close    (GIOChannel    *channel);$/;"	v
g_io_channel_error_from_errno	giochannel.h	/^GIOChannelError g_io_channel_error_from_errno (gint en);$/;"	p
g_io_channel_error_quark	giochannel.h	/^GQuark          g_io_channel_error_quark      (void);$/;"	p
g_io_channel_flush	giochannel.h	/^GIOStatus   g_io_channel_flush            (GIOChannel   *channel,$/;"	p
g_io_channel_get_buffer_condition	giochannel.h	/^GIOCondition          g_io_channel_get_buffer_condition (GIOChannel   *channel);$/;"	p
g_io_channel_get_buffer_size	giochannel.h	/^gsize                 g_io_channel_get_buffer_size      (GIOChannel   *channel);$/;"	p
g_io_channel_get_buffered	giochannel.h	/^gboolean	      g_io_channel_get_buffered		(GIOChannel   *channel);$/;"	p
g_io_channel_get_close_on_unref	giochannel.h	/^gboolean              g_io_channel_get_close_on_unref	(GIOChannel   *channel);$/;"	p
g_io_channel_get_encoding	giochannel.h	/^const gchar *         g_io_channel_get_encoding         (GIOChannel   *channel);$/;"	p
g_io_channel_get_flags	giochannel.h	/^GIOFlags              g_io_channel_get_flags            (GIOChannel   *channel);$/;"	p
g_io_channel_get_line_term	giochannel.h	/^const gchar *         g_io_channel_get_line_term        (GIOChannel   *channel,$/;"	p
g_io_channel_init	giochannel.h	/^void        g_io_channel_init   (GIOChannel    *channel);$/;"	p
g_io_channel_new_file	giochannel.h	/^GIOChannel* g_io_channel_new_file         (const gchar  *filename,$/;"	p
g_io_channel_new_file	giochannel.h	276;"	d
g_io_channel_read_chars	giochannel.h	/^GIOStatus   g_io_channel_read_chars       (GIOChannel   *channel,$/;"	p
g_io_channel_read_line	giochannel.h	/^GIOStatus   g_io_channel_read_line        (GIOChannel   *channel,$/;"	p
g_io_channel_read_line_string	giochannel.h	/^GIOStatus   g_io_channel_read_line_string (GIOChannel   *channel,$/;"	p
g_io_channel_read_to_end	giochannel.h	/^GIOStatus   g_io_channel_read_to_end      (GIOChannel   *channel,$/;"	p
g_io_channel_read_unichar	giochannel.h	/^GIOStatus   g_io_channel_read_unichar     (GIOChannel   *channel,$/;"	p
g_io_channel_ref	giochannel.h	/^GIOChannel *g_io_channel_ref    (GIOChannel    *channel);$/;"	p
g_io_channel_seek_position	giochannel.h	/^GIOStatus   g_io_channel_seek_position    (GIOChannel   *channel,$/;"	p
g_io_channel_set_buffer_size	giochannel.h	/^void                  g_io_channel_set_buffer_size      (GIOChannel   *channel,$/;"	p
g_io_channel_set_buffered	giochannel.h	/^void		      g_io_channel_set_buffered		(GIOChannel   *channel,$/;"	p
g_io_channel_set_close_on_unref	giochannel.h	/^void                  g_io_channel_set_close_on_unref	(GIOChannel   *channel,$/;"	p
g_io_channel_set_encoding	giochannel.h	/^GIOStatus             g_io_channel_set_encoding         (GIOChannel   *channel,$/;"	p
g_io_channel_set_flags	giochannel.h	/^GIOStatus             g_io_channel_set_flags            (GIOChannel   *channel,$/;"	p
g_io_channel_set_line_term	giochannel.h	/^void                  g_io_channel_set_line_term        (GIOChannel   *channel,$/;"	p
g_io_channel_shutdown	giochannel.h	/^GIOStatus g_io_channel_shutdown (GIOChannel      *channel,$/;"	p
g_io_channel_unix_get_fd	giochannel.h	/^gint        g_io_channel_unix_get_fd (GIOChannel *channel);$/;"	p
g_io_channel_unix_new	giochannel.h	/^GIOChannel* g_io_channel_unix_new    (int         fd);$/;"	p
g_io_channel_unref	giochannel.h	/^void        g_io_channel_unref  (GIOChannel    *channel);$/;"	p
g_io_channel_win32_get_fd	giochannel.h	/^gint        g_io_channel_win32_get_fd (GIOChannel *channel);$/;"	p
g_io_channel_win32_make_pollfd	giochannel.h	/^void        g_io_channel_win32_make_pollfd (GIOChannel   *channel,$/;"	p
g_io_channel_win32_new_fd	giochannel.h	/^GIOChannel* g_io_channel_win32_new_fd (gint         fd);$/;"	p
g_io_channel_win32_new_messages	giochannel.h	/^GIOChannel *g_io_channel_win32_new_messages (gsize hwnd);$/;"	p
g_io_channel_win32_new_messages	giochannel.h	/^GIOChannel *g_io_channel_win32_new_messages (guint hwnd);$/;"	p
g_io_channel_win32_new_socket	giochannel.h	/^GIOChannel *g_io_channel_win32_new_socket (gint socket);$/;"	p
g_io_channel_win32_poll	giochannel.h	/^gint        g_io_channel_win32_poll   (GPollFD    *fds,$/;"	p
g_io_channel_write	giochannel.h	/^GIOError  g_io_channel_write    (GIOChannel    *channel,$/;"	v
g_io_channel_write_chars	giochannel.h	/^GIOStatus   g_io_channel_write_chars      (GIOChannel   *channel,$/;"	p
g_io_channel_write_unichar	giochannel.h	/^GIOStatus   g_io_channel_write_unichar    (GIOChannel   *channel,$/;"	p
g_io_create_watch	giochannel.h	/^GSource * g_io_create_watch     (GIOChannel      *channel,$/;"	p
g_io_watch_funcs	giochannel.h	/^GLIB_VAR GSourceFuncs g_io_watch_funcs;$/;"	v
g_key_file_error_quark	gkeyfile.h	/^GQuark g_key_file_error_quark (void);$/;"	p
g_key_file_free	gkeyfile.h	/^void      g_key_file_free                   (GKeyFile             *key_file);$/;"	p
g_key_file_get_boolean	gkeyfile.h	/^gboolean  g_key_file_get_boolean            (GKeyFile             *key_file,$/;"	p
g_key_file_get_double	gkeyfile.h	/^gdouble   g_key_file_get_double             (GKeyFile             *key_file,$/;"	p
g_key_file_get_int64	gkeyfile.h	/^gint64    g_key_file_get_int64              (GKeyFile             *key_file,$/;"	p
g_key_file_get_integer	gkeyfile.h	/^gint      g_key_file_get_integer            (GKeyFile             *key_file,$/;"	p
g_key_file_get_uint64	gkeyfile.h	/^guint64   g_key_file_get_uint64             (GKeyFile             *key_file,$/;"	p
g_key_file_has_group	gkeyfile.h	/^gboolean  g_key_file_has_group              (GKeyFile             *key_file,$/;"	p
g_key_file_has_key	gkeyfile.h	/^gboolean  g_key_file_has_key                (GKeyFile             *key_file,$/;"	p
g_key_file_load_from_data	gkeyfile.h	/^gboolean  g_key_file_load_from_data         (GKeyFile             *key_file,$/;"	p
g_key_file_load_from_data_dirs	gkeyfile.h	/^gboolean g_key_file_load_from_data_dirs     (GKeyFile             *key_file,$/;"	p
g_key_file_load_from_dirs	gkeyfile.h	/^gboolean g_key_file_load_from_dirs          (GKeyFile             *key_file,$/;"	p
g_key_file_load_from_file	gkeyfile.h	/^gboolean  g_key_file_load_from_file         (GKeyFile             *key_file,$/;"	p
g_key_file_new	gkeyfile.h	/^GKeyFile *g_key_file_new                    (void);$/;"	p
g_key_file_ref	gkeyfile.h	/^GKeyFile *g_key_file_ref                    (GKeyFile             *key_file);$/;"	p
g_key_file_remove_comment	gkeyfile.h	/^gboolean  g_key_file_remove_comment         (GKeyFile             *key_file,$/;"	p
g_key_file_remove_group	gkeyfile.h	/^gboolean  g_key_file_remove_group           (GKeyFile             *key_file,$/;"	p
g_key_file_remove_key	gkeyfile.h	/^gboolean  g_key_file_remove_key             (GKeyFile             *key_file,$/;"	p
g_key_file_set_boolean	gkeyfile.h	/^void      g_key_file_set_boolean            (GKeyFile             *key_file,$/;"	p
g_key_file_set_boolean_list	gkeyfile.h	/^void      g_key_file_set_boolean_list       (GKeyFile             *key_file,$/;"	p
g_key_file_set_comment	gkeyfile.h	/^gboolean  g_key_file_set_comment            (GKeyFile             *key_file,$/;"	p
g_key_file_set_double	gkeyfile.h	/^void      g_key_file_set_double             (GKeyFile             *key_file,$/;"	p
g_key_file_set_double_list	gkeyfile.h	/^void      g_key_file_set_double_list        (GKeyFile             *key_file,$/;"	p
g_key_file_set_int64	gkeyfile.h	/^void      g_key_file_set_int64              (GKeyFile             *key_file,$/;"	p
g_key_file_set_integer	gkeyfile.h	/^void      g_key_file_set_integer            (GKeyFile             *key_file,$/;"	p
g_key_file_set_integer_list	gkeyfile.h	/^void      g_key_file_set_integer_list       (GKeyFile             *key_file,$/;"	p
g_key_file_set_list_separator	gkeyfile.h	/^void      g_key_file_set_list_separator     (GKeyFile             *key_file,$/;"	p
g_key_file_set_locale_string	gkeyfile.h	/^void      g_key_file_set_locale_string      (GKeyFile             *key_file,$/;"	p
g_key_file_set_locale_string_list	gkeyfile.h	/^void      g_key_file_set_locale_string_list (GKeyFile             *key_file,$/;"	p
g_key_file_set_string	gkeyfile.h	/^void      g_key_file_set_string             (GKeyFile             *key_file,$/;"	p
g_key_file_set_string_list	gkeyfile.h	/^void      g_key_file_set_string_list        (GKeyFile             *key_file,$/;"	p
g_key_file_set_uint64	gkeyfile.h	/^void      g_key_file_set_uint64             (GKeyFile             *key_file,$/;"	p
g_key_file_set_value	gkeyfile.h	/^void      g_key_file_set_value              (GKeyFile             *key_file,$/;"	p
g_key_file_unref	gkeyfile.h	/^void      g_key_file_unref                  (GKeyFile             *key_file);$/;"	p
g_list_find	glist.h	/^GList*   g_list_find                    (GList            *list,$/;"	p
g_list_find_custom	glist.h	/^GList*   g_list_find_custom             (GList            *list,$/;"	p
g_list_first	glist.h	/^GList*   g_list_first                   (GList            *list);$/;"	p
g_list_foreach	glist.h	/^void     g_list_foreach                 (GList            *list,$/;"	p
g_list_free	glist.h	/^void     g_list_free                    (GList            *list);$/;"	p
g_list_free1	glist.h	52;"	d
g_list_free_1	glist.h	/^void     g_list_free_1                  (GList            *list);$/;"	p
g_list_free_full	glist.h	/^void     g_list_free_full               (GList            *list,$/;"	p
g_list_index	glist.h	/^gint     g_list_index                   (GList            *list,$/;"	p
g_list_last	glist.h	/^GList*   g_list_last                    (GList            *list);$/;"	p
g_list_length	glist.h	/^guint    g_list_length                  (GList            *list);$/;"	p
g_list_next	glist.h	113;"	d
g_list_nth	glist.h	/^GList*   g_list_nth                     (GList            *list,$/;"	p
g_list_nth_data	glist.h	/^gpointer g_list_nth_data                (GList            *list,$/;"	p
g_list_nth_prev	glist.h	/^GList*   g_list_nth_prev                (GList            *list,$/;"	p
g_list_pop_allocator	deprecated/gallocator.h	/^void            g_list_pop_allocator    (void);$/;"	p
g_list_position	glist.h	/^gint     g_list_position                (GList            *list,$/;"	p
g_list_previous	glist.h	112;"	d
g_list_push_allocator	deprecated/gallocator.h	/^void            g_list_push_allocator   (GAllocator   *allocator);$/;"	p
g_listenv	genviron.h	/^gchar **      g_listenv          (void);$/;"	p
g_log_default_handler	gmessages.h	/^void            g_log_default_handler   (const gchar    *log_domain,$/;"	p
g_log_remove_handler	gmessages.h	/^void            g_log_remove_handler    (const gchar    *log_domain,$/;"	p
g_log_set_always_fatal	gmessages.h	/^GLogLevelFlags  g_log_set_always_fatal  (GLogLevelFlags  fatal_mask);$/;"	p
g_log_set_default_handler	gmessages.h	/^GLogFunc        g_log_set_default_handler (GLogFunc      log_func,$/;"	p
g_log_set_fatal_mask	gmessages.h	/^GLogLevelFlags  g_log_set_fatal_mask    (const gchar    *log_domain,$/;"	p
g_log_set_handler	gmessages.h	/^guint           g_log_set_handler       (const gchar    *log_domain,$/;"	p
g_logv	gmessages.h	/^void            g_logv                  (const gchar    *log_domain,$/;"	p
g_lstat	gstdio.h	/^int g_lstat     (const gchar *filename,$/;"	p
g_lstat	gstdio.h	70;"	d
g_main_context_acquire	gmain.h	/^gboolean g_main_context_acquire (GMainContext *context);$/;"	p
g_main_context_add_poll	gmain.h	/^void     g_main_context_add_poll    (GMainContext *context,$/;"	p
g_main_context_check	gmain.h	/^gint     g_main_context_check    (GMainContext *context,$/;"	p
g_main_context_default	gmain.h	/^GMainContext *g_main_context_default   (void);$/;"	p
g_main_context_dispatch	gmain.h	/^void     g_main_context_dispatch (GMainContext *context);$/;"	p
g_main_context_find_source_by_funcs_user_data	gmain.h	/^GSource      *g_main_context_find_source_by_funcs_user_data (GMainContext *context,$/;"	p
g_main_context_find_source_by_id	gmain.h	/^GSource      *g_main_context_find_source_by_id              (GMainContext *context,$/;"	p
g_main_context_find_source_by_user_data	gmain.h	/^GSource      *g_main_context_find_source_by_user_data       (GMainContext *context,$/;"	p
g_main_context_get_poll_func	gmain.h	/^GPollFunc g_main_context_get_poll_func (GMainContext *context);$/;"	p
g_main_context_get_thread_default	gmain.h	/^GMainContext *g_main_context_get_thread_default  (void);$/;"	p
g_main_context_invoke	gmain.h	/^void     g_main_context_invoke      (GMainContext   *context,$/;"	p
g_main_context_invoke_full	gmain.h	/^void     g_main_context_invoke_full (GMainContext   *context,$/;"	p
g_main_context_is_owner	gmain.h	/^gboolean g_main_context_is_owner (GMainContext *context);$/;"	p
g_main_context_iteration	gmain.h	/^gboolean      g_main_context_iteration (GMainContext *context,$/;"	p
g_main_context_new	gmain.h	/^GMainContext *g_main_context_new       (void);$/;"	p
g_main_context_pending	gmain.h	/^gboolean      g_main_context_pending   (GMainContext *context);$/;"	p
g_main_context_pop_thread_default	gmain.h	/^void          g_main_context_pop_thread_default  (GMainContext *context);$/;"	p
g_main_context_prepare	gmain.h	/^gboolean g_main_context_prepare  (GMainContext *context,$/;"	p
g_main_context_push_thread_default	gmain.h	/^void          g_main_context_push_thread_default (GMainContext *context);$/;"	p
g_main_context_query	gmain.h	/^gint     g_main_context_query    (GMainContext *context,$/;"	p
g_main_context_ref	gmain.h	/^GMainContext *g_main_context_ref       (GMainContext *context);$/;"	p
g_main_context_ref_thread_default	gmain.h	/^GMainContext *g_main_context_ref_thread_default  (void);$/;"	p
g_main_context_release	gmain.h	/^void     g_main_context_release (GMainContext *context);$/;"	p
g_main_context_remove_poll	gmain.h	/^void     g_main_context_remove_poll (GMainContext *context,$/;"	p
g_main_context_set_poll_func	gmain.h	/^void     g_main_context_set_poll_func (GMainContext *context,$/;"	p
g_main_context_unref	gmain.h	/^void          g_main_context_unref     (GMainContext *context);$/;"	p
g_main_context_wait	gmain.h	/^gboolean g_main_context_wait    (GMainContext *context,$/;"	p
g_main_context_wakeup	gmain.h	/^void     g_main_context_wakeup  (GMainContext *context);$/;"	p
g_main_current_source	gmain.h	/^GSource *g_main_current_source      (void);$/;"	p
g_main_depth	gmain.h	/^gint     g_main_depth               (void);$/;"	p
g_main_destroy	deprecated/gmain.h	83;"	d
g_main_is_running	deprecated/gmain.h	95;"	d
g_main_iteration	deprecated/gmain.h	110;"	d
g_main_loop_get_context	gmain.h	/^GMainContext *g_main_loop_get_context (GMainLoop    *loop);$/;"	p
g_main_loop_is_running	gmain.h	/^gboolean   g_main_loop_is_running (GMainLoop    *loop);$/;"	p
g_main_loop_new	gmain.h	/^GMainLoop *g_main_loop_new        (GMainContext *context,$/;"	p
g_main_loop_quit	gmain.h	/^void       g_main_loop_quit       (GMainLoop    *loop);$/;"	p
g_main_loop_ref	gmain.h	/^GMainLoop *g_main_loop_ref        (GMainLoop    *loop);$/;"	p
g_main_loop_run	gmain.h	/^void       g_main_loop_run        (GMainLoop    *loop);$/;"	p
g_main_loop_unref	gmain.h	/^void       g_main_loop_unref      (GMainLoop    *loop);$/;"	p
g_main_new	deprecated/gmain.h	52;"	d
g_main_pending	deprecated/gmain.h	122;"	d
g_main_quit	deprecated/gmain.h	73;"	d
g_main_run	deprecated/gmain.h	62;"	d
g_main_set_poll_func	deprecated/gmain.h	133;"	d
g_mapped_file_get_contents	gmappedfile.h	/^gchar       *g_mapped_file_get_contents (GMappedFile  *file);$/;"	p
g_mapped_file_get_length	gmappedfile.h	/^gsize        g_mapped_file_get_length   (GMappedFile  *file);$/;"	p
g_mapped_file_ref	gmappedfile.h	/^GMappedFile *g_mapped_file_ref          (GMappedFile  *file);$/;"	p
g_mapped_file_unref	gmappedfile.h	/^void         g_mapped_file_unref        (GMappedFile  *file);$/;"	p
g_markup_collect_attributes	gmarkup.h	/^gboolean   g_markup_collect_attributes (const gchar         *element_name,$/;"	p
g_markup_error_quark	gmarkup.h	/^GQuark g_markup_error_quark (void);$/;"	p
g_markup_escape_text	gmarkup.h	/^gchar* g_markup_escape_text (const gchar *text,$/;"	p
g_markup_parse_context_end_parse	gmarkup.h	/^gboolean             g_markup_parse_context_end_parse (GMarkupParseContext *context,$/;"	p
g_markup_parse_context_free	gmarkup.h	/^void                 g_markup_parse_context_free  (GMarkupParseContext *context);$/;"	p
g_markup_parse_context_get_element	gmarkup.h	/^const gchar *        g_markup_parse_context_get_element (GMarkupParseContext *context);$/;"	p
g_markup_parse_context_get_element_stack	gmarkup.h	/^const GSList *       g_markup_parse_context_get_element_stack (GMarkupParseContext *context);$/;"	p
g_markup_parse_context_get_position	gmarkup.h	/^void                 g_markup_parse_context_get_position (GMarkupParseContext *context,$/;"	p
g_markup_parse_context_get_user_data	gmarkup.h	/^gpointer             g_markup_parse_context_get_user_data (GMarkupParseContext *context);$/;"	p
g_markup_parse_context_new	gmarkup.h	/^GMarkupParseContext *g_markup_parse_context_new   (const GMarkupParser *parser,$/;"	p
g_markup_parse_context_parse	gmarkup.h	/^gboolean             g_markup_parse_context_parse (GMarkupParseContext *context,$/;"	p
g_markup_parse_context_pop	gmarkup.h	/^gpointer             g_markup_parse_context_pop   (GMarkupParseContext *context);$/;"	p
g_markup_parse_context_push	gmarkup.h	/^void                 g_markup_parse_context_push  (GMarkupParseContext *context,$/;"	p
g_markup_vprintf_escaped	gmarkup.h	/^gchar *g_markup_vprintf_escaped (const char *format,$/;"	p
g_match_info_expand_references	gregex.h	/^gchar		 *g_match_info_expand_references(const GMatchInfo    *match_info,$/;"	p
g_match_info_fetch	gregex.h	/^gchar		 *g_match_info_fetch		(const GMatchInfo    *match_info,$/;"	p
g_match_info_fetch_all	gregex.h	/^gchar		**g_match_info_fetch_all	(const GMatchInfo    *match_info);$/;"	p
g_match_info_fetch_named	gregex.h	/^gchar		 *g_match_info_fetch_named	(const GMatchInfo    *match_info,$/;"	p
g_match_info_fetch_named_pos	gregex.h	/^gboolean	  g_match_info_fetch_named_pos	(const GMatchInfo    *match_info,$/;"	p
g_match_info_fetch_pos	gregex.h	/^gboolean	  g_match_info_fetch_pos	(const GMatchInfo    *match_info,$/;"	p
g_match_info_free	gregex.h	/^void		  g_match_info_free		(GMatchInfo          *match_info);$/;"	p
g_match_info_get_match_count	gregex.h	/^gint		  g_match_info_get_match_count	(const GMatchInfo    *match_info);$/;"	p
g_match_info_get_regex	gregex.h	/^GRegex		 *g_match_info_get_regex	(const GMatchInfo    *match_info);$/;"	p
g_match_info_get_string	gregex.h	/^const gchar      *g_match_info_get_string       (const GMatchInfo    *match_info);$/;"	p
g_match_info_is_partial_match	gregex.h	/^gboolean	  g_match_info_is_partial_match	(const GMatchInfo    *match_info);$/;"	p
g_match_info_matches	gregex.h	/^gboolean	  g_match_info_matches		(const GMatchInfo    *match_info);$/;"	p
g_match_info_next	gregex.h	/^gboolean	  g_match_info_next		(GMatchInfo          *match_info,$/;"	p
g_match_info_ref	gregex.h	/^GMatchInfo       *g_match_info_ref              (GMatchInfo          *match_info);$/;"	p
g_match_info_unref	gregex.h	/^void              g_match_info_unref            (GMatchInfo          *match_info);$/;"	p
g_mem_chunk_alloc	deprecated/gallocator.h	/^gpointer        g_mem_chunk_alloc       (GMemChunk    *mem_chunk);$/;"	p
g_mem_chunk_alloc0	deprecated/gallocator.h	/^gpointer        g_mem_chunk_alloc0      (GMemChunk    *mem_chunk);$/;"	p
g_mem_chunk_clean	deprecated/gallocator.h	/^void            g_mem_chunk_clean       (GMemChunk    *mem_chunk);$/;"	p
g_mem_chunk_create	deprecated/gallocator.h	41;"	d
g_mem_chunk_destroy	deprecated/gallocator.h	/^void            g_mem_chunk_destroy     (GMemChunk    *mem_chunk);$/;"	p
g_mem_chunk_free	deprecated/gallocator.h	/^void            g_mem_chunk_free        (GMemChunk    *mem_chunk,$/;"	p
g_mem_chunk_info	deprecated/gallocator.h	/^void            g_mem_chunk_info        (void);$/;"	p
g_mem_chunk_new	deprecated/gallocator.h	/^GMemChunk *     g_mem_chunk_new         (const gchar  *name,$/;"	p
g_mem_chunk_print	deprecated/gallocator.h	/^void            g_mem_chunk_print       (GMemChunk    *mem_chunk);$/;"	p
g_mem_chunk_reset	deprecated/gallocator.h	/^void            g_mem_chunk_reset       (GMemChunk    *mem_chunk);$/;"	p
g_mem_gc_friendly	gmem.h	/^GLIB_VAR gboolean g_mem_gc_friendly;$/;"	v
g_mem_is_system_malloc	gmem.h	/^gboolean g_mem_is_system_malloc (void);$/;"	p
g_mem_profile	gmem.h	/^void	g_mem_profile	(void);$/;"	p
g_mem_set_vtable	gmem.h	/^void	 g_mem_set_vtable (GMemVTable	*vtable);$/;"	p
g_message	gmessages.h	/^g_message (const gchar *format,$/;"	f
g_message	gmessages.h	146;"	d
g_message	gmessages.h	166;"	d
g_mkdir	gstdio.h	/^int g_mkdir     (const gchar *filename,$/;"	p
g_mkdir	gstdio.h	68;"	d
g_mkdir_with_parents	gfileutils.h	/^gint     g_mkdir_with_parents (const gchar *pathname,$/;"	p
g_mkdtemp	gfileutils.h	/^gchar   *g_mkdtemp            (gchar        *tmpl);$/;"	p
g_mkdtemp_full	gfileutils.h	/^gchar   *g_mkdtemp_full       (gchar        *tmpl,$/;"	p
g_mkstemp	gfileutils.h	/^gint     g_mkstemp            (gchar        *tmpl);$/;"	p
g_mkstemp	gfileutils.h	84;"	d
g_mkstemp_full	gfileutils.h	/^gint     g_mkstemp_full       (gchar        *tmpl,$/;"	p
g_mutex_clear	gthread.h	/^void            g_mutex_clear                   (GMutex         *mutex);$/;"	p
g_mutex_free	deprecated/gthread.h	/^void            g_mutex_free            (GMutex *mutex);$/;"	p
g_mutex_init	gthread.h	/^void            g_mutex_init                    (GMutex         *mutex);$/;"	p
g_mutex_lock	gthread.h	/^void            g_mutex_lock                    (GMutex         *mutex);$/;"	p
g_mutex_new	deprecated/gthread.h	/^GMutex *        g_mutex_new             (void);$/;"	p
g_mutex_trylock	gthread.h	/^gboolean        g_mutex_trylock                 (GMutex         *mutex);$/;"	p
g_mutex_unlock	gthread.h	/^void            g_mutex_unlock                  (GMutex         *mutex);$/;"	p
g_new	gmem.h	157;"	d
g_new0	gmem.h	174;"	d
g_newa	galloca.h	108;"	d
g_node_append	gnode.h	154;"	d
g_node_append_data	gnode.h	218;"	d
g_node_child_index	gnode.h	/^gint	 g_node_child_index	 (GNode		  *node,$/;"	p
g_node_child_position	gnode.h	/^gint	 g_node_child_position	 (GNode		  *node,$/;"	p
g_node_children_foreach	gnode.h	/^void	 g_node_children_foreach (GNode		  *node,$/;"	p
g_node_copy	gnode.h	/^GNode*   g_node_copy            (GNode            *node);$/;"	p
g_node_copy_deep	gnode.h	/^GNode*   g_node_copy_deep       (GNode            *node,$/;"	p
g_node_depth	gnode.h	/^guint	 g_node_depth		(GNode		  *node);$/;"	p
g_node_destroy	gnode.h	/^void	 g_node_destroy		(GNode		  *root);$/;"	p
g_node_find	gnode.h	/^GNode*	 g_node_find		(GNode		  *root,$/;"	p
g_node_find_child	gnode.h	/^GNode*	 g_node_find_child	 (GNode		  *node,$/;"	p
g_node_first_child	gnode.h	293;"	d
g_node_first_sibling	gnode.h	/^GNode*	 g_node_first_sibling	 (GNode		  *node);$/;"	p
g_node_get_root	gnode.h	/^GNode*	 g_node_get_root	(GNode		  *node);$/;"	p
g_node_insert	gnode.h	/^GNode*	 g_node_insert		(GNode		  *parent,$/;"	p
g_node_insert_after	gnode.h	/^GNode*   g_node_insert_after    (GNode            *parent,$/;"	p
g_node_insert_before	gnode.h	/^GNode*	 g_node_insert_before	(GNode		  *parent,$/;"	p
g_node_insert_data	gnode.h	168;"	d
g_node_insert_data_after	gnode.h	182;"	d
g_node_insert_data_before	gnode.h	194;"	d
g_node_is_ancestor	gnode.h	/^gboolean g_node_is_ancestor	(GNode		  *node,$/;"	p
g_node_last_child	gnode.h	/^GNode*	 g_node_last_child	 (GNode		  *node);$/;"	p
g_node_last_sibling	gnode.h	/^GNode*	 g_node_last_sibling	 (GNode		  *node);$/;"	p
g_node_max_height	gnode.h	/^guint	 g_node_max_height	 (GNode *root);$/;"	p
g_node_n_children	gnode.h	/^guint	 g_node_n_children	 (GNode		  *node);$/;"	p
g_node_n_nodes	gnode.h	/^guint	 g_node_n_nodes		(GNode		  *root,$/;"	p
g_node_new	gnode.h	/^GNode*	 g_node_new		(gpointer	   data);$/;"	p
g_node_next_sibling	gnode.h	281;"	d
g_node_nth_child	gnode.h	/^GNode*	 g_node_nth_child	 (GNode		  *node,$/;"	p
g_node_pop_allocator	deprecated/gallocator.h	/^void            g_node_pop_allocator    (void);$/;"	p
g_node_prepend	gnode.h	/^GNode*	 g_node_prepend		(GNode		  *parent,$/;"	p
g_node_prepend_data	gnode.h	206;"	d
g_node_prev_sibling	gnode.h	269;"	d
g_node_push_allocator	deprecated/gallocator.h	/^void            g_node_push_allocator   (GAllocator   *allocator);$/;"	p
g_node_reverse_children	gnode.h	/^void	 g_node_reverse_children (GNode		  *node);$/;"	p
g_node_traverse	gnode.h	/^void	 g_node_traverse	(GNode		  *root,$/;"	p
g_node_unlink	gnode.h	/^void	 g_node_unlink		(GNode		  *node);$/;"	p
g_ntohl	gtypes.h	379;"	d
g_ntohs	gtypes.h	380;"	d
g_nullify_pointer	gutils.h	/^void                  g_nullify_pointer    (gpointer    *nullify_location);$/;"	p
g_on_error_query	gbacktrace.h	/^void g_on_error_query (const gchar *prg_name);$/;"	p
g_on_error_stack_trace	gbacktrace.h	/^void g_on_error_stack_trace (const gchar *prg_name);$/;"	p
g_once	gthread.h	200;"	d
g_once	gthread.h	202;"	d
g_once_impl	gthread.h	/^gpointer        g_once_impl                     (GOnce          *once,$/;"	p
g_once_init_enter	gthread.h	/^gboolean        g_once_init_enter               (volatile void  *location);$/;"	p
g_once_init_enter	gthread.h	209;"	d
g_once_init_enter	gthread.h	223;"	d
g_once_init_enter_impl	deprecated/gthread.h	/^gboolean g_once_init_enter_impl          (volatile gsize *location);$/;"	p
g_once_init_leave	gthread.h	/^void            g_once_init_leave               (volatile void  *location,$/;"	p
g_once_init_leave	gthread.h	216;"	d
g_once_init_leave	gthread.h	225;"	d
g_open	gstdio.h	/^int g_open      (const gchar *filename,$/;"	p
g_open	gstdio.h	65;"	d
g_option_context_add_group	goption.h	/^void            g_option_context_add_group      (GOptionContext *context,$/;"	p
g_option_context_add_main_entries	goption.h	/^void            g_option_context_add_main_entries (GOptionContext      *context,$/;"	p
g_option_context_free	goption.h	/^void            g_option_context_free             (GOptionContext      *context);$/;"	p
g_option_context_get_description	goption.h	/^const gchar *   g_option_context_get_description  (GOptionContext     *context);$/;"	p
g_option_context_get_help	goption.h	/^gchar        *g_option_context_get_help       (GOptionContext *context,$/;"	p
g_option_context_get_help_enabled	goption.h	/^gboolean	g_option_context_get_help_enabled (GOptionContext      *context);$/;"	p
g_option_context_get_ignore_unknown_options	goption.h	/^gboolean        g_option_context_get_ignore_unknown_options (GOptionContext *context);$/;"	p
g_option_context_get_main_group	goption.h	/^GOptionGroup *g_option_context_get_main_group (GOptionContext *context);$/;"	p
g_option_context_get_summary	goption.h	/^const gchar *   g_option_context_get_summary      (GOptionContext     *context);$/;"	p
g_option_context_new	goption.h	/^GOptionContext *g_option_context_new              (const gchar         *parameter_string);$/;"	p
g_option_context_parse	goption.h	/^gboolean        g_option_context_parse            (GOptionContext      *context,$/;"	p
g_option_context_set_description	goption.h	/^void            g_option_context_set_description  (GOptionContext      *context,$/;"	p
g_option_context_set_help_enabled	goption.h	/^void		g_option_context_set_help_enabled (GOptionContext      *context,$/;"	p
g_option_context_set_ignore_unknown_options	goption.h	/^void		g_option_context_set_ignore_unknown_options (GOptionContext *context,$/;"	p
g_option_context_set_main_group	goption.h	/^void          g_option_context_set_main_group (GOptionContext *context,$/;"	p
g_option_context_set_summary	goption.h	/^void            g_option_context_set_summary      (GOptionContext      *context,$/;"	p
g_option_context_set_translate_func	goption.h	/^void            g_option_context_set_translate_func (GOptionContext     *context,$/;"	p
g_option_context_set_translation_domain	goption.h	/^void            g_option_context_set_translation_domain (GOptionContext  *context,$/;"	p
g_option_error_quark	goption.h	/^GQuark g_option_error_quark (void);$/;"	p
g_option_group_add_entries	goption.h	/^void          g_option_group_add_entries            (GOptionGroup       *group,$/;"	p
g_option_group_free	goption.h	/^void          g_option_group_free                   (GOptionGroup       *group);$/;"	p
g_option_group_new	goption.h	/^GOptionGroup *g_option_group_new                    (const gchar        *name,$/;"	p
g_option_group_set_error_hook	goption.h	/^void	      g_option_group_set_error_hook	    (GOptionGroup       *group,$/;"	p
g_option_group_set_parse_hooks	goption.h	/^void	      g_option_group_set_parse_hooks	    (GOptionGroup       *group,$/;"	p
g_option_group_set_translate_func	goption.h	/^void          g_option_group_set_translate_func     (GOptionGroup       *group,$/;"	p
g_option_group_set_translation_domain	goption.h	/^void          g_option_group_set_translation_domain (GOptionGroup       *group,$/;"	p
g_parse_debug_string	gutils.h	/^guint                 g_parse_debug_string (const gchar     *string,$/;"	p
g_path_is_absolute	gfileutils.h	/^gboolean     g_path_is_absolute (const gchar *file_name);$/;"	p
g_path_skip_root	gfileutils.h	/^const gchar *g_path_skip_root   (const gchar *file_name);$/;"	p
g_pattern_match	gpattern.h	/^gboolean      g_pattern_match          (GPatternSpec *pspec,$/;"	p
g_pattern_match_simple	gpattern.h	/^gboolean      g_pattern_match_simple   (const gchar  *pattern,$/;"	p
g_pattern_match_string	gpattern.h	/^gboolean      g_pattern_match_string   (GPatternSpec *pspec,$/;"	p
g_pattern_spec_equal	gpattern.h	/^gboolean      g_pattern_spec_equal     (GPatternSpec *pspec1,$/;"	p
g_pattern_spec_free	gpattern.h	/^void          g_pattern_spec_free      (GPatternSpec *pspec);$/;"	p
g_pattern_spec_new	gpattern.h	/^GPatternSpec* g_pattern_spec_new       (const gchar  *pattern);$/;"	p
g_pointer_bit_lock	gbitlock.h	/^void      g_pointer_bit_lock              (volatile void *address,$/;"	p
g_pointer_bit_lock	gbitlock.h	50;"	d
g_pointer_bit_trylock	gbitlock.h	/^gboolean  g_pointer_bit_trylock           (volatile void *address,$/;"	p
g_pointer_bit_trylock	gbitlock.h	56;"	d
g_pointer_bit_unlock	gbitlock.h	/^void      g_pointer_bit_unlock            (volatile void *address,$/;"	p
g_pointer_bit_unlock	gbitlock.h	62;"	d
g_poll	gpoll.h	/^gint g_poll (GPollFD *fds,$/;"	p
g_printf_string_upper_bound	gmessages.h	/^gsize	g_printf_string_upper_bound (const gchar* format,$/;"	p
g_private_get	gthread.h	/^gpointer        g_private_get                   (GPrivate       *key);$/;"	p
g_private_new	deprecated/gthread.h	/^GPrivate *      g_private_new             (GDestroyNotify notify);$/;"	p
g_private_replace	gthread.h	/^void            g_private_replace               (GPrivate       *key,$/;"	p
g_private_set	gthread.h	/^void            g_private_set                   (GPrivate       *key,$/;"	p
g_propagate_error	gerror.h	/^void     g_propagate_error     (GError       **dest,$/;"	p
g_ptr_array_add	garray.h	/^void       g_ptr_array_add                (GPtrArray        *array,$/;"	p
g_ptr_array_foreach	garray.h	/^void       g_ptr_array_foreach            (GPtrArray        *array,$/;"	p
g_ptr_array_free	garray.h	/^gpointer*  g_ptr_array_free               (GPtrArray        *array,$/;"	p
g_ptr_array_index	garray.h	114;"	d
g_ptr_array_new	garray.h	/^GPtrArray* g_ptr_array_new                (void);$/;"	p
g_ptr_array_new_full	garray.h	/^GPtrArray* g_ptr_array_new_full           (guint             reserved_size,$/;"	p
g_ptr_array_new_with_free_func	garray.h	/^GPtrArray* g_ptr_array_new_with_free_func (GDestroyNotify    element_free_func);$/;"	p
g_ptr_array_ref	garray.h	/^GPtrArray* g_ptr_array_ref                (GPtrArray        *array);$/;"	p
g_ptr_array_remove	garray.h	/^gboolean   g_ptr_array_remove             (GPtrArray        *array,$/;"	p
g_ptr_array_remove_fast	garray.h	/^gboolean   g_ptr_array_remove_fast        (GPtrArray        *array,$/;"	p
g_ptr_array_remove_index	garray.h	/^gpointer   g_ptr_array_remove_index       (GPtrArray        *array,$/;"	p
g_ptr_array_remove_index_fast	garray.h	/^gpointer   g_ptr_array_remove_index_fast  (GPtrArray        *array,$/;"	p
g_ptr_array_remove_range	garray.h	/^void       g_ptr_array_remove_range       (GPtrArray        *array,$/;"	p
g_ptr_array_set_free_func	garray.h	/^void       g_ptr_array_set_free_func      (GPtrArray        *array,$/;"	p
g_ptr_array_set_size	garray.h	/^void       g_ptr_array_set_size           (GPtrArray        *array,$/;"	p
g_ptr_array_sized_new	garray.h	/^GPtrArray* g_ptr_array_sized_new          (guint             reserved_size);$/;"	p
g_ptr_array_sort	garray.h	/^void       g_ptr_array_sort               (GPtrArray        *array,$/;"	p
g_ptr_array_sort_with_data	garray.h	/^void       g_ptr_array_sort_with_data     (GPtrArray        *array,$/;"	p
g_ptr_array_unref	garray.h	/^void       g_ptr_array_unref              (GPtrArray        *array);$/;"	p
g_qsort_with_data	gqsort.h	/^void g_qsort_with_data (gconstpointer    pbase,$/;"	p
g_quark_from_static_string	gquark.h	/^GQuark                g_quark_from_static_string (const gchar *string);$/;"	p
g_quark_from_string	gquark.h	/^GQuark                g_quark_from_string        (const gchar *string);$/;"	p
g_quark_try_string	gquark.h	/^GQuark                g_quark_try_string         (const gchar *string);$/;"	p
g_queue_clear	gqueue.h	/^void     g_queue_clear          (GQueue           *queue);$/;"	p
g_queue_copy	gqueue.h	/^GQueue * g_queue_copy           (GQueue           *queue);$/;"	p
g_queue_delete_link	gqueue.h	/^void     g_queue_delete_link    (GQueue           *queue,$/;"	p
g_queue_find	gqueue.h	/^GList *  g_queue_find           (GQueue           *queue,$/;"	p
g_queue_find_custom	gqueue.h	/^GList *  g_queue_find_custom    (GQueue           *queue,$/;"	p
g_queue_foreach	gqueue.h	/^void     g_queue_foreach        (GQueue           *queue,$/;"	p
g_queue_free	gqueue.h	/^void     g_queue_free           (GQueue           *queue);$/;"	p
g_queue_free_full	gqueue.h	/^void     g_queue_free_full      (GQueue           *queue,$/;"	p
g_queue_get_length	gqueue.h	/^guint    g_queue_get_length     (GQueue           *queue);$/;"	p
g_queue_index	gqueue.h	/^gint     g_queue_index          (GQueue           *queue,$/;"	p
g_queue_init	gqueue.h	/^void     g_queue_init           (GQueue           *queue);$/;"	p
g_queue_insert_after	gqueue.h	/^void     g_queue_insert_after   (GQueue           *queue,$/;"	p
g_queue_insert_before	gqueue.h	/^void     g_queue_insert_before  (GQueue           *queue,$/;"	p
g_queue_insert_sorted	gqueue.h	/^void     g_queue_insert_sorted  (GQueue           *queue,$/;"	p
g_queue_is_empty	gqueue.h	/^gboolean g_queue_is_empty       (GQueue           *queue);$/;"	p
g_queue_link_index	gqueue.h	/^gint     g_queue_link_index     (GQueue           *queue,$/;"	p
g_queue_new	gqueue.h	/^GQueue*  g_queue_new            (void);$/;"	p
g_queue_peek_head	gqueue.h	/^gpointer g_queue_peek_head      (GQueue           *queue);$/;"	p
g_queue_peek_head_link	gqueue.h	/^GList*   g_queue_peek_head_link (GQueue           *queue);$/;"	p
g_queue_peek_nth	gqueue.h	/^gpointer g_queue_peek_nth       (GQueue           *queue,$/;"	p
g_queue_peek_nth_link	gqueue.h	/^GList*   g_queue_peek_nth_link  (GQueue           *queue,$/;"	p
g_queue_peek_tail	gqueue.h	/^gpointer g_queue_peek_tail      (GQueue           *queue);$/;"	p
g_queue_peek_tail_link	gqueue.h	/^GList*   g_queue_peek_tail_link (GQueue           *queue);$/;"	p
g_queue_pop_head	gqueue.h	/^gpointer g_queue_pop_head       (GQueue           *queue);$/;"	p
g_queue_pop_head_link	gqueue.h	/^GList*   g_queue_pop_head_link  (GQueue           *queue);$/;"	p
g_queue_pop_nth	gqueue.h	/^gpointer g_queue_pop_nth        (GQueue           *queue,$/;"	p
g_queue_pop_nth_link	gqueue.h	/^GList*   g_queue_pop_nth_link   (GQueue           *queue,$/;"	p
g_queue_pop_tail	gqueue.h	/^gpointer g_queue_pop_tail       (GQueue           *queue);$/;"	p
g_queue_pop_tail_link	gqueue.h	/^GList*   g_queue_pop_tail_link  (GQueue           *queue);$/;"	p
g_queue_push_head	gqueue.h	/^void     g_queue_push_head      (GQueue           *queue,$/;"	p
g_queue_push_head_link	gqueue.h	/^void     g_queue_push_head_link (GQueue           *queue,$/;"	p
g_queue_push_nth	gqueue.h	/^void     g_queue_push_nth       (GQueue           *queue,$/;"	p
g_queue_push_nth_link	gqueue.h	/^void     g_queue_push_nth_link  (GQueue           *queue,$/;"	p
g_queue_push_tail	gqueue.h	/^void     g_queue_push_tail      (GQueue           *queue,$/;"	p
g_queue_push_tail_link	gqueue.h	/^void     g_queue_push_tail_link (GQueue           *queue,$/;"	p
g_queue_remove	gqueue.h	/^gboolean g_queue_remove         (GQueue           *queue,$/;"	p
g_queue_remove_all	gqueue.h	/^guint    g_queue_remove_all     (GQueue           *queue,$/;"	p
g_queue_reverse	gqueue.h	/^void     g_queue_reverse        (GQueue           *queue);$/;"	p
g_queue_sort	gqueue.h	/^void     g_queue_sort           (GQueue           *queue,$/;"	p
g_queue_unlink	gqueue.h	/^void     g_queue_unlink         (GQueue           *queue,$/;"	p
g_rand_boolean	grand.h	61;"	d
g_rand_copy	grand.h	/^GRand*  g_rand_copy           (GRand   *rand_);$/;"	p
g_rand_double	grand.h	/^gdouble g_rand_double         (GRand   *rand_);$/;"	p
g_rand_double_range	grand.h	/^gdouble g_rand_double_range   (GRand   *rand_,$/;"	p
g_rand_free	grand.h	/^void    g_rand_free           (GRand   *rand_);$/;"	p
g_rand_int	grand.h	/^guint32 g_rand_int            (GRand   *rand_);$/;"	p
g_rand_int_range	grand.h	/^gint32  g_rand_int_range      (GRand   *rand_,$/;"	p
g_rand_new	grand.h	/^GRand*  g_rand_new            (void);$/;"	p
g_rand_new_with_seed	grand.h	/^GRand*  g_rand_new_with_seed  (guint32  seed);$/;"	p
g_rand_new_with_seed_array	grand.h	/^GRand*  g_rand_new_with_seed_array (const guint32 *seed,$/;"	p
g_rand_set_seed	grand.h	/^void    g_rand_set_seed       (GRand   *rand_,$/;"	p
g_rand_set_seed_array	grand.h	/^void	g_rand_set_seed_array (GRand   *rand_,$/;"	p
g_random_boolean	grand.h	73;"	d
g_random_double	grand.h	/^gdouble g_random_double       (void);$/;"	p
g_random_double_range	grand.h	/^gdouble g_random_double_range (gdouble  begin,$/;"	p
g_random_int	grand.h	/^guint32 g_random_int          (void);$/;"	p
g_random_int_range	grand.h	/^gint32  g_random_int_range    (gint32   begin,$/;"	p
g_random_set_seed	grand.h	/^void    g_random_set_seed     (guint32  seed);$/;"	p
g_rec_mutex_clear	gthread.h	/^void            g_rec_mutex_clear               (GRecMutex      *rec_mutex);$/;"	p
g_rec_mutex_init	gthread.h	/^void            g_rec_mutex_init                (GRecMutex      *rec_mutex);$/;"	p
g_rec_mutex_lock	gthread.h	/^void            g_rec_mutex_lock                (GRecMutex      *rec_mutex);$/;"	p
g_rec_mutex_trylock	gthread.h	/^gboolean        g_rec_mutex_trylock             (GRecMutex      *rec_mutex);$/;"	p
g_rec_mutex_unlock	gthread.h	/^void            g_rec_mutex_unlock              (GRecMutex      *rec_mutex);$/;"	p
g_regex_check_replacement	gregex.h	/^gboolean	  g_regex_check_replacement	(const gchar         *replacement,$/;"	p
g_regex_error_quark	gregex.h	/^GQuark g_regex_error_quark (void);$/;"	p
g_regex_escape_nul	gregex.h	/^gchar		 *g_regex_escape_nul		(const gchar         *string,$/;"	p
g_regex_escape_string	gregex.h	/^gchar		 *g_regex_escape_string		(const gchar         *string,$/;"	p
g_regex_get_capture_count	gregex.h	/^gint		  g_regex_get_capture_count	(const GRegex        *regex);$/;"	p
g_regex_get_compile_flags	gregex.h	/^GRegexCompileFlags g_regex_get_compile_flags    (const GRegex        *regex);$/;"	p
g_regex_get_match_flags	gregex.h	/^GRegexMatchFlags   g_regex_get_match_flags      (const GRegex        *regex);$/;"	p
g_regex_get_max_backref	gregex.h	/^gint		  g_regex_get_max_backref	(const GRegex        *regex);$/;"	p
g_regex_get_pattern	gregex.h	/^const gchar	 *g_regex_get_pattern		(const GRegex        *regex);$/;"	p
g_regex_get_string_number	gregex.h	/^gint		  g_regex_get_string_number	(const GRegex        *regex, $/;"	p
g_regex_match	gregex.h	/^gboolean	  g_regex_match			(const GRegex        *regex,$/;"	p
g_regex_match_all	gregex.h	/^gboolean	  g_regex_match_all		(const GRegex        *regex,$/;"	p
g_regex_match_all_full	gregex.h	/^gboolean	  g_regex_match_all_full	(const GRegex        *regex,$/;"	p
g_regex_match_full	gregex.h	/^gboolean	  g_regex_match_full		(const GRegex        *regex,$/;"	p
g_regex_match_simple	gregex.h	/^gboolean	  g_regex_match_simple		(const gchar         *pattern,$/;"	p
g_regex_new	gregex.h	/^GRegex		 *g_regex_new			(const gchar         *pattern,$/;"	p
g_regex_ref	gregex.h	/^GRegex           *g_regex_ref			(GRegex              *regex);$/;"	p
g_regex_replace	gregex.h	/^gchar		 *g_regex_replace		(const GRegex        *regex,$/;"	p
g_regex_replace_eval	gregex.h	/^gchar		 *g_regex_replace_eval		(const GRegex        *regex,$/;"	p
g_regex_replace_literal	gregex.h	/^gchar		 *g_regex_replace_literal	(const GRegex        *regex,$/;"	p
g_regex_split	gregex.h	/^gchar		**g_regex_split			(const GRegex        *regex,$/;"	p
g_regex_split_full	gregex.h	/^gchar		**g_regex_split_full		(const GRegex        *regex,$/;"	p
g_regex_split_simple	gregex.h	/^gchar		**g_regex_split_simple		(const gchar         *pattern,$/;"	p
g_regex_unref	gregex.h	/^void		  g_regex_unref			(GRegex              *regex);$/;"	p
g_relation_count	deprecated/grel.h	/^gint       g_relation_count   (GRelation   *relation,$/;"	p
g_relation_delete	deprecated/grel.h	/^gint       g_relation_delete  (GRelation   *relation,$/;"	p
g_relation_destroy	deprecated/grel.h	/^void       g_relation_destroy (GRelation   *relation);$/;"	p
g_relation_exists	deprecated/grel.h	/^gboolean   g_relation_exists  (GRelation   *relation,$/;"	p
g_relation_index	deprecated/grel.h	/^void       g_relation_index   (GRelation   *relation,$/;"	p
g_relation_insert	deprecated/grel.h	/^void       g_relation_insert  (GRelation   *relation,$/;"	p
g_relation_new	deprecated/grel.h	/^GRelation* g_relation_new     (gint         fields);$/;"	p
g_relation_print	deprecated/grel.h	/^void       g_relation_print   (GRelation   *relation);$/;"	p
g_relation_select	deprecated/grel.h	/^GTuples*   g_relation_select  (GRelation   *relation,$/;"	p
g_reload_user_special_dirs_cache	gutils.h	/^void      g_reload_user_special_dirs_cache     (void);$/;"	p
g_remove	gstdio.h	/^int g_remove    (const gchar *filename);$/;"	p
g_remove	gstdio.h	71;"	d
g_rename	gstdio.h	/^int g_rename    (const gchar *oldfilename,$/;"	p
g_rename	gstdio.h	67;"	d
g_renew	gmem.h	188;"	d
g_return_if_fail	gmessages.h	283;"	d
g_return_if_fail	gmessages.h	320;"	d
g_return_if_fail	gmessages.h	358;"	d
g_return_if_fail_warning	gmessages.h	/^void g_return_if_fail_warning (const char *log_domain,$/;"	p
g_return_if_reached	gmessages.h	306;"	d
g_return_if_reached	gmessages.h	338;"	d
g_return_if_reached	gmessages.h	382;"	d
g_return_val_if_fail	gmessages.h	298;"	d
g_return_val_if_fail	gmessages.h	329;"	d
g_return_val_if_fail	gmessages.h	370;"	d
g_return_val_if_reached	gmessages.h	314;"	d
g_return_val_if_reached	gmessages.h	347;"	d
g_return_val_if_reached	gmessages.h	390;"	d
g_rmdir	gstdio.h	/^int g_rmdir     (const gchar *filename);$/;"	p
g_rmdir	gstdio.h	/^int g_rmdir  (const gchar *filename);$/;"	p
g_rw_lock_clear	gthread.h	/^void            g_rw_lock_clear                 (GRWLock        *rw_lock);$/;"	p
g_rw_lock_init	gthread.h	/^void            g_rw_lock_init                  (GRWLock        *rw_lock);$/;"	p
g_rw_lock_reader_lock	gthread.h	/^void            g_rw_lock_reader_lock           (GRWLock        *rw_lock);$/;"	p
g_rw_lock_reader_trylock	gthread.h	/^gboolean        g_rw_lock_reader_trylock        (GRWLock        *rw_lock);$/;"	p
g_rw_lock_reader_unlock	gthread.h	/^void            g_rw_lock_reader_unlock         (GRWLock        *rw_lock);$/;"	p
g_rw_lock_writer_lock	gthread.h	/^void            g_rw_lock_writer_lock           (GRWLock        *rw_lock);$/;"	p
g_rw_lock_writer_trylock	gthread.h	/^gboolean        g_rw_lock_writer_trylock        (GRWLock        *rw_lock);$/;"	p
g_rw_lock_writer_unlock	gthread.h	/^void            g_rw_lock_writer_unlock         (GRWLock        *rw_lock);$/;"	p
g_scanner_add_symbol	gscanner.h	265;"	d
g_scanner_cur_line	gscanner.h	/^guint		g_scanner_cur_line		(GScanner	*scanner);$/;"	p
g_scanner_cur_position	gscanner.h	/^guint		g_scanner_cur_position		(GScanner	*scanner);$/;"	p
g_scanner_cur_token	gscanner.h	/^GTokenType	g_scanner_cur_token		(GScanner	*scanner);$/;"	p
g_scanner_cur_value	gscanner.h	/^GTokenValue	g_scanner_cur_value		(GScanner	*scanner);$/;"	p
g_scanner_destroy	gscanner.h	/^void		g_scanner_destroy		(GScanner	*scanner);$/;"	p
g_scanner_eof	gscanner.h	/^gboolean	g_scanner_eof			(GScanner	*scanner);$/;"	p
g_scanner_foreach_symbol	gscanner.h	271;"	d
g_scanner_freeze_symbol_table	gscanner.h	277;"	d
g_scanner_get_next_token	gscanner.h	/^GTokenType	g_scanner_get_next_token	(GScanner	*scanner);$/;"	p
g_scanner_input_file	gscanner.h	/^void		g_scanner_input_file		(GScanner	*scanner,$/;"	p
g_scanner_input_text	gscanner.h	/^void		g_scanner_input_text		(GScanner	*scanner,$/;"	p
g_scanner_lookup_symbol	gscanner.h	/^gpointer	g_scanner_lookup_symbol		(GScanner	*scanner,$/;"	p
g_scanner_new	gscanner.h	/^GScanner*	g_scanner_new			(const GScannerConfig *config_templ);$/;"	p
g_scanner_peek_next_token	gscanner.h	/^GTokenType	g_scanner_peek_next_token	(GScanner	*scanner);$/;"	p
g_scanner_remove_symbol	gscanner.h	268;"	d
g_scanner_scope_add_symbol	gscanner.h	/^void		g_scanner_scope_add_symbol	(GScanner	*scanner,$/;"	p
g_scanner_scope_foreach_symbol	gscanner.h	/^void		g_scanner_scope_foreach_symbol	(GScanner	*scanner,$/;"	p
g_scanner_scope_lookup_symbol	gscanner.h	/^gpointer	g_scanner_scope_lookup_symbol	(GScanner	*scanner,$/;"	p
g_scanner_scope_remove_symbol	gscanner.h	/^void		g_scanner_scope_remove_symbol	(GScanner	*scanner,$/;"	p
g_scanner_set_scope	gscanner.h	/^guint		g_scanner_set_scope		(GScanner	*scanner,$/;"	p
g_scanner_sync_file_offset	gscanner.h	/^void		g_scanner_sync_file_offset	(GScanner	*scanner);$/;"	p
g_scanner_thaw_symbol_table	gscanner.h	278;"	d
g_scanner_unexp_token	gscanner.h	/^void		g_scanner_unexp_token		(GScanner	*scanner,$/;"	p
g_sequence_append	gsequence.h	/^GSequenceIter *g_sequence_append             (GSequence                *seq,$/;"	p
g_sequence_foreach	gsequence.h	/^void           g_sequence_foreach            (GSequence                *seq,$/;"	p
g_sequence_foreach_range	gsequence.h	/^void           g_sequence_foreach_range      (GSequenceIter            *begin,$/;"	p
g_sequence_free	gsequence.h	/^void           g_sequence_free               (GSequence                *seq);$/;"	p
g_sequence_get	gsequence.h	/^gpointer       g_sequence_get                (GSequenceIter            *iter);$/;"	p
g_sequence_get_begin_iter	gsequence.h	/^GSequenceIter *g_sequence_get_begin_iter     (GSequence                *seq);$/;"	p
g_sequence_get_end_iter	gsequence.h	/^GSequenceIter *g_sequence_get_end_iter       (GSequence                *seq);$/;"	p
g_sequence_get_iter_at_pos	gsequence.h	/^GSequenceIter *g_sequence_get_iter_at_pos    (GSequence                *seq,$/;"	p
g_sequence_get_length	gsequence.h	/^gint           g_sequence_get_length         (GSequence                *seq);$/;"	p
g_sequence_insert_before	gsequence.h	/^GSequenceIter *g_sequence_insert_before      (GSequenceIter            *iter,$/;"	p
g_sequence_insert_sorted	gsequence.h	/^GSequenceIter *g_sequence_insert_sorted      (GSequence                *seq,$/;"	p
g_sequence_insert_sorted_iter	gsequence.h	/^GSequenceIter *g_sequence_insert_sorted_iter (GSequence                *seq,$/;"	p
g_sequence_iter_compare	gsequence.h	/^gint           g_sequence_iter_compare       (GSequenceIter            *a,$/;"	p
g_sequence_iter_get_position	gsequence.h	/^gint           g_sequence_iter_get_position  (GSequenceIter            *iter);$/;"	p
g_sequence_iter_get_sequence	gsequence.h	/^GSequence *    g_sequence_iter_get_sequence  (GSequenceIter            *iter);$/;"	p
g_sequence_iter_is_begin	gsequence.h	/^gboolean       g_sequence_iter_is_begin      (GSequenceIter            *iter);$/;"	p
g_sequence_iter_is_end	gsequence.h	/^gboolean       g_sequence_iter_is_end        (GSequenceIter            *iter);$/;"	p
g_sequence_iter_move	gsequence.h	/^GSequenceIter *g_sequence_iter_move          (GSequenceIter            *iter,$/;"	p
g_sequence_iter_next	gsequence.h	/^GSequenceIter *g_sequence_iter_next          (GSequenceIter            *iter);$/;"	p
g_sequence_iter_prev	gsequence.h	/^GSequenceIter *g_sequence_iter_prev          (GSequenceIter            *iter);$/;"	p
g_sequence_lookup	gsequence.h	/^GSequenceIter *g_sequence_lookup             (GSequence                *seq,$/;"	p
g_sequence_lookup_iter	gsequence.h	/^GSequenceIter *g_sequence_lookup_iter        (GSequence                *seq,$/;"	p
g_sequence_move	gsequence.h	/^void           g_sequence_move               (GSequenceIter            *src,$/;"	p
g_sequence_move_range	gsequence.h	/^void           g_sequence_move_range         (GSequenceIter            *dest,$/;"	p
g_sequence_new	gsequence.h	/^GSequence *    g_sequence_new                (GDestroyNotify            data_destroy);$/;"	p
g_sequence_prepend	gsequence.h	/^GSequenceIter *g_sequence_prepend            (GSequence                *seq,$/;"	p
g_sequence_range_get_midpoint	gsequence.h	/^GSequenceIter *g_sequence_range_get_midpoint (GSequenceIter            *begin,$/;"	p
g_sequence_remove	gsequence.h	/^void           g_sequence_remove             (GSequenceIter            *iter);$/;"	p
g_sequence_remove_range	gsequence.h	/^void           g_sequence_remove_range       (GSequenceIter            *begin,$/;"	p
g_sequence_search	gsequence.h	/^GSequenceIter *g_sequence_search             (GSequence                *seq,$/;"	p
g_sequence_search_iter	gsequence.h	/^GSequenceIter *g_sequence_search_iter        (GSequence                *seq,$/;"	p
g_sequence_set	gsequence.h	/^void           g_sequence_set                (GSequenceIter            *iter,$/;"	p
g_sequence_sort	gsequence.h	/^void           g_sequence_sort               (GSequence                *seq,$/;"	p
g_sequence_sort_changed	gsequence.h	/^void           g_sequence_sort_changed       (GSequenceIter            *iter,$/;"	p
g_sequence_sort_changed_iter	gsequence.h	/^void           g_sequence_sort_changed_iter  (GSequenceIter            *iter,$/;"	p
g_sequence_sort_iter	gsequence.h	/^void           g_sequence_sort_iter          (GSequence                *seq,$/;"	p
g_sequence_swap	gsequence.h	/^void           g_sequence_swap               (GSequenceIter            *a,$/;"	p
g_set_application_name	gutils.h	/^void                  g_set_application_name (const gchar *application_name);$/;"	p
g_set_error_literal	gerror.h	/^void     g_set_error_literal   (GError       **err,$/;"	p
g_set_prgname	gutils.h	/^void                  g_set_prgname          (const gchar *prgname);$/;"	p
g_set_print_handler	gmessages.h	/^GPrintFunc      g_set_print_handler     (GPrintFunc      func);$/;"	p
g_set_printerr_handler	gmessages.h	/^GPrintFunc      g_set_printerr_handler  (GPrintFunc      func);$/;"	p
g_setenv	genviron.h	/^gboolean      g_setenv           (const gchar  *variable,$/;"	p
g_setenv	genviron.h	41;"	d
g_shell_error_quark	gshell.h	/^GQuark g_shell_error_quark (void);$/;"	p
g_shell_parse_argv	gshell.h	/^gboolean g_shell_parse_argv (const gchar   *command_line,$/;"	p
g_shell_quote	gshell.h	/^gchar*   g_shell_quote      (const gchar   *unquoted_string);$/;"	p
g_shell_unquote	gshell.h	/^gchar*   g_shell_unquote    (const gchar   *quoted_string,$/;"	p
g_slice_dup	gslice.h	57;"	d
g_slice_free	gslice.h	60;"	d
g_slice_free1	gslice.h	/^void     g_slice_free1          	(gsize         block_size,$/;"	p
g_slice_free_chain	gslice.h	64;"	d
g_slice_free_chain_with_offset	gslice.h	/^void     g_slice_free_chain_with_offset (gsize         block_size,$/;"	p
g_slice_get_config	gslice.h	/^gint64   g_slice_get_config	   (GSliceConfig ckey);$/;"	p
g_slice_get_config_state	gslice.h	/^gint64*  g_slice_get_config_state  (GSliceConfig ckey, gint64 address, guint *n_values);$/;"	p
g_slice_new	gslice.h	42;"	d
g_slice_new0	gslice.h	43;"	d
g_slice_set_config	gslice.h	/^void     g_slice_set_config	   (GSliceConfig ckey, gint64 value);$/;"	p
g_slist_find	gslist.h	/^GSList*  g_slist_find                    (GSList           *list,$/;"	p
g_slist_find_custom	gslist.h	/^GSList*  g_slist_find_custom             (GSList           *list,$/;"	p
g_slist_foreach	gslist.h	/^void     g_slist_foreach                 (GSList           *list,$/;"	p
g_slist_free	gslist.h	/^void     g_slist_free                    (GSList           *list);$/;"	p
g_slist_free1	gslist.h	51;"	d
g_slist_free_1	gslist.h	/^void     g_slist_free_1                  (GSList           *list);$/;"	p
g_slist_free_full	gslist.h	/^void     g_slist_free_full               (GSList           *list,$/;"	p
g_slist_index	gslist.h	/^gint     g_slist_index                   (GSList           *list,$/;"	p
g_slist_last	gslist.h	/^GSList*  g_slist_last                    (GSList           *list);$/;"	p
g_slist_length	gslist.h	/^guint    g_slist_length                  (GSList           *list);$/;"	p
g_slist_next	gslist.h	107;"	d
g_slist_nth	gslist.h	/^GSList*  g_slist_nth                     (GSList           *list,$/;"	p
g_slist_nth_data	gslist.h	/^gpointer g_slist_nth_data                (GSList           *list,$/;"	p
g_slist_pop_allocator	deprecated/gallocator.h	/^void            g_slist_pop_allocator   (void);$/;"	p
g_slist_position	gslist.h	/^gint     g_slist_position                (GSList           *list,$/;"	p
g_slist_push_allocator	deprecated/gallocator.h	/^void            g_slist_push_allocator  (GAllocator   *allocator);$/;"	p
g_source_add_child_source	gmain.h	/^void     g_source_add_child_source    (GSource        *source,$/;"	p
g_source_add_poll	gmain.h	/^void     g_source_add_poll            (GSource        *source,$/;"	p
g_source_attach	gmain.h	/^guint    g_source_attach          (GSource        *source,$/;"	p
g_source_destroy	gmain.h	/^void     g_source_destroy         (GSource        *source);$/;"	p
g_source_get_can_recurse	gmain.h	/^gboolean g_source_get_can_recurse (GSource        *source);$/;"	p
g_source_get_context	gmain.h	/^GMainContext *g_source_get_context (GSource       *source);$/;"	p
g_source_get_id	gmain.h	/^guint    g_source_get_id          (GSource        *source);$/;"	p
g_source_get_name	gmain.h	/^const char *         g_source_get_name       (GSource        *source);$/;"	p
g_source_get_priority	gmain.h	/^gint     g_source_get_priority    (GSource        *source);$/;"	p
g_source_get_time	gmain.h	/^gint64   g_source_get_time         (GSource        *source);$/;"	v
g_source_is_destroyed	gmain.h	/^gboolean g_source_is_destroyed    (GSource        *source);$/;"	p
g_source_new	gmain.h	/^GSource *g_source_new             (GSourceFuncs   *source_funcs,$/;"	p
g_source_ref	gmain.h	/^GSource *g_source_ref             (GSource        *source);$/;"	p
g_source_remove	gmain.h	/^gboolean g_source_remove                     (guint          tag);$/;"	p
g_source_remove_by_funcs_user_data	gmain.h	/^gboolean g_source_remove_by_funcs_user_data  (GSourceFuncs  *funcs,$/;"	p
g_source_remove_by_user_data	gmain.h	/^gboolean g_source_remove_by_user_data        (gpointer       user_data);$/;"	p
g_source_remove_child_source	gmain.h	/^void     g_source_remove_child_source (GSource        *source,$/;"	p
g_source_remove_poll	gmain.h	/^void     g_source_remove_poll         (GSource        *source,$/;"	p
g_source_set_callback	gmain.h	/^void     g_source_set_callback    (GSource        *source,$/;"	p
g_source_set_callback_indirect	gmain.h	/^void g_source_set_callback_indirect (GSource              *source,$/;"	p
g_source_set_can_recurse	gmain.h	/^void     g_source_set_can_recurse (GSource        *source,$/;"	p
g_source_set_funcs	gmain.h	/^void     g_source_set_funcs       (GSource        *source,$/;"	p
g_source_set_name	gmain.h	/^void                 g_source_set_name       (GSource        *source,$/;"	p
g_source_set_name_by_id	gmain.h	/^void                 g_source_set_name_by_id (guint           tag,$/;"	p
g_source_set_priority	gmain.h	/^void     g_source_set_priority    (GSource        *source,$/;"	p
g_source_unref	gmain.h	/^void     g_source_unref           (GSource        *source);$/;"	p
g_spawn_async	gspawn.h	/^gboolean g_spawn_async (const gchar           *working_directory,$/;"	p
g_spawn_async	gspawn.h	178;"	d
g_spawn_async_with_pipes	gspawn.h	/^gboolean g_spawn_async_with_pipes (const gchar          *working_directory,$/;"	p
g_spawn_async_with_pipes	gspawn.h	179;"	d
g_spawn_close_pid	gspawn.h	/^void g_spawn_close_pid (GPid pid);$/;"	p
g_spawn_command_line_async	gspawn.h	/^gboolean g_spawn_command_line_async (const gchar          *command_line,$/;"	p
g_spawn_command_line_async	gspawn.h	182;"	d
g_spawn_command_line_sync	gspawn.h	/^gboolean g_spawn_command_line_sync  (const gchar          *command_line,$/;"	p
g_spawn_command_line_sync	gspawn.h	181;"	d
g_spawn_error_quark	gspawn.h	/^GQuark g_spawn_error_quark (void);$/;"	p
g_spawn_sync	gspawn.h	/^gboolean g_spawn_sync         (const gchar          *working_directory,$/;"	p
g_spawn_sync	gspawn.h	180;"	d
g_stat	gstdio.h	/^int g_stat      (const gchar *filename,$/;"	p
g_stat	gstdio.h	69;"	d
g_static_mutex_free	deprecated/gthread.h	/^void    g_static_mutex_free           (GStaticMutex *mutex);$/;"	v
g_static_mutex_get_mutex	deprecated/gthread.h	126;"	d
g_static_mutex_get_mutex_impl	deprecated/gthread.h	/^GMutex *g_static_mutex_get_mutex_impl (GStaticMutex *mutex);$/;"	p
g_static_mutex_lock	deprecated/gthread.h	137;"	d
g_static_mutex_trylock	deprecated/gthread.h	139;"	d
g_static_mutex_unlock	deprecated/gthread.h	141;"	d
g_static_private_free	deprecated/gthread.h	/^void     g_static_private_free           (GStaticPrivate *private_key);$/;"	p
g_static_private_init	deprecated/gthread.h	/^void     g_static_private_init           (GStaticPrivate *private_key);$/;"	p
g_static_private_set	deprecated/gthread.h	/^void     g_static_private_set            (GStaticPrivate *private_key,$/;"	v
g_static_rec_mutex_lock	deprecated/gthread.h	/^void     g_static_rec_mutex_lock        (GStaticRecMutex *mutex);$/;"	v
g_static_rec_mutex_lock_full	deprecated/gthread.h	/^void     g_static_rec_mutex_lock_full   (GStaticRecMutex *mutex,$/;"	p
g_static_rec_mutex_unlock	deprecated/gthread.h	/^void     g_static_rec_mutex_unlock      (GStaticRecMutex *mutex);$/;"	v
g_static_rec_mutex_unlock_full	deprecated/gthread.h	/^guint    g_static_rec_mutex_unlock_full (GStaticRecMutex *mutex);$/;"	p
g_static_rw_lock_free	deprecated/gthread.h	/^void      g_static_rw_lock_free           (GStaticRWLock *lock);$/;"	v
g_static_rw_lock_reader_lock	deprecated/gthread.h	/^void      g_static_rw_lock_reader_lock    (GStaticRWLock *lock);$/;"	v
g_static_rw_lock_reader_unlock	deprecated/gthread.h	/^void      g_static_rw_lock_reader_unlock  (GStaticRWLock *lock);$/;"	v
g_static_rw_lock_writer_trylock	deprecated/gthread.h	/^gboolean  g_static_rw_lock_writer_trylock (GStaticRWLock *lock);$/;"	v
g_stpcpy	gstrfuncs.h	/^gchar*                g_stpcpy         (gchar        *dest,$/;"	p
g_str_equal	ghash.h	/^gboolean g_str_equal    (gconstpointer  v1,$/;"	p
g_str_has_prefix	gstrfuncs.h	/^gboolean              g_str_has_prefix (const gchar  *str,$/;"	p
g_str_has_suffix	gstrfuncs.h	/^gboolean              g_str_has_suffix (const gchar  *str,$/;"	p
g_str_hash	ghash.h	/^guint    g_str_hash     (gconstpointer  v);$/;"	p
g_strcanon	gstrfuncs.h	/^gchar*	              g_strcanon       (gchar        *string,$/;"	p
g_strcasecmp	gstrfuncs.h	/^gint                  g_strcasecmp     (const gchar *s1,$/;"	p
g_strchomp	gstrfuncs.h	/^gchar*                g_strchomp       (gchar        *string);$/;"	p
g_strchug	gstrfuncs.h	/^gchar*                g_strchug        (gchar        *string);$/;"	p
g_strcmp0	gtestutils.h	/^int     g_strcmp0                       (const char     *str1,$/;"	p
g_strdelimit	gstrfuncs.h	/^gchar*	              g_strdelimit     (gchar	     *string,$/;"	p
g_strdown	gstrfuncs.h	/^gchar*                g_strdown        (gchar       *string);$/;"	p
g_strfreev	gstrfuncs.h	/^void                  g_strfreev       (gchar       **str_array);$/;"	p
g_string_append	gstring.h	/^GString*     g_string_append            (GString         *string,$/;"	p
g_string_append_c	gstring.h	/^GString*     g_string_append_c          (GString         *string,$/;"	p
g_string_append_c	gstring.h	139;"	d
g_string_append_c_inline	gstring.h	/^g_string_append_c_inline (GString *gstring,$/;"	f
g_string_append_len	gstring.h	/^GString*     g_string_append_len        (GString         *string,$/;"	p
g_string_append_unichar	gstring.h	/^GString*     g_string_append_unichar    (GString         *string,$/;"	p
g_string_append_uri_escaped	gstring.h	/^GString*     g_string_append_uri_escaped (GString         *string,$/;"	p
g_string_append_vprintf	gstring.h	/^void         g_string_append_vprintf    (GString         *string,$/;"	p
g_string_ascii_down	gstring.h	/^GString*     g_string_ascii_down        (GString         *string);$/;"	p
g_string_ascii_up	gstring.h	/^GString*     g_string_ascii_up          (GString         *string);$/;"	p
g_string_assign	gstring.h	/^GString*     g_string_assign            (GString         *string,$/;"	p
g_string_chunk_clear	gstringchunk.h	/^void          g_string_chunk_clear        (GStringChunk *chunk);$/;"	p
g_string_chunk_free	gstringchunk.h	/^void          g_string_chunk_free         (GStringChunk *chunk);$/;"	p
g_string_chunk_insert	gstringchunk.h	/^gchar*        g_string_chunk_insert       (GStringChunk *chunk,$/;"	p
g_string_chunk_insert_const	gstringchunk.h	/^gchar*        g_string_chunk_insert_const (GStringChunk *chunk,$/;"	p
g_string_chunk_insert_len	gstringchunk.h	/^gchar*        g_string_chunk_insert_len   (GStringChunk *chunk,$/;"	p
g_string_chunk_new	gstringchunk.h	/^GStringChunk* g_string_chunk_new          (gsize size);$/;"	p
g_string_down	gstring.h	/^GString *g_string_down (GString *string);$/;"	p
g_string_equal	gstring.h	/^gboolean     g_string_equal             (const GString   *v,$/;"	p
g_string_erase	gstring.h	/^GString*     g_string_erase             (GString         *string,$/;"	p
g_string_free	gstring.h	/^gchar*       g_string_free              (GString         *string,$/;"	p
g_string_hash	gstring.h	/^guint        g_string_hash              (const GString   *str);$/;"	p
g_string_insert	gstring.h	/^GString*     g_string_insert            (GString         *string,$/;"	p
g_string_insert_c	gstring.h	/^GString*     g_string_insert_c          (GString         *string,$/;"	p
g_string_insert_len	gstring.h	/^GString*     g_string_insert_len        (GString         *string,$/;"	p
g_string_insert_unichar	gstring.h	/^GString*     g_string_insert_unichar    (GString         *string,$/;"	p
g_string_new	gstring.h	/^GString*     g_string_new               (const gchar     *init);$/;"	p
g_string_new_len	gstring.h	/^GString*     g_string_new_len           (const gchar     *init,$/;"	p
g_string_overwrite	gstring.h	/^GString*     g_string_overwrite         (GString         *string,$/;"	p
g_string_overwrite_len	gstring.h	/^GString*     g_string_overwrite_len     (GString         *string,$/;"	p
g_string_prepend	gstring.h	/^GString*     g_string_prepend           (GString         *string,$/;"	p
g_string_prepend_c	gstring.h	/^GString*     g_string_prepend_c         (GString         *string,$/;"	p
g_string_prepend_len	gstring.h	/^GString*     g_string_prepend_len       (GString         *string,$/;"	p
g_string_prepend_unichar	gstring.h	/^GString*     g_string_prepend_unichar   (GString         *string,$/;"	p
g_string_set_size	gstring.h	/^GString*     g_string_set_size          (GString         *string,$/;"	p
g_string_sized_new	gstring.h	/^GString*     g_string_sized_new         (gsize            dfl_size);$/;"	p
g_string_sprintf	gstring.h	149;"	d
g_string_sprintfa	gstring.h	150;"	d
g_string_truncate	gstring.h	/^GString*     g_string_truncate          (GString         *string,$/;"	p
g_string_up	gstring.h	/^GString *g_string_up   (GString *string);$/;"	p
g_string_vprintf	gstring.h	/^void         g_string_vprintf           (GString         *string,$/;"	p
g_strlcat	gstrfuncs.h	/^gsize	              g_strlcat        (gchar	     *dest,$/;"	p
g_strlcpy	gstrfuncs.h	/^gsize	              g_strlcpy	       (gchar	     *dest,$/;"	p
g_strncasecmp	gstrfuncs.h	/^gint                  g_strncasecmp    (const gchar *s1,$/;"	p
g_strreverse	gstrfuncs.h	/^gchar *	              g_strreverse     (gchar	     *string);$/;"	p
g_strrstr	gstrfuncs.h	/^gchar *               g_strrstr        (const gchar  *haystack,$/;"	p
g_strrstr_len	gstrfuncs.h	/^gchar *               g_strrstr_len    (const gchar  *haystack,$/;"	p
g_strstr_len	gstrfuncs.h	/^gchar *               g_strstr_len     (const gchar  *haystack,$/;"	p
g_strstrip	gstrfuncs.h	158;"	d
g_strtod	gstrfuncs.h	/^gdouble	              g_strtod         (const gchar  *nptr,$/;"	p
g_strup	gstrfuncs.h	/^gchar*                g_strup          (gchar       *string);$/;"	p
g_strv_length	gstrfuncs.h	/^guint                 g_strv_length    (gchar       **str_array);$/;"	p
g_test_add	gtestutils.h	115;"	d
g_test_add_data_func	gtestutils.h	/^void    g_test_add_data_func            (const char     *testpath,$/;"	p
g_test_add_func	gtestutils.h	/^void    g_test_add_func                 (const char     *testpath,$/;"	p
g_test_add_vtable	gtestutils.h	/^void    g_test_add_vtable               (const char     *testpath,$/;"	p
g_test_bug	gtestutils.h	/^void    g_test_bug                      (const char *bug_uri_snippet);$/;"	p
g_test_bug_base	gtestutils.h	/^void    g_test_bug_base                 (const char *uri_pattern);$/;"	p
g_test_config_vars	gtestutils.h	/^GLIB_VAR const GTestConfig * const g_test_config_vars;$/;"	v
g_test_create_case	gtestutils.h	/^GTestCase*    g_test_create_case        (const char       *test_name,$/;"	p
g_test_create_suite	gtestutils.h	/^GTestSuite*   g_test_create_suite       (const char       *suite_name);$/;"	p
g_test_fail	gtestutils.h	/^void    g_test_fail                     (void);$/;"	p
g_test_get_root	gtestutils.h	/^GTestSuite*   g_test_get_root           (void);$/;"	p
g_test_init	gtestutils.h	/^void    g_test_init                     (int            *argc,$/;"	p
g_test_log_buffer_free	gtestutils.h	/^void            g_test_log_buffer_free  (GTestLogBuffer *tbuffer);$/;"	p
g_test_log_buffer_new	gtestutils.h	/^GTestLogBuffer* g_test_log_buffer_new   (void);$/;"	p
g_test_log_buffer_pop	gtestutils.h	/^GTestLogMsg*    g_test_log_buffer_pop   (GTestLogBuffer *tbuffer);$/;"	p
g_test_log_buffer_push	gtestutils.h	/^void            g_test_log_buffer_push  (GTestLogBuffer *tbuffer,$/;"	p
g_test_log_msg_free	gtestutils.h	/^void            g_test_log_msg_free     (GTestLogMsg    *tmsg);$/;"	p
g_test_log_set_fatal_handler	gtestutils.h	/^g_test_log_set_fatal_handler            (GTestLogFatalFunc log_func,$/;"	p
g_test_log_type_name	gtestutils.h	/^const char*     g_test_log_type_name    (GTestLogType    log_type);$/;"	p
g_test_perf	gtestutils.h	98;"	d
g_test_queue_destroy	gtestutils.h	/^void    g_test_queue_destroy            (GDestroyNotify destroy_func,$/;"	p
g_test_queue_free	gtestutils.h	/^void    g_test_queue_free               (gpointer gfree_pointer);$/;"	p
g_test_queue_unref	gtestutils.h	141;"	d
g_test_quick	gtestutils.h	95;"	d
g_test_quiet	gtestutils.h	100;"	d
g_test_rand_bit	gtestutils.h	161;"	d
g_test_rand_double	gtestutils.h	/^double   g_test_rand_double             (void);$/;"	p
g_test_rand_double_range	gtestutils.h	/^double   g_test_rand_double_range       (double          range_start,$/;"	p
g_test_rand_int	gtestutils.h	/^gint32   g_test_rand_int                (void);$/;"	p
g_test_rand_int_range	gtestutils.h	/^gint32   g_test_rand_int_range          (gint32          begin,$/;"	p
g_test_run	gtestutils.h	/^int     g_test_run                      (void);$/;"	p
g_test_run_suite	gtestutils.h	/^int           g_test_run_suite          (GTestSuite     *suite);$/;"	p
g_test_slow	gtestutils.h	96;"	d
g_test_suite_add	gtestutils.h	/^void          g_test_suite_add          (GTestSuite     *suite,$/;"	p
g_test_suite_add_suite	gtestutils.h	/^void          g_test_suite_add_suite    (GTestSuite     *suite,$/;"	p
g_test_thorough	gtestutils.h	97;"	d
g_test_timer_elapsed	gtestutils.h	/^double  g_test_timer_elapsed            (void); \/* elapsed seconds *\/$/;"	p
g_test_timer_last	gtestutils.h	/^double  g_test_timer_last               (void); \/* repeat last elapsed() result *\/$/;"	p
g_test_timer_start	gtestutils.h	/^void    g_test_timer_start              (void);$/;"	p
g_test_trap_assert_failed	gtestutils.h	154;"	d
g_test_trap_assert_passed	gtestutils.h	153;"	d
g_test_trap_assert_stderr	gtestutils.h	157;"	d
g_test_trap_assert_stderr_unmatched	gtestutils.h	158;"	d
g_test_trap_assert_stdout	gtestutils.h	155;"	d
g_test_trap_assert_stdout_unmatched	gtestutils.h	156;"	d
g_test_trap_assertions	gtestutils.h	/^void    g_test_trap_assertions          (const char     *domain,$/;"	p
g_test_trap_fork	gtestutils.h	/^gboolean g_test_trap_fork               (guint64              usec_timeout,$/;"	p
g_test_trap_has_passed	gtestutils.h	/^gboolean g_test_trap_has_passed         (void);$/;"	p
g_test_trap_reached_timeout	gtestutils.h	/^gboolean g_test_trap_reached_timeout    (void);$/;"	p
g_test_undefined	gtestutils.h	101;"	d
g_test_verbose	gtestutils.h	99;"	d
g_thread_create_full	deprecated/gthread.h	/^GThread *g_thread_create_full  (GThreadFunc       func,$/;"	v
g_thread_error_quark	gthread.h	/^GQuark g_thread_error_quark (void);$/;"	p
g_thread_exit	gthread.h	/^void            g_thread_exit                   (gpointer        retval);$/;"	p
g_thread_foreach	deprecated/gthread.h	/^void     g_thread_foreach      (GFunc             thread_func,$/;"	p
g_thread_functions_for_glib_use	deprecated/gthread.h	/^GLIB_VAR GThreadFunctions       g_thread_functions_for_glib_use;$/;"	v
g_thread_get_initialized	deprecated/gthread.h	/^gboolean g_thread_get_initialized        (void);$/;"	p
g_thread_gettime	deprecated/gthread.h	/^GLIB_VAR guint64   (*g_thread_gettime) (void);$/;"	v
g_thread_init	deprecated/gthread.h	/^void     g_thread_init                   (gpointer vtable);$/;"	p
g_thread_init_with_errorcheck_mutexes	deprecated/gthread.h	/^void    g_thread_init_with_errorcheck_mutexes (gpointer vtable);$/;"	p
g_thread_join	gthread.h	/^gpointer        g_thread_join                   (GThread        *thread);$/;"	p
g_thread_new	gthread.h	/^GThread *       g_thread_new                    (const gchar    *name,$/;"	p
g_thread_pool_free	gthreadpool.h	/^void            g_thread_pool_free              (GThreadPool     *pool,$/;"	p
g_thread_pool_get_max_idle_time	gthreadpool.h	/^guint           g_thread_pool_get_max_idle_time      (void);$/;"	p
g_thread_pool_get_max_threads	gthreadpool.h	/^gint            g_thread_pool_get_max_threads   (GThreadPool     *pool);$/;"	p
g_thread_pool_get_max_unused_threads	gthreadpool.h	/^gint            g_thread_pool_get_max_unused_threads (void);$/;"	p
g_thread_pool_get_num_threads	gthreadpool.h	/^guint           g_thread_pool_get_num_threads   (GThreadPool     *pool);$/;"	p
g_thread_pool_get_num_unused_threads	gthreadpool.h	/^guint           g_thread_pool_get_num_unused_threads (void);$/;"	p
g_thread_pool_new	gthreadpool.h	/^GThreadPool *   g_thread_pool_new               (GFunc            func,$/;"	p
g_thread_pool_push	gthreadpool.h	/^gboolean        g_thread_pool_push              (GThreadPool     *pool,$/;"	p
g_thread_pool_set_max_idle_time	gthreadpool.h	/^void            g_thread_pool_set_max_idle_time      (guint interval);$/;"	p
g_thread_pool_set_max_threads	gthreadpool.h	/^gboolean        g_thread_pool_set_max_threads   (GThreadPool     *pool,$/;"	p
g_thread_pool_set_max_unused_threads	gthreadpool.h	/^void            g_thread_pool_set_max_unused_threads (gint  max_threads);$/;"	p
g_thread_pool_set_sort_function	gthreadpool.h	/^void            g_thread_pool_set_sort_function (GThreadPool      *pool,$/;"	p
g_thread_pool_stop_unused_threads	gthreadpool.h	/^void            g_thread_pool_stop_unused_threads    (void);$/;"	p
g_thread_pool_unprocessed	gthreadpool.h	/^guint           g_thread_pool_unprocessed       (GThreadPool     *pool);$/;"	p
g_thread_ref	gthread.h	/^GThread *       g_thread_ref                    (GThread        *thread);$/;"	p
g_thread_self	gthread.h	/^GThread *       g_thread_self                   (void);$/;"	p
g_thread_set_priority	deprecated/gthread.h	/^void     g_thread_set_priority (GThread          *thread,$/;"	p
g_thread_supported	deprecated/gthread.h	268;"	d
g_thread_try_new	gthread.h	/^GThread *       g_thread_try_new                (const gchar    *name,$/;"	p
g_thread_unref	gthread.h	/^void            g_thread_unref                  (GThread        *thread);$/;"	p
g_thread_use_default_impl	deprecated/gthread.h	/^GLIB_VAR gboolean               g_thread_use_default_impl;$/;"	v
g_thread_yield	gthread.h	/^void            g_thread_yield                  (void);$/;"	p
g_threads_got_initialized	deprecated/gthread.h	/^GLIB_VAR gboolean g_threads_got_initialized;$/;"	v
g_time_val_add	gtimer.h	/^void     g_time_val_add          (GTimeVal    *time_, $/;"	p
g_time_val_from_iso8601	gtimer.h	/^gboolean g_time_val_from_iso8601 (const gchar *iso_date,$/;"	p
g_time_zone_adjust_time	gtimezone.h	/^gint                    g_time_zone_adjust_time                         (GTimeZone   *tz,$/;"	p
g_time_zone_find_interval	gtimezone.h	/^gint                    g_time_zone_find_interval                       (GTimeZone   *tz,$/;"	p
g_time_zone_get_abbreviation	gtimezone.h	/^const gchar *           g_time_zone_get_abbreviation                    (GTimeZone   *tz,$/;"	p
g_time_zone_get_offset	gtimezone.h	/^gint32                  g_time_zone_get_offset                          (GTimeZone   *tz,$/;"	p
g_time_zone_is_dst	gtimezone.h	/^gboolean                g_time_zone_is_dst                              (GTimeZone   *tz,$/;"	p
g_time_zone_new	gtimezone.h	/^GTimeZone *             g_time_zone_new                                 (const gchar *identifier);$/;"	p
g_time_zone_new_local	gtimezone.h	/^GTimeZone *             g_time_zone_new_local                           (void);$/;"	p
g_time_zone_new_utc	gtimezone.h	/^GTimeZone *             g_time_zone_new_utc                             (void);$/;"	p
g_time_zone_ref	gtimezone.h	/^GTimeZone *             g_time_zone_ref                                 (GTimeZone   *tz);$/;"	p
g_time_zone_unref	gtimezone.h	/^void                    g_time_zone_unref                               (GTimeZone   *tz);$/;"	p
g_timeout_add	gmain.h	/^guint    g_timeout_add              (guint           interval,$/;"	p
g_timeout_add_full	gmain.h	/^guint    g_timeout_add_full         (gint            priority,$/;"	p
g_timeout_add_seconds	gmain.h	/^guint    g_timeout_add_seconds      (guint           interval,$/;"	p
g_timeout_add_seconds_full	gmain.h	/^guint    g_timeout_add_seconds_full (gint            priority,$/;"	p
g_timeout_funcs	gmain.h	/^GLIB_VAR GSourceFuncs g_timeout_funcs;$/;"	v
g_timeout_source_new	gmain.h	/^GSource *g_timeout_source_new     (guint interval);$/;"	p
g_timeout_source_new_seconds	gmain.h	/^GSource *g_timeout_source_new_seconds (guint interval);$/;"	p
g_timer_continue	gtimer.h	/^void	 g_timer_continue        (GTimer      *timer);$/;"	p
g_timer_destroy	gtimer.h	/^void	 g_timer_destroy         (GTimer      *timer);$/;"	p
g_timer_elapsed	gtimer.h	/^gdouble  g_timer_elapsed         (GTimer      *timer,$/;"	p
g_timer_new	gtimer.h	/^GTimer*  g_timer_new	         (void);$/;"	p
g_timer_reset	gtimer.h	/^void	 g_timer_reset	         (GTimer      *timer);$/;"	p
g_timer_start	gtimer.h	/^void	 g_timer_start	         (GTimer      *timer);$/;"	p
g_timer_stop	gtimer.h	/^void	 g_timer_stop	         (GTimer      *timer);$/;"	p
g_trash_stack_height	gtrashstack.h	/^G_INLINE_FUNC guint     g_trash_stack_height (GTrashStack **stack_p);$/;"	p
g_trash_stack_height	gtrashstack.h	/^g_trash_stack_height (GTrashStack **stack_p)$/;"	f
g_trash_stack_peek	gtrashstack.h	/^G_INLINE_FUNC gpointer  g_trash_stack_peek   (GTrashStack **stack_p);$/;"	p
g_trash_stack_peek	gtrashstack.h	/^g_trash_stack_peek (GTrashStack **stack_p)$/;"	f
g_trash_stack_pop	gtrashstack.h	/^G_INLINE_FUNC gpointer  g_trash_stack_pop    (GTrashStack **stack_p);$/;"	p
g_trash_stack_pop	gtrashstack.h	/^g_trash_stack_pop (GTrashStack **stack_p)$/;"	f
g_trash_stack_push	gtrashstack.h	/^G_INLINE_FUNC void      g_trash_stack_push   (GTrashStack **stack_p,$/;"	p
g_trash_stack_push	gtrashstack.h	/^g_trash_stack_push (GTrashStack **stack_p,$/;"	f
g_tree_destroy	gtree.h	/^void     g_tree_destroy         (GTree            *tree);$/;"	p
g_tree_foreach	gtree.h	/^void     g_tree_foreach         (GTree            *tree,$/;"	p
g_tree_height	gtree.h	/^gint     g_tree_height          (GTree            *tree);$/;"	p
g_tree_insert	gtree.h	/^void     g_tree_insert          (GTree            *tree,$/;"	p
g_tree_lookup	gtree.h	/^gpointer g_tree_lookup          (GTree            *tree,$/;"	p
g_tree_lookup_extended	gtree.h	/^gboolean g_tree_lookup_extended (GTree            *tree,$/;"	p
g_tree_new	gtree.h	/^GTree*   g_tree_new             (GCompareFunc      key_compare_func);$/;"	p
g_tree_new_full	gtree.h	/^GTree*   g_tree_new_full        (GCompareDataFunc  key_compare_func,$/;"	p
g_tree_new_with_data	gtree.h	/^GTree*   g_tree_new_with_data   (GCompareDataFunc  key_compare_func,$/;"	p
g_tree_nnodes	gtree.h	/^gint     g_tree_nnodes          (GTree            *tree);$/;"	p
g_tree_ref	gtree.h	/^GTree*   g_tree_ref             (GTree            *tree);$/;"	p
g_tree_remove	gtree.h	/^gboolean g_tree_remove          (GTree            *tree,$/;"	p
g_tree_replace	gtree.h	/^void     g_tree_replace         (GTree            *tree,$/;"	p
g_tree_search	gtree.h	/^gpointer g_tree_search          (GTree            *tree,$/;"	p
g_tree_steal	gtree.h	/^gboolean g_tree_steal           (GTree            *tree,$/;"	p
g_tree_traverse	gtree.h	/^void     g_tree_traverse        (GTree            *tree,$/;"	p
g_tree_unref	gtree.h	/^void     g_tree_unref           (GTree            *tree);$/;"	p
g_try_new	gmem.h	202;"	d
g_try_new0	gmem.h	217;"	d
g_try_renew	gmem.h	233;"	d
g_tuples_destroy	deprecated/grel.h	/^void       g_tuples_destroy   (GTuples     *tuples);$/;"	p
g_tuples_index	deprecated/grel.h	/^gpointer   g_tuples_index     (GTuples     *tuples,$/;"	p
g_unichar_compose	gunicode.h	/^gboolean g_unichar_compose (gunichar  a,$/;"	p
g_unichar_decompose	gunicode.h	/^gboolean g_unichar_decompose (gunichar  ch,$/;"	p
g_unichar_fully_decompose	gunicode.h	/^gsize g_unichar_fully_decompose (gunichar  ch,$/;"	p
g_unichar_get_mirror_char	gunicode.h	/^gboolean g_unichar_get_mirror_char (gunichar ch,$/;"	p
g_unichar_to_utf8	gunicode.h	/^gint      g_unichar_to_utf8 (gunichar    c,$/;"	p
g_unicode_canonical_ordering	gunicode.h	/^void g_unicode_canonical_ordering (gunichar *string,$/;"	p
g_unicode_script_from_iso15924	gunicode.h	/^GUnicodeScript g_unicode_script_from_iso15924 (guint32        iso15924);$/;"	p
g_unicode_script_to_iso15924	gunicode.h	/^guint32        g_unicode_script_to_iso15924   (GUnicodeScript script);$/;"	p
g_unlink	gstdio.h	/^int g_unlink    (const gchar *filename);$/;"	p
g_unlink	gstdio.h	/^int g_unlink (const gchar *filename);$/;"	p
g_unsetenv	genviron.h	/^void          g_unsetenv         (const gchar  *variable);$/;"	p
g_unsetenv	genviron.h	42;"	d
g_uri_escape_string	gurifuncs.h	/^char *   g_uri_escape_string         (const char *unescaped,$/;"	p
g_uri_parse_scheme	gurifuncs.h	/^char *   g_uri_parse_scheme          (const char *uri);$/;"	p
g_uri_unescape_segment	gurifuncs.h	/^char *   g_uri_unescape_segment      (const char *escaped_string,$/;"	p
g_uri_unescape_string	gurifuncs.h	/^char *   g_uri_unescape_string       (const char *escaped_string,$/;"	p
g_usleep	gtimer.h	/^void     g_usleep                (gulong       microseconds);$/;"	p
g_utf8_next_char	gunicode.h	612;"	d
g_utf8_skip	gunicode.h	/^GLIB_VAR const gchar * const g_utf8_skip;$/;"	v
g_utf8_strchr	gunicode.h	/^gchar* g_utf8_strchr  (const gchar *p,$/;"	p
g_utf8_strncpy	gunicode.h	/^gchar   *g_utf8_strncpy           (gchar       *dest,$/;"	p
g_utf8_strrchr	gunicode.h	/^gchar* g_utf8_strrchr (const gchar *p,$/;"	p
g_utf8_strreverse	gunicode.h	/^gchar* g_utf8_strreverse (const gchar *str,$/;"	p
g_utf8_validate	gunicode.h	/^gboolean g_utf8_validate (const gchar  *str,$/;"	p
g_utime	gstdio.h	/^int g_utime     (const gchar    *filename,$/;"	p
g_utime	gstdio.h	74;"	d
g_variant_builder_add	gvariant.h	/^void                            g_variant_builder_add                   (GVariantBuilder      *builder,$/;"	p
g_variant_builder_add_parsed	gvariant.h	/^void                            g_variant_builder_add_parsed            (GVariantBuilder      *builder,$/;"	p
g_variant_builder_add_value	gvariant.h	/^void                            g_variant_builder_add_value             (GVariantBuilder      *builder,$/;"	p
g_variant_builder_clear	gvariant.h	/^void                            g_variant_builder_clear                 (GVariantBuilder      *builder);$/;"	p
g_variant_builder_close	gvariant.h	/^void                            g_variant_builder_close                 (GVariantBuilder      *builder);$/;"	p
g_variant_builder_end	gvariant.h	/^GVariant *                      g_variant_builder_end                   (GVariantBuilder      *builder);$/;"	p
g_variant_builder_init	gvariant.h	/^void                            g_variant_builder_init                  (GVariantBuilder      *builder,$/;"	p
g_variant_builder_new	gvariant.h	/^GVariantBuilder *               g_variant_builder_new                   (const GVariantType   *type);$/;"	p
g_variant_builder_open	gvariant.h	/^void                            g_variant_builder_open                  (GVariantBuilder      *builder,$/;"	p
g_variant_builder_ref	gvariant.h	/^GVariantBuilder *               g_variant_builder_ref                   (GVariantBuilder      *builder);$/;"	p
g_variant_builder_unref	gvariant.h	/^void                            g_variant_builder_unref                 (GVariantBuilder      *builder);$/;"	p
g_variant_byteswap	gvariant.h	/^GVariant *                      g_variant_byteswap                      (GVariant             *value);$/;"	p
g_variant_classify	gvariant.h	/^GVariantClass                   g_variant_classify                      (GVariant             *value);$/;"	p
g_variant_compare	gvariant.h	/^gint                            g_variant_compare                       (gconstpointer one,$/;"	p
g_variant_dup_bytestring	gvariant.h	/^gchar *                         g_variant_dup_bytestring                (GVariant             *value,$/;"	p
g_variant_dup_bytestring_array	gvariant.h	/^gchar **                        g_variant_dup_bytestring_array          (GVariant             *value,$/;"	p
g_variant_dup_objv	gvariant.h	/^gchar **                        g_variant_dup_objv                      (GVariant             *value,$/;"	p
g_variant_dup_string	gvariant.h	/^gchar *                         g_variant_dup_string                    (GVariant             *value,$/;"	p
g_variant_dup_strv	gvariant.h	/^gchar **                        g_variant_dup_strv                      (GVariant             *value,$/;"	p
g_variant_equal	gvariant.h	/^gboolean                        g_variant_equal                         (gconstpointer         one,$/;"	p
g_variant_get	gvariant.h	/^void                            g_variant_get                           (GVariant             *value,$/;"	p
g_variant_get_boolean	gvariant.h	/^gboolean                        g_variant_get_boolean                   (GVariant             *value);$/;"	p
g_variant_get_byte	gvariant.h	/^guchar                          g_variant_get_byte                      (GVariant             *value);$/;"	p
g_variant_get_bytestring	gvariant.h	/^const gchar *                   g_variant_get_bytestring                (GVariant             *value);$/;"	p
g_variant_get_bytestring_array	gvariant.h	/^const gchar **                  g_variant_get_bytestring_array          (GVariant             *value,$/;"	p
g_variant_get_child	gvariant.h	/^void                            g_variant_get_child                     (GVariant             *value,$/;"	p
g_variant_get_child_value	gvariant.h	/^GVariant *                      g_variant_get_child_value               (GVariant             *value,$/;"	p
g_variant_get_data	gvariant.h	/^gconstpointer                   g_variant_get_data                      (GVariant             *value);$/;"	p
g_variant_get_double	gvariant.h	/^gdouble                         g_variant_get_double                    (GVariant             *value);$/;"	p
g_variant_get_fixed_array	gvariant.h	/^gconstpointer                   g_variant_get_fixed_array               (GVariant             *value,$/;"	p
g_variant_get_handle	gvariant.h	/^gint32                          g_variant_get_handle                    (GVariant             *value);$/;"	p
g_variant_get_int16	gvariant.h	/^gint16                          g_variant_get_int16                     (GVariant             *value);$/;"	p
g_variant_get_int32	gvariant.h	/^gint32                          g_variant_get_int32                     (GVariant             *value);$/;"	p
g_variant_get_int64	gvariant.h	/^gint64                          g_variant_get_int64                     (GVariant             *value);$/;"	p
g_variant_get_maybe	gvariant.h	/^GVariant *                      g_variant_get_maybe                     (GVariant             *value);$/;"	p
g_variant_get_normal_form	gvariant.h	/^GVariant *                      g_variant_get_normal_form               (GVariant             *value);$/;"	p
g_variant_get_objv	gvariant.h	/^const gchar **                  g_variant_get_objv                      (GVariant             *value,$/;"	p
g_variant_get_size	gvariant.h	/^gsize                           g_variant_get_size                      (GVariant             *value);$/;"	p
g_variant_get_string	gvariant.h	/^const gchar *                   g_variant_get_string                    (GVariant             *value,$/;"	p
g_variant_get_strv	gvariant.h	/^const gchar **                  g_variant_get_strv                      (GVariant             *value,$/;"	p
g_variant_get_type	gvariant.h	/^const GVariantType *            g_variant_get_type                      (GVariant             *value);$/;"	p
g_variant_get_type_string	gvariant.h	/^const gchar *                   g_variant_get_type_string               (GVariant             *value);$/;"	p
g_variant_get_uint16	gvariant.h	/^guint16                         g_variant_get_uint16                    (GVariant             *value);$/;"	p
g_variant_get_uint32	gvariant.h	/^guint32                         g_variant_get_uint32                    (GVariant             *value);$/;"	p
g_variant_get_uint64	gvariant.h	/^guint64                         g_variant_get_uint64                    (GVariant             *value);$/;"	p
g_variant_get_va	gvariant.h	/^void                            g_variant_get_va                        (GVariant             *value,$/;"	p
g_variant_get_variant	gvariant.h	/^GVariant *                      g_variant_get_variant                   (GVariant             *value);$/;"	p
g_variant_hash	gvariant.h	/^guint                           g_variant_hash                          (gconstpointer         value);$/;"	p
g_variant_is_container	gvariant.h	/^gboolean                        g_variant_is_container                  (GVariant             *value);$/;"	p
g_variant_is_floating	gvariant.h	/^gboolean                        g_variant_is_floating                   (GVariant             *value);$/;"	p
g_variant_is_normal_form	gvariant.h	/^gboolean                        g_variant_is_normal_form                (GVariant             *value);$/;"	p
g_variant_is_object_path	gvariant.h	/^gboolean                        g_variant_is_object_path                (const gchar          *string);$/;"	p
g_variant_is_of_type	gvariant.h	/^gboolean                        g_variant_is_of_type                    (GVariant             *value,$/;"	p
g_variant_is_signature	gvariant.h	/^gboolean                        g_variant_is_signature                  (const gchar          *string);$/;"	p
g_variant_iter_copy	gvariant.h	/^GVariantIter *                  g_variant_iter_copy                     (GVariantIter         *iter);$/;"	p
g_variant_iter_free	gvariant.h	/^void                            g_variant_iter_free                     (GVariantIter         *iter);$/;"	p
g_variant_iter_init	gvariant.h	/^gsize                           g_variant_iter_init                     (GVariantIter         *iter,$/;"	p
g_variant_iter_loop	gvariant.h	/^gboolean                        g_variant_iter_loop                     (GVariantIter         *iter,$/;"	p
g_variant_iter_n_children	gvariant.h	/^gsize                           g_variant_iter_n_children               (GVariantIter         *iter);$/;"	p
g_variant_iter_new	gvariant.h	/^GVariantIter *                  g_variant_iter_new                      (GVariant             *value);$/;"	p
g_variant_iter_next	gvariant.h	/^gboolean                        g_variant_iter_next                     (GVariantIter         *iter,$/;"	p
g_variant_iter_next_value	gvariant.h	/^GVariant *                      g_variant_iter_next_value               (GVariantIter         *iter);$/;"	p
g_variant_lookup	gvariant.h	/^gboolean                        g_variant_lookup                        (GVariant             *dictionary,$/;"	p
g_variant_lookup_value	gvariant.h	/^GVariant *                      g_variant_lookup_value                  (GVariant             *dictionary,$/;"	p
g_variant_n_children	gvariant.h	/^gsize                           g_variant_n_children                    (GVariant             *value);$/;"	p
g_variant_new	gvariant.h	/^GVariant *                      g_variant_new                           (const gchar          *format_string,$/;"	p
g_variant_new_array	gvariant.h	/^GVariant *                      g_variant_new_array                     (const GVariantType   *child_type,$/;"	p
g_variant_new_boolean	gvariant.h	/^GVariant *                      g_variant_new_boolean                   (gboolean              value);$/;"	p
g_variant_new_byte	gvariant.h	/^GVariant *                      g_variant_new_byte                      (guchar                value);$/;"	p
g_variant_new_bytestring	gvariant.h	/^GVariant *                      g_variant_new_bytestring                (const gchar          *string);$/;"	p
g_variant_new_bytestring_array	gvariant.h	/^GVariant *                      g_variant_new_bytestring_array          (const gchar * const  *strv,$/;"	p
g_variant_new_dict_entry	gvariant.h	/^GVariant *                      g_variant_new_dict_entry                (GVariant             *key,$/;"	p
g_variant_new_double	gvariant.h	/^GVariant *                      g_variant_new_double                    (gdouble               value);$/;"	p
g_variant_new_fixed_array	gvariant.h	/^GVariant *                      g_variant_new_fixed_array               (const GVariantType   *element_type,$/;"	p
g_variant_new_from_data	gvariant.h	/^GVariant *                      g_variant_new_from_data                 (const GVariantType   *type,$/;"	p
g_variant_new_handle	gvariant.h	/^GVariant *                      g_variant_new_handle                    (gint32                value);$/;"	p
g_variant_new_int16	gvariant.h	/^GVariant *                      g_variant_new_int16                     (gint16                value);$/;"	p
g_variant_new_int32	gvariant.h	/^GVariant *                      g_variant_new_int32                     (gint32                value);$/;"	p
g_variant_new_int64	gvariant.h	/^GVariant *                      g_variant_new_int64                     (gint64                value);$/;"	p
g_variant_new_maybe	gvariant.h	/^GVariant *                      g_variant_new_maybe                     (const GVariantType   *child_type,$/;"	p
g_variant_new_object_path	gvariant.h	/^GVariant *                      g_variant_new_object_path               (const gchar          *object_path);$/;"	p
g_variant_new_objv	gvariant.h	/^GVariant *                      g_variant_new_objv                      (const gchar * const  *strv,$/;"	p
g_variant_new_parsed	gvariant.h	/^GVariant *                      g_variant_new_parsed                    (const gchar          *format,$/;"	p
g_variant_new_parsed_va	gvariant.h	/^GVariant *                      g_variant_new_parsed_va                 (const gchar          *format,$/;"	p
g_variant_new_signature	gvariant.h	/^GVariant *                      g_variant_new_signature                 (const gchar          *signature);$/;"	p
g_variant_new_string	gvariant.h	/^GVariant *                      g_variant_new_string                    (const gchar          *string);$/;"	p
g_variant_new_strv	gvariant.h	/^GVariant *                      g_variant_new_strv                      (const gchar * const  *strv,$/;"	p
g_variant_new_tuple	gvariant.h	/^GVariant *                      g_variant_new_tuple                     (GVariant * const     *children,$/;"	p
g_variant_new_uint16	gvariant.h	/^GVariant *                      g_variant_new_uint16                    (guint16               value);$/;"	p
g_variant_new_uint32	gvariant.h	/^GVariant *                      g_variant_new_uint32                    (guint32               value);$/;"	p
g_variant_new_uint64	gvariant.h	/^GVariant *                      g_variant_new_uint64                    (guint64               value);$/;"	p
g_variant_new_va	gvariant.h	/^GVariant *                      g_variant_new_va                        (const gchar          *format_string,$/;"	p
g_variant_new_variant	gvariant.h	/^GVariant *                      g_variant_new_variant                   (GVariant             *value);$/;"	p
g_variant_parse	gvariant.h	/^GVariant *                      g_variant_parse                         (const GVariantType   *type,$/;"	p
g_variant_parser_get_error_quark	gvariant.h	/^GQuark                          g_variant_parser_get_error_quark        (void);$/;"	p
g_variant_print	gvariant.h	/^gchar *                         g_variant_print                         (GVariant             *value,$/;"	p
g_variant_print_string	gvariant.h	/^GString *                       g_variant_print_string                  (GVariant             *value,$/;"	p
g_variant_ref	gvariant.h	/^GVariant *                      g_variant_ref                           (GVariant             *value);$/;"	p
g_variant_ref_sink	gvariant.h	/^GVariant *                      g_variant_ref_sink                      (GVariant             *value);$/;"	p
g_variant_store	gvariant.h	/^void                            g_variant_store                         (GVariant             *value,$/;"	p
g_variant_take_ref	gvariant.h	/^GVariant *                      g_variant_take_ref                      (GVariant             *value);$/;"	p
g_variant_type_checked_	gvarianttype.h	/^const GVariantType *            g_variant_type_checked_                 (const gchar *);$/;"	p
g_variant_type_copy	gvarianttype.h	/^GVariantType *                  g_variant_type_copy                     (const GVariantType  *type);$/;"	p
g_variant_type_dup_string	gvarianttype.h	/^gchar *                         g_variant_type_dup_string               (const GVariantType  *type);$/;"	p
g_variant_type_element	gvarianttype.h	/^const GVariantType *            g_variant_type_element                  (const GVariantType  *type);$/;"	p
g_variant_type_equal	gvarianttype.h	/^gboolean                        g_variant_type_equal                    (gconstpointer        type1,$/;"	p
g_variant_type_first	gvarianttype.h	/^const GVariantType *            g_variant_type_first                    (const GVariantType  *type);$/;"	p
g_variant_type_free	gvarianttype.h	/^void                            g_variant_type_free                     (GVariantType        *type);$/;"	p
g_variant_type_get_string_length	gvarianttype.h	/^gsize                           g_variant_type_get_string_length        (const GVariantType  *type);$/;"	p
g_variant_type_hash	gvarianttype.h	/^guint                           g_variant_type_hash                     (gconstpointer        type);$/;"	p
g_variant_type_is_array	gvarianttype.h	/^gboolean                        g_variant_type_is_array                 (const GVariantType  *type);$/;"	p
g_variant_type_is_basic	gvarianttype.h	/^gboolean                        g_variant_type_is_basic                 (const GVariantType  *type);$/;"	p
g_variant_type_is_container	gvarianttype.h	/^gboolean                        g_variant_type_is_container             (const GVariantType  *type);$/;"	p
g_variant_type_is_definite	gvarianttype.h	/^gboolean                        g_variant_type_is_definite              (const GVariantType  *type);$/;"	p
g_variant_type_is_dict_entry	gvarianttype.h	/^gboolean                        g_variant_type_is_dict_entry            (const GVariantType  *type);$/;"	p
g_variant_type_is_maybe	gvarianttype.h	/^gboolean                        g_variant_type_is_maybe                 (const GVariantType  *type);$/;"	p
g_variant_type_is_subtype_of	gvarianttype.h	/^gboolean                        g_variant_type_is_subtype_of            (const GVariantType  *type,$/;"	p
g_variant_type_is_tuple	gvarianttype.h	/^gboolean                        g_variant_type_is_tuple                 (const GVariantType  *type);$/;"	p
g_variant_type_is_variant	gvarianttype.h	/^gboolean                        g_variant_type_is_variant               (const GVariantType  *type);$/;"	p
g_variant_type_key	gvarianttype.h	/^const GVariantType *            g_variant_type_key                      (const GVariantType  *type);$/;"	p
g_variant_type_n_items	gvarianttype.h	/^gsize                           g_variant_type_n_items                  (const GVariantType  *type);$/;"	p
g_variant_type_new	gvarianttype.h	/^GVariantType *                  g_variant_type_new                      (const gchar         *type_string);$/;"	p
g_variant_type_new_array	gvarianttype.h	/^GVariantType *                  g_variant_type_new_array                (const GVariantType  *element);$/;"	p
g_variant_type_new_dict_entry	gvarianttype.h	/^GVariantType *                  g_variant_type_new_dict_entry           (const GVariantType  *key,$/;"	p
g_variant_type_new_maybe	gvarianttype.h	/^GVariantType *                  g_variant_type_new_maybe                (const GVariantType  *element);$/;"	p
g_variant_type_new_tuple	gvarianttype.h	/^GVariantType *                  g_variant_type_new_tuple                (const GVariantType * const *items,$/;"	p
g_variant_type_next	gvarianttype.h	/^const GVariantType *            g_variant_type_next                     (const GVariantType  *type);$/;"	p
g_variant_type_peek_string	gvarianttype.h	/^const gchar *                   g_variant_type_peek_string              (const GVariantType  *type);$/;"	p
g_variant_type_string_is_valid	gvarianttype.h	/^gboolean                        g_variant_type_string_is_valid          (const gchar         *type_string);$/;"	p
g_variant_type_string_scan	gvarianttype.h	/^gboolean                        g_variant_type_string_scan              (const gchar         *string,$/;"	p
g_variant_type_value	gvarianttype.h	/^const GVariantType *            g_variant_type_value                    (const GVariantType  *type);$/;"	p
g_variant_unref	gvariant.h	/^void                            g_variant_unref                         (GVariant             *value);$/;"	p
g_vasprintf	gprintf.h	/^gint                  g_vasprintf (gchar      **string,$/;"	p
g_vfprintf	gprintf.h	/^gint                  g_vfprintf  (FILE        *file,$/;"	p
g_vprintf	gprintf.h	/^gint                  g_vprintf   (gchar const *format,$/;"	p
g_vsnprintf	gutils.h	/^gint                  g_vsnprintf          (gchar       *string,$/;"	p
g_vsprintf	gprintf.h	/^gint                  g_vsprintf  (gchar       *string,$/;"	p
g_warn_if_fail	gmessages.h	263;"	d
g_warn_if_reached	gmessages.h	250;"	d
g_warn_message	gmessages.h	/^void g_warn_message           (const char     *domain,$/;"	p
g_warning	gmessages.h	/^g_warning (const gchar *format,$/;"	f
g_warning	gmessages.h	152;"	d
g_warning	gmessages.h	172;"	d
g_win32_error_message	gwin32.h	/^gchar*          g_win32_error_message (gint error);$/;"	p
g_win32_ftruncate	gwin32.h	/^gint		g_win32_ftruncate	(gint		 f,$/;"	p
g_win32_get_package_installation_directory	gwin32.h	/^gchar*          g_win32_get_package_installation_directory (const gchar *package,$/;"	p
g_win32_get_package_installation_directory	gwin32.h	90;"	d
g_win32_get_package_installation_directory_of_module	gwin32.h	/^gchar*          g_win32_get_package_installation_directory_of_module (gpointer hmodule);$/;"	p
g_win32_get_package_installation_subdirectory	gwin32.h	/^gchar*          g_win32_get_package_installation_subdirectory (const gchar *package,$/;"	p
g_win32_get_package_installation_subdirectory	gwin32.h	91;"	d
g_win32_get_system_data_dirs_for_module	gutils.h	/^const gchar * const * g_win32_get_system_data_dirs_for_module (void (*address_of_function)(void));$/;"	p
g_win32_get_windows_version	gwin32.h	/^guint		g_win32_get_windows_version (void);$/;"	p
g_win32_getlocale	gwin32.h	/^gchar* 		g_win32_getlocale  (void);$/;"	p
g_win32_locale_filename_from_utf8	gwin32.h	/^gchar*          g_win32_locale_filename_from_utf8 (const gchar *utf8filename);$/;"	p
gboolean	gtypes.h	/^typedef gint   gboolean;$/;"	t
gchar	gtypes.h	/^typedef char   gchar;$/;"	t
gconstpointer	gtypes.h	/^typedef const void *gconstpointer;$/;"	t
gdouble	gtypes.h	/^typedef double  gdouble;$/;"	t
get	gmain.h	/^  void (*get)   (gpointer     cb_data,$/;"	m	struct:_GSourceCallbackFuncs
gfloat	gtypes.h	/^typedef float   gfloat;$/;"	t
gint	gtypes.h	/^typedef int    gint;$/;"	t
glib_binary_age	gversion.h	/^GLIB_VAR const guint glib_binary_age;$/;"	v
glib_check_version	gversion.h	/^const gchar * glib_check_version (guint required_major,$/;"	p
glib_interface_age	gversion.h	/^GLIB_VAR const guint glib_interface_age;$/;"	v
glib_major_version	gversion.h	/^GLIB_VAR const guint glib_major_version;$/;"	v
glib_mem_profiler_table	gmem.h	/^GLIB_VAR GMemVTable	*glib_mem_profiler_table;$/;"	v
glib_micro_version	gversion.h	/^GLIB_VAR const guint glib_micro_version;$/;"	v
glib_minor_version	gversion.h	/^GLIB_VAR const guint glib_minor_version;$/;"	v
glong	gtypes.h	/^typedef long   glong;$/;"	t
gpointer	gtypes.h	/^typedef void* gpointer;$/;"	t
gshort	gtypes.h	/^typedef short  gshort;$/;"	t
guchar	gtypes.h	/^typedef unsigned char   guchar;$/;"	t
guint	gtypes.h	/^typedef unsigned int    guint;$/;"	t
gulong	gtypes.h	/^typedef unsigned long   gulong;$/;"	t
gunichar	gunicode.h	/^typedef guint32 gunichar;$/;"	t
gunichar2	gunicode.h	/^typedef guint16 gunichar2;$/;"	t
gushort	gtypes.h	/^typedef unsigned short  gushort;$/;"	t
have_writer	deprecated/gthread.h	/^  gboolean have_writer;$/;"	m	struct:_GStaticRWLock
head	gqueue.h	/^  GList *head;$/;"	m	struct:_GQueue
hook_id	ghook.h	/^  gulong	 hook_id;$/;"	m	struct:_GHook
hook_size	ghook.h	/^  guint		    hook_size : 16;$/;"	m	struct:_GHookList
hooks	ghook.h	/^  GHook		   *hooks;$/;"	m	struct:_GHookList
i	gthread.h	/^  guint i[2];$/;"	m	struct:_GCond
i	gthread.h	/^  guint i[2];$/;"	m	struct:_GRWLock
i	gthread.h	/^  guint i[2];$/;"	m	struct:_GRecMutex
i	gthread.h	/^  guint i[2];$/;"	m	union:_GMutex
identifier_2_string	gscanner.h	/^  guint		identifier_2_string : 1;$/;"	m	struct:_GScannerConfig
index	deprecated/gthread.h	/^  guint index;$/;"	m	struct:_GStaticPrivate
inline	gutils.h	64;"	d
inline	gutils.h	65;"	d
input_fd	gscanner.h	/^  gint			input_fd;$/;"	m	struct:_GScanner
input_name	gscanner.h	/^  const gchar		*input_name;$/;"	m	struct:_GScanner
int_2_float	gscanner.h	/^  guint		int_2_float : 1;		\/* int => G_TOKEN_FLOAT? *\/$/;"	m	struct:_GScannerConfig
io_close	giochannel.h	/^  GIOStatus  (*io_close)         (GIOChannel   *channel,$/;"	m	struct:_GIOFuncs
io_create_watch	giochannel.h	/^  GSource*   (*io_create_watch)  (GIOChannel   *channel,$/;"	m	struct:_GIOFuncs
io_free	giochannel.h	/^  void       (*io_free)          (GIOChannel   *channel);$/;"	m	struct:_GIOFuncs
io_get_flags	giochannel.h	/^  GIOFlags   (*io_get_flags)     (GIOChannel   *channel);$/;"	m	struct:_GIOFuncs
io_read	giochannel.h	/^  GIOStatus (*io_read)           (GIOChannel   *channel, $/;"	m	struct:_GIOFuncs
io_seek	giochannel.h	/^  GIOStatus (*io_seek)           (GIOChannel   *channel, $/;"	m	struct:_GIOFuncs
io_set_flags	giochannel.h	/^  GIOStatus  (*io_set_flags)     (GIOChannel   *channel,$/;"	m	struct:_GIOFuncs
io_write	giochannel.h	/^  GIOStatus (*io_write)          (GIOChannel   *channel, $/;"	m	struct:_GIOFuncs
is_readable	giochannel.h	/^  guint is_readable    : 1;	\/* Cached GIOFlag *\/$/;"	m	struct:_GIOChannel
is_seekable	giochannel.h	/^  guint is_seekable    : 1;	\/* ditto *\/$/;"	m	struct:_GIOChannel
is_setup	ghook.h	/^  guint		    is_setup : 1;$/;"	m	struct:_GHookList
is_writeable	giochannel.h	/^  guint is_writeable   : 1;	\/* ditto *\/$/;"	m	struct:_GIOChannel
items	deprecated/gcompletion.h	/^  GList* items;$/;"	m	struct:_GCompletion
joinable	deprecated/gthread.h	/^  gboolean joinable;$/;"	m	struct:_GThread
julian	gdate.h	/^  guint julian : 1;    \/* julian is valid *\/$/;"	m	struct:_GDate
julian_days	gdate.h	/^  guint julian_days : 32; \/* julian days representation - we use a$/;"	m	struct:_GDate
key	gutils.h	/^  const gchar *key;$/;"	m	struct:_GDebugKey
len	deprecated/grel.h	/^  guint len;$/;"	m	struct:_GTuples
len	garray.h	/^  guint	    len;$/;"	m	struct:_GPtrArray
len	garray.h	/^  guint	  len;$/;"	m	struct:_GByteArray
len	garray.h	/^  guint len;$/;"	m	struct:_GArray
len	gstring.h	/^  gsize len;$/;"	m	struct:_GString
length	gqueue.h	/^  guint  length;$/;"	m	struct:_GQueue
line	gscanner.h	/^  guint			line;$/;"	m	struct:_GScanner
line_term	giochannel.h	/^  gchar *line_term;		\/* String which indicates the end of a line of text *\/$/;"	m	struct:_GIOChannel
line_term_len	giochannel.h	/^  guint line_term_len;		\/* So we can have null in the line term *\/$/;"	m	struct:_GIOChannel
log_type	gtestutils.h	/^  GTestLogType  log_type;$/;"	m	struct:__anon14
long_name	goption.h	/^  const gchar *long_name;$/;"	m	struct:_GOptionEntry
malloc	gmem.h	/^  gpointer (*malloc)      (gsize    n_bytes);$/;"	m	struct:_GMemVTable
mantissa	gtypes.h	/^    guint mantissa : 23;$/;"	m	struct:_GFloatIEEE754::__anon29
mantissa	gtypes.h	/^    guint mantissa : 23;$/;"	m	struct:_GFloatIEEE754::__anon31
mantissa_high	gtypes.h	/^    guint mantissa_high : 20;$/;"	m	struct:_GDoubleIEEE754::__anon30
mantissa_high	gtypes.h	/^    guint mantissa_high : 20;$/;"	m	struct:_GDoubleIEEE754::__anon32
mantissa_low	gtypes.h	/^    guint mantissa_low : 32;$/;"	m	struct:_GDoubleIEEE754::__anon30
mantissa_low	gtypes.h	/^    guint mantissa_low : 32;$/;"	m	struct:_GDoubleIEEE754::__anon32
max_parse_errors	gscanner.h	/^  guint			max_parse_errors;$/;"	m	struct:_GScanner
message	gerror.h	/^  gchar       *message;$/;"	m	struct:_GError
month	gdate.h	/^  guint month  : 4;$/;"	m	struct:_GDate
mpn	gtypes.h	/^  } mpn;$/;"	m	union:_GDoubleIEEE754	typeref:struct:_GDoubleIEEE754::__anon30
mpn	gtypes.h	/^  } mpn;$/;"	m	union:_GDoubleIEEE754	typeref:struct:_GDoubleIEEE754::__anon32
mpn	gtypes.h	/^  } mpn;$/;"	m	union:_GFloatIEEE754	typeref:struct:_GFloatIEEE754::__anon29
mpn	gtypes.h	/^  } mpn;$/;"	m	union:_GFloatIEEE754	typeref:struct:_GFloatIEEE754::__anon31
msg_handler	gscanner.h	/^  GScannerMsgFunc	msg_handler;$/;"	m	struct:_GScanner
msgs	gtestutils.h	/^  GSList      *msgs;$/;"	m	struct:__anon15
mutex	deprecated/gthread.h	/^  GMutex *mutex;$/;"	m	struct:__anon54
mutex	deprecated/gthread.h	/^  GStaticMutex mutex;$/;"	m	struct:_GStaticRWLock
mutex	deprecated/gthread.h	/^  GStaticMutex mutex;$/;"	m	struct:_GStaticRecMutex
mutex_free	deprecated/gthread.h	/^  void     (*mutex_free)          (GMutex               *mutex);$/;"	m	struct:_GThreadFunctions
mutex_lock	deprecated/gthread.h	/^  void     (*mutex_lock)          (GMutex               *mutex);$/;"	m	struct:_GThreadFunctions
mutex_new	deprecated/gthread.h	/^  GMutex*  (*mutex_new)           (void);$/;"	m	struct:_GThreadFunctions
mutex_trylock	deprecated/gthread.h	/^  gboolean (*mutex_trylock)       (GMutex               *mutex);$/;"	m	struct:_GThreadFunctions
mutex_unlock	deprecated/gthread.h	/^  void     (*mutex_unlock)        (GMutex               *mutex);$/;"	m	struct:_GThreadFunctions
n_nums	gtestutils.h	/^  guint         n_nums;$/;"	m	struct:__anon14
n_strings	gtestutils.h	/^  guint         n_strings;$/;"	m	struct:__anon14
name	gmain.h	/^  char    *name;$/;"	m	struct:_GSource
next	ghook.h	/^  GHook		*next;$/;"	m	struct:_GHook
next	glist.h	/^  GList *next;$/;"	m	struct:_GList
next	gmain.h	/^  GSource *next;$/;"	m	struct:_GSource
next	gnode.h	/^  GNode	  *next;$/;"	m	struct:_GNode
next	gslist.h	/^  GSList *next;$/;"	m	struct:_GSList
next	gtrashstack.h	/^  GTrashStack *next;$/;"	m	struct:_GTrashStack
next_line	gscanner.h	/^  guint			next_line;$/;"	m	struct:_GScanner
next_position	gscanner.h	/^  guint			next_position;$/;"	m	struct:_GScanner
next_token	gscanner.h	/^  GTokenType		next_token;$/;"	m	struct:_GScanner
next_value	gscanner.h	/^  GTokenValue		next_value;$/;"	m	struct:_GScanner
notify	gthread.h	/^  GDestroyNotify notify;$/;"	m	struct:_GPrivate
numbers_2_int	gscanner.h	/^  guint		numbers_2_int : 1;		\/* bin, octal, hex => int *\/$/;"	m	struct:_GScannerConfig
nums	gtestutils.h	/^  long double  *nums;$/;"	m	struct:__anon14
owner	deprecated/gthread.h	/^    void *owner;$/;"	m	union:_GStaticRecMutex::__anon55
p	gthread.h	/^  gpointer       p;$/;"	m	struct:_GPrivate
p	gthread.h	/^  gpointer p;$/;"	m	struct:_GCond
p	gthread.h	/^  gpointer p;$/;"	m	struct:_GRWLock
p	gthread.h	/^  gpointer p;$/;"	m	struct:_GRecMutex
p	gthread.h	/^  gpointer p;$/;"	m	union:_GMutex
padding_dummy	gscanner.h	/^  guint		padding_dummy;$/;"	m	struct:_GScannerConfig
parent	gnode.h	/^  GNode	  *parent;$/;"	m	struct:_GNode
parse_errors	gscanner.h	/^  guint			parse_errors;$/;"	m	struct:_GScanner
partial_write_buf	giochannel.h	/^  gchar partial_write_buf[6];	\/* UTF-8 partial characters, null terminated *\/$/;"	m	struct:_GIOChannel
passthrough	gmarkup.h	/^  void (*passthrough)    (GMarkupParseContext *context,$/;"	m	struct:_GMarkupParser
pdata	garray.h	/^  gpointer *pdata;$/;"	m	struct:_GPtrArray
poll_fds	gmain.h	/^  GSList *poll_fds;$/;"	m	struct:_GSource
position	gscanner.h	/^  guint			position;$/;"	m	struct:_GScanner
prefix	deprecated/gcompletion.h	/^  gchar* prefix;$/;"	m	struct:_GCompletion
prepare	gmain.h	/^  gboolean (*prepare)  (GSource    *source,$/;"	m	struct:_GSourceFuncs
prev	ghook.h	/^  GHook		*prev;$/;"	m	struct:_GHook
prev	glist.h	/^  GList *prev;$/;"	m	struct:_GList
prev	gmain.h	/^  GSource *prev;$/;"	m	struct:_GSource
prev	gnode.h	/^  GNode	  *prev;$/;"	m	struct:_GNode
priority	deprecated/gthread.h	/^  GThreadPriority priority;$/;"	m	struct:_GThread
priority	gmain.h	/^  gint priority;$/;"	m	struct:_GSource
priv	gmain.h	/^  GSourcePrivate *priv;$/;"	m	struct:_GSource
private_get	deprecated/gthread.h	/^  gpointer  (*private_get)        (GPrivate             *private_key);$/;"	m	struct:_GThreadFunctions
private_new	deprecated/gthread.h	/^  GPrivate* (*private_new)        (GDestroyNotify        destructor);$/;"	m	struct:_GThreadFunctions
private_set	deprecated/gthread.h	/^  void      (*private_set)        (GPrivate             *private_key,$/;"	m	struct:_GThreadFunctions
qdata	gscanner.h	/^  GData			*qdata;$/;"	m	struct:_GScanner
read_buf	giochannel.h	/^  GString *read_buf;		\/* Raw data from the channel *\/$/;"	m	struct:_GIOChannel
read_cd	giochannel.h	/^  GIConv read_cd;$/;"	m	struct:_GIOChannel
read_cond	deprecated/gthread.h	/^  GCond *read_cond;$/;"	m	struct:_GStaticRWLock
read_counter	deprecated/gthread.h	/^  guint read_counter;$/;"	m	struct:_GStaticRWLock
realloc	gmem.h	/^  gpointer (*realloc)     (gpointer mem,$/;"	m	struct:_GMemVTable
ref	gmain.h	/^  void (*ref)   (gpointer     cb_data);$/;"	m	struct:_GSourceCallbackFuncs
ref_count	ghook.h	/^  guint		 ref_count;$/;"	m	struct:_GHook
ref_count	giochannel.h	/^  gint ref_count;$/;"	m	struct:_GIOChannel
ref_count	gmain.h	/^  guint ref_count;$/;"	m	struct:_GSource
reserved1	giochannel.h	/^  gpointer reserved1;	$/;"	m	struct:_GIOChannel
reserved2	giochannel.h	/^  gpointer reserved2;	$/;"	m	struct:_GIOChannel
retval	gthread.h	/^  volatile gpointer retval;$/;"	m	struct:_GOnce
revents	gpoll.h	/^  gushort 	revents;$/;"	m	struct:_GPollFD
scan_binary	gscanner.h	/^  guint		scan_binary : 1;$/;"	m	struct:_GScannerConfig
scan_comment_multi	gscanner.h	/^  guint		scan_comment_multi : 1;		\/* scan multi line comments? *\/$/;"	m	struct:_GScannerConfig
scan_float	gscanner.h	/^  guint		scan_float : 1;$/;"	m	struct:_GScannerConfig
scan_hex	gscanner.h	/^  guint		scan_hex : 1;			\/* `0x0ff0' *\/$/;"	m	struct:_GScannerConfig
scan_hex_dollar	gscanner.h	/^  guint		scan_hex_dollar : 1;		\/* `$0ff0' *\/$/;"	m	struct:_GScannerConfig
scan_identifier	gscanner.h	/^  guint		scan_identifier : 1;$/;"	m	struct:_GScannerConfig
scan_identifier_1char	gscanner.h	/^  guint		scan_identifier_1char : 1;$/;"	m	struct:_GScannerConfig
scan_identifier_NULL	gscanner.h	/^  guint		scan_identifier_NULL : 1;$/;"	m	struct:_GScannerConfig
scan_octal	gscanner.h	/^  guint		scan_octal : 1;$/;"	m	struct:_GScannerConfig
scan_string_dq	gscanner.h	/^  guint		scan_string_dq : 1;		\/* string: "\\\\-escapes!\\n" *\/$/;"	m	struct:_GScannerConfig
scan_string_sq	gscanner.h	/^  guint		scan_string_sq : 1;		\/* string: 'anything' *\/$/;"	m	struct:_GScannerConfig
scan_symbols	gscanner.h	/^  guint		scan_symbols : 1;$/;"	m	struct:_GScannerConfig
scope_0_fallback	gscanner.h	/^  guint		scope_0_fallback : 1;		\/* try scope 0 on lookups? *\/$/;"	m	struct:_GScannerConfig
scope_id	gscanner.h	/^  guint			scope_id;$/;"	m	struct:_GScanner
seq_id	ghook.h	/^  gulong	    seq_id;$/;"	m	struct:_GHookList
short_name	goption.h	/^  gchar        short_name;$/;"	m	struct:_GOptionEntry
sign	gtypes.h	/^    guint sign : 1;$/;"	m	struct:_GDoubleIEEE754::__anon30
sign	gtypes.h	/^    guint sign : 1;$/;"	m	struct:_GDoubleIEEE754::__anon32
sign	gtypes.h	/^    guint sign : 1;$/;"	m	struct:_GFloatIEEE754::__anon29
sign	gtypes.h	/^    guint sign : 1;$/;"	m	struct:_GFloatIEEE754::__anon31
skip_comment_multi	gscanner.h	/^  guint		skip_comment_multi : 1;		\/* C like comment *\/$/;"	m	struct:_GScannerConfig
skip_comment_single	gscanner.h	/^  guint		skip_comment_single : 1;	\/* single line comment *\/$/;"	m	struct:_GScannerConfig
source_funcs	gmain.h	/^  GSourceFuncs *source_funcs;$/;"	m	struct:_GSource
source_id	gmain.h	/^  guint source_id;$/;"	m	struct:_GSource
start_element	gmarkup.h	/^  void (*start_element)  (GMarkupParseContext *context,$/;"	m	struct:_GMarkupParser
status	gthread.h	/^  volatile GOnceStatus status;$/;"	m	struct:_GOnce
store_int64	gscanner.h	/^  guint		store_int64 : 1; 		\/* use value.v_int64 rather than v_int *\/$/;"	m	struct:_GScannerConfig
str	gstring.h	/^  gchar  *str;$/;"	m	struct:_GString
strings	gtestutils.h	/^  gchar       **strings; \/* NULL terminated *\/$/;"	m	struct:__anon14
strncmp_func	deprecated/gcompletion.h	/^  GCompletionStrncmpFunc strncmp_func;$/;"	m	struct:_GCompletion
symbol_2_token	gscanner.h	/^  guint		symbol_2_token : 1;$/;"	m	struct:_GScannerConfig
symbol_table	gscanner.h	/^  GHashTable		*symbol_table;$/;"	m	struct:_GScanner
tail	gqueue.h	/^  GList *tail;$/;"	m	struct:_GQueue
test_initialized	gtestutils.h	/^  gboolean      test_initialized;$/;"	m	struct:__anon12
test_perf	gtestutils.h	/^  gboolean      test_perf;      \/* run performance tests *\/$/;"	m	struct:__anon12
test_quick	gtestutils.h	/^  gboolean      test_quick;     \/* disable thorough tests *\/$/;"	m	struct:__anon12
test_quiet	gtestutils.h	/^  gboolean      test_quiet;     \/* reduce output *\/$/;"	m	struct:__anon12
test_undefined	gtestutils.h	/^  gboolean      test_undefined; \/* run tests that are meant to assert *\/$/;"	m	struct:__anon12
test_verbose	gtestutils.h	/^  gboolean      test_verbose;   \/* extra info *\/$/;"	m	struct:__anon12
text	gmarkup.h	/^  void (*text)           (GMarkupParseContext *context,$/;"	m	struct:_GMarkupParser
text	gscanner.h	/^  const gchar		*text;$/;"	m	struct:_GScanner
text_end	gscanner.h	/^  const gchar		*text_end;$/;"	m	struct:_GScanner
thread_create	deprecated/gthread.h	/^  void      (*thread_create)      (GThreadFunc           func,$/;"	m	struct:_GThreadFunctions
thread_equal	deprecated/gthread.h	/^  gboolean  (*thread_equal)       (gpointer              thread1,$/;"	m	struct:_GThreadFunctions
thread_exit	deprecated/gthread.h	/^  void      (*thread_exit)        (void);$/;"	m	struct:_GThreadFunctions
thread_join	deprecated/gthread.h	/^  void      (*thread_join)        (gpointer              thread);$/;"	m	struct:_GThreadFunctions
thread_self	deprecated/gthread.h	/^  void      (*thread_self)        (gpointer              thread);$/;"	m	struct:_GThreadFunctions
thread_set_priority	deprecated/gthread.h	/^  void      (*thread_set_priority)(gpointer              thread,$/;"	m	struct:_GThreadFunctions
thread_yield	deprecated/gthread.h	/^  void      (*thread_yield)       (void);$/;"	m	struct:_GThreadFunctions
token	gscanner.h	/^  GTokenType		token;$/;"	m	struct:_GScanner
try_malloc	gmem.h	/^  gpointer (*try_malloc)  (gsize    n_bytes);$/;"	m	struct:_GMemVTable
try_realloc	gmem.h	/^  gpointer (*try_realloc) (gpointer mem,$/;"	m	struct:_GMemVTable
tv_sec	gtypes.h	/^  glong tv_sec;$/;"	m	struct:_GTimeVal
tv_usec	gtypes.h	/^  glong tv_usec;$/;"	m	struct:_GTimeVal
unref	gmain.h	/^  void (*unref) (gpointer     cb_data);$/;"	m	struct:_GSourceCallbackFuncs
unused	deprecated/gthread.h	/^  pthread_mutex_t unused;$/;"	m	struct:__anon54
unused	deprecated/gthread.h	/^  } unused;$/;"	m	struct:_GStaticRecMutex	typeref:union:_GStaticRecMutex::__anon55
use_buffer	giochannel.h	/^  guint use_buffer     : 1;	\/* The encoding uses the buffers *\/$/;"	m	struct:_GIOChannel
user_data	gscanner.h	/^  gpointer		user_data;$/;"	m	struct:_GScanner
user_data	gthreadpool.h	/^  gpointer user_data;$/;"	m	struct:_GThreadPool
v_binary	gscanner.h	/^  gulong	v_binary;$/;"	m	union:_GTokenValue
v_char	gscanner.h	/^  guchar	v_char;$/;"	m	union:_GTokenValue
v_comment	gscanner.h	/^  gchar		*v_comment;$/;"	m	union:_GTokenValue
v_double	gtypes.h	/^  gdouble v_double;$/;"	m	union:_GDoubleIEEE754
v_error	gscanner.h	/^  guint		v_error;$/;"	m	union:_GTokenValue
v_float	gscanner.h	/^  gdouble	v_float;$/;"	m	union:_GTokenValue
v_float	gtypes.h	/^  gfloat v_float;$/;"	m	union:_GFloatIEEE754
v_hex	gscanner.h	/^  gulong	v_hex;$/;"	m	union:_GTokenValue
v_identifier	gscanner.h	/^  gchar		*v_identifier;$/;"	m	union:_GTokenValue
v_int	gscanner.h	/^  gulong	v_int;$/;"	m	union:_GTokenValue
v_int64	gscanner.h	/^  guint64       v_int64;$/;"	m	union:_GTokenValue
v_octal	gscanner.h	/^  gulong	v_octal;$/;"	m	union:_GTokenValue
v_string	gscanner.h	/^  gchar		*v_string;$/;"	m	union:_GTokenValue
v_symbol	gscanner.h	/^  gpointer	v_symbol;$/;"	m	union:_GTokenValue
value	gscanner.h	/^  GTokenValue		value;$/;"	m	struct:_GScanner
value	gutils.h	/^  guint	       value;$/;"	m	struct:_GDebugKey
want_to_read	deprecated/gthread.h	/^  guint want_to_read;$/;"	m	struct:_GStaticRWLock
want_to_write	deprecated/gthread.h	/^  guint want_to_write;$/;"	m	struct:_GStaticRWLock
write_buf	giochannel.h	/^  GString *write_buf;		\/* Data ready to be written to the file *\/$/;"	m	struct:_GIOChannel
write_cd	giochannel.h	/^  GIConv write_cd;$/;"	m	struct:_GIOChannel
write_cond	deprecated/gthread.h	/^  GCond *write_cond;$/;"	m	struct:_GStaticRWLock
x	gvariant.h	/^  gsize x[16];$/;"	m	struct:_GVariantBuilder
x	gvariant.h	/^  gsize x[16];$/;"	m	struct:_GVariantIter
year	gdate.h	/^  guint year   : 16;$/;"	m	struct:_GDate
