!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
GAction	giotypes.h	/^typedef struct _GAction                       GAction;$/;"	t	typeref:struct:_GAction
GActionEntry	gactionmap.h	/^typedef struct _GActionEntry                                GActionEntry;$/;"	t	typeref:struct:_GActionEntry
GActionGroup	giotypes.h	/^typedef struct _GActionGroup                  GActionGroup;$/;"	t	typeref:struct:_GActionGroup
GActionGroupInterface	gactiongroup.h	/^typedef struct _GActionGroupInterface                       GActionGroupInterface;$/;"	t	typeref:struct:_GActionGroupInterface
GActionInterface	gaction.h	/^typedef struct _GActionInterface                            GActionInterface;$/;"	t	typeref:struct:_GActionInterface
GActionMap	giotypes.h	/^typedef struct _GActionMap                    GActionMap;$/;"	t	typeref:struct:_GActionMap
GActionMapInterface	gactionmap.h	/^typedef struct _GActionMapInterface                         GActionMapInterface;$/;"	t	typeref:struct:_GActionMapInterface
GAppInfo	giotypes.h	/^typedef struct _GAppInfo                      GAppInfo; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GAppInfo
GAppInfoCreateFlags	gioenums.h	/^} GAppInfoCreateFlags;$/;"	t	typeref:enum:__anon1
GAppInfoIface	gappinfo.h	/^typedef struct _GAppInfoIface    GAppInfoIface;$/;"	t	typeref:struct:_GAppInfoIface
GAppLaunchContext	giotypes.h	/^typedef struct _GAppLaunchContext             GAppLaunchContext;$/;"	t	typeref:struct:_GAppLaunchContext
GAppLaunchContextClass	gappinfo.h	/^typedef struct _GAppLaunchContextClass   GAppLaunchContextClass;$/;"	t	typeref:struct:_GAppLaunchContextClass
GAppLaunchContextPrivate	gappinfo.h	/^typedef struct _GAppLaunchContextPrivate GAppLaunchContextPrivate;$/;"	t	typeref:struct:_GAppLaunchContextPrivate
GApplication	giotypes.h	/^typedef struct _GApplication                  GApplication;$/;"	t	typeref:struct:_GApplication
GApplicationClass	gapplication.h	/^typedef struct _GApplicationClass                           GApplicationClass;$/;"	t	typeref:struct:_GApplicationClass
GApplicationCommandLine	giotypes.h	/^typedef struct _GApplicationCommandLine       GApplicationCommandLine;$/;"	t	typeref:struct:_GApplicationCommandLine
GApplicationCommandLineClass	gapplicationcommandline.h	/^typedef struct _GApplicationCommandLineClass                 GApplicationCommandLineClass;$/;"	t	typeref:struct:_GApplicationCommandLineClass
GApplicationCommandLinePrivate	gapplicationcommandline.h	/^typedef struct _GApplicationCommandLinePrivate               GApplicationCommandLinePrivate;$/;"	t	typeref:struct:_GApplicationCommandLinePrivate
GApplicationFlags	gioenums.h	/^} GApplicationFlags;$/;"	t	typeref:enum:__anon55
GApplicationPrivate	gapplication.h	/^typedef struct _GApplicationPrivate                         GApplicationPrivate;$/;"	t	typeref:struct:_GApplicationPrivate
GAskPasswordFlags	gioenums.h	/^} GAskPasswordFlags;$/;"	t	typeref:enum:__anon21
GAsyncInitable	giotypes.h	/^typedef struct _GAsyncInitable                GAsyncInitable;$/;"	t	typeref:struct:_GAsyncInitable
GAsyncInitableIface	gasyncinitable.h	/^typedef struct _GAsyncInitableIface GAsyncInitableIface;$/;"	t	typeref:struct:_GAsyncInitableIface
GAsyncReadyCallback	giotypes.h	/^typedef void (*GAsyncReadyCallback) (GObject *source_object,$/;"	t
GAsyncResult	giotypes.h	/^typedef struct _GAsyncResult                  GAsyncResult; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GAsyncResult
GAsyncResultIface	gasyncresult.h	/^typedef struct _GAsyncResultIface    GAsyncResultIface;$/;"	t	typeref:struct:_GAsyncResultIface
GBufferedInputStream	giotypes.h	/^typedef struct _GBufferedInputStream          GBufferedInputStream;$/;"	t	typeref:struct:_GBufferedInputStream
GBufferedInputStreamClass	gbufferedinputstream.h	/^typedef struct _GBufferedInputStreamClass    GBufferedInputStreamClass;$/;"	t	typeref:struct:_GBufferedInputStreamClass
GBufferedInputStreamPrivate	gbufferedinputstream.h	/^typedef struct _GBufferedInputStreamPrivate  GBufferedInputStreamPrivate;$/;"	t	typeref:struct:_GBufferedInputStreamPrivate
GBufferedOutputStream	giotypes.h	/^typedef struct _GBufferedOutputStream         GBufferedOutputStream;$/;"	t	typeref:struct:_GBufferedOutputStream
GBufferedOutputStreamClass	gbufferedoutputstream.h	/^typedef struct _GBufferedOutputStreamClass    GBufferedOutputStreamClass;$/;"	t	typeref:struct:_GBufferedOutputStreamClass
GBufferedOutputStreamPrivate	gbufferedoutputstream.h	/^typedef struct _GBufferedOutputStreamPrivate  GBufferedOutputStreamPrivate;$/;"	t	typeref:struct:_GBufferedOutputStreamPrivate
GBusAcquiredCallback	gdbusnameowning.h	/^typedef void (*GBusAcquiredCallback) (GDBusConnection *connection,$/;"	t
GBusNameAcquiredCallback	gdbusnameowning.h	/^typedef void (*GBusNameAcquiredCallback) (GDBusConnection *connection,$/;"	t
GBusNameAppearedCallback	gdbusnamewatching.h	/^typedef void (*GBusNameAppearedCallback) (GDBusConnection *connection,$/;"	t
GBusNameLostCallback	gdbusnameowning.h	/^typedef void (*GBusNameLostCallback) (GDBusConnection *connection,$/;"	t
GBusNameOwnerFlags	gioenums.h	/^} GBusNameOwnerFlags;$/;"	t	typeref:enum:__anon38
GBusNameVanishedCallback	gdbusnamewatching.h	/^typedef void (*GBusNameVanishedCallback) (GDBusConnection *connection,$/;"	t
GBusNameWatcherFlags	gioenums.h	/^} GBusNameWatcherFlags;$/;"	t	typeref:enum:__anon39
GBusType	gioenums.h	/^} GBusType;$/;"	t	typeref:enum:__anon37
GCancellable	giotypes.h	/^typedef struct _GCancellable                  GCancellable;$/;"	t	typeref:struct:_GCancellable
GCancellableClass	gcancellable.h	/^typedef struct _GCancellableClass   GCancellableClass;$/;"	t	typeref:struct:_GCancellableClass
GCancellablePrivate	gcancellable.h	/^typedef struct _GCancellablePrivate GCancellablePrivate;$/;"	t	typeref:struct:_GCancellablePrivate
GCancellableSourceFunc	giotypes.h	/^typedef gboolean (*GCancellableSourceFunc) (GCancellable *cancellable,$/;"	t
GCharsetConverter	giotypes.h	/^typedef struct _GCharsetConverter             GCharsetConverter;$/;"	t	typeref:struct:_GCharsetConverter
GCharsetConverterClass	gcharsetconverter.h	/^typedef struct _GCharsetConverterClass   GCharsetConverterClass;$/;"	t	typeref:struct:_GCharsetConverterClass
GConverter	giotypes.h	/^typedef struct _GConverter                    GConverter;$/;"	t	typeref:struct:_GConverter
GConverterFlags	gioenums.h	/^} GConverterFlags;$/;"	t	typeref:enum:__anon2
GConverterIface	gconverter.h	/^typedef struct _GConverterIface   GConverterIface;$/;"	t	typeref:struct:_GConverterIface
GConverterInputStream	giotypes.h	/^typedef struct _GConverterInputStream         GConverterInputStream;$/;"	t	typeref:struct:_GConverterInputStream
GConverterInputStreamClass	gconverterinputstream.h	/^typedef struct _GConverterInputStreamClass    GConverterInputStreamClass;$/;"	t	typeref:struct:_GConverterInputStreamClass
GConverterInputStreamPrivate	gconverterinputstream.h	/^typedef struct _GConverterInputStreamPrivate  GConverterInputStreamPrivate;$/;"	t	typeref:struct:_GConverterInputStreamPrivate
GConverterOutputStream	giotypes.h	/^typedef struct _GConverterOutputStream        GConverterOutputStream;$/;"	t	typeref:struct:_GConverterOutputStream
GConverterOutputStreamClass	gconverteroutputstream.h	/^typedef struct _GConverterOutputStreamClass    GConverterOutputStreamClass;$/;"	t	typeref:struct:_GConverterOutputStreamClass
GConverterOutputStreamPrivate	gconverteroutputstream.h	/^typedef struct _GConverterOutputStreamPrivate  GConverterOutputStreamPrivate;$/;"	t	typeref:struct:_GConverterOutputStreamPrivate
GConverterResult	gioenums.h	/^} GConverterResult;$/;"	t	typeref:enum:__anon3
GCredentials	giotypes.h	/^typedef struct _GCredentials                  GCredentials;$/;"	t	typeref:struct:_GCredentials
GCredentialsClass	gcredentials.h	/^typedef struct _GCredentialsClass   GCredentialsClass;$/;"	t	typeref:struct:_GCredentialsClass
GCredentialsType	gioenums.h	/^} GCredentialsType;$/;"	t	typeref:enum:__anon53
GDBusActionGroup	giotypes.h	/^typedef struct _GDBusActionGroup              GDBusActionGroup;$/;"	t	typeref:struct:_GDBusActionGroup
GDBusAnnotationInfo	giotypes.h	/^typedef struct _GDBusAnnotationInfo           GDBusAnnotationInfo;$/;"	t	typeref:struct:_GDBusAnnotationInfo
GDBusArgInfo	giotypes.h	/^typedef struct _GDBusArgInfo                  GDBusArgInfo;$/;"	t	typeref:struct:_GDBusArgInfo
GDBusAuthObserver	giotypes.h	/^typedef struct _GDBusAuthObserver             GDBusAuthObserver;$/;"	t	typeref:struct:_GDBusAuthObserver
GDBusCallFlags	gioenums.h	/^} GDBusCallFlags;$/;"	t	typeref:enum:__anon44
GDBusCapabilityFlags	gioenums.h	/^} GDBusCapabilityFlags;$/;"	t	typeref:enum:__anon43
GDBusConnection	giotypes.h	/^typedef struct _GDBusConnection               GDBusConnection;$/;"	t	typeref:struct:_GDBusConnection
GDBusConnectionFlags	gioenums.h	/^} GDBusConnectionFlags;$/;"	t	typeref:enum:__anon42
GDBusError	gioenums.h	/^} GDBusError;$/;"	t	typeref:enum:__anon41
GDBusErrorEntry	giotypes.h	/^typedef struct _GDBusErrorEntry               GDBusErrorEntry;$/;"	t	typeref:struct:_GDBusErrorEntry
GDBusInterface	giotypes.h	/^typedef struct _GDBusInterface              GDBusInterface; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GDBusInterface
GDBusInterfaceGetPropertyFunc	gdbusconnection.h	/^typedef GVariant *(*GDBusInterfaceGetPropertyFunc) (GDBusConnection       *connection,$/;"	t
GDBusInterfaceIface	gdbusinterface.h	/^typedef struct _GDBusInterfaceIface GDBusInterfaceIface;$/;"	t	typeref:struct:_GDBusInterfaceIface
GDBusInterfaceInfo	giotypes.h	/^typedef struct _GDBusInterfaceInfo            GDBusInterfaceInfo;$/;"	t	typeref:struct:_GDBusInterfaceInfo
GDBusInterfaceMethodCallFunc	gdbusconnection.h	/^typedef void (*GDBusInterfaceMethodCallFunc) (GDBusConnection       *connection,$/;"	t
GDBusInterfaceSetPropertyFunc	gdbusconnection.h	/^typedef gboolean  (*GDBusInterfaceSetPropertyFunc) (GDBusConnection       *connection,$/;"	t
GDBusInterfaceSkeleton	giotypes.h	/^typedef struct _GDBusInterfaceSkeleton      GDBusInterfaceSkeleton;$/;"	t	typeref:struct:_GDBusInterfaceSkeleton
GDBusInterfaceSkeletonClass	gdbusinterfaceskeleton.h	/^typedef struct _GDBusInterfaceSkeletonClass   GDBusInterfaceSkeletonClass;$/;"	t	typeref:struct:_GDBusInterfaceSkeletonClass
GDBusInterfaceSkeletonFlags	gioenums.h	/^} GDBusInterfaceSkeletonFlags;$/;"	t	typeref:enum:__anon61
GDBusInterfaceSkeletonPrivate	gdbusinterfaceskeleton.h	/^typedef struct _GDBusInterfaceSkeletonPrivate GDBusInterfaceSkeletonPrivate;$/;"	t	typeref:struct:_GDBusInterfaceSkeletonPrivate
GDBusInterfaceVTable	giotypes.h	/^typedef struct _GDBusInterfaceVTable          GDBusInterfaceVTable;$/;"	t	typeref:struct:_GDBusInterfaceVTable
GDBusMenuModel	gdbusmenumodel.h	/^typedef struct _GDBusMenuModel GDBusMenuModel;$/;"	t	typeref:struct:_GDBusMenuModel
GDBusMessage	giotypes.h	/^typedef struct _GDBusMessage                  GDBusMessage;$/;"	t	typeref:struct:_GDBusMessage
GDBusMessageByteOrder	gioenums.h	/^} GDBusMessageByteOrder;$/;"	t	typeref:enum:__anon54
GDBusMessageFilterFunction	gdbusconnection.h	/^typedef GDBusMessage *(*GDBusMessageFilterFunction) (GDBusConnection *connection,$/;"	t
GDBusMessageFlags	gioenums.h	/^} GDBusMessageFlags;$/;"	t	typeref:enum:__anon46
GDBusMessageHeaderField	gioenums.h	/^} GDBusMessageHeaderField;$/;"	t	typeref:enum:__anon47
GDBusMessageType	gioenums.h	/^} GDBusMessageType;$/;"	t	typeref:enum:__anon45
GDBusMethodInfo	giotypes.h	/^typedef struct _GDBusMethodInfo               GDBusMethodInfo;$/;"	t	typeref:struct:_GDBusMethodInfo
GDBusMethodInvocation	giotypes.h	/^typedef struct _GDBusMethodInvocation         GDBusMethodInvocation;$/;"	t	typeref:struct:_GDBusMethodInvocation
GDBusNodeInfo	giotypes.h	/^typedef struct _GDBusNodeInfo                 GDBusNodeInfo;$/;"	t	typeref:struct:_GDBusNodeInfo
GDBusObject	giotypes.h	/^typedef struct _GDBusObject                 GDBusObject;  \/* Dummy typedef *\/$/;"	t	typeref:struct:_GDBusObject
GDBusObjectIface	gdbusobject.h	/^typedef struct _GDBusObjectIface GDBusObjectIface;$/;"	t	typeref:struct:_GDBusObjectIface
GDBusObjectManager	giotypes.h	/^typedef struct _GDBusObjectManager          GDBusObjectManager;  \/* Dummy typedef *\/$/;"	t	typeref:struct:_GDBusObjectManager
GDBusObjectManagerClient	giotypes.h	/^typedef struct _GDBusObjectManagerClient    GDBusObjectManagerClient;$/;"	t	typeref:struct:_GDBusObjectManagerClient
GDBusObjectManagerClientClass	gdbusobjectmanagerclient.h	/^typedef struct _GDBusObjectManagerClientClass   GDBusObjectManagerClientClass;$/;"	t	typeref:struct:_GDBusObjectManagerClientClass
GDBusObjectManagerClientFlags	gioenums.h	/^} GDBusObjectManagerClientFlags;$/;"	t	typeref:enum:__anon62
GDBusObjectManagerClientPrivate	gdbusobjectmanagerclient.h	/^typedef struct _GDBusObjectManagerClientPrivate GDBusObjectManagerClientPrivate;$/;"	t	typeref:struct:_GDBusObjectManagerClientPrivate
GDBusObjectManagerIface	gdbusobjectmanager.h	/^typedef struct _GDBusObjectManagerIface GDBusObjectManagerIface;$/;"	t	typeref:struct:_GDBusObjectManagerIface
GDBusObjectManagerServer	giotypes.h	/^typedef struct _GDBusObjectManagerServer    GDBusObjectManagerServer;$/;"	t	typeref:struct:_GDBusObjectManagerServer
GDBusObjectManagerServerClass	gdbusobjectmanagerserver.h	/^typedef struct _GDBusObjectManagerServerClass   GDBusObjectManagerServerClass;$/;"	t	typeref:struct:_GDBusObjectManagerServerClass
GDBusObjectManagerServerPrivate	gdbusobjectmanagerserver.h	/^typedef struct _GDBusObjectManagerServerPrivate GDBusObjectManagerServerPrivate;$/;"	t	typeref:struct:_GDBusObjectManagerServerPrivate
GDBusObjectProxy	giotypes.h	/^typedef struct _GDBusObjectProxy            GDBusObjectProxy;$/;"	t	typeref:struct:_GDBusObjectProxy
GDBusObjectProxyClass	gdbusobjectproxy.h	/^typedef struct _GDBusObjectProxyClass   GDBusObjectProxyClass;$/;"	t	typeref:struct:_GDBusObjectProxyClass
GDBusObjectProxyPrivate	gdbusobjectproxy.h	/^typedef struct _GDBusObjectProxyPrivate GDBusObjectProxyPrivate;$/;"	t	typeref:struct:_GDBusObjectProxyPrivate
GDBusObjectSkeleton	giotypes.h	/^typedef struct _GDBusObjectSkeleton         GDBusObjectSkeleton;$/;"	t	typeref:struct:_GDBusObjectSkeleton
GDBusObjectSkeletonClass	gdbusobjectskeleton.h	/^typedef struct _GDBusObjectSkeletonClass   GDBusObjectSkeletonClass;$/;"	t	typeref:struct:_GDBusObjectSkeletonClass
GDBusObjectSkeletonPrivate	gdbusobjectskeleton.h	/^typedef struct _GDBusObjectSkeletonPrivate GDBusObjectSkeletonPrivate;$/;"	t	typeref:struct:_GDBusObjectSkeletonPrivate
GDBusPropertyInfo	giotypes.h	/^typedef struct _GDBusPropertyInfo             GDBusPropertyInfo;$/;"	t	typeref:struct:_GDBusPropertyInfo
GDBusPropertyInfoFlags	gioenums.h	/^} GDBusPropertyInfoFlags;$/;"	t	typeref:enum:__anon48
GDBusProxy	giotypes.h	/^typedef struct _GDBusProxy                    GDBusProxy;$/;"	t	typeref:struct:_GDBusProxy
GDBusProxyClass	gdbusproxy.h	/^typedef struct _GDBusProxyClass   GDBusProxyClass;$/;"	t	typeref:struct:_GDBusProxyClass
GDBusProxyFlags	gioenums.h	/^} GDBusProxyFlags;$/;"	t	typeref:enum:__anon40
GDBusProxyPrivate	gdbusproxy.h	/^typedef struct _GDBusProxyPrivate GDBusProxyPrivate;$/;"	t	typeref:struct:_GDBusProxyPrivate
GDBusProxyTypeFunc	giotypes.h	/^typedef GType (*GDBusProxyTypeFunc) (GDBusObjectManagerClient   *manager,$/;"	t
GDBusSendMessageFlags	gioenums.h	/^} GDBusSendMessageFlags;$/;"	t	typeref:enum:__anon52
GDBusServer	giotypes.h	/^typedef struct _GDBusServer                   GDBusServer;$/;"	t	typeref:struct:_GDBusServer
GDBusServerFlags	gioenums.h	/^} GDBusServerFlags;$/;"	t	typeref:enum:__anon50
GDBusSignalCallback	gdbusconnection.h	/^typedef void (*GDBusSignalCallback) (GDBusConnection  *connection,$/;"	t
GDBusSignalFlags	gioenums.h	/^} GDBusSignalFlags;$/;"	t	typeref:enum:__anon51
GDBusSignalInfo	giotypes.h	/^typedef struct _GDBusSignalInfo               GDBusSignalInfo;$/;"	t	typeref:struct:_GDBusSignalInfo
GDBusSubtreeDispatchFunc	gdbusconnection.h	/^typedef const GDBusInterfaceVTable * (*GDBusSubtreeDispatchFunc) (GDBusConnection             *connection,$/;"	t
GDBusSubtreeEnumerateFunc	gdbusconnection.h	/^typedef gchar** (*GDBusSubtreeEnumerateFunc) (GDBusConnection       *connection,$/;"	t
GDBusSubtreeFlags	gioenums.h	/^} GDBusSubtreeFlags;$/;"	t	typeref:enum:__anon49
GDBusSubtreeIntrospectFunc	gdbusconnection.h	/^typedef GDBusInterfaceInfo ** (*GDBusSubtreeIntrospectFunc) (GDBusConnection       *connection,$/;"	t
GDBusSubtreeVTable	giotypes.h	/^typedef struct _GDBusSubtreeVTable            GDBusSubtreeVTable;$/;"	t	typeref:struct:_GDBusSubtreeVTable
GDataInputStream	giotypes.h	/^typedef struct _GDataInputStream              GDataInputStream;$/;"	t	typeref:struct:_GDataInputStream
GDataInputStreamClass	gdatainputstream.h	/^typedef struct _GDataInputStreamClass    GDataInputStreamClass;$/;"	t	typeref:struct:_GDataInputStreamClass
GDataInputStreamPrivate	gdatainputstream.h	/^typedef struct _GDataInputStreamPrivate  GDataInputStreamPrivate;$/;"	t	typeref:struct:_GDataInputStreamPrivate
GDataOutputStream	gdataoutputstream.h	/^typedef struct _GDataOutputStream         GDataOutputStream;$/;"	t	typeref:struct:_GDataOutputStream
GDataOutputStreamClass	gdataoutputstream.h	/^typedef struct _GDataOutputStreamClass    GDataOutputStreamClass;$/;"	t	typeref:struct:_GDataOutputStreamClass
GDataOutputStreamPrivate	gdataoutputstream.h	/^typedef struct _GDataOutputStreamPrivate  GDataOutputStreamPrivate;$/;"	t	typeref:struct:_GDataOutputStreamPrivate
GDataStreamByteOrder	gioenums.h	/^} GDataStreamByteOrder;$/;"	t	typeref:enum:__anon4
GDataStreamNewlineType	gioenums.h	/^} GDataStreamNewlineType;$/;"	t	typeref:enum:__anon5
GDrive	giotypes.h	/^typedef struct _GDrive                        GDrive; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GDrive
GDriveIface	gdrive.h	/^typedef struct _GDriveIface    GDriveIface;$/;"	t	typeref:struct:_GDriveIface
GDriveStartFlags	gioenums.h	/^} GDriveStartFlags;$/;"	t	typeref:enum:__anon13
GDriveStartStopType	gioenums.h	/^} GDriveStartStopType;$/;"	t	typeref:enum:__anon14
GEmblem	gemblem.h	/^typedef struct _GEmblem        GEmblem;$/;"	t	typeref:struct:_GEmblem
GEmblemClass	gemblem.h	/^typedef struct _GEmblemClass   GEmblemClass;$/;"	t	typeref:struct:_GEmblemClass
GEmblemOrigin	gioenums.h	/^} GEmblemOrigin;$/;"	t	typeref:enum:__anon26
GEmblemedIcon	gemblemedicon.h	/^typedef struct _GEmblemedIcon        GEmblemedIcon;$/;"	t	typeref:struct:_GEmblemedIcon
GEmblemedIconClass	gemblemedicon.h	/^typedef struct _GEmblemedIconClass   GEmblemedIconClass;$/;"	t	typeref:struct:_GEmblemedIconClass
GEmblemedIconPrivate	gemblemedicon.h	/^typedef struct _GEmblemedIconPrivate GEmblemedIconPrivate;$/;"	t	typeref:struct:_GEmblemedIconPrivate
GFile	giotypes.h	/^typedef struct _GFile                         GFile; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GFile
GFileAttributeInfo	giotypes.h	/^typedef struct _GFileAttributeInfo            GFileAttributeInfo;$/;"	t	typeref:struct:_GFileAttributeInfo
GFileAttributeInfoFlags	gioenums.h	/^} GFileAttributeInfoFlags;$/;"	t	typeref:enum:__anon7
GFileAttributeInfoList	giotypes.h	/^typedef struct _GFileAttributeInfoList        GFileAttributeInfoList;$/;"	t	typeref:struct:_GFileAttributeInfoList
GFileAttributeMatcher	giotypes.h	/^typedef struct _GFileAttributeMatcher         GFileAttributeMatcher;$/;"	t	typeref:struct:_GFileAttributeMatcher
GFileAttributeStatus	gioenums.h	/^} GFileAttributeStatus;$/;"	t	typeref:enum:__anon8
GFileAttributeType	gioenums.h	/^} GFileAttributeType;$/;"	t	typeref:enum:__anon6
GFileCopyFlags	gioenums.h	/^} GFileCopyFlags;$/;"	t	typeref:enum:__anon15
GFileCreateFlags	gioenums.h	/^} GFileCreateFlags;$/;"	t	typeref:enum:__anon10
GFileDescriptorBased	giotypes.h	/^typedef struct _GFileDescriptorBased          GFileDescriptorBased;$/;"	t	typeref:struct:_GFileDescriptorBased
GFileEnumerator	giotypes.h	/^typedef struct _GFileEnumerator               GFileEnumerator;$/;"	t	typeref:struct:_GFileEnumerator
GFileEnumeratorClass	gfileenumerator.h	/^typedef struct _GFileEnumeratorClass    GFileEnumeratorClass;$/;"	t	typeref:struct:_GFileEnumeratorClass
GFileEnumeratorPrivate	gfileenumerator.h	/^typedef struct _GFileEnumeratorPrivate  GFileEnumeratorPrivate;$/;"	t	typeref:struct:_GFileEnumeratorPrivate
GFileIOStream	giotypes.h	/^typedef struct _GFileIOStream                 GFileIOStream;$/;"	t	typeref:struct:_GFileIOStream
GFileIOStreamClass	gfileiostream.h	/^typedef struct _GFileIOStreamClass    GFileIOStreamClass;$/;"	t	typeref:struct:_GFileIOStreamClass
GFileIOStreamPrivate	gfileiostream.h	/^typedef struct _GFileIOStreamPrivate  GFileIOStreamPrivate;$/;"	t	typeref:struct:_GFileIOStreamPrivate
GFileIcon	giotypes.h	/^typedef struct _GFileIcon                     GFileIcon;$/;"	t	typeref:struct:_GFileIcon
GFileIconClass	gfileicon.h	/^typedef struct _GFileIconClass   GFileIconClass;$/;"	t	typeref:struct:_GFileIconClass
GFileIface	gfile.h	/^typedef struct _GFileIface    		GFileIface;$/;"	t	typeref:struct:_GFileIface
GFileInfo	giotypes.h	/^typedef struct _GFileInfo                     GFileInfo;$/;"	t	typeref:struct:_GFileInfo
GFileInfoClass	gfileinfo.h	/^typedef struct _GFileInfoClass   GFileInfoClass;$/;"	t	typeref:struct:_GFileInfoClass
GFileInputStream	giotypes.h	/^typedef struct _GFileInputStream              GFileInputStream;$/;"	t	typeref:struct:_GFileInputStream
GFileInputStreamClass	gfileinputstream.h	/^typedef struct _GFileInputStreamClass    GFileInputStreamClass;$/;"	t	typeref:struct:_GFileInputStreamClass
GFileInputStreamPrivate	gfileinputstream.h	/^typedef struct _GFileInputStreamPrivate  GFileInputStreamPrivate;$/;"	t	typeref:struct:_GFileInputStreamPrivate
GFileMonitor	giotypes.h	/^typedef struct _GFileMonitor                  GFileMonitor;$/;"	t	typeref:struct:_GFileMonitor
GFileMonitorClass	gfilemonitor.h	/^typedef struct _GFileMonitorClass       GFileMonitorClass;$/;"	t	typeref:struct:_GFileMonitorClass
GFileMonitorEvent	gioenums.h	/^} GFileMonitorEvent;$/;"	t	typeref:enum:__anon19
GFileMonitorFlags	gioenums.h	/^} GFileMonitorFlags;$/;"	t	typeref:enum:__anon16
GFileMonitorPrivate	gfilemonitor.h	/^typedef struct _GFileMonitorPrivate	GFileMonitorPrivate;$/;"	t	typeref:struct:_GFileMonitorPrivate
GFileOutputStream	giotypes.h	/^typedef struct _GFileOutputStream             GFileOutputStream;$/;"	t	typeref:struct:_GFileOutputStream
GFileOutputStreamClass	gfileoutputstream.h	/^typedef struct _GFileOutputStreamClass    GFileOutputStreamClass;$/;"	t	typeref:struct:_GFileOutputStreamClass
GFileOutputStreamPrivate	gfileoutputstream.h	/^typedef struct _GFileOutputStreamPrivate  GFileOutputStreamPrivate;$/;"	t	typeref:struct:_GFileOutputStreamPrivate
GFileProgressCallback	giotypes.h	/^typedef void (*GFileProgressCallback) (goffset current_num_bytes,$/;"	t
GFileQueryInfoFlags	gioenums.h	/^} GFileQueryInfoFlags;$/;"	t	typeref:enum:__anon9
GFileReadMoreCallback	giotypes.h	/^typedef gboolean (* GFileReadMoreCallback) (const char *file_contents,$/;"	t
GFileType	gioenums.h	/^} GFileType;$/;"	t	typeref:enum:__anon17
GFilenameCompleter	giotypes.h	/^typedef struct _GFilenameCompleter            GFilenameCompleter;$/;"	t	typeref:struct:_GFilenameCompleter
GFilenameCompleterClass	gfilenamecompleter.h	/^typedef struct _GFilenameCompleterClass GFilenameCompleterClass;$/;"	t	typeref:struct:_GFilenameCompleterClass
GFilesystemPreviewType	gioenums.h	/^} GFilesystemPreviewType;$/;"	t	typeref:enum:__anon18
GFilterInputStream	giotypes.h	/^typedef struct _GFilterInputStream            GFilterInputStream;$/;"	t	typeref:struct:_GFilterInputStream
GFilterInputStreamClass	gfilterinputstream.h	/^typedef struct _GFilterInputStreamClass    GFilterInputStreamClass;$/;"	t	typeref:struct:_GFilterInputStreamClass
GFilterOutputStream	giotypes.h	/^typedef struct _GFilterOutputStream           GFilterOutputStream;$/;"	t	typeref:struct:_GFilterOutputStream
GFilterOutputStreamClass	gfilteroutputstream.h	/^typedef struct _GFilterOutputStreamClass    GFilterOutputStreamClass;$/;"	t	typeref:struct:_GFilterOutputStreamClass
GIOErrorEnum	gioenums.h	/^} GIOErrorEnum;$/;"	t	typeref:enum:__anon20
GIOExtension	giotypes.h	/^typedef struct _GIOExtension                  GIOExtension;$/;"	t	typeref:struct:_GIOExtension
GIOExtensionPoint	giotypes.h	/^typedef struct _GIOExtensionPoint             GIOExtensionPoint;$/;"	t	typeref:struct:_GIOExtensionPoint
GIOModule	giotypes.h	/^typedef struct _GIOModule                     GIOModule;$/;"	t	typeref:struct:_GIOModule
GIOModuleClass	giomodule.h	/^typedef struct _GIOModuleClass GIOModuleClass;$/;"	t	typeref:struct:_GIOModuleClass
GIOModuleScope	giomodule.h	/^typedef struct _GIOModuleScope GIOModuleScope;$/;"	t	typeref:struct:_GIOModuleScope
GIOModuleScopeFlags	gioenums.h	/^} GIOModuleScopeFlags;$/;"	t	typeref:enum:__anon65
GIOSchedulerJob	giotypes.h	/^typedef struct _GIOSchedulerJob               GIOSchedulerJob;$/;"	t	typeref:struct:_GIOSchedulerJob
GIOSchedulerJobFunc	giotypes.h	/^typedef gboolean (*GIOSchedulerJobFunc) (GIOSchedulerJob *job,$/;"	t
GIOStream	giotypes.h	/^typedef struct _GIOStream                     GIOStream;$/;"	t	typeref:struct:_GIOStream
GIOStreamAdapter	giotypes.h	/^typedef struct _GIOStreamAdapter              GIOStreamAdapter;$/;"	t	typeref:struct:_GIOStreamAdapter
GIOStreamClass	giostream.h	/^typedef struct _GIOStreamClass                              GIOStreamClass;$/;"	t	typeref:struct:_GIOStreamClass
GIOStreamPrivate	giostream.h	/^typedef struct _GIOStreamPrivate                            GIOStreamPrivate;$/;"	t	typeref:struct:_GIOStreamPrivate
GIOStreamSpliceFlags	gioenums.h	/^} GIOStreamSpliceFlags;$/;"	t	typeref:enum:__anon25
GIcon	giotypes.h	/^typedef struct _GIcon                         GIcon; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GIcon
GIconIface	gicon.h	/^typedef struct _GIconIface GIconIface;$/;"	t	typeref:struct:_GIconIface
GInetAddress	giotypes.h	/^typedef struct _GInetAddress                  GInetAddress;$/;"	t	typeref:struct:_GInetAddress
GInetAddressClass	ginetaddress.h	/^typedef struct _GInetAddressClass   GInetAddressClass;$/;"	t	typeref:struct:_GInetAddressClass
GInetAddressMask	giotypes.h	/^typedef struct _GInetAddressMask              GInetAddressMask;$/;"	t	typeref:struct:_GInetAddressMask
GInetAddressMaskClass	ginetaddressmask.h	/^typedef struct _GInetAddressMaskClass   GInetAddressMaskClass;$/;"	t	typeref:struct:_GInetAddressMaskClass
GInetAddressMaskPrivate	ginetaddressmask.h	/^typedef struct _GInetAddressMaskPrivate GInetAddressMaskPrivate;$/;"	t	typeref:struct:_GInetAddressMaskPrivate
GInetAddressPrivate	ginetaddress.h	/^typedef struct _GInetAddressPrivate GInetAddressPrivate;$/;"	t	typeref:struct:_GInetAddressPrivate
GInetSocketAddress	giotypes.h	/^typedef struct _GInetSocketAddress            GInetSocketAddress;$/;"	t	typeref:struct:_GInetSocketAddress
GInetSocketAddressClass	ginetsocketaddress.h	/^typedef struct _GInetSocketAddressClass   GInetSocketAddressClass;$/;"	t	typeref:struct:_GInetSocketAddressClass
GInetSocketAddressPrivate	ginetsocketaddress.h	/^typedef struct _GInetSocketAddressPrivate GInetSocketAddressPrivate;$/;"	t	typeref:struct:_GInetSocketAddressPrivate
GInitable	giotypes.h	/^typedef struct _GInitable                     GInitable;$/;"	t	typeref:struct:_GInitable
GInitableIface	ginitable.h	/^typedef struct _GInitableIface GInitableIface;$/;"	t	typeref:struct:_GInitableIface
GInputStream	giotypes.h	/^typedef struct _GInputStream                  GInputStream;$/;"	t	typeref:struct:_GInputStream
GInputStreamClass	ginputstream.h	/^typedef struct _GInputStreamClass    GInputStreamClass;$/;"	t	typeref:struct:_GInputStreamClass
GInputStreamPrivate	ginputstream.h	/^typedef struct _GInputStreamPrivate  GInputStreamPrivate;$/;"	t	typeref:struct:_GInputStreamPrivate
GInputVector	giotypes.h	/^typedef struct _GInputVector GInputVector;$/;"	t	typeref:struct:_GInputVector
GLoadableIcon	giotypes.h	/^typedef struct _GLoadableIcon                 GLoadableIcon; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GLoadableIcon
GLoadableIconIface	gloadableicon.h	/^typedef struct _GLoadableIconIface    		GLoadableIconIface;$/;"	t	typeref:struct:_GLoadableIconIface
GMemoryInputStream	giotypes.h	/^typedef struct _GMemoryInputStream            GMemoryInputStream;$/;"	t	typeref:struct:_GMemoryInputStream
GMemoryInputStreamClass	gmemoryinputstream.h	/^typedef struct _GMemoryInputStreamClass    GMemoryInputStreamClass;$/;"	t	typeref:struct:_GMemoryInputStreamClass
GMemoryInputStreamPrivate	gmemoryinputstream.h	/^typedef struct _GMemoryInputStreamPrivate  GMemoryInputStreamPrivate;$/;"	t	typeref:struct:_GMemoryInputStreamPrivate
GMemoryOutputStream	giotypes.h	/^typedef struct _GMemoryOutputStream           GMemoryOutputStream;$/;"	t	typeref:struct:_GMemoryOutputStream
GMemoryOutputStreamClass	gmemoryoutputstream.h	/^typedef struct _GMemoryOutputStreamClass    GMemoryOutputStreamClass;$/;"	t	typeref:struct:_GMemoryOutputStreamClass
GMemoryOutputStreamPrivate	gmemoryoutputstream.h	/^typedef struct _GMemoryOutputStreamPrivate  GMemoryOutputStreamPrivate;$/;"	t	typeref:struct:_GMemoryOutputStreamPrivate
GMenu	gmenu.h	/^typedef struct _GMenu     GMenu;$/;"	t	typeref:struct:_GMenu
GMenuAttributeIter	gmenumodel.h	/^typedef struct _GMenuAttributeIter                          GMenuAttributeIter;$/;"	t	typeref:struct:_GMenuAttributeIter
GMenuAttributeIterClass	gmenumodel.h	/^typedef struct _GMenuAttributeIterClass                     GMenuAttributeIterClass;$/;"	t	typeref:struct:_GMenuAttributeIterClass
GMenuAttributeIterPrivate	gmenumodel.h	/^typedef struct _GMenuAttributeIterPrivate                   GMenuAttributeIterPrivate;$/;"	t	typeref:struct:_GMenuAttributeIterPrivate
GMenuItem	gmenu.h	/^typedef struct _GMenuItem GMenuItem;$/;"	t	typeref:struct:_GMenuItem
GMenuLinkIter	gmenumodel.h	/^typedef struct _GMenuLinkIter                               GMenuLinkIter;$/;"	t	typeref:struct:_GMenuLinkIter
GMenuLinkIterClass	gmenumodel.h	/^typedef struct _GMenuLinkIterClass                          GMenuLinkIterClass;$/;"	t	typeref:struct:_GMenuLinkIterClass
GMenuLinkIterPrivate	gmenumodel.h	/^typedef struct _GMenuLinkIterPrivate                        GMenuLinkIterPrivate;$/;"	t	typeref:struct:_GMenuLinkIterPrivate
GMenuModel	giotypes.h	/^typedef struct _GMenuModel                    GMenuModel;$/;"	t	typeref:struct:_GMenuModel
GMenuModelClass	gmenumodel.h	/^typedef struct _GMenuModelClass                             GMenuModelClass;$/;"	t	typeref:struct:_GMenuModelClass
GMenuModelPrivate	gmenumodel.h	/^typedef struct _GMenuModelPrivate                           GMenuModelPrivate;$/;"	t	typeref:struct:_GMenuModelPrivate
GMount	giotypes.h	/^typedef struct _GMount                        GMount; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GMount
GMountIface	gmount.h	/^typedef struct _GMountIface    GMountIface;$/;"	t	typeref:struct:_GMountIface
GMountMountFlags	gioenums.h	/^} GMountMountFlags;$/;"	t	typeref:enum:__anon11
GMountOperation	giotypes.h	/^typedef struct _GMountOperation               GMountOperation;$/;"	t	typeref:struct:_GMountOperation
GMountOperationClass	gmountoperation.h	/^typedef struct _GMountOperationClass   GMountOperationClass;$/;"	t	typeref:struct:_GMountOperationClass
GMountOperationPrivate	gmountoperation.h	/^typedef struct _GMountOperationPrivate GMountOperationPrivate;$/;"	t	typeref:struct:_GMountOperationPrivate
GMountOperationResult	gioenums.h	/^} GMountOperationResult;$/;"	t	typeref:enum:__anon23
GMountUnmountFlags	gioenums.h	/^} GMountUnmountFlags;$/;"	t	typeref:enum:__anon12
GNativeVolumeMonitor	gnativevolumemonitor.h	/^typedef struct _GNativeVolumeMonitor      GNativeVolumeMonitor;$/;"	t	typeref:struct:_GNativeVolumeMonitor
GNativeVolumeMonitorClass	gnativevolumemonitor.h	/^typedef struct _GNativeVolumeMonitorClass GNativeVolumeMonitorClass;$/;"	t	typeref:struct:_GNativeVolumeMonitorClass
GNetworkAddress	giotypes.h	/^typedef struct _GNetworkAddress               GNetworkAddress;$/;"	t	typeref:struct:_GNetworkAddress
GNetworkAddressClass	gnetworkaddress.h	/^typedef struct _GNetworkAddressClass   GNetworkAddressClass;$/;"	t	typeref:struct:_GNetworkAddressClass
GNetworkAddressPrivate	gnetworkaddress.h	/^typedef struct _GNetworkAddressPrivate GNetworkAddressPrivate;$/;"	t	typeref:struct:_GNetworkAddressPrivate
GNetworkMonitor	giotypes.h	/^typedef struct _GNetworkMonitor               GNetworkMonitor;$/;"	t	typeref:struct:_GNetworkMonitor
GNetworkMonitorInterface	gnetworkmonitor.h	/^typedef struct _GNetworkMonitorInterface GNetworkMonitorInterface;$/;"	t	typeref:struct:_GNetworkMonitorInterface
GNetworkService	giotypes.h	/^typedef struct _GNetworkService               GNetworkService;$/;"	t	typeref:struct:_GNetworkService
GNetworkServiceClass	gnetworkservice.h	/^typedef struct _GNetworkServiceClass   GNetworkServiceClass;$/;"	t	typeref:struct:_GNetworkServiceClass
GNetworkServicePrivate	gnetworkservice.h	/^typedef struct _GNetworkServicePrivate GNetworkServicePrivate;$/;"	t	typeref:struct:_GNetworkServicePrivate
GOutputStream	giotypes.h	/^typedef struct _GOutputStream                 GOutputStream;$/;"	t	typeref:struct:_GOutputStream
GOutputStreamClass	goutputstream.h	/^typedef struct _GOutputStreamClass    GOutputStreamClass;$/;"	t	typeref:struct:_GOutputStreamClass
GOutputStreamPrivate	goutputstream.h	/^typedef struct _GOutputStreamPrivate  GOutputStreamPrivate;$/;"	t	typeref:struct:_GOutputStreamPrivate
GOutputStreamSpliceFlags	gioenums.h	/^} GOutputStreamSpliceFlags;$/;"	t	typeref:enum:__anon24
GOutputVector	giotypes.h	/^typedef struct _GOutputVector GOutputVector;$/;"	t	typeref:struct:_GOutputVector
GPasswordSave	gioenums.h	/^} GPasswordSave;$/;"	t	typeref:enum:__anon22
GPermission	giotypes.h	/^typedef struct _GPermission                   GPermission;$/;"	t	typeref:struct:_GPermission
GPermissionClass	gpermission.h	/^typedef struct _GPermissionClass      GPermissionClass;$/;"	t	typeref:struct:_GPermissionClass
GPermissionPrivate	gpermission.h	/^typedef struct _GPermissionPrivate    GPermissionPrivate;$/;"	t	typeref:struct:_GPermissionPrivate
GPollableInputStream	giotypes.h	/^typedef struct _GPollableInputStream          GPollableInputStream; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GPollableInputStream
GPollableInputStreamInterface	gpollableinputstream.h	/^typedef struct _GPollableInputStreamInterface GPollableInputStreamInterface;$/;"	t	typeref:struct:_GPollableInputStreamInterface
GPollableOutputStream	giotypes.h	/^typedef struct _GPollableOutputStream         GPollableOutputStream; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GPollableOutputStream
GPollableOutputStreamInterface	gpollableoutputstream.h	/^typedef struct _GPollableOutputStreamInterface GPollableOutputStreamInterface;$/;"	t	typeref:struct:_GPollableOutputStreamInterface
GPollableSourceFunc	giotypes.h	/^typedef gboolean (*GPollableSourceFunc) (GObject  *pollable_stream,$/;"	t
GProxy	giotypes.h	/^typedef struct _GProxy			      GProxy;$/;"	t	typeref:struct:_GProxy
GProxyAddress	giotypes.h	/^typedef struct _GProxyAddress		      GProxyAddress;$/;"	t	typeref:struct:_GProxyAddress
GProxyAddressClass	gproxyaddress.h	/^typedef struct _GProxyAddressClass   GProxyAddressClass;$/;"	t	typeref:struct:_GProxyAddressClass
GProxyAddressEnumerator	giotypes.h	/^typedef struct _GProxyAddressEnumerator	      GProxyAddressEnumerator;$/;"	t	typeref:struct:_GProxyAddressEnumerator
GProxyAddressEnumeratorClass	gproxyaddressenumerator.h	/^typedef struct _GProxyAddressEnumeratorClass GProxyAddressEnumeratorClass;$/;"	t	typeref:struct:_GProxyAddressEnumeratorClass
GProxyAddressEnumeratorPrivate	gproxyaddressenumerator.h	/^typedef struct _GProxyAddressEnumeratorPrivate GProxyAddressEnumeratorPrivate;$/;"	t	typeref:struct:_GProxyAddressEnumeratorPrivate
GProxyAddressPrivate	gproxyaddress.h	/^typedef struct _GProxyAddressPrivate GProxyAddressPrivate;$/;"	t	typeref:struct:_GProxyAddressPrivate
GProxyInterface	gproxy.h	/^typedef struct _GProxyInterface GProxyInterface;$/;"	t	typeref:struct:_GProxyInterface
GProxyResolver	giotypes.h	/^typedef struct _GProxyResolver                GProxyResolver;$/;"	t	typeref:struct:_GProxyResolver
GProxyResolverInterface	gproxyresolver.h	/^typedef struct _GProxyResolverInterface GProxyResolverInterface;$/;"	t	typeref:struct:_GProxyResolverInterface
GReallocFunc	gmemoryoutputstream.h	/^typedef gpointer (* GReallocFunc) (gpointer data,$/;"	t
GRemoteActionGroup	giotypes.h	/^typedef struct _GRemoteActionGroup            GRemoteActionGroup;$/;"	t	typeref:struct:_GRemoteActionGroup
GRemoteActionGroupInterface	gremoteactiongroup.h	/^typedef struct _GRemoteActionGroupInterface                 GRemoteActionGroupInterface;$/;"	t	typeref:struct:_GRemoteActionGroupInterface
GResolver	giotypes.h	/^typedef struct _GResolver                     GResolver;$/;"	t	typeref:struct:_GResolver
GResolverClass	gresolver.h	/^typedef struct _GResolverClass   GResolverClass;$/;"	t	typeref:struct:_GResolverClass
GResolverError	gioenums.h	/^} GResolverError;$/;"	t	typeref:enum:__anon27
GResolverPrivate	gresolver.h	/^typedef struct _GResolverPrivate GResolverPrivate;$/;"	t	typeref:struct:_GResolverPrivate
GResource	giotypes.h	/^typedef struct _GResource                     GResource;$/;"	t	typeref:struct:_GResource
GResourceError	gioenums.h	/^} GResourceError;$/;"	t	typeref:enum:__anon28
GResourceFlags	gioenums.h	/^} GResourceFlags;$/;"	t	typeref:enum:__anon29
GResourceLookupFlags	gioenums.h	/^} GResourceLookupFlags;$/;"	t	typeref:enum:__anon30
GSeekable	giotypes.h	/^typedef struct _GSeekable                     GSeekable;$/;"	t	typeref:struct:_GSeekable
GSeekableIface	gseekable.h	/^typedef struct _GSeekableIface   GSeekableIface;$/;"	t	typeref:struct:_GSeekableIface
GSettings	giotypes.h	/^typedef struct _GSettings                     GSettings;$/;"	t	typeref:struct:_GSettings
GSettingsBackend	giotypes.h	/^typedef struct _GSettingsBackend              GSettingsBackend;$/;"	t	typeref:struct:_GSettingsBackend
GSettingsBackendClass	gsettingsbackend.h	/^typedef struct _GSettingsBackendClass                       GSettingsBackendClass;$/;"	t	typeref:struct:_GSettingsBackendClass
GSettingsBackendPrivate	gsettingsbackend.h	/^typedef struct _GSettingsBackendPrivate                     GSettingsBackendPrivate;$/;"	t	typeref:struct:_GSettingsBackendPrivate
GSettingsBindFlags	gsettings.h	/^} GSettingsBindFlags;$/;"	t	typeref:enum:__anon67
GSettingsBindGetMapping	gsettings.h	/^typedef gboolean      (*GSettingsBindGetMapping)                        (GValue             *value,$/;"	t
GSettingsBindSetMapping	gsettings.h	/^typedef GVariant *    (*GSettingsBindSetMapping)                        (const GValue       *value,$/;"	t
GSettingsClass	gsettings.h	/^typedef struct _GSettingsClass                              GSettingsClass;$/;"	t	typeref:struct:_GSettingsClass
GSettingsGetMapping	gsettings.h	/^typedef gboolean      (*GSettingsGetMapping)                            (GVariant           *value,$/;"	t
GSettingsPrivate	gsettings.h	/^typedef struct _GSettingsPrivate                            GSettingsPrivate;$/;"	t	typeref:struct:_GSettingsPrivate
GSettingsSchema	gsettingsschema.h	/^typedef struct _GSettingsSchema                             GSettingsSchema;$/;"	t	typeref:struct:_GSettingsSchema
GSettingsSchemaSource	gsettingsschema.h	/^typedef struct _GSettingsSchemaSource                       GSettingsSchemaSource;$/;"	t	typeref:struct:_GSettingsSchemaSource
GSimpleAction	giotypes.h	/^typedef struct _GSimpleAction                 GSimpleAction;$/;"	t	typeref:struct:_GSimpleAction
GSimpleActionGroup	giotypes.h	/^typedef struct _GSimpleActionGroup            GSimpleActionGroup;$/;"	t	typeref:struct:_GSimpleActionGroup
GSimpleActionGroupClass	gsimpleactiongroup.h	/^typedef struct _GSimpleActionGroupClass                     GSimpleActionGroupClass;$/;"	t	typeref:struct:_GSimpleActionGroupClass
GSimpleActionGroupPrivate	gsimpleactiongroup.h	/^typedef struct _GSimpleActionGroupPrivate                   GSimpleActionGroupPrivate;$/;"	t	typeref:struct:_GSimpleActionGroupPrivate
GSimpleAsyncResult	giotypes.h	/^typedef struct _GSimpleAsyncResult            GSimpleAsyncResult;$/;"	t	typeref:struct:_GSimpleAsyncResult
GSimpleAsyncResultClass	gsimpleasyncresult.h	/^typedef struct _GSimpleAsyncResultClass   GSimpleAsyncResultClass;$/;"	t	typeref:struct:_GSimpleAsyncResultClass
GSimpleAsyncThreadFunc	giotypes.h	/^typedef void (*GSimpleAsyncThreadFunc) (GSimpleAsyncResult *res,$/;"	t
GSimplePermission	giotypes.h	/^typedef struct _GSimplePermission             GSimplePermission;$/;"	t	typeref:struct:_GSimplePermission
GSocket	giotypes.h	/^typedef struct _GSocket                       GSocket;$/;"	t	typeref:struct:_GSocket
GSocketAddress	giotypes.h	/^typedef struct _GSocketAddress                GSocketAddress;$/;"	t	typeref:struct:_GSocketAddress
GSocketAddressClass	gsocketaddress.h	/^typedef struct _GSocketAddressClass   GSocketAddressClass;$/;"	t	typeref:struct:_GSocketAddressClass
GSocketAddressEnumerator	giotypes.h	/^typedef struct _GSocketAddressEnumerator      GSocketAddressEnumerator;$/;"	t	typeref:struct:_GSocketAddressEnumerator
GSocketAddressEnumeratorClass	gsocketaddressenumerator.h	/^typedef struct _GSocketAddressEnumeratorClass GSocketAddressEnumeratorClass;$/;"	t	typeref:struct:_GSocketAddressEnumeratorClass
GSocketClass	gsocket.h	/^typedef struct _GSocketClass                                GSocketClass;$/;"	t	typeref:struct:_GSocketClass
GSocketClient	giotypes.h	/^typedef struct _GSocketClient                               GSocketClient;$/;"	t	typeref:struct:_GSocketClient
GSocketClientClass	gsocketclient.h	/^typedef struct _GSocketClientClass                          GSocketClientClass;$/;"	t	typeref:struct:_GSocketClientClass
GSocketClientEvent	gioenums.h	/^} GSocketClientEvent;$/;"	t	typeref:enum:__anon66
GSocketClientPrivate	gsocketclient.h	/^typedef struct _GSocketClientPrivate                        GSocketClientPrivate;$/;"	t	typeref:struct:_GSocketClientPrivate
GSocketConnectable	giotypes.h	/^typedef struct _GSocketConnectable            GSocketConnectable;$/;"	t	typeref:struct:_GSocketConnectable
GSocketConnectableIface	gsocketconnectable.h	/^typedef struct _GSocketConnectableIface GSocketConnectableIface;$/;"	t	typeref:struct:_GSocketConnectableIface
GSocketConnection	giotypes.h	/^typedef struct _GSocketConnection                           GSocketConnection;$/;"	t	typeref:struct:_GSocketConnection
GSocketConnectionClass	gsocketconnection.h	/^typedef struct _GSocketConnectionClass                      GSocketConnectionClass;$/;"	t	typeref:struct:_GSocketConnectionClass
GSocketConnectionPrivate	gsocketconnection.h	/^typedef struct _GSocketConnectionPrivate                    GSocketConnectionPrivate;$/;"	t	typeref:struct:_GSocketConnectionPrivate
GSocketControlMessage	giotypes.h	/^typedef struct _GSocketControlMessage         GSocketControlMessage;$/;"	t	typeref:struct:_GSocketControlMessage
GSocketControlMessageClass	gsocketcontrolmessage.h	/^typedef struct _GSocketControlMessageClass                  GSocketControlMessageClass;$/;"	t	typeref:struct:_GSocketControlMessageClass
GSocketControlMessagePrivate	gsocketcontrolmessage.h	/^typedef struct _GSocketControlMessagePrivate                GSocketControlMessagePrivate;$/;"	t	typeref:struct:_GSocketControlMessagePrivate
GSocketFamily	gioenums.h	/^} GSocketFamily;$/;"	t	typeref:enum:__anon31
GSocketListener	giotypes.h	/^typedef struct _GSocketListener                             GSocketListener;$/;"	t	typeref:struct:_GSocketListener
GSocketListenerClass	gsocketlistener.h	/^typedef struct _GSocketListenerClass                        GSocketListenerClass;$/;"	t	typeref:struct:_GSocketListenerClass
GSocketListenerPrivate	gsocketlistener.h	/^typedef struct _GSocketListenerPrivate                      GSocketListenerPrivate;$/;"	t	typeref:struct:_GSocketListenerPrivate
GSocketMsgFlags	gioenums.h	/^} GSocketMsgFlags;$/;"	t	typeref:enum:__anon33
GSocketPrivate	gsocket.h	/^typedef struct _GSocketPrivate                              GSocketPrivate;$/;"	t	typeref:struct:_GSocketPrivate
GSocketProtocol	gioenums.h	/^} GSocketProtocol;$/;"	t	typeref:enum:__anon34
GSocketService	giotypes.h	/^typedef struct _GSocketService                              GSocketService;$/;"	t	typeref:struct:_GSocketService
GSocketServiceClass	gsocketservice.h	/^typedef struct _GSocketServiceClass                         GSocketServiceClass;$/;"	t	typeref:struct:_GSocketServiceClass
GSocketServicePrivate	gsocketservice.h	/^typedef struct _GSocketServicePrivate                       GSocketServicePrivate;$/;"	t	typeref:struct:_GSocketServicePrivate
GSocketSourceFunc	giotypes.h	/^typedef gboolean (*GSocketSourceFunc) (GSocket *socket,$/;"	t
GSocketType	gioenums.h	/^} GSocketType;$/;"	t	typeref:enum:__anon32
GSrvTarget	giotypes.h	/^typedef struct _GSrvTarget                    GSrvTarget;$/;"	t	typeref:struct:_GSrvTarget
GStaticResource	gresource.h	/^typedef struct _GStaticResource GStaticResource;$/;"	t	typeref:struct:_GStaticResource
GTcpConnection	giotypes.h	/^typedef struct _GTcpConnection                              GTcpConnection;$/;"	t	typeref:struct:_GTcpConnection
GTcpConnectionClass	gtcpconnection.h	/^typedef struct _GTcpConnectionClass                         GTcpConnectionClass;$/;"	t	typeref:struct:_GTcpConnectionClass
GTcpConnectionPrivate	gtcpconnection.h	/^typedef struct _GTcpConnectionPrivate                       GTcpConnectionPrivate;$/;"	t	typeref:struct:_GTcpConnectionPrivate
GTcpWrapperConnection	giotypes.h	/^typedef struct _GTcpWrapperConnection                       GTcpWrapperConnection;$/;"	t	typeref:struct:_GTcpWrapperConnection
GTcpWrapperConnectionClass	gtcpwrapperconnection.h	/^typedef struct _GTcpWrapperConnectionClass   GTcpWrapperConnectionClass;$/;"	t	typeref:struct:_GTcpWrapperConnectionClass
GTcpWrapperConnectionPrivate	gtcpwrapperconnection.h	/^typedef struct _GTcpWrapperConnectionPrivate GTcpWrapperConnectionPrivate;$/;"	t	typeref:struct:_GTcpWrapperConnectionPrivate
GThemedIcon	giotypes.h	/^typedef struct _GThemedIcon                   GThemedIcon;$/;"	t	typeref:struct:_GThemedIcon
GThemedIconClass	gthemedicon.h	/^typedef struct _GThemedIconClass   GThemedIconClass;$/;"	t	typeref:struct:_GThemedIconClass
GThreadedSocketService	giotypes.h	/^typedef struct _GThreadedSocketService                      GThreadedSocketService;$/;"	t	typeref:struct:_GThreadedSocketService
GThreadedSocketServiceClass	gthreadedsocketservice.h	/^typedef struct _GThreadedSocketServiceClass                 GThreadedSocketServiceClass;$/;"	t	typeref:struct:_GThreadedSocketServiceClass
GThreadedSocketServicePrivate	gthreadedsocketservice.h	/^typedef struct _GThreadedSocketServicePrivate               GThreadedSocketServicePrivate;$/;"	t	typeref:struct:_GThreadedSocketServicePrivate
GTlsAuthenticationMode	gioenums.h	/^} GTlsAuthenticationMode;$/;"	t	typeref:enum:__anon58
GTlsBackend	gtlsbackend.h	/^typedef struct _GTlsBackend          GTlsBackend;$/;"	t	typeref:struct:_GTlsBackend
GTlsBackendInterface	gtlsbackend.h	/^typedef struct _GTlsBackendInterface GTlsBackendInterface;$/;"	t	typeref:struct:_GTlsBackendInterface
GTlsCertificate	giotypes.h	/^typedef struct _GTlsCertificate               GTlsCertificate;$/;"	t	typeref:struct:_GTlsCertificate
GTlsCertificateClass	gtlscertificate.h	/^typedef struct _GTlsCertificateClass   GTlsCertificateClass;$/;"	t	typeref:struct:_GTlsCertificateClass
GTlsCertificateFlags	gioenums.h	/^} GTlsCertificateFlags;$/;"	t	typeref:enum:__anon57
GTlsCertificatePrivate	gtlscertificate.h	/^typedef struct _GTlsCertificatePrivate GTlsCertificatePrivate;$/;"	t	typeref:struct:_GTlsCertificatePrivate
GTlsClientConnection	giotypes.h	/^typedef struct _GTlsClientConnection          GTlsClientConnection; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GTlsClientConnection
GTlsClientConnectionInterface	gtlsclientconnection.h	/^typedef struct _GTlsClientConnectionInterface GTlsClientConnectionInterface;$/;"	t	typeref:struct:_GTlsClientConnectionInterface
GTlsConnection	giotypes.h	/^typedef struct _GTlsConnection                GTlsConnection;$/;"	t	typeref:struct:_GTlsConnection
GTlsConnectionClass	gtlsconnection.h	/^typedef struct _GTlsConnectionClass   GTlsConnectionClass;$/;"	t	typeref:struct:_GTlsConnectionClass
GTlsConnectionPrivate	gtlsconnection.h	/^typedef struct _GTlsConnectionPrivate GTlsConnectionPrivate;$/;"	t	typeref:struct:_GTlsConnectionPrivate
GTlsDatabase	giotypes.h	/^typedef struct _GTlsDatabase                  GTlsDatabase;$/;"	t	typeref:struct:_GTlsDatabase
GTlsDatabaseClass	gtlsdatabase.h	/^typedef struct _GTlsDatabaseClass   GTlsDatabaseClass;$/;"	t	typeref:struct:_GTlsDatabaseClass
GTlsDatabaseLookupFlags	gioenums.h	/^} GTlsDatabaseLookupFlags;$/;"	t	typeref:enum:__anon64
GTlsDatabasePrivate	gtlsdatabase.h	/^typedef struct _GTlsDatabasePrivate GTlsDatabasePrivate;$/;"	t	typeref:struct:_GTlsDatabasePrivate
GTlsDatabaseVerifyFlags	gioenums.h	/^} GTlsDatabaseVerifyFlags;$/;"	t	typeref:enum:__anon63
GTlsError	gioenums.h	/^} GTlsError;$/;"	t	typeref:enum:__anon56
GTlsFileDatabase	giotypes.h	/^typedef struct _GTlsFileDatabase              GTlsFileDatabase;$/;"	t	typeref:struct:_GTlsFileDatabase
GTlsFileDatabaseInterface	gtlsfiledatabase.h	/^typedef struct _GTlsFileDatabaseInterface GTlsFileDatabaseInterface;$/;"	t	typeref:struct:_GTlsFileDatabaseInterface
GTlsInteraction	giotypes.h	/^typedef struct _GTlsInteraction               GTlsInteraction;$/;"	t	typeref:struct:_GTlsInteraction
GTlsInteractionClass	gtlsinteraction.h	/^typedef struct _GTlsInteractionClass   GTlsInteractionClass;$/;"	t	typeref:struct:_GTlsInteractionClass
GTlsInteractionPrivate	gtlsinteraction.h	/^typedef struct _GTlsInteractionPrivate GTlsInteractionPrivate;$/;"	t	typeref:struct:_GTlsInteractionPrivate
GTlsInteractionResult	gioenums.h	/^} GTlsInteractionResult;$/;"	t	typeref:enum:__anon60
GTlsPassword	giotypes.h	/^typedef struct _GTlsPassword                  GTlsPassword;$/;"	t	typeref:struct:_GTlsPassword
GTlsPasswordClass	gtlspassword.h	/^typedef struct _GTlsPasswordClass   GTlsPasswordClass;$/;"	t	typeref:struct:_GTlsPasswordClass
GTlsPasswordFlags	gioenums.h	/^} GTlsPasswordFlags;$/;"	t	typeref:enum:_GTlsPasswordFlags
GTlsPasswordPrivate	gtlspassword.h	/^typedef struct _GTlsPasswordPrivate GTlsPasswordPrivate;$/;"	t	typeref:struct:_GTlsPasswordPrivate
GTlsRehandshakeMode	gioenums.h	/^} GTlsRehandshakeMode;$/;"	t	typeref:enum:__anon59
GTlsServerConnection	giotypes.h	/^typedef struct _GTlsServerConnection          GTlsServerConnection; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GTlsServerConnection
GTlsServerConnectionInterface	gtlsserverconnection.h	/^typedef struct _GTlsServerConnectionInterface GTlsServerConnectionInterface;$/;"	t	typeref:struct:_GTlsServerConnectionInterface
GUnixCredentialsMessage	giotypes.h	/^typedef struct _GUnixCredentialsMessage       GUnixCredentialsMessage;$/;"	t	typeref:struct:_GUnixCredentialsMessage
GUnixFDList	giotypes.h	/^typedef struct _GUnixFDList                   GUnixFDList;$/;"	t	typeref:struct:_GUnixFDList
GUnixSocketAddressType	gioenums.h	/^} GUnixSocketAddressType;$/;"	t	typeref:enum:__anon36
GVfs	giotypes.h	/^typedef struct _GVfs                          GVfs; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GVfs
GVfsClass	gvfs.h	/^typedef struct _GVfsClass    GVfsClass;$/;"	t	typeref:struct:_GVfsClass
GVolume	giotypes.h	/^typedef struct _GVolume                       GVolume; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GVolume
GVolumeIface	gvolume.h	/^typedef struct _GVolumeIface    GVolumeIface;$/;"	t	typeref:struct:_GVolumeIface
GVolumeMonitor	giotypes.h	/^typedef struct _GVolumeMonitor                GVolumeMonitor;$/;"	t	typeref:struct:_GVolumeMonitor
GVolumeMonitorClass	gvolumemonitor.h	/^typedef struct _GVolumeMonitorClass GVolumeMonitorClass;$/;"	t	typeref:struct:_GVolumeMonitorClass
GZlibCompressor	giotypes.h	/^typedef struct _GZlibCompressor               GZlibCompressor;$/;"	t	typeref:struct:_GZlibCompressor
GZlibCompressorClass	gzlibcompressor.h	/^typedef struct _GZlibCompressorClass   GZlibCompressorClass;$/;"	t	typeref:struct:_GZlibCompressorClass
GZlibCompressorFormat	gioenums.h	/^} GZlibCompressorFormat;$/;"	t	typeref:enum:__anon35
GZlibDecompressor	giotypes.h	/^typedef struct _GZlibDecompressor             GZlibDecompressor;$/;"	t	typeref:struct:_GZlibDecompressor
GZlibDecompressorClass	gzlibdecompressor.h	/^typedef struct _GZlibDecompressorClass   GZlibDecompressorClass;$/;"	t	typeref:struct:_GZlibDecompressorClass
G_ACTION	gaction.h	34;"	d
G_ACTION_GET_IFACE	gaction.h	37;"	d
G_ACTION_GROUP	gactiongroup.h	35;"	d
G_ACTION_GROUP_GET_IFACE	gactiongroup.h	39;"	d
G_ACTION_MAP	gactionmap.h	35;"	d
G_ACTION_MAP_GET_IFACE	gactionmap.h	39;"	d
G_APPLICATION	gapplication.h	34;"	d
G_APPLICATION_CLASS	gapplication.h	36;"	d
G_APPLICATION_COMMAND_LINE	gapplicationcommandline.h	35;"	d
G_APPLICATION_COMMAND_LINE_CLASS	gapplicationcommandline.h	38;"	d
G_APPLICATION_COMMAND_LINE_GET_CLASS	gapplicationcommandline.h	45;"	d
G_APPLICATION_FLAGS_NONE	gioenums.h	/^  G_APPLICATION_FLAGS_NONE,$/;"	e	enum:__anon55
G_APPLICATION_GET_CLASS	gapplication.h	40;"	d
G_APPLICATION_HANDLES_COMMAND_LINE	gioenums.h	/^  G_APPLICATION_HANDLES_COMMAND_LINE = (1 << 3),$/;"	e	enum:__anon55
G_APPLICATION_HANDLES_OPEN	gioenums.h	/^  G_APPLICATION_HANDLES_OPEN =         (1 << 2),$/;"	e	enum:__anon55
G_APPLICATION_IS_LAUNCHER	gioenums.h	/^  G_APPLICATION_IS_LAUNCHER =          (1 << 1),$/;"	e	enum:__anon55
G_APPLICATION_IS_SERVICE	gioenums.h	/^  G_APPLICATION_IS_SERVICE  =          (1 << 0),$/;"	e	enum:__anon55
G_APPLICATION_NON_UNIQUE	gioenums.h	/^  G_APPLICATION_NON_UNIQUE =           (1 << 5)$/;"	e	enum:__anon55
G_APPLICATION_SEND_ENVIRONMENT	gioenums.h	/^  G_APPLICATION_SEND_ENVIRONMENT    =  (1 << 4),$/;"	e	enum:__anon55
G_APP_INFO	gappinfo.h	35;"	d
G_APP_INFO_CREATE_NEEDS_TERMINAL	gioenums.h	/^  G_APP_INFO_CREATE_NEEDS_TERMINAL                 = (1 << 0),  \/*< nick=needs-terminal >*\/$/;"	e	enum:__anon1
G_APP_INFO_CREATE_NONE	gioenums.h	/^  G_APP_INFO_CREATE_NONE                           = 0,         \/*< nick=none >*\/$/;"	e	enum:__anon1
G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION	gioenums.h	/^  G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION  = (1 << 2)   \/*< nick=supports-startup-notification >*\/$/;"	e	enum:__anon1
G_APP_INFO_CREATE_SUPPORTS_URIS	gioenums.h	/^  G_APP_INFO_CREATE_SUPPORTS_URIS                  = (1 << 1),  \/*< nick=supports-uris >*\/$/;"	e	enum:__anon1
G_APP_INFO_GET_IFACE	gappinfo.h	37;"	d
G_APP_LAUNCH_CONTEXT	gappinfo.h	40;"	d
G_APP_LAUNCH_CONTEXT_CLASS	gappinfo.h	41;"	d
G_APP_LAUNCH_CONTEXT_GET_CLASS	gappinfo.h	44;"	d
G_ASK_PASSWORD_ANONYMOUS_SUPPORTED	gioenums.h	/^  G_ASK_PASSWORD_ANONYMOUS_SUPPORTED = (1 << 4)$/;"	e	enum:__anon21
G_ASK_PASSWORD_NEED_DOMAIN	gioenums.h	/^  G_ASK_PASSWORD_NEED_DOMAIN         = (1 << 2),$/;"	e	enum:__anon21
G_ASK_PASSWORD_NEED_PASSWORD	gioenums.h	/^  G_ASK_PASSWORD_NEED_PASSWORD       = (1 << 0),$/;"	e	enum:__anon21
G_ASK_PASSWORD_NEED_USERNAME	gioenums.h	/^  G_ASK_PASSWORD_NEED_USERNAME       = (1 << 1),$/;"	e	enum:__anon21
G_ASK_PASSWORD_SAVING_SUPPORTED	gioenums.h	/^  G_ASK_PASSWORD_SAVING_SUPPORTED    = (1 << 3),$/;"	e	enum:__anon21
G_ASYNC_INITABLE	gasyncinitable.h	36;"	d
G_ASYNC_INITABLE_GET_IFACE	gasyncinitable.h	38;"	d
G_ASYNC_RESULT	gasyncresult.h	35;"	d
G_ASYNC_RESULT_GET_IFACE	gasyncresult.h	37;"	d
G_BUFFERED_INPUT_STREAM	gbufferedinputstream.h	35;"	d
G_BUFFERED_INPUT_STREAM_CLASS	gbufferedinputstream.h	36;"	d
G_BUFFERED_INPUT_STREAM_GET_CLASS	gbufferedinputstream.h	39;"	d
G_BUFFERED_OUTPUT_STREAM	gbufferedoutputstream.h	35;"	d
G_BUFFERED_OUTPUT_STREAM_CLASS	gbufferedoutputstream.h	36;"	d
G_BUFFERED_OUTPUT_STREAM_GET_CLASS	gbufferedoutputstream.h	39;"	d
G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT	gioenums.h	/^  G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT = (1<<0),  \/*< nick=allow-replacement >*\/$/;"	e	enum:__anon38
G_BUS_NAME_OWNER_FLAGS_NONE	gioenums.h	/^  G_BUS_NAME_OWNER_FLAGS_NONE = 0,                    \/*< nick=none >*\/$/;"	e	enum:__anon38
G_BUS_NAME_OWNER_FLAGS_REPLACE	gioenums.h	/^  G_BUS_NAME_OWNER_FLAGS_REPLACE = (1<<1)            \/*< nick=replace >*\/$/;"	e	enum:__anon38
G_BUS_NAME_WATCHER_FLAGS_AUTO_START	gioenums.h	/^  G_BUS_NAME_WATCHER_FLAGS_AUTO_START = (1<<0)$/;"	e	enum:__anon39
G_BUS_NAME_WATCHER_FLAGS_NONE	gioenums.h	/^  G_BUS_NAME_WATCHER_FLAGS_NONE = 0,$/;"	e	enum:__anon39
G_BUS_TYPE_NONE	gioenums.h	/^  G_BUS_TYPE_NONE = 0,$/;"	e	enum:__anon37
G_BUS_TYPE_SESSION	gioenums.h	/^  G_BUS_TYPE_SESSION = 2$/;"	e	enum:__anon37
G_BUS_TYPE_STARTER	gioenums.h	/^  G_BUS_TYPE_STARTER = -1,$/;"	e	enum:__anon37
G_BUS_TYPE_SYSTEM	gioenums.h	/^  G_BUS_TYPE_SYSTEM  = 1,$/;"	e	enum:__anon37
G_CANCELLABLE	gcancellable.h	35;"	d
G_CANCELLABLE_CLASS	gcancellable.h	36;"	d
G_CANCELLABLE_GET_CLASS	gcancellable.h	39;"	d
G_CHARSET_CONVERTER	gcharsetconverter.h	35;"	d
G_CHARSET_CONVERTER_CLASS	gcharsetconverter.h	36;"	d
G_CHARSET_CONVERTER_GET_CLASS	gcharsetconverter.h	39;"	d
G_CONVERTER	gconverter.h	35;"	d
G_CONVERTER_CONVERTED	gioenums.h	/^  G_CONVERTER_CONVERTED = 1,  \/*< nick=converted >*\/$/;"	e	enum:__anon3
G_CONVERTER_ERROR	gioenums.h	/^  G_CONVERTER_ERROR     = 0,  \/*< nick=error >*\/$/;"	e	enum:__anon3
G_CONVERTER_FINISHED	gioenums.h	/^  G_CONVERTER_FINISHED  = 2,  \/*< nick=finished >*\/$/;"	e	enum:__anon3
G_CONVERTER_FLUSH	gioenums.h	/^  G_CONVERTER_FLUSH        = (1 << 1)   \/*< nick=flush >*\/$/;"	e	enum:__anon2
G_CONVERTER_FLUSHED	gioenums.h	/^  G_CONVERTER_FLUSHED   = 3   \/*< nick=flushed >*\/$/;"	e	enum:__anon3
G_CONVERTER_GET_IFACE	gconverter.h	37;"	d
G_CONVERTER_INPUT_AT_END	gioenums.h	/^  G_CONVERTER_INPUT_AT_END = (1 << 0),  \/*< nick=input-at-end >*\/$/;"	e	enum:__anon2
G_CONVERTER_INPUT_STREAM	gconverterinputstream.h	36;"	d
G_CONVERTER_INPUT_STREAM_CLASS	gconverterinputstream.h	37;"	d
G_CONVERTER_INPUT_STREAM_GET_CLASS	gconverterinputstream.h	40;"	d
G_CONVERTER_NO_FLAGS	gioenums.h	/^  G_CONVERTER_NO_FLAGS     = 0,         \/*< nick=none >*\/$/;"	e	enum:__anon2
G_CONVERTER_OUTPUT_STREAM	gconverteroutputstream.h	36;"	d
G_CONVERTER_OUTPUT_STREAM_CLASS	gconverteroutputstream.h	37;"	d
G_CONVERTER_OUTPUT_STREAM_GET_CLASS	gconverteroutputstream.h	40;"	d
G_CREDENTIALS	gcredentials.h	41;"	d
G_CREDENTIALS_CLASS	gcredentials.h	42;"	d
G_CREDENTIALS_GET_CLASS	gcredentials.h	43;"	d
G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED	gioenums.h	/^  G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED,$/;"	e	enum:__anon53
G_CREDENTIALS_TYPE_INVALID	gioenums.h	/^  G_CREDENTIALS_TYPE_INVALID,$/;"	e	enum:__anon53
G_CREDENTIALS_TYPE_LINUX_UCRED	gioenums.h	/^  G_CREDENTIALS_TYPE_LINUX_UCRED,$/;"	e	enum:__anon53
G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED	gioenums.h	/^  G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED$/;"	e	enum:__anon53
G_DATA_INPUT_STREAM	gdatainputstream.h	35;"	d
G_DATA_INPUT_STREAM_CLASS	gdatainputstream.h	36;"	d
G_DATA_INPUT_STREAM_GET_CLASS	gdatainputstream.h	39;"	d
G_DATA_OUTPUT_STREAM	gdataoutputstream.h	35;"	d
G_DATA_OUTPUT_STREAM_CLASS	gdataoutputstream.h	36;"	d
G_DATA_OUTPUT_STREAM_GET_CLASS	gdataoutputstream.h	39;"	d
G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN	gioenums.h	/^  G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN,$/;"	e	enum:__anon4
G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN	gioenums.h	/^  G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN$/;"	e	enum:__anon4
G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN	gioenums.h	/^  G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN,$/;"	e	enum:__anon4
G_DATA_STREAM_NEWLINE_TYPE_ANY	gioenums.h	/^  G_DATA_STREAM_NEWLINE_TYPE_ANY$/;"	e	enum:__anon5
G_DATA_STREAM_NEWLINE_TYPE_CR	gioenums.h	/^  G_DATA_STREAM_NEWLINE_TYPE_CR,$/;"	e	enum:__anon5
G_DATA_STREAM_NEWLINE_TYPE_CR_LF	gioenums.h	/^  G_DATA_STREAM_NEWLINE_TYPE_CR_LF,$/;"	e	enum:__anon5
G_DATA_STREAM_NEWLINE_TYPE_LF	gioenums.h	/^  G_DATA_STREAM_NEWLINE_TYPE_LF,$/;"	e	enum:__anon5
G_DBUS_ACTION_GROUP	gdbusactiongroup.h	35;"	d
G_DBUS_ACTION_GROUP_CLASS	gdbusactiongroup.h	37;"	d
G_DBUS_ACTION_GROUP_GET_CLASS	gdbusactiongroup.h	43;"	d
G_DBUS_AUTH_OBSERVER	gdbusauthobserver.h	35;"	d
G_DBUS_CALL_FLAGS_NONE	gioenums.h	/^  G_DBUS_CALL_FLAGS_NONE = 0,$/;"	e	enum:__anon44
G_DBUS_CALL_FLAGS_NO_AUTO_START	gioenums.h	/^  G_DBUS_CALL_FLAGS_NO_AUTO_START = (1<<0)$/;"	e	enum:__anon44
G_DBUS_CAPABILITY_FLAGS_NONE	gioenums.h	/^  G_DBUS_CAPABILITY_FLAGS_NONE = 0,$/;"	e	enum:__anon43
G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING	gioenums.h	/^  G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING = (1<<0)$/;"	e	enum:__anon43
G_DBUS_CONNECTION	gdbusconnection.h	35;"	d
G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS	gioenums.h	/^  G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS = (1<<2),$/;"	e	enum:__anon42
G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT	gioenums.h	/^  G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT = (1<<0),$/;"	e	enum:__anon42
G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER	gioenums.h	/^  G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER = (1<<1),$/;"	e	enum:__anon42
G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING	gioenums.h	/^  G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING = (1<<4)$/;"	e	enum:__anon42
G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION	gioenums.h	/^  G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION = (1<<3),$/;"	e	enum:__anon42
G_DBUS_CONNECTION_FLAGS_NONE	gioenums.h	/^  G_DBUS_CONNECTION_FLAGS_NONE = 0,$/;"	e	enum:__anon42
G_DBUS_ERROR	gdbuserror.h	48;"	d
G_DBUS_ERROR_ACCESS_DENIED	gioenums.h	/^  G_DBUS_ERROR_ACCESS_DENIED,                    \/* org.freedesktop.DBus.Error.AccessDenied *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_ADDRESS_IN_USE	gioenums.h	/^  G_DBUS_ERROR_ADDRESS_IN_USE,                   \/* org.freedesktop.DBus.Error.AddressInUse *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN	gioenums.h	/^  G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN,           \/* org.freedesktop.DBus.Error.AdtAuditDataUnknown *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_AUTH_FAILED	gioenums.h	/^  G_DBUS_ERROR_AUTH_FAILED,                      \/* org.freedesktop.DBus.Error.AuthFailed *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_BAD_ADDRESS	gioenums.h	/^  G_DBUS_ERROR_BAD_ADDRESS,                      \/* org.freedesktop.DBus.Error.BadAddress *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_DISCONNECTED	gioenums.h	/^  G_DBUS_ERROR_DISCONNECTED,                     \/* org.freedesktop.DBus.Error.Disconnected *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_FAILED	gioenums.h	/^  G_DBUS_ERROR_FAILED,                           \/* org.freedesktop.DBus.Error.Failed *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_FILE_EXISTS	gioenums.h	/^  G_DBUS_ERROR_FILE_EXISTS,                      \/* org.freedesktop.DBus.Error.FileExists *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_FILE_NOT_FOUND	gioenums.h	/^  G_DBUS_ERROR_FILE_NOT_FOUND,                   \/* org.freedesktop.DBus.Error.FileNotFound *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_INVALID_ARGS	gioenums.h	/^  G_DBUS_ERROR_INVALID_ARGS,                     \/* org.freedesktop.DBus.Error.InvalidArgs *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_INVALID_FILE_CONTENT	gioenums.h	/^  G_DBUS_ERROR_INVALID_FILE_CONTENT,             \/* org.freedesktop.DBus.Error.InvalidFileContent *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_INVALID_SIGNATURE	gioenums.h	/^  G_DBUS_ERROR_INVALID_SIGNATURE,                \/* org.freedesktop.DBus.Error.InvalidSignature *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_IO_ERROR	gioenums.h	/^  G_DBUS_ERROR_IO_ERROR,                         \/* org.freedesktop.DBus.Error.IOError *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_LIMITS_EXCEEDED	gioenums.h	/^  G_DBUS_ERROR_LIMITS_EXCEEDED,                  \/* org.freedesktop.DBus.Error.LimitsExceeded *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_MATCH_RULE_INVALID	gioenums.h	/^  G_DBUS_ERROR_MATCH_RULE_INVALID,               \/* org.freedesktop.DBus.Error.MatchRuleInvalid *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_MATCH_RULE_NOT_FOUND	gioenums.h	/^  G_DBUS_ERROR_MATCH_RULE_NOT_FOUND,             \/* org.freedesktop.DBus.Error.MatchRuleNotFound *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_NAME_HAS_NO_OWNER	gioenums.h	/^  G_DBUS_ERROR_NAME_HAS_NO_OWNER,                \/* org.freedesktop.DBus.Error.NameHasNoOwner *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_NOT_SUPPORTED	gioenums.h	/^  G_DBUS_ERROR_NOT_SUPPORTED,                    \/* org.freedesktop.DBus.Error.NotSupported *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_NO_MEMORY	gioenums.h	/^  G_DBUS_ERROR_NO_MEMORY,                        \/* org.freedesktop.DBus.Error.NoMemory *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_NO_NETWORK	gioenums.h	/^  G_DBUS_ERROR_NO_NETWORK,                       \/* org.freedesktop.DBus.Error.NoNetwork *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_NO_REPLY	gioenums.h	/^  G_DBUS_ERROR_NO_REPLY,                         \/* org.freedesktop.DBus.Error.NoReply *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_NO_SERVER	gioenums.h	/^  G_DBUS_ERROR_NO_SERVER,                        \/* org.freedesktop.DBus.Error.NoServer *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_OBJECT_PATH_IN_USE	gioenums.h	/^  G_DBUS_ERROR_OBJECT_PATH_IN_USE                \/* org.freedesktop.DBus.Error.ObjectPathInUse *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN	gioenums.h	/^  G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN, \/* org.freedesktop.DBus.Error.SELinuxSecurityContextUnknown *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_SERVICE_UNKNOWN	gioenums.h	/^  G_DBUS_ERROR_SERVICE_UNKNOWN,                  \/* org.freedesktop.DBus.Error.ServiceUnknown *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_SPAWN_CHILD_EXITED	gioenums.h	/^  G_DBUS_ERROR_SPAWN_CHILD_EXITED,               \/* org.freedesktop.DBus.Error.Spawn.ChildExited *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_SPAWN_CHILD_SIGNALED	gioenums.h	/^  G_DBUS_ERROR_SPAWN_CHILD_SIGNALED,             \/* org.freedesktop.DBus.Error.Spawn.ChildSignaled *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_SPAWN_CONFIG_INVALID	gioenums.h	/^  G_DBUS_ERROR_SPAWN_CONFIG_INVALID,             \/* org.freedesktop.DBus.Error.Spawn.ConfigInvalid *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_SPAWN_EXEC_FAILED	gioenums.h	/^  G_DBUS_ERROR_SPAWN_EXEC_FAILED,                \/* org.freedesktop.DBus.Error.Spawn.ExecFailed *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_SPAWN_FAILED	gioenums.h	/^  G_DBUS_ERROR_SPAWN_FAILED,                     \/* org.freedesktop.DBus.Error.Spawn.Failed *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_SPAWN_FILE_INVALID	gioenums.h	/^  G_DBUS_ERROR_SPAWN_FILE_INVALID,               \/* org.freedesktop.DBus.Error.Spawn.FileInvalid *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_SPAWN_FORK_FAILED	gioenums.h	/^  G_DBUS_ERROR_SPAWN_FORK_FAILED,                \/* org.freedesktop.DBus.Error.Spawn.ForkFailed *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_SPAWN_NO_MEMORY	gioenums.h	/^  G_DBUS_ERROR_SPAWN_NO_MEMORY,                  \/* org.freedesktop.DBus.Error.Spawn.NoMemory *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID	gioenums.h	/^  G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID,        \/* org.freedesktop.DBus.Error.Spawn.PermissionsInvalid *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_SPAWN_SERVICE_INVALID	gioenums.h	/^  G_DBUS_ERROR_SPAWN_SERVICE_INVALID,            \/* org.freedesktop.DBus.Error.Spawn.ServiceNotValid *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND	gioenums.h	/^  G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND,          \/* org.freedesktop.DBus.Error.Spawn.ServiceNotFound *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_SPAWN_SETUP_FAILED	gioenums.h	/^  G_DBUS_ERROR_SPAWN_SETUP_FAILED,               \/* org.freedesktop.DBus.Error.Spawn.FailedToSetup *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_TIMED_OUT	gioenums.h	/^  G_DBUS_ERROR_TIMED_OUT,                        \/* org.freedesktop.DBus.Error.TimedOut *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_TIMEOUT	gioenums.h	/^  G_DBUS_ERROR_TIMEOUT,                          \/* org.freedesktop.DBus.Error.Timeout *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN	gioenums.h	/^  G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN,          \/* org.freedesktop.DBus.Error.UnixProcessIdUnknown *\/$/;"	e	enum:__anon41
G_DBUS_ERROR_UNKNOWN_METHOD	gioenums.h	/^  G_DBUS_ERROR_UNKNOWN_METHOD,                   \/* org.freedesktop.DBus.Error.UnknownMethod *\/$/;"	e	enum:__anon41
G_DBUS_INTERFACE	gdbusinterface.h	31;"	d
G_DBUS_INTERFACE_GET_IFACE	gdbusinterface.h	33;"	d
G_DBUS_INTERFACE_SKELETON	gdbusinterfaceskeleton.h	31;"	d
G_DBUS_INTERFACE_SKELETON_CLASS	gdbusinterfaceskeleton.h	32;"	d
G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD	gioenums.h	/^  G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD = (1<<0)$/;"	e	enum:__anon61
G_DBUS_INTERFACE_SKELETON_FLAGS_NONE	gioenums.h	/^  G_DBUS_INTERFACE_SKELETON_FLAGS_NONE = 0,$/;"	e	enum:__anon61
G_DBUS_INTERFACE_SKELETON_GET_CLASS	gdbusinterfaceskeleton.h	33;"	d
G_DBUS_MENU_MODEL	gdbusmenumodel.h	30;"	d
G_DBUS_MESSAGE	gdbusmessage.h	35;"	d
G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN	gioenums.h	/^  G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN    = 'B',$/;"	e	enum:__anon54
G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN	gioenums.h	/^  G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN = 'l'$/;"	e	enum:__anon54
G_DBUS_MESSAGE_FLAGS_NONE	gioenums.h	/^  G_DBUS_MESSAGE_FLAGS_NONE = 0,$/;"	e	enum:__anon46
G_DBUS_MESSAGE_FLAGS_NO_AUTO_START	gioenums.h	/^  G_DBUS_MESSAGE_FLAGS_NO_AUTO_START = (1<<1)$/;"	e	enum:__anon46
G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED	gioenums.h	/^  G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED = (1<<0),$/;"	e	enum:__anon46
G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION	gioenums.h	/^  G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION,$/;"	e	enum:__anon47
G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME	gioenums.h	/^  G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME,$/;"	e	enum:__anon47
G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE	gioenums.h	/^  G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE,$/;"	e	enum:__anon47
G_DBUS_MESSAGE_HEADER_FIELD_INVALID	gioenums.h	/^  G_DBUS_MESSAGE_HEADER_FIELD_INVALID,$/;"	e	enum:__anon47
G_DBUS_MESSAGE_HEADER_FIELD_MEMBER	gioenums.h	/^  G_DBUS_MESSAGE_HEADER_FIELD_MEMBER,$/;"	e	enum:__anon47
G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS	gioenums.h	/^  G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS$/;"	e	enum:__anon47
G_DBUS_MESSAGE_HEADER_FIELD_PATH	gioenums.h	/^  G_DBUS_MESSAGE_HEADER_FIELD_PATH,$/;"	e	enum:__anon47
G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL	gioenums.h	/^  G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL,$/;"	e	enum:__anon47
G_DBUS_MESSAGE_HEADER_FIELD_SENDER	gioenums.h	/^  G_DBUS_MESSAGE_HEADER_FIELD_SENDER,$/;"	e	enum:__anon47
G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE	gioenums.h	/^  G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE,$/;"	e	enum:__anon47
G_DBUS_MESSAGE_TYPE_ERROR	gioenums.h	/^  G_DBUS_MESSAGE_TYPE_ERROR,$/;"	e	enum:__anon45
G_DBUS_MESSAGE_TYPE_INVALID	gioenums.h	/^  G_DBUS_MESSAGE_TYPE_INVALID,$/;"	e	enum:__anon45
G_DBUS_MESSAGE_TYPE_METHOD_CALL	gioenums.h	/^  G_DBUS_MESSAGE_TYPE_METHOD_CALL,$/;"	e	enum:__anon45
G_DBUS_MESSAGE_TYPE_METHOD_RETURN	gioenums.h	/^  G_DBUS_MESSAGE_TYPE_METHOD_RETURN,$/;"	e	enum:__anon45
G_DBUS_MESSAGE_TYPE_SIGNAL	gioenums.h	/^  G_DBUS_MESSAGE_TYPE_SIGNAL$/;"	e	enum:__anon45
G_DBUS_METHOD_INVOCATION	gdbusmethodinvocation.h	35;"	d
G_DBUS_OBJECT	gdbusobject.h	31;"	d
G_DBUS_OBJECT_GET_IFACE	gdbusobject.h	33;"	d
G_DBUS_OBJECT_MANAGER	gdbusobjectmanager.h	31;"	d
G_DBUS_OBJECT_MANAGER_CLIENT	gdbusobjectmanagerclient.h	31;"	d
G_DBUS_OBJECT_MANAGER_CLIENT_CLASS	gdbusobjectmanagerclient.h	32;"	d
G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START	gioenums.h	/^  G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START = (1<<0)$/;"	e	enum:__anon62
G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE	gioenums.h	/^  G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE = 0,$/;"	e	enum:__anon62
G_DBUS_OBJECT_MANAGER_CLIENT_GET_CLASS	gdbusobjectmanagerclient.h	33;"	d
G_DBUS_OBJECT_MANAGER_GET_IFACE	gdbusobjectmanager.h	33;"	d
G_DBUS_OBJECT_MANAGER_SERVER	gdbusobjectmanagerserver.h	31;"	d
G_DBUS_OBJECT_MANAGER_SERVER_CLASS	gdbusobjectmanagerserver.h	32;"	d
G_DBUS_OBJECT_MANAGER_SERVER_GET_CLASS	gdbusobjectmanagerserver.h	33;"	d
G_DBUS_OBJECT_PROXY	gdbusobjectproxy.h	31;"	d
G_DBUS_OBJECT_PROXY_CLASS	gdbusobjectproxy.h	32;"	d
G_DBUS_OBJECT_PROXY_GET_CLASS	gdbusobjectproxy.h	33;"	d
G_DBUS_OBJECT_SKELETON	gdbusobjectskeleton.h	31;"	d
G_DBUS_OBJECT_SKELETON_CLASS	gdbusobjectskeleton.h	32;"	d
G_DBUS_OBJECT_SKELETON_GET_CLASS	gdbusobjectskeleton.h	33;"	d
G_DBUS_PROPERTY_INFO_FLAGS_NONE	gioenums.h	/^  G_DBUS_PROPERTY_INFO_FLAGS_NONE = 0,$/;"	e	enum:__anon48
G_DBUS_PROPERTY_INFO_FLAGS_READABLE	gioenums.h	/^  G_DBUS_PROPERTY_INFO_FLAGS_READABLE = (1<<0),$/;"	e	enum:__anon48
G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE	gioenums.h	/^  G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE = (1<<1)$/;"	e	enum:__anon48
G_DBUS_PROXY	gdbusproxy.h	36;"	d
G_DBUS_PROXY_CLASS	gdbusproxy.h	37;"	d
G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START	gioenums.h	/^  G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START = (1<<2),$/;"	e	enum:__anon40
G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS	gioenums.h	/^  G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS = (1<<1),$/;"	e	enum:__anon40
G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES	gioenums.h	/^  G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES = (1<<0),$/;"	e	enum:__anon40
G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES	gioenums.h	/^  G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES = (1<<3)$/;"	e	enum:__anon40
G_DBUS_PROXY_FLAGS_NONE	gioenums.h	/^  G_DBUS_PROXY_FLAGS_NONE = 0,$/;"	e	enum:__anon40
G_DBUS_PROXY_GET_CLASS	gdbusproxy.h	38;"	d
G_DBUS_SEND_MESSAGE_FLAGS_NONE	gioenums.h	/^  G_DBUS_SEND_MESSAGE_FLAGS_NONE = 0,$/;"	e	enum:__anon52
G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL	gioenums.h	/^  G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL = (1<<0)$/;"	e	enum:__anon52
G_DBUS_SERVER	gdbusserver.h	35;"	d
G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS	gioenums.h	/^  G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS = (1<<1)$/;"	e	enum:__anon50
G_DBUS_SERVER_FLAGS_NONE	gioenums.h	/^  G_DBUS_SERVER_FLAGS_NONE = 0,$/;"	e	enum:__anon50
G_DBUS_SERVER_FLAGS_RUN_IN_THREAD	gioenums.h	/^  G_DBUS_SERVER_FLAGS_RUN_IN_THREAD = (1<<0),$/;"	e	enum:__anon50
G_DBUS_SIGNAL_FLAGS_NONE	gioenums.h	/^  G_DBUS_SIGNAL_FLAGS_NONE = 0,$/;"	e	enum:__anon51
G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE	gioenums.h	/^  G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE = (1<<0)$/;"	e	enum:__anon51
G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES	gioenums.h	/^  G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES = (1<<0)$/;"	e	enum:__anon49
G_DBUS_SUBTREE_FLAGS_NONE	gioenums.h	/^  G_DBUS_SUBTREE_FLAGS_NONE = 0,$/;"	e	enum:__anon49
G_DRIVE	gdrive.h	36;"	d
G_DRIVE_GET_IFACE	gdrive.h	38;"	d
G_DRIVE_START_NONE	gioenums.h	/^  G_DRIVE_START_NONE = 0$/;"	e	enum:__anon13
G_DRIVE_START_STOP_TYPE_MULTIDISK	gioenums.h	/^  G_DRIVE_START_STOP_TYPE_MULTIDISK,$/;"	e	enum:__anon14
G_DRIVE_START_STOP_TYPE_NETWORK	gioenums.h	/^  G_DRIVE_START_STOP_TYPE_NETWORK,$/;"	e	enum:__anon14
G_DRIVE_START_STOP_TYPE_PASSWORD	gioenums.h	/^  G_DRIVE_START_STOP_TYPE_PASSWORD$/;"	e	enum:__anon14
G_DRIVE_START_STOP_TYPE_SHUTDOWN	gioenums.h	/^  G_DRIVE_START_STOP_TYPE_SHUTDOWN,$/;"	e	enum:__anon14
G_DRIVE_START_STOP_TYPE_UNKNOWN	gioenums.h	/^  G_DRIVE_START_STOP_TYPE_UNKNOWN,$/;"	e	enum:__anon14
G_EMBLEM	gemblem.h	34;"	d
G_EMBLEMED_ICON	gemblemedicon.h	37;"	d
G_EMBLEMED_ICON_CLASS	gemblemedicon.h	38;"	d
G_EMBLEMED_ICON_GET_CLASS	gemblemedicon.h	41;"	d
G_EMBLEM_CLASS	gemblem.h	35;"	d
G_EMBLEM_GET_CLASS	gemblem.h	38;"	d
G_EMBLEM_ORIGIN_DEVICE	gioenums.h	/^  G_EMBLEM_ORIGIN_DEVICE,$/;"	e	enum:__anon26
G_EMBLEM_ORIGIN_LIVEMETADATA	gioenums.h	/^  G_EMBLEM_ORIGIN_LIVEMETADATA,$/;"	e	enum:__anon26
G_EMBLEM_ORIGIN_TAG	gioenums.h	/^  G_EMBLEM_ORIGIN_TAG$/;"	e	enum:__anon26
G_EMBLEM_ORIGIN_UNKNOWN	gioenums.h	/^  G_EMBLEM_ORIGIN_UNKNOWN,$/;"	e	enum:__anon26
G_FILE	gfile.h	35;"	d
G_FILENAME_COMPLETER	gfilenamecompleter.h	35;"	d
G_FILENAME_COMPLETER_CLASS	gfilenamecompleter.h	36;"	d
G_FILENAME_COMPLETER_GET_CLASS	gfilenamecompleter.h	37;"	d
G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS	gioenums.h	/^  G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS = 0,$/;"	e	enum:__anon18
G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL	gioenums.h	/^  G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL,$/;"	e	enum:__anon18
G_FILESYSTEM_PREVIEW_TYPE_NEVER	gioenums.h	/^  G_FILESYSTEM_PREVIEW_TYPE_NEVER$/;"	e	enum:__anon18
G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE	gfileinfo.h	309;"	d
G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE	gfileinfo.h	300;"	d
G_FILE_ATTRIBUTE_ACCESS_CAN_READ	gfileinfo.h	282;"	d
G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME	gfileinfo.h	328;"	d
G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH	gfileinfo.h	319;"	d
G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE	gfileinfo.h	291;"	d
G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE	gfileinfo.h	637;"	d
G_FILE_ATTRIBUTE_DOS_IS_SYSTEM	gfileinfo.h	647;"	d
G_FILE_ATTRIBUTE_ETAG_VALUE	gfileinfo.h	246;"	d
G_FILE_ATTRIBUTE_FILESYSTEM_FREE	gfileinfo.h	729;"	d
G_FILE_ATTRIBUTE_FILESYSTEM_READONLY	gfileinfo.h	757;"	d
G_FILE_ATTRIBUTE_FILESYSTEM_SIZE	gfileinfo.h	720;"	d
G_FILE_ATTRIBUTE_FILESYSTEM_TYPE	gfileinfo.h	748;"	d
G_FILE_ATTRIBUTE_FILESYSTEM_USED	gfileinfo.h	740;"	d
G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW	gfileinfo.h	767;"	d
G_FILE_ATTRIBUTE_GVFS_BACKEND	gfileinfo.h	776;"	d
G_FILE_ATTRIBUTE_ID_FILE	gfileinfo.h	260;"	d
G_FILE_ATTRIBUTE_ID_FILESYSTEM	gfileinfo.h	271;"	d
G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED	gioenums.h	/^  G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED = (1 << 1)$/;"	e	enum:__anon7
G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE	gioenums.h	/^  G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE  = (1 << 0),$/;"	e	enum:__anon7
G_FILE_ATTRIBUTE_INFO_NONE	gioenums.h	/^  G_FILE_ATTRIBUTE_INFO_NONE            = 0,$/;"	e	enum:__anon7
G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT	gfileinfo.h	356;"	d
G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT	gfileinfo.h	340;"	d
G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL	gfileinfo.h	433;"	d
G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START	gfileinfo.h	392;"	d
G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED	gfileinfo.h	403;"	d
G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP	gfileinfo.h	413;"	d
G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT	gfileinfo.h	348;"	d
G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI	gfileinfo.h	382;"	d
G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC	gfileinfo.h	444;"	d
G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE	gfileinfo.h	423;"	d
G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE	gfileinfo.h	364;"	d
G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE	gfileinfo.h	374;"	d
G_FILE_ATTRIBUTE_OWNER_GROUP	gfileinfo.h	675;"	d
G_FILE_ATTRIBUTE_OWNER_USER	gfileinfo.h	658;"	d
G_FILE_ATTRIBUTE_OWNER_USER_REAL	gfileinfo.h	667;"	d
G_FILE_ATTRIBUTE_PREVIEW_ICON	gfileinfo.h	709;"	d
G_FILE_ATTRIBUTE_SELINUX_CONTEXT	gfileinfo.h	786;"	d
G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE	gfileinfo.h	205;"	d
G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE	gfileinfo.h	172;"	d
G_FILE_ATTRIBUTE_STANDARD_COPY_NAME	gfileinfo.h	140;"	d
G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION	gfileinfo.h	154;"	d
G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME	gfileinfo.h	113;"	d
G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME	gfileinfo.h	126;"	d
G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE	gfileinfo.h	184;"	d
G_FILE_ATTRIBUTE_STANDARD_ICON	gfileinfo.h	163;"	d
G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP	gfileinfo.h	73;"	d
G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN	gfileinfo.h	65;"	d
G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK	gfileinfo.h	83;"	d
G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL	gfileinfo.h	91;"	d
G_FILE_ATTRIBUTE_STANDARD_NAME	gfileinfo.h	103;"	d
G_FILE_ATTRIBUTE_STANDARD_SIZE	gfileinfo.h	192;"	d
G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER	gfileinfo.h	235;"	d
G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET	gfileinfo.h	214;"	d
G_FILE_ATTRIBUTE_STANDARD_TARGET_URI	gfileinfo.h	223;"	d
G_FILE_ATTRIBUTE_STANDARD_TYPE	gfileinfo.h	57;"	d
G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING	gioenums.h	/^  G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING$/;"	e	enum:__anon8
G_FILE_ATTRIBUTE_STATUS_SET	gioenums.h	/^  G_FILE_ATTRIBUTE_STATUS_SET,$/;"	e	enum:__anon8
G_FILE_ATTRIBUTE_STATUS_UNSET	gioenums.h	/^  G_FILE_ATTRIBUTE_STATUS_UNSET = 0,$/;"	e	enum:__anon8
G_FILE_ATTRIBUTE_THUMBNAILING_FAILED	gfileinfo.h	694;"	d
G_FILE_ATTRIBUTE_THUMBNAIL_PATH	gfileinfo.h	686;"	d
G_FILE_ATTRIBUTE_TIME_ACCESS	gfileinfo.h	476;"	d
G_FILE_ATTRIBUTE_TIME_ACCESS_USEC	gfileinfo.h	486;"	d
G_FILE_ATTRIBUTE_TIME_CHANGED	gfileinfo.h	497;"	d
G_FILE_ATTRIBUTE_TIME_CHANGED_USEC	gfileinfo.h	507;"	d
G_FILE_ATTRIBUTE_TIME_CREATED	gfileinfo.h	518;"	d
G_FILE_ATTRIBUTE_TIME_CREATED_USEC	gfileinfo.h	528;"	d
G_FILE_ATTRIBUTE_TIME_MODIFIED	gfileinfo.h	456;"	d
G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC	gfileinfo.h	466;"	d
G_FILE_ATTRIBUTE_TRASH_DELETION_DATE	gfileinfo.h	819;"	d
G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT	gfileinfo.h	795;"	d
G_FILE_ATTRIBUTE_TRASH_ORIG_PATH	gfileinfo.h	807;"	d
G_FILE_ATTRIBUTE_TYPE_BOOLEAN	gioenums.h	/^  G_FILE_ATTRIBUTE_TYPE_BOOLEAN,$/;"	e	enum:__anon6
G_FILE_ATTRIBUTE_TYPE_BYTE_STRING	gioenums.h	/^  G_FILE_ATTRIBUTE_TYPE_BYTE_STRING, \/* zero terminated string of non-zero bytes *\/$/;"	e	enum:__anon6
G_FILE_ATTRIBUTE_TYPE_INT32	gioenums.h	/^  G_FILE_ATTRIBUTE_TYPE_INT32,$/;"	e	enum:__anon6
G_FILE_ATTRIBUTE_TYPE_INT64	gioenums.h	/^  G_FILE_ATTRIBUTE_TYPE_INT64,$/;"	e	enum:__anon6
G_FILE_ATTRIBUTE_TYPE_INVALID	gioenums.h	/^  G_FILE_ATTRIBUTE_TYPE_INVALID = 0,$/;"	e	enum:__anon6
G_FILE_ATTRIBUTE_TYPE_OBJECT	gioenums.h	/^  G_FILE_ATTRIBUTE_TYPE_OBJECT,$/;"	e	enum:__anon6
G_FILE_ATTRIBUTE_TYPE_STRING	gioenums.h	/^  G_FILE_ATTRIBUTE_TYPE_STRING,$/;"	e	enum:__anon6
G_FILE_ATTRIBUTE_TYPE_STRINGV	gioenums.h	/^  G_FILE_ATTRIBUTE_TYPE_STRINGV$/;"	e	enum:__anon6
G_FILE_ATTRIBUTE_TYPE_UINT32	gioenums.h	/^  G_FILE_ATTRIBUTE_TYPE_UINT32,$/;"	e	enum:__anon6
G_FILE_ATTRIBUTE_TYPE_UINT64	gioenums.h	/^  G_FILE_ATTRIBUTE_TYPE_UINT64,$/;"	e	enum:__anon6
G_FILE_ATTRIBUTE_UNIX_BLOCKS	gfileinfo.h	615;"	d
G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE	gfileinfo.h	606;"	d
G_FILE_ATTRIBUTE_UNIX_DEVICE	gfileinfo.h	540;"	d
G_FILE_ATTRIBUTE_UNIX_GID	gfileinfo.h	587;"	d
G_FILE_ATTRIBUTE_UNIX_INODE	gfileinfo.h	549;"	d
G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT	gfileinfo.h	625;"	d
G_FILE_ATTRIBUTE_UNIX_MODE	gfileinfo.h	559;"	d
G_FILE_ATTRIBUTE_UNIX_NLINK	gfileinfo.h	569;"	d
G_FILE_ATTRIBUTE_UNIX_RDEV	gfileinfo.h	597;"	d
G_FILE_ATTRIBUTE_UNIX_UID	gfileinfo.h	578;"	d
G_FILE_COPY_ALL_METADATA	gioenums.h	/^  G_FILE_COPY_ALL_METADATA         = (1 << 3),$/;"	e	enum:__anon15
G_FILE_COPY_BACKUP	gioenums.h	/^  G_FILE_COPY_BACKUP               = (1 << 1),$/;"	e	enum:__anon15
G_FILE_COPY_NOFOLLOW_SYMLINKS	gioenums.h	/^  G_FILE_COPY_NOFOLLOW_SYMLINKS    = (1 << 2),$/;"	e	enum:__anon15
G_FILE_COPY_NONE	gioenums.h	/^  G_FILE_COPY_NONE                 = 0,          \/*< nick=none >*\/$/;"	e	enum:__anon15
G_FILE_COPY_NO_FALLBACK_FOR_MOVE	gioenums.h	/^  G_FILE_COPY_NO_FALLBACK_FOR_MOVE = (1 << 4),$/;"	e	enum:__anon15
G_FILE_COPY_OVERWRITE	gioenums.h	/^  G_FILE_COPY_OVERWRITE            = (1 << 0),$/;"	e	enum:__anon15
G_FILE_COPY_TARGET_DEFAULT_PERMS	gioenums.h	/^  G_FILE_COPY_TARGET_DEFAULT_PERMS = (1 << 5)$/;"	e	enum:__anon15
G_FILE_CREATE_NONE	gioenums.h	/^  G_FILE_CREATE_NONE    = 0,$/;"	e	enum:__anon10
G_FILE_CREATE_PRIVATE	gioenums.h	/^  G_FILE_CREATE_PRIVATE = (1 << 0),$/;"	e	enum:__anon10
G_FILE_CREATE_REPLACE_DESTINATION	gioenums.h	/^  G_FILE_CREATE_REPLACE_DESTINATION = (1 << 1)$/;"	e	enum:__anon10
G_FILE_ENUMERATOR	gfileenumerator.h	35;"	d
G_FILE_ENUMERATOR_CLASS	gfileenumerator.h	36;"	d
G_FILE_ENUMERATOR_GET_CLASS	gfileenumerator.h	39;"	d
G_FILE_GET_IFACE	gfile.h	37;"	d
G_FILE_ICON	gfileicon.h	35;"	d
G_FILE_ICON_CLASS	gfileicon.h	36;"	d
G_FILE_ICON_GET_CLASS	gfileicon.h	39;"	d
G_FILE_INFO	gfileinfo.h	35;"	d
G_FILE_INFO_CLASS	gfileinfo.h	36;"	d
G_FILE_INFO_GET_CLASS	gfileinfo.h	39;"	d
G_FILE_INPUT_STREAM	gfileinputstream.h	35;"	d
G_FILE_INPUT_STREAM_CLASS	gfileinputstream.h	36;"	d
G_FILE_INPUT_STREAM_GET_CLASS	gfileinputstream.h	39;"	d
G_FILE_IO_STREAM	gfileiostream.h	35;"	d
G_FILE_IO_STREAM_CLASS	gfileiostream.h	36;"	d
G_FILE_IO_STREAM_GET_CLASS	gfileiostream.h	39;"	d
G_FILE_MONITOR	gfilemonitor.h	35;"	d
G_FILE_MONITOR_CLASS	gfilemonitor.h	36;"	d
G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED	gioenums.h	/^  G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED,$/;"	e	enum:__anon19
G_FILE_MONITOR_EVENT_CHANGED	gioenums.h	/^  G_FILE_MONITOR_EVENT_CHANGED,$/;"	e	enum:__anon19
G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT	gioenums.h	/^  G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT,$/;"	e	enum:__anon19
G_FILE_MONITOR_EVENT_CREATED	gioenums.h	/^  G_FILE_MONITOR_EVENT_CREATED,$/;"	e	enum:__anon19
G_FILE_MONITOR_EVENT_DELETED	gioenums.h	/^  G_FILE_MONITOR_EVENT_DELETED,$/;"	e	enum:__anon19
G_FILE_MONITOR_EVENT_MOVED	gioenums.h	/^  G_FILE_MONITOR_EVENT_MOVED$/;"	e	enum:__anon19
G_FILE_MONITOR_EVENT_PRE_UNMOUNT	gioenums.h	/^  G_FILE_MONITOR_EVENT_PRE_UNMOUNT,$/;"	e	enum:__anon19
G_FILE_MONITOR_EVENT_UNMOUNTED	gioenums.h	/^  G_FILE_MONITOR_EVENT_UNMOUNTED,$/;"	e	enum:__anon19
G_FILE_MONITOR_GET_CLASS	gfilemonitor.h	39;"	d
G_FILE_MONITOR_NONE	gioenums.h	/^  G_FILE_MONITOR_NONE         = 0,$/;"	e	enum:__anon16
G_FILE_MONITOR_SEND_MOVED	gioenums.h	/^  G_FILE_MONITOR_SEND_MOVED   = (1 << 1)$/;"	e	enum:__anon16
G_FILE_MONITOR_WATCH_MOUNTS	gioenums.h	/^  G_FILE_MONITOR_WATCH_MOUNTS = (1 << 0),$/;"	e	enum:__anon16
G_FILE_OUTPUT_STREAM	gfileoutputstream.h	35;"	d
G_FILE_OUTPUT_STREAM_CLASS	gfileoutputstream.h	36;"	d
G_FILE_OUTPUT_STREAM_GET_CLASS	gfileoutputstream.h	39;"	d
G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS	gioenums.h	/^  G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS = (1 << 0)   \/*< nick=nofollow-symlinks >*\/$/;"	e	enum:__anon9
G_FILE_QUERY_INFO_NONE	gioenums.h	/^  G_FILE_QUERY_INFO_NONE              = 0,$/;"	e	enum:__anon9
G_FILE_TYPE_DIRECTORY	gioenums.h	/^  G_FILE_TYPE_DIRECTORY,$/;"	e	enum:__anon17
G_FILE_TYPE_MOUNTABLE	gioenums.h	/^  G_FILE_TYPE_MOUNTABLE$/;"	e	enum:__anon17
G_FILE_TYPE_REGULAR	gioenums.h	/^  G_FILE_TYPE_REGULAR,$/;"	e	enum:__anon17
G_FILE_TYPE_SHORTCUT	gioenums.h	/^  G_FILE_TYPE_SHORTCUT,$/;"	e	enum:__anon17
G_FILE_TYPE_SPECIAL	gioenums.h	/^  G_FILE_TYPE_SPECIAL, \/* socket, fifo, blockdev, chardev *\/$/;"	e	enum:__anon17
G_FILE_TYPE_SYMBOLIC_LINK	gioenums.h	/^  G_FILE_TYPE_SYMBOLIC_LINK,$/;"	e	enum:__anon17
G_FILE_TYPE_UNKNOWN	gioenums.h	/^  G_FILE_TYPE_UNKNOWN = 0,$/;"	e	enum:__anon17
G_FILTER_INPUT_STREAM	gfilterinputstream.h	35;"	d
G_FILTER_INPUT_STREAM_CLASS	gfilterinputstream.h	36;"	d
G_FILTER_INPUT_STREAM_GET_CLASS	gfilterinputstream.h	39;"	d
G_FILTER_OUTPUT_STREAM	gfilteroutputstream.h	35;"	d
G_FILTER_OUTPUT_STREAM_CLASS	gfilteroutputstream.h	36;"	d
G_FILTER_OUTPUT_STREAM_GET_CLASS	gfilteroutputstream.h	39;"	d
G_ICON	gicon.h	35;"	d
G_ICON_GET_IFACE	gicon.h	37;"	d
G_INET_ADDRESS	ginetaddress.h	36;"	d
G_INET_ADDRESS_CLASS	ginetaddress.h	37;"	d
G_INET_ADDRESS_GET_CLASS	ginetaddress.h	40;"	d
G_INET_ADDRESS_MASK	ginetaddressmask.h	33;"	d
G_INET_ADDRESS_MASK_CLASS	ginetaddressmask.h	34;"	d
G_INET_ADDRESS_MASK_GET_CLASS	ginetaddressmask.h	37;"	d
G_INET_SOCKET_ADDRESS	ginetsocketaddress.h	36;"	d
G_INET_SOCKET_ADDRESS_CLASS	ginetsocketaddress.h	37;"	d
G_INET_SOCKET_ADDRESS_GET_CLASS	ginetsocketaddress.h	40;"	d
G_INITABLE	ginitable.h	35;"	d
G_INITABLE_GET_IFACE	ginitable.h	37;"	d
G_INPUT_STREAM	ginputstream.h	35;"	d
G_INPUT_STREAM_CLASS	ginputstream.h	36;"	d
G_INPUT_STREAM_GET_CLASS	ginputstream.h	39;"	d
G_IO_ERROR	gioerror.h	41;"	d
G_IO_ERROR_ADDRESS_IN_USE	gioenums.h	/^  G_IO_ERROR_ADDRESS_IN_USE,$/;"	e	enum:__anon20
G_IO_ERROR_ALREADY_MOUNTED	gioenums.h	/^  G_IO_ERROR_ALREADY_MOUNTED,$/;"	e	enum:__anon20
G_IO_ERROR_BUSY	gioenums.h	/^  G_IO_ERROR_BUSY,$/;"	e	enum:__anon20
G_IO_ERROR_CANCELLED	gioenums.h	/^  G_IO_ERROR_CANCELLED,$/;"	e	enum:__anon20
G_IO_ERROR_CANT_CREATE_BACKUP	gioenums.h	/^  G_IO_ERROR_CANT_CREATE_BACKUP,$/;"	e	enum:__anon20
G_IO_ERROR_CLOSED	gioenums.h	/^  G_IO_ERROR_CLOSED,$/;"	e	enum:__anon20
G_IO_ERROR_CONNECTION_REFUSED	gioenums.h	/^  G_IO_ERROR_CONNECTION_REFUSED,$/;"	e	enum:__anon20
G_IO_ERROR_DBUS_ERROR	gioenums.h	/^  G_IO_ERROR_DBUS_ERROR,$/;"	e	enum:__anon20
G_IO_ERROR_EXISTS	gioenums.h	/^  G_IO_ERROR_EXISTS,$/;"	e	enum:__anon20
G_IO_ERROR_FAILED	gioenums.h	/^  G_IO_ERROR_FAILED,$/;"	e	enum:__anon20
G_IO_ERROR_FAILED_HANDLED	gioenums.h	/^  G_IO_ERROR_FAILED_HANDLED,$/;"	e	enum:__anon20
G_IO_ERROR_FILENAME_TOO_LONG	gioenums.h	/^  G_IO_ERROR_FILENAME_TOO_LONG,$/;"	e	enum:__anon20
G_IO_ERROR_HOST_NOT_FOUND	gioenums.h	/^  G_IO_ERROR_HOST_NOT_FOUND,$/;"	e	enum:__anon20
G_IO_ERROR_HOST_UNREACHABLE	gioenums.h	/^  G_IO_ERROR_HOST_UNREACHABLE,$/;"	e	enum:__anon20
G_IO_ERROR_INVALID_ARGUMENT	gioenums.h	/^  G_IO_ERROR_INVALID_ARGUMENT,$/;"	e	enum:__anon20
G_IO_ERROR_INVALID_DATA	gioenums.h	/^  G_IO_ERROR_INVALID_DATA,$/;"	e	enum:__anon20
G_IO_ERROR_INVALID_FILENAME	gioenums.h	/^  G_IO_ERROR_INVALID_FILENAME,$/;"	e	enum:__anon20
G_IO_ERROR_IS_DIRECTORY	gioenums.h	/^  G_IO_ERROR_IS_DIRECTORY,$/;"	e	enum:__anon20
G_IO_ERROR_NETWORK_UNREACHABLE	gioenums.h	/^  G_IO_ERROR_NETWORK_UNREACHABLE,$/;"	e	enum:__anon20
G_IO_ERROR_NOT_DIRECTORY	gioenums.h	/^  G_IO_ERROR_NOT_DIRECTORY,$/;"	e	enum:__anon20
G_IO_ERROR_NOT_EMPTY	gioenums.h	/^  G_IO_ERROR_NOT_EMPTY,$/;"	e	enum:__anon20
G_IO_ERROR_NOT_FOUND	gioenums.h	/^  G_IO_ERROR_NOT_FOUND,$/;"	e	enum:__anon20
G_IO_ERROR_NOT_INITIALIZED	gioenums.h	/^  G_IO_ERROR_NOT_INITIALIZED,$/;"	e	enum:__anon20
G_IO_ERROR_NOT_MOUNTABLE_FILE	gioenums.h	/^  G_IO_ERROR_NOT_MOUNTABLE_FILE,$/;"	e	enum:__anon20
G_IO_ERROR_NOT_MOUNTED	gioenums.h	/^  G_IO_ERROR_NOT_MOUNTED,$/;"	e	enum:__anon20
G_IO_ERROR_NOT_REGULAR_FILE	gioenums.h	/^  G_IO_ERROR_NOT_REGULAR_FILE,$/;"	e	enum:__anon20
G_IO_ERROR_NOT_SUPPORTED	gioenums.h	/^  G_IO_ERROR_NOT_SUPPORTED,$/;"	e	enum:__anon20
G_IO_ERROR_NOT_SYMBOLIC_LINK	gioenums.h	/^  G_IO_ERROR_NOT_SYMBOLIC_LINK,$/;"	e	enum:__anon20
G_IO_ERROR_NO_SPACE	gioenums.h	/^  G_IO_ERROR_NO_SPACE,$/;"	e	enum:__anon20
G_IO_ERROR_PARTIAL_INPUT	gioenums.h	/^  G_IO_ERROR_PARTIAL_INPUT,$/;"	e	enum:__anon20
G_IO_ERROR_PENDING	gioenums.h	/^  G_IO_ERROR_PENDING,$/;"	e	enum:__anon20
G_IO_ERROR_PERMISSION_DENIED	gioenums.h	/^  G_IO_ERROR_PERMISSION_DENIED,$/;"	e	enum:__anon20
G_IO_ERROR_PROXY_AUTH_FAILED	gioenums.h	/^  G_IO_ERROR_PROXY_AUTH_FAILED,$/;"	e	enum:__anon20
G_IO_ERROR_PROXY_FAILED	gioenums.h	/^  G_IO_ERROR_PROXY_FAILED,$/;"	e	enum:__anon20
G_IO_ERROR_PROXY_NEED_AUTH	gioenums.h	/^  G_IO_ERROR_PROXY_NEED_AUTH,$/;"	e	enum:__anon20
G_IO_ERROR_PROXY_NOT_ALLOWED	gioenums.h	/^  G_IO_ERROR_PROXY_NOT_ALLOWED$/;"	e	enum:__anon20
G_IO_ERROR_READ_ONLY	gioenums.h	/^  G_IO_ERROR_READ_ONLY,$/;"	e	enum:__anon20
G_IO_ERROR_TIMED_OUT	gioenums.h	/^  G_IO_ERROR_TIMED_OUT,$/;"	e	enum:__anon20
G_IO_ERROR_TOO_MANY_LINKS	gioenums.h	/^  G_IO_ERROR_TOO_MANY_LINKS,$/;"	e	enum:__anon20
G_IO_ERROR_TOO_MANY_OPEN_FILES	gioenums.h	/^  G_IO_ERROR_TOO_MANY_OPEN_FILES,$/;"	e	enum:__anon20
G_IO_ERROR_WOULD_BLOCK	gioenums.h	/^  G_IO_ERROR_WOULD_BLOCK,$/;"	e	enum:__anon20
G_IO_ERROR_WOULD_MERGE	gioenums.h	/^  G_IO_ERROR_WOULD_MERGE,$/;"	e	enum:__anon20
G_IO_ERROR_WOULD_RECURSE	gioenums.h	/^  G_IO_ERROR_WOULD_RECURSE,$/;"	e	enum:__anon20
G_IO_ERROR_WRONG_ETAG	gioenums.h	/^  G_IO_ERROR_WRONG_ETAG,$/;"	e	enum:__anon20
G_IO_IS_MODULE	giomodule.h	45;"	d
G_IO_IS_MODULE_CLASS	giomodule.h	46;"	d
G_IO_MODULE	giomodule.h	43;"	d
G_IO_MODULE_CLASS	giomodule.h	44;"	d
G_IO_MODULE_GET_CLASS	giomodule.h	47;"	d
G_IO_MODULE_SCOPE_BLOCK_DUPLICATES	gioenums.h	/^  G_IO_MODULE_SCOPE_BLOCK_DUPLICATES$/;"	e	enum:__anon65
G_IO_MODULE_SCOPE_NONE	gioenums.h	/^  G_IO_MODULE_SCOPE_NONE,$/;"	e	enum:__anon65
G_IO_STREAM	giostream.h	32;"	d
G_IO_STREAM_CLASS	giostream.h	33;"	d
G_IO_STREAM_GET_CLASS	giostream.h	36;"	d
G_IO_STREAM_SPLICE_CLOSE_STREAM1	gioenums.h	/^  G_IO_STREAM_SPLICE_CLOSE_STREAM1 = (1 << 0),$/;"	e	enum:__anon25
G_IO_STREAM_SPLICE_CLOSE_STREAM2	gioenums.h	/^  G_IO_STREAM_SPLICE_CLOSE_STREAM2 = (1 << 1),$/;"	e	enum:__anon25
G_IO_STREAM_SPLICE_NONE	gioenums.h	/^  G_IO_STREAM_SPLICE_NONE          = 0,$/;"	e	enum:__anon25
G_IO_STREAM_SPLICE_WAIT_FOR_BOTH	gioenums.h	/^  G_IO_STREAM_SPLICE_WAIT_FOR_BOTH = (1 << 2)$/;"	e	enum:__anon25
G_IO_TYPE_MODULE	giomodule.h	42;"	d
G_IS_ACTION	gaction.h	36;"	d
G_IS_ACTION_GROUP	gactiongroup.h	37;"	d
G_IS_ACTION_MAP	gactionmap.h	37;"	d
G_IS_APPLICATION	gapplication.h	38;"	d
G_IS_APPLICATION_CLASS	gapplication.h	39;"	d
G_IS_APPLICATION_COMMAND_LINE	gapplicationcommandline.h	41;"	d
G_IS_APPLICATION_COMMAND_LINE_CLASS	gapplicationcommandline.h	43;"	d
G_IS_APP_INFO	gappinfo.h	36;"	d
G_IS_APP_LAUNCH_CONTEXT	gappinfo.h	42;"	d
G_IS_APP_LAUNCH_CONTEXT_CLASS	gappinfo.h	43;"	d
G_IS_ASYNC_INITABLE	gasyncinitable.h	37;"	d
G_IS_ASYNC_RESULT	gasyncresult.h	36;"	d
G_IS_BUFFERED_INPUT_STREAM	gbufferedinputstream.h	37;"	d
G_IS_BUFFERED_INPUT_STREAM_CLASS	gbufferedinputstream.h	38;"	d
G_IS_BUFFERED_OUTPUT_STREAM	gbufferedoutputstream.h	37;"	d
G_IS_BUFFERED_OUTPUT_STREAM_CLASS	gbufferedoutputstream.h	38;"	d
G_IS_CANCELLABLE	gcancellable.h	37;"	d
G_IS_CANCELLABLE_CLASS	gcancellable.h	38;"	d
G_IS_CHARSET_CONVERTER	gcharsetconverter.h	37;"	d
G_IS_CHARSET_CONVERTER_CLASS	gcharsetconverter.h	38;"	d
G_IS_CONVERTER	gconverter.h	36;"	d
G_IS_CONVERTER_INPUT_STREAM	gconverterinputstream.h	38;"	d
G_IS_CONVERTER_INPUT_STREAM_CLASS	gconverterinputstream.h	39;"	d
G_IS_CONVERTER_OUTPUT_STREAM	gconverteroutputstream.h	38;"	d
G_IS_CONVERTER_OUTPUT_STREAM_CLASS	gconverteroutputstream.h	39;"	d
G_IS_CREDENTIALS	gcredentials.h	44;"	d
G_IS_CREDENTIALS_CLASS	gcredentials.h	45;"	d
G_IS_DATA_INPUT_STREAM	gdatainputstream.h	37;"	d
G_IS_DATA_INPUT_STREAM_CLASS	gdatainputstream.h	38;"	d
G_IS_DATA_OUTPUT_STREAM	gdataoutputstream.h	37;"	d
G_IS_DATA_OUTPUT_STREAM_CLASS	gdataoutputstream.h	38;"	d
G_IS_DBUS_ACTION_GROUP	gdbusactiongroup.h	39;"	d
G_IS_DBUS_ACTION_GROUP_CLASS	gdbusactiongroup.h	41;"	d
G_IS_DBUS_AUTH_OBSERVER	gdbusauthobserver.h	36;"	d
G_IS_DBUS_CONNECTION	gdbusconnection.h	36;"	d
G_IS_DBUS_INTERFACE	gdbusinterface.h	32;"	d
G_IS_DBUS_INTERFACE_SKELETON	gdbusinterfaceskeleton.h	34;"	d
G_IS_DBUS_INTERFACE_SKELETON_CLASS	gdbusinterfaceskeleton.h	35;"	d
G_IS_DBUS_MENU_MODEL	gdbusmenumodel.h	32;"	d
G_IS_DBUS_MESSAGE	gdbusmessage.h	36;"	d
G_IS_DBUS_METHOD_INVOCATION	gdbusmethodinvocation.h	36;"	d
G_IS_DBUS_OBJECT	gdbusobject.h	32;"	d
G_IS_DBUS_OBJECT_MANAGER	gdbusobjectmanager.h	32;"	d
G_IS_DBUS_OBJECT_MANAGER_CLIENT	gdbusobjectmanagerclient.h	34;"	d
G_IS_DBUS_OBJECT_MANAGER_CLIENT_CLASS	gdbusobjectmanagerclient.h	35;"	d
G_IS_DBUS_OBJECT_MANAGER_SERVER	gdbusobjectmanagerserver.h	34;"	d
G_IS_DBUS_OBJECT_MANAGER_SERVER_CLASS	gdbusobjectmanagerserver.h	35;"	d
G_IS_DBUS_OBJECT_PROXY	gdbusobjectproxy.h	34;"	d
G_IS_DBUS_OBJECT_PROXY_CLASS	gdbusobjectproxy.h	35;"	d
G_IS_DBUS_OBJECT_SKELETON	gdbusobjectskeleton.h	34;"	d
G_IS_DBUS_OBJECT_SKELETON_CLASS	gdbusobjectskeleton.h	35;"	d
G_IS_DBUS_PROXY	gdbusproxy.h	39;"	d
G_IS_DBUS_PROXY_CLASS	gdbusproxy.h	40;"	d
G_IS_DBUS_SERVER	gdbusserver.h	36;"	d
G_IS_DRIVE	gdrive.h	37;"	d
G_IS_EMBLEM	gemblem.h	36;"	d
G_IS_EMBLEMED_ICON	gemblemedicon.h	39;"	d
G_IS_EMBLEMED_ICON_CLASS	gemblemedicon.h	40;"	d
G_IS_EMBLEM_CLASS	gemblem.h	37;"	d
G_IS_FILE	gfile.h	36;"	d
G_IS_FILENAME_COMPLETER	gfilenamecompleter.h	38;"	d
G_IS_FILENAME_COMPLETER_CLASS	gfilenamecompleter.h	39;"	d
G_IS_FILE_ENUMERATOR	gfileenumerator.h	37;"	d
G_IS_FILE_ENUMERATOR_CLASS	gfileenumerator.h	38;"	d
G_IS_FILE_ICON	gfileicon.h	37;"	d
G_IS_FILE_ICON_CLASS	gfileicon.h	38;"	d
G_IS_FILE_INFO	gfileinfo.h	37;"	d
G_IS_FILE_INFO_CLASS	gfileinfo.h	38;"	d
G_IS_FILE_INPUT_STREAM	gfileinputstream.h	37;"	d
G_IS_FILE_INPUT_STREAM_CLASS	gfileinputstream.h	38;"	d
G_IS_FILE_IO_STREAM	gfileiostream.h	37;"	d
G_IS_FILE_IO_STREAM_CLASS	gfileiostream.h	38;"	d
G_IS_FILE_MONITOR	gfilemonitor.h	37;"	d
G_IS_FILE_MONITOR_CLASS	gfilemonitor.h	38;"	d
G_IS_FILE_OUTPUT_STREAM	gfileoutputstream.h	37;"	d
G_IS_FILE_OUTPUT_STREAM_CLASS	gfileoutputstream.h	38;"	d
G_IS_FILTER_INPUT_STREAM	gfilterinputstream.h	37;"	d
G_IS_FILTER_INPUT_STREAM_CLASS	gfilterinputstream.h	38;"	d
G_IS_FILTER_OUTPUT_STREAM	gfilteroutputstream.h	37;"	d
G_IS_FILTER_OUTPUT_STREAM_CLASS	gfilteroutputstream.h	38;"	d
G_IS_ICON	gicon.h	36;"	d
G_IS_INET_ADDRESS	ginetaddress.h	38;"	d
G_IS_INET_ADDRESS_CLASS	ginetaddress.h	39;"	d
G_IS_INET_ADDRESS_MASK	ginetaddressmask.h	35;"	d
G_IS_INET_ADDRESS_MASK_CLASS	ginetaddressmask.h	36;"	d
G_IS_INET_SOCKET_ADDRESS	ginetsocketaddress.h	38;"	d
G_IS_INET_SOCKET_ADDRESS_CLASS	ginetsocketaddress.h	39;"	d
G_IS_INITABLE	ginitable.h	36;"	d
G_IS_INPUT_STREAM	ginputstream.h	37;"	d
G_IS_INPUT_STREAM_CLASS	ginputstream.h	38;"	d
G_IS_IO_STREAM	giostream.h	34;"	d
G_IS_IO_STREAM_CLASS	giostream.h	35;"	d
G_IS_LOADABLE_ICON	gloadableicon.h	36;"	d
G_IS_MEMORY_INPUT_STREAM	gmemoryinputstream.h	37;"	d
G_IS_MEMORY_INPUT_STREAM_CLASS	gmemoryinputstream.h	38;"	d
G_IS_MEMORY_OUTPUT_STREAM	gmemoryoutputstream.h	37;"	d
G_IS_MEMORY_OUTPUT_STREAM_CLASS	gmemoryoutputstream.h	38;"	d
G_IS_MENU	gmenu.h	32;"	d
G_IS_MENU_ATTRIBUTE_ITER	gmenumodel.h	125;"	d
G_IS_MENU_ATTRIBUTE_ITER_CLASS	gmenumodel.h	127;"	d
G_IS_MENU_ITEM	gmenu.h	38;"	d
G_IS_MENU_LINK_ITER	gmenumodel.h	162;"	d
G_IS_MENU_LINK_ITER_CLASS	gmenumodel.h	164;"	d
G_IS_MENU_MODEL	gmenumodel.h	43;"	d
G_IS_MENU_MODEL_CLASS	gmenumodel.h	45;"	d
G_IS_MOUNT	gmount.h	37;"	d
G_IS_MOUNT_OPERATION	gmountoperation.h	37;"	d
G_IS_MOUNT_OPERATION_CLASS	gmountoperation.h	38;"	d
G_IS_NATIVE_VOLUME_MONITOR	gnativevolumemonitor.h	37;"	d
G_IS_NATIVE_VOLUME_MONITOR_CLASS	gnativevolumemonitor.h	38;"	d
G_IS_NETWORK_ADDRESS	gnetworkaddress.h	35;"	d
G_IS_NETWORK_ADDRESS_CLASS	gnetworkaddress.h	36;"	d
G_IS_NETWORK_MONITOR	gnetworkmonitor.h	44;"	d
G_IS_NETWORK_SERVICE	gnetworkservice.h	35;"	d
G_IS_NETWORK_SERVICE_CLASS	gnetworkservice.h	36;"	d
G_IS_OUTPUT_STREAM	goutputstream.h	37;"	d
G_IS_OUTPUT_STREAM_CLASS	goutputstream.h	38;"	d
G_IS_PERMISSION	gpermission.h	38;"	d
G_IS_PERMISSION_CLASS	gpermission.h	40;"	d
G_IS_POLLABLE_INPUT_STREAM	gpollableinputstream.h	30;"	d
G_IS_POLLABLE_OUTPUT_STREAM	gpollableoutputstream.h	30;"	d
G_IS_PROXY	gproxy.h	38;"	d
G_IS_PROXY_ADDRESS	gproxyaddress.h	37;"	d
G_IS_PROXY_ADDRESS_CLASS	gproxyaddress.h	38;"	d
G_IS_PROXY_ADDRESS_ENUMERATOR	gproxyaddressenumerator.h	37;"	d
G_IS_PROXY_ADDRESS_ENUMERATOR_CLASS	gproxyaddressenumerator.h	38;"	d
G_IS_PROXY_RESOLVER	gproxyresolver.h	36;"	d
G_IS_REMOTE_ACTION_GROUP	gremoteactiongroup.h	37;"	d
G_IS_RESOLVER	gresolver.h	35;"	d
G_IS_RESOLVER_CLASS	gresolver.h	36;"	d
G_IS_SEEKABLE	gseekable.h	36;"	d
G_IS_SETTINGS	gsettings.h	39;"	d
G_IS_SETTINGS_BACKEND	gsettingsbackend.h	42;"	d
G_IS_SETTINGS_BACKEND_CLASS	gsettingsbackend.h	44;"	d
G_IS_SETTINGS_CLASS	gsettings.h	40;"	d
G_IS_SIMPLE_ACTION	gsimpleaction.h	36;"	d
G_IS_SIMPLE_ACTION_GROUP	gsimpleactiongroup.h	39;"	d
G_IS_SIMPLE_ACTION_GROUP_CLASS	gsimpleactiongroup.h	41;"	d
G_IS_SIMPLE_ASYNC_RESULT	gsimpleasyncresult.h	37;"	d
G_IS_SIMPLE_ASYNC_RESULT_CLASS	gsimpleasyncresult.h	38;"	d
G_IS_SIMPLE_PERMISSION	gsimplepermission.h	37;"	d
G_IS_SOCKET	gsocket.h	41;"	d
G_IS_SOCKET_ADDRESS	gsocketaddress.h	38;"	d
G_IS_SOCKET_ADDRESS_CLASS	gsocketaddress.h	39;"	d
G_IS_SOCKET_ADDRESS_ENUMERATOR	gsocketaddressenumerator.h	35;"	d
G_IS_SOCKET_ADDRESS_ENUMERATOR_CLASS	gsocketaddressenumerator.h	36;"	d
G_IS_SOCKET_CLASS	gsocket.h	43;"	d
G_IS_SOCKET_CLIENT	gsocketclient.h	41;"	d
G_IS_SOCKET_CLIENT_CLASS	gsocketclient.h	43;"	d
G_IS_SOCKET_CONNECTABLE	gsocketconnectable.h	34;"	d
G_IS_SOCKET_CONNECTION	gsocketconnection.h	44;"	d
G_IS_SOCKET_CONNECTION_CLASS	gsocketconnection.h	46;"	d
G_IS_SOCKET_CONTROL_MESSAGE	gsocketcontrolmessage.h	41;"	d
G_IS_SOCKET_CONTROL_MESSAGE_CLASS	gsocketcontrolmessage.h	43;"	d
G_IS_SOCKET_LISTENER	gsocketlistener.h	44;"	d
G_IS_SOCKET_LISTENER_CLASS	gsocketlistener.h	46;"	d
G_IS_SOCKET_SERVICE	gsocketservice.h	41;"	d
G_IS_SOCKET_SERVICE_CLASS	gsocketservice.h	43;"	d
G_IS_TCP_CONNECTION	gtcpconnection.h	39;"	d
G_IS_TCP_CONNECTION_CLASS	gtcpconnection.h	41;"	d
G_IS_TCP_WRAPPER_CONNECTION	gtcpwrapperconnection.h	39;"	d
G_IS_TCP_WRAPPER_CONNECTION_CLASS	gtcpwrapperconnection.h	41;"	d
G_IS_THEMED_ICON	gthemedicon.h	37;"	d
G_IS_THEMED_ICON_CLASS	gthemedicon.h	38;"	d
G_IS_THREADED_SOCKET_SERVICE	gthreadedsocketservice.h	43;"	d
G_IS_THREADED_SOCKET_SERVICE_CLASS	gthreadedsocketservice.h	45;"	d
G_IS_TLS_BACKEND	gtlsbackend.h	42;"	d
G_IS_TLS_CERTIFICATE	gtlscertificate.h	35;"	d
G_IS_TLS_CERTIFICATE_CLASS	gtlscertificate.h	36;"	d
G_IS_TLS_CLIENT_CONNECTION	gtlsclientconnection.h	34;"	d
G_IS_TLS_CONNECTION	gtlsconnection.h	35;"	d
G_IS_TLS_CONNECTION_CLASS	gtlsconnection.h	36;"	d
G_IS_TLS_DATABASE	gtlsdatabase.h	40;"	d
G_IS_TLS_DATABASE_CLASS	gtlsdatabase.h	41;"	d
G_IS_TLS_FILE_DATABASE	gtlsfiledatabase.h	28;"	d
G_IS_TLS_INTERACTION	gtlsinteraction.h	37;"	d
G_IS_TLS_INTERACTION_CLASS	gtlsinteraction.h	38;"	d
G_IS_TLS_PASSWORD	gtlspassword.h	37;"	d
G_IS_TLS_PASSWORD_CLASS	gtlspassword.h	38;"	d
G_IS_TLS_SERVER_CONNECTION	gtlsserverconnection.h	34;"	d
G_IS_VFS	gvfs.h	38;"	d
G_IS_VFS_CLASS	gvfs.h	39;"	d
G_IS_VOLUME	gvolume.h	91;"	d
G_IS_VOLUME_MONITOR	gvolumemonitor.h	41;"	d
G_IS_VOLUME_MONITOR_CLASS	gvolumemonitor.h	42;"	d
G_IS_ZLIB_COMPRESSOR	gzlibcompressor.h	38;"	d
G_IS_ZLIB_COMPRESSOR_CLASS	gzlibcompressor.h	39;"	d
G_IS_ZLIB_DECOMPRESSOR	gzlibdecompressor.h	38;"	d
G_IS_ZLIB_DECOMPRESSOR_CLASS	gzlibdecompressor.h	39;"	d
G_LOADABLE_ICON	gloadableicon.h	35;"	d
G_LOADABLE_ICON_GET_IFACE	gloadableicon.h	37;"	d
G_MEMORY_INPUT_STREAM	gmemoryinputstream.h	35;"	d
G_MEMORY_INPUT_STREAM_CLASS	gmemoryinputstream.h	36;"	d
G_MEMORY_INPUT_STREAM_GET_CLASS	gmemoryinputstream.h	39;"	d
G_MEMORY_OUTPUT_STREAM	gmemoryoutputstream.h	35;"	d
G_MEMORY_OUTPUT_STREAM_CLASS	gmemoryoutputstream.h	36;"	d
G_MEMORY_OUTPUT_STREAM_GET_CLASS	gmemoryoutputstream.h	39;"	d
G_MENU	gmenu.h	30;"	d
G_MENU_ATTRIBUTE_ACTION	gmenumodel.h	31;"	d
G_MENU_ATTRIBUTE_ITER	gmenumodel.h	121;"	d
G_MENU_ATTRIBUTE_ITER_CLASS	gmenumodel.h	123;"	d
G_MENU_ATTRIBUTE_ITER_GET_CLASS	gmenumodel.h	129;"	d
G_MENU_ATTRIBUTE_LABEL	gmenumodel.h	33;"	d
G_MENU_ATTRIBUTE_TARGET	gmenumodel.h	32;"	d
G_MENU_ITEM	gmenu.h	36;"	d
G_MENU_LINK_ITER	gmenumodel.h	158;"	d
G_MENU_LINK_ITER_CLASS	gmenumodel.h	160;"	d
G_MENU_LINK_ITER_GET_CLASS	gmenumodel.h	166;"	d
G_MENU_LINK_SECTION	gmenumodel.h	36;"	d
G_MENU_LINK_SUBMENU	gmenumodel.h	35;"	d
G_MENU_MODEL	gmenumodel.h	39;"	d
G_MENU_MODEL_CLASS	gmenumodel.h	41;"	d
G_MENU_MODEL_GET_CLASS	gmenumodel.h	47;"	d
G_MOUNT	gmount.h	36;"	d
G_MOUNT_GET_IFACE	gmount.h	38;"	d
G_MOUNT_MOUNT_NONE	gioenums.h	/^  G_MOUNT_MOUNT_NONE = 0$/;"	e	enum:__anon11
G_MOUNT_OPERATION	gmountoperation.h	35;"	d
G_MOUNT_OPERATION_ABORTED	gioenums.h	/^  G_MOUNT_OPERATION_ABORTED,$/;"	e	enum:__anon23
G_MOUNT_OPERATION_CLASS	gmountoperation.h	36;"	d
G_MOUNT_OPERATION_GET_CLASS	gmountoperation.h	39;"	d
G_MOUNT_OPERATION_HANDLED	gioenums.h	/^  G_MOUNT_OPERATION_HANDLED,$/;"	e	enum:__anon23
G_MOUNT_OPERATION_UNHANDLED	gioenums.h	/^  G_MOUNT_OPERATION_UNHANDLED$/;"	e	enum:__anon23
G_MOUNT_UNMOUNT_FORCE	gioenums.h	/^  G_MOUNT_UNMOUNT_FORCE = (1 << 0)$/;"	e	enum:__anon12
G_MOUNT_UNMOUNT_NONE	gioenums.h	/^  G_MOUNT_UNMOUNT_NONE  = 0,$/;"	e	enum:__anon12
G_NATIVE_VOLUME_MONITOR	gnativevolumemonitor.h	35;"	d
G_NATIVE_VOLUME_MONITOR_CLASS	gnativevolumemonitor.h	36;"	d
G_NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME	gnativevolumemonitor.h	40;"	d
G_NETWORK_ADDRESS	gnetworkaddress.h	33;"	d
G_NETWORK_ADDRESS_CLASS	gnetworkaddress.h	34;"	d
G_NETWORK_ADDRESS_GET_CLASS	gnetworkaddress.h	37;"	d
G_NETWORK_MONITOR	gnetworkmonitor.h	43;"	d
G_NETWORK_MONITOR_EXTENSION_POINT_NAME	gnetworkmonitor.h	40;"	d
G_NETWORK_MONITOR_GET_INTERFACE	gnetworkmonitor.h	45;"	d
G_NETWORK_SERVICE	gnetworkservice.h	33;"	d
G_NETWORK_SERVICE_CLASS	gnetworkservice.h	34;"	d
G_NETWORK_SERVICE_GET_CLASS	gnetworkservice.h	37;"	d
G_OUTPUT_STREAM	goutputstream.h	35;"	d
G_OUTPUT_STREAM_CLASS	goutputstream.h	36;"	d
G_OUTPUT_STREAM_GET_CLASS	goutputstream.h	39;"	d
G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE	gioenums.h	/^  G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE = (1 << 0),$/;"	e	enum:__anon24
G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET	gioenums.h	/^  G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET = (1 << 1)$/;"	e	enum:__anon24
G_OUTPUT_STREAM_SPLICE_NONE	gioenums.h	/^  G_OUTPUT_STREAM_SPLICE_NONE         = 0,$/;"	e	enum:__anon24
G_PASSWORD_SAVE_FOR_SESSION	gioenums.h	/^  G_PASSWORD_SAVE_FOR_SESSION,$/;"	e	enum:__anon22
G_PASSWORD_SAVE_NEVER	gioenums.h	/^  G_PASSWORD_SAVE_NEVER,$/;"	e	enum:__anon22
G_PASSWORD_SAVE_PERMANENTLY	gioenums.h	/^  G_PASSWORD_SAVE_PERMANENTLY$/;"	e	enum:__anon22
G_PERMISSION	gpermission.h	34;"	d
G_PERMISSION_CLASS	gpermission.h	36;"	d
G_PERMISSION_GET_CLASS	gpermission.h	42;"	d
G_POLLABLE_INPUT_STREAM	gpollableinputstream.h	29;"	d
G_POLLABLE_INPUT_STREAM_GET_INTERFACE	gpollableinputstream.h	31;"	d
G_POLLABLE_OUTPUT_STREAM	gpollableoutputstream.h	29;"	d
G_POLLABLE_OUTPUT_STREAM_GET_INTERFACE	gpollableoutputstream.h	31;"	d
G_PROXY	gproxy.h	37;"	d
G_PROXY_ADDRESS	gproxyaddress.h	35;"	d
G_PROXY_ADDRESS_CLASS	gproxyaddress.h	36;"	d
G_PROXY_ADDRESS_ENUMERATOR	gproxyaddressenumerator.h	35;"	d
G_PROXY_ADDRESS_ENUMERATOR_CLASS	gproxyaddressenumerator.h	36;"	d
G_PROXY_ADDRESS_ENUMERATOR_GET_CLASS	gproxyaddressenumerator.h	39;"	d
G_PROXY_ADDRESS_GET_CLASS	gproxyaddress.h	39;"	d
G_PROXY_EXTENSION_POINT_NAME	gproxy.h	49;"	d
G_PROXY_GET_IFACE	gproxy.h	39;"	d
G_PROXY_RESOLVER	gproxyresolver.h	35;"	d
G_PROXY_RESOLVER_EXTENSION_POINT_NAME	gproxyresolver.h	45;"	d
G_PROXY_RESOLVER_GET_IFACE	gproxyresolver.h	37;"	d
G_REMOTE_ACTION_GROUP	gremoteactiongroup.h	35;"	d
G_REMOTE_ACTION_GROUP_GET_IFACE	gremoteactiongroup.h	39;"	d
G_RESOLVER	gresolver.h	33;"	d
G_RESOLVER_CLASS	gresolver.h	34;"	d
G_RESOLVER_ERROR	gresolver.h	162;"	d
G_RESOLVER_ERROR_INTERNAL	gioenums.h	/^  G_RESOLVER_ERROR_INTERNAL$/;"	e	enum:__anon27
G_RESOLVER_ERROR_NOT_FOUND	gioenums.h	/^  G_RESOLVER_ERROR_NOT_FOUND,$/;"	e	enum:__anon27
G_RESOLVER_ERROR_TEMPORARY_FAILURE	gioenums.h	/^  G_RESOLVER_ERROR_TEMPORARY_FAILURE,$/;"	e	enum:__anon27
G_RESOLVER_GET_CLASS	gresolver.h	37;"	d
G_RESOURCE_ERROR	gresource.h	49;"	d
G_RESOURCE_ERROR_INTERNAL	gioenums.h	/^  G_RESOURCE_ERROR_INTERNAL$/;"	e	enum:__anon28
G_RESOURCE_ERROR_NOT_FOUND	gioenums.h	/^  G_RESOURCE_ERROR_NOT_FOUND,$/;"	e	enum:__anon28
G_RESOURCE_FLAGS_COMPRESSED	gioenums.h	/^  G_RESOURCE_FLAGS_COMPRESSED = (1<<0)$/;"	e	enum:__anon29
G_RESOURCE_FLAGS_NONE	gioenums.h	/^  G_RESOURCE_FLAGS_NONE       = 0,$/;"	e	enum:__anon29
G_RESOURCE_LOOKUP_FLAGS_NONE	gioenums.h	/^  G_RESOURCE_LOOKUP_FLAGS_NONE       = 0$/;"	e	enum:__anon30
G_SEEKABLE	gseekable.h	35;"	d
G_SEEKABLE_GET_IFACE	gseekable.h	37;"	d
G_SETTINGS	gsettings.h	35;"	d
G_SETTINGS_BACKEND	gsettingsbackend.h	38;"	d
G_SETTINGS_BACKEND_CLASS	gsettingsbackend.h	40;"	d
G_SETTINGS_BACKEND_EXTENSION_POINT_NAME	gsettingsbackend.h	54;"	d
G_SETTINGS_BACKEND_GET_CLASS	gsettingsbackend.h	46;"	d
G_SETTINGS_BIND_DEFAULT	gsettings.h	/^  G_SETTINGS_BIND_DEFAULT,$/;"	e	enum:__anon67
G_SETTINGS_BIND_GET	gsettings.h	/^  G_SETTINGS_BIND_GET            = (1<<0),$/;"	e	enum:__anon67
G_SETTINGS_BIND_GET_NO_CHANGES	gsettings.h	/^  G_SETTINGS_BIND_GET_NO_CHANGES = (1<<3),$/;"	e	enum:__anon67
G_SETTINGS_BIND_INVERT_BOOLEAN	gsettings.h	/^  G_SETTINGS_BIND_INVERT_BOOLEAN = (1<<4)$/;"	e	enum:__anon67
G_SETTINGS_BIND_NO_SENSITIVITY	gsettings.h	/^  G_SETTINGS_BIND_NO_SENSITIVITY = (1<<2),$/;"	e	enum:__anon67
G_SETTINGS_BIND_SET	gsettings.h	/^  G_SETTINGS_BIND_SET            = (1<<1),$/;"	e	enum:__anon67
G_SETTINGS_CLASS	gsettings.h	37;"	d
G_SETTINGS_GET_CLASS	gsettings.h	41;"	d
G_SIMPLE_ACTION	gsimpleaction.h	34;"	d
G_SIMPLE_ACTION_GROUP	gsimpleactiongroup.h	35;"	d
G_SIMPLE_ACTION_GROUP_CLASS	gsimpleactiongroup.h	37;"	d
G_SIMPLE_ACTION_GROUP_GET_CLASS	gsimpleactiongroup.h	43;"	d
G_SIMPLE_ASYNC_RESULT	gsimpleasyncresult.h	35;"	d
G_SIMPLE_ASYNC_RESULT_CLASS	gsimpleasyncresult.h	36;"	d
G_SIMPLE_ASYNC_RESULT_GET_CLASS	gsimpleasyncresult.h	39;"	d
G_SIMPLE_PERMISSION	gsimplepermission.h	34;"	d
G_SOCKET	gsocket.h	37;"	d
G_SOCKET_ADDRESS	gsocketaddress.h	36;"	d
G_SOCKET_ADDRESS_CLASS	gsocketaddress.h	37;"	d
G_SOCKET_ADDRESS_ENUMERATOR	gsocketaddressenumerator.h	33;"	d
G_SOCKET_ADDRESS_ENUMERATOR_CLASS	gsocketaddressenumerator.h	34;"	d
G_SOCKET_ADDRESS_ENUMERATOR_GET_CLASS	gsocketaddressenumerator.h	37;"	d
G_SOCKET_ADDRESS_GET_CLASS	gsocketaddress.h	40;"	d
G_SOCKET_CLASS	gsocket.h	39;"	d
G_SOCKET_CLIENT	gsocketclient.h	37;"	d
G_SOCKET_CLIENT_CLASS	gsocketclient.h	39;"	d
G_SOCKET_CLIENT_COMPLETE	gioenums.h	/^  G_SOCKET_CLIENT_COMPLETE$/;"	e	enum:__anon66
G_SOCKET_CLIENT_CONNECTED	gioenums.h	/^  G_SOCKET_CLIENT_CONNECTED,$/;"	e	enum:__anon66
G_SOCKET_CLIENT_CONNECTING	gioenums.h	/^  G_SOCKET_CLIENT_CONNECTING,$/;"	e	enum:__anon66
G_SOCKET_CLIENT_GET_CLASS	gsocketclient.h	45;"	d
G_SOCKET_CLIENT_PROXY_NEGOTIATED	gioenums.h	/^  G_SOCKET_CLIENT_PROXY_NEGOTIATED,$/;"	e	enum:__anon66
G_SOCKET_CLIENT_PROXY_NEGOTIATING	gioenums.h	/^  G_SOCKET_CLIENT_PROXY_NEGOTIATING,$/;"	e	enum:__anon66
G_SOCKET_CLIENT_RESOLVED	gioenums.h	/^  G_SOCKET_CLIENT_RESOLVED,$/;"	e	enum:__anon66
G_SOCKET_CLIENT_RESOLVING	gioenums.h	/^  G_SOCKET_CLIENT_RESOLVING,$/;"	e	enum:__anon66
G_SOCKET_CLIENT_TLS_HANDSHAKED	gioenums.h	/^  G_SOCKET_CLIENT_TLS_HANDSHAKED,$/;"	e	enum:__anon66
G_SOCKET_CLIENT_TLS_HANDSHAKING	gioenums.h	/^  G_SOCKET_CLIENT_TLS_HANDSHAKING,$/;"	e	enum:__anon66
G_SOCKET_CONNECTABLE	gsocketconnectable.h	33;"	d
G_SOCKET_CONNECTABLE_GET_IFACE	gsocketconnectable.h	35;"	d
G_SOCKET_CONNECTION	gsocketconnection.h	40;"	d
G_SOCKET_CONNECTION_CLASS	gsocketconnection.h	42;"	d
G_SOCKET_CONNECTION_GET_CLASS	gsocketconnection.h	48;"	d
G_SOCKET_CONTROL_MESSAGE	gsocketcontrolmessage.h	35;"	d
G_SOCKET_CONTROL_MESSAGE_CLASS	gsocketcontrolmessage.h	38;"	d
G_SOCKET_CONTROL_MESSAGE_GET_CLASS	gsocketcontrolmessage.h	45;"	d
G_SOCKET_FAMILY_INVALID	gioenums.h	/^  G_SOCKET_FAMILY_INVALID,$/;"	e	enum:__anon31
G_SOCKET_FAMILY_IPV4	gioenums.h	/^  G_SOCKET_FAMILY_IPV4 = GLIB_SYSDEF_AF_INET,$/;"	e	enum:__anon31
G_SOCKET_FAMILY_IPV6	gioenums.h	/^  G_SOCKET_FAMILY_IPV6 = GLIB_SYSDEF_AF_INET6$/;"	e	enum:__anon31
G_SOCKET_FAMILY_UNIX	gioenums.h	/^  G_SOCKET_FAMILY_UNIX = GLIB_SYSDEF_AF_UNIX,$/;"	e	enum:__anon31
G_SOCKET_GET_CLASS	gsocket.h	45;"	d
G_SOCKET_LISTENER	gsocketlistener.h	40;"	d
G_SOCKET_LISTENER_CLASS	gsocketlistener.h	42;"	d
G_SOCKET_LISTENER_GET_CLASS	gsocketlistener.h	48;"	d
G_SOCKET_MSG_DONTROUTE	gioenums.h	/^  G_SOCKET_MSG_DONTROUTE = GLIB_SYSDEF_MSG_DONTROUTE$/;"	e	enum:__anon33
G_SOCKET_MSG_NONE	gioenums.h	/^  G_SOCKET_MSG_NONE,$/;"	e	enum:__anon33
G_SOCKET_MSG_OOB	gioenums.h	/^  G_SOCKET_MSG_OOB = GLIB_SYSDEF_MSG_OOB,$/;"	e	enum:__anon33
G_SOCKET_MSG_PEEK	gioenums.h	/^  G_SOCKET_MSG_PEEK = GLIB_SYSDEF_MSG_PEEK,$/;"	e	enum:__anon33
G_SOCKET_PROTOCOL_DEFAULT	gioenums.h	/^  G_SOCKET_PROTOCOL_DEFAULT = 0,$/;"	e	enum:__anon34
G_SOCKET_PROTOCOL_SCTP	gioenums.h	/^  G_SOCKET_PROTOCOL_SCTP    = 132$/;"	e	enum:__anon34
G_SOCKET_PROTOCOL_TCP	gioenums.h	/^  G_SOCKET_PROTOCOL_TCP     = 6,$/;"	e	enum:__anon34
G_SOCKET_PROTOCOL_UDP	gioenums.h	/^  G_SOCKET_PROTOCOL_UDP     = 17,$/;"	e	enum:__anon34
G_SOCKET_PROTOCOL_UNKNOWN	gioenums.h	/^  G_SOCKET_PROTOCOL_UNKNOWN = -1,$/;"	e	enum:__anon34
G_SOCKET_SERVICE	gsocketservice.h	37;"	d
G_SOCKET_SERVICE_CLASS	gsocketservice.h	39;"	d
G_SOCKET_SERVICE_GET_CLASS	gsocketservice.h	45;"	d
G_SOCKET_TYPE_DATAGRAM	gioenums.h	/^  G_SOCKET_TYPE_DATAGRAM,$/;"	e	enum:__anon32
G_SOCKET_TYPE_INVALID	gioenums.h	/^  G_SOCKET_TYPE_INVALID,$/;"	e	enum:__anon32
G_SOCKET_TYPE_SEQPACKET	gioenums.h	/^  G_SOCKET_TYPE_SEQPACKET$/;"	e	enum:__anon32
G_SOCKET_TYPE_STREAM	gioenums.h	/^  G_SOCKET_TYPE_STREAM,$/;"	e	enum:__anon32
G_TCP_CONNECTION	gtcpconnection.h	35;"	d
G_TCP_CONNECTION_CLASS	gtcpconnection.h	37;"	d
G_TCP_CONNECTION_GET_CLASS	gtcpconnection.h	43;"	d
G_TCP_WRAPPER_CONNECTION	gtcpwrapperconnection.h	35;"	d
G_TCP_WRAPPER_CONNECTION_CLASS	gtcpwrapperconnection.h	37;"	d
G_TCP_WRAPPER_CONNECTION_GET_CLASS	gtcpwrapperconnection.h	43;"	d
G_THEMED_ICON	gthemedicon.h	35;"	d
G_THEMED_ICON_CLASS	gthemedicon.h	36;"	d
G_THEMED_ICON_GET_CLASS	gthemedicon.h	39;"	d
G_THREADED_SOCKET_SERVICE	gthreadedsocketservice.h	37;"	d
G_THREADED_SOCKET_SERVICE_CLASS	gthreadedsocketservice.h	40;"	d
G_THREADED_SOCKET_SERVICE_GET_CLASS	gthreadedsocketservice.h	47;"	d
G_TLS_AUTHENTICATION_NONE	gioenums.h	/^  G_TLS_AUTHENTICATION_NONE,$/;"	e	enum:__anon58
G_TLS_AUTHENTICATION_REQUESTED	gioenums.h	/^  G_TLS_AUTHENTICATION_REQUESTED,$/;"	e	enum:__anon58
G_TLS_AUTHENTICATION_REQUIRED	gioenums.h	/^  G_TLS_AUTHENTICATION_REQUIRED$/;"	e	enum:__anon58
G_TLS_BACKEND	gtlsbackend.h	41;"	d
G_TLS_BACKEND_EXTENSION_POINT_NAME	gtlsbackend.h	38;"	d
G_TLS_BACKEND_GET_INTERFACE	gtlsbackend.h	43;"	d
G_TLS_CERTIFICATE	gtlscertificate.h	33;"	d
G_TLS_CERTIFICATE_BAD_IDENTITY	gioenums.h	/^  G_TLS_CERTIFICATE_BAD_IDENTITY  = (1 << 1),$/;"	e	enum:__anon57
G_TLS_CERTIFICATE_CLASS	gtlscertificate.h	34;"	d
G_TLS_CERTIFICATE_EXPIRED	gioenums.h	/^  G_TLS_CERTIFICATE_EXPIRED       = (1 << 3),$/;"	e	enum:__anon57
G_TLS_CERTIFICATE_GENERIC_ERROR	gioenums.h	/^  G_TLS_CERTIFICATE_GENERIC_ERROR = (1 << 6),$/;"	e	enum:__anon57
G_TLS_CERTIFICATE_GET_CLASS	gtlscertificate.h	37;"	d
G_TLS_CERTIFICATE_INSECURE	gioenums.h	/^  G_TLS_CERTIFICATE_INSECURE      = (1 << 5),$/;"	e	enum:__anon57
G_TLS_CERTIFICATE_NOT_ACTIVATED	gioenums.h	/^  G_TLS_CERTIFICATE_NOT_ACTIVATED = (1 << 2),$/;"	e	enum:__anon57
G_TLS_CERTIFICATE_REVOKED	gioenums.h	/^  G_TLS_CERTIFICATE_REVOKED       = (1 << 4),$/;"	e	enum:__anon57
G_TLS_CERTIFICATE_UNKNOWN_CA	gioenums.h	/^  G_TLS_CERTIFICATE_UNKNOWN_CA    = (1 << 0),$/;"	e	enum:__anon57
G_TLS_CERTIFICATE_VALIDATE_ALL	gioenums.h	/^  G_TLS_CERTIFICATE_VALIDATE_ALL  = 0x007f$/;"	e	enum:__anon57
G_TLS_CLIENT_CONNECTION	gtlsclientconnection.h	33;"	d
G_TLS_CLIENT_CONNECTION_GET_INTERFACE	gtlsclientconnection.h	35;"	d
G_TLS_CONNECTION	gtlsconnection.h	33;"	d
G_TLS_CONNECTION_CLASS	gtlsconnection.h	34;"	d
G_TLS_CONNECTION_GET_CLASS	gtlsconnection.h	37;"	d
G_TLS_DATABASE	gtlsdatabase.h	38;"	d
G_TLS_DATABASE_CLASS	gtlsdatabase.h	39;"	d
G_TLS_DATABASE_GET_CLASS	gtlsdatabase.h	42;"	d
G_TLS_DATABASE_LOOKUP_KEYPAIR	gioenums.h	/^  G_TLS_DATABASE_LOOKUP_KEYPAIR = 1$/;"	e	enum:__anon64
G_TLS_DATABASE_LOOKUP_NONE	gioenums.h	/^  G_TLS_DATABASE_LOOKUP_NONE = 0,$/;"	e	enum:__anon64
G_TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT	gtlsdatabase.h	35;"	d
G_TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER	gtlsdatabase.h	34;"	d
G_TLS_DATABASE_VERIFY_NONE	gioenums.h	/^  G_TLS_DATABASE_VERIFY_NONE = 0$/;"	e	enum:__anon63
G_TLS_ERROR	gtlsconnection.h	127;"	d
G_TLS_ERROR_BAD_CERTIFICATE	gioenums.h	/^  G_TLS_ERROR_BAD_CERTIFICATE,$/;"	e	enum:__anon56
G_TLS_ERROR_CERTIFICATE_REQUIRED	gioenums.h	/^  G_TLS_ERROR_CERTIFICATE_REQUIRED,$/;"	e	enum:__anon56
G_TLS_ERROR_EOF	gioenums.h	/^  G_TLS_ERROR_EOF$/;"	e	enum:__anon56
G_TLS_ERROR_HANDSHAKE	gioenums.h	/^  G_TLS_ERROR_HANDSHAKE,$/;"	e	enum:__anon56
G_TLS_ERROR_MISC	gioenums.h	/^  G_TLS_ERROR_MISC,$/;"	e	enum:__anon56
G_TLS_ERROR_NOT_TLS	gioenums.h	/^  G_TLS_ERROR_NOT_TLS,$/;"	e	enum:__anon56
G_TLS_ERROR_UNAVAILABLE	gioenums.h	/^  G_TLS_ERROR_UNAVAILABLE,$/;"	e	enum:__anon56
G_TLS_FILE_DATABASE	gtlsfiledatabase.h	27;"	d
G_TLS_FILE_DATABASE_GET_INTERFACE	gtlsfiledatabase.h	29;"	d
G_TLS_INTERACTION	gtlsinteraction.h	35;"	d
G_TLS_INTERACTION_CLASS	gtlsinteraction.h	36;"	d
G_TLS_INTERACTION_FAILED	gioenums.h	/^  G_TLS_INTERACTION_FAILED$/;"	e	enum:__anon60
G_TLS_INTERACTION_GET_CLASS	gtlsinteraction.h	39;"	d
G_TLS_INTERACTION_HANDLED	gioenums.h	/^  G_TLS_INTERACTION_HANDLED,$/;"	e	enum:__anon60
G_TLS_INTERACTION_UNHANDLED	gioenums.h	/^  G_TLS_INTERACTION_UNHANDLED,$/;"	e	enum:__anon60
G_TLS_PASSWORD	gtlspassword.h	35;"	d
G_TLS_PASSWORD_CLASS	gtlspassword.h	36;"	d
G_TLS_PASSWORD_FINAL_TRY	gioenums.h	/^  G_TLS_PASSWORD_FINAL_TRY = 1 << 3$/;"	e	enum:_GTlsPasswordFlags
G_TLS_PASSWORD_GET_CLASS	gtlspassword.h	39;"	d
G_TLS_PASSWORD_MANY_TRIES	gioenums.h	/^  G_TLS_PASSWORD_MANY_TRIES = 1 << 2,$/;"	e	enum:_GTlsPasswordFlags
G_TLS_PASSWORD_NONE	gioenums.h	/^  G_TLS_PASSWORD_NONE = 0,$/;"	e	enum:_GTlsPasswordFlags
G_TLS_PASSWORD_RETRY	gioenums.h	/^  G_TLS_PASSWORD_RETRY = 1 << 1,$/;"	e	enum:_GTlsPasswordFlags
G_TLS_REHANDSHAKE_NEVER	gioenums.h	/^  G_TLS_REHANDSHAKE_NEVER,$/;"	e	enum:__anon59
G_TLS_REHANDSHAKE_SAFELY	gioenums.h	/^  G_TLS_REHANDSHAKE_SAFELY,$/;"	e	enum:__anon59
G_TLS_REHANDSHAKE_UNSAFELY	gioenums.h	/^  G_TLS_REHANDSHAKE_UNSAFELY$/;"	e	enum:__anon59
G_TLS_SERVER_CONNECTION	gtlsserverconnection.h	33;"	d
G_TLS_SERVER_CONNECTION_GET_INTERFACE	gtlsserverconnection.h	35;"	d
G_TYPE_ACTION	gaction.h	33;"	d
G_TYPE_ACTION_GROUP	gactiongroup.h	34;"	d
G_TYPE_ACTION_MAP	gactionmap.h	34;"	d
G_TYPE_APPLICATION	gapplication.h	33;"	d
G_TYPE_APPLICATION_COMMAND_LINE	gapplicationcommandline.h	34;"	d
G_TYPE_APPLICATION_FLAGS	gioenumtypes.h	121;"	d
G_TYPE_APP_INFO	gappinfo.h	34;"	d
G_TYPE_APP_INFO_CREATE_FLAGS	gioenumtypes.h	13;"	d
G_TYPE_APP_LAUNCH_CONTEXT	gappinfo.h	39;"	d
G_TYPE_ASK_PASSWORD_FLAGS	gioenumtypes.h	53;"	d
G_TYPE_ASYNC_INITABLE	gasyncinitable.h	35;"	d
G_TYPE_ASYNC_RESULT	gasyncresult.h	34;"	d
G_TYPE_BUFFERED_INPUT_STREAM	gbufferedinputstream.h	34;"	d
G_TYPE_BUFFERED_OUTPUT_STREAM	gbufferedoutputstream.h	34;"	d
G_TYPE_BUS_NAME_OWNER_FLAGS	gioenumtypes.h	87;"	d
G_TYPE_BUS_NAME_WATCHER_FLAGS	gioenumtypes.h	89;"	d
G_TYPE_BUS_TYPE	gioenumtypes.h	85;"	d
G_TYPE_CANCELLABLE	gcancellable.h	34;"	d
G_TYPE_CHARSET_CONVERTER	gcharsetconverter.h	34;"	d
G_TYPE_CONVERTER	gconverter.h	34;"	d
G_TYPE_CONVERTER_FLAGS	gioenumtypes.h	15;"	d
G_TYPE_CONVERTER_INPUT_STREAM	gconverterinputstream.h	35;"	d
G_TYPE_CONVERTER_OUTPUT_STREAM	gconverteroutputstream.h	35;"	d
G_TYPE_CONVERTER_RESULT	gioenumtypes.h	17;"	d
G_TYPE_CREDENTIALS	gcredentials.h	40;"	d
G_TYPE_CREDENTIALS_TYPE	gioenumtypes.h	117;"	d
G_TYPE_DATA_INPUT_STREAM	gdatainputstream.h	34;"	d
G_TYPE_DATA_OUTPUT_STREAM	gdataoutputstream.h	34;"	d
G_TYPE_DATA_STREAM_BYTE_ORDER	gioenumtypes.h	19;"	d
G_TYPE_DATA_STREAM_NEWLINE_TYPE	gioenumtypes.h	21;"	d
G_TYPE_DBUS_ACTION_GROUP	gdbusactiongroup.h	34;"	d
G_TYPE_DBUS_ANNOTATION_INFO	gdbusintrospection.h	284;"	d
G_TYPE_DBUS_ARG_INFO	gdbusintrospection.h	275;"	d
G_TYPE_DBUS_AUTH_OBSERVER	gdbusauthobserver.h	34;"	d
G_TYPE_DBUS_CALL_FLAGS	gioenumtypes.h	99;"	d
G_TYPE_DBUS_CAPABILITY_FLAGS	gioenumtypes.h	97;"	d
G_TYPE_DBUS_CONNECTION	gdbusconnection.h	34;"	d
G_TYPE_DBUS_CONNECTION_FLAGS	gioenumtypes.h	95;"	d
G_TYPE_DBUS_ERROR	gioenumtypes.h	93;"	d
G_TYPE_DBUS_INTERFACE	gdbusinterface.h	30;"	d
G_TYPE_DBUS_INTERFACE_INFO	gdbusintrospection.h	239;"	d
G_TYPE_DBUS_INTERFACE_SKELETON	gdbusinterfaceskeleton.h	30;"	d
G_TYPE_DBUS_INTERFACE_SKELETON_FLAGS	gioenumtypes.h	135;"	d
G_TYPE_DBUS_MENU_MODEL	gdbusmenumodel.h	29;"	d
G_TYPE_DBUS_MESSAGE	gdbusmessage.h	34;"	d
G_TYPE_DBUS_MESSAGE_BYTE_ORDER	gioenumtypes.h	119;"	d
G_TYPE_DBUS_MESSAGE_FLAGS	gioenumtypes.h	103;"	d
G_TYPE_DBUS_MESSAGE_HEADER_FIELD	gioenumtypes.h	105;"	d
G_TYPE_DBUS_MESSAGE_TYPE	gioenumtypes.h	101;"	d
G_TYPE_DBUS_METHOD_INFO	gdbusintrospection.h	248;"	d
G_TYPE_DBUS_METHOD_INVOCATION	gdbusmethodinvocation.h	34;"	d
G_TYPE_DBUS_NODE_INFO	gdbusintrospection.h	230;"	d
G_TYPE_DBUS_OBJECT	gdbusobject.h	30;"	d
G_TYPE_DBUS_OBJECT_MANAGER	gdbusobjectmanager.h	30;"	d
G_TYPE_DBUS_OBJECT_MANAGER_CLIENT	gdbusobjectmanagerclient.h	30;"	d
G_TYPE_DBUS_OBJECT_MANAGER_CLIENT_FLAGS	gioenumtypes.h	137;"	d
G_TYPE_DBUS_OBJECT_MANAGER_SERVER	gdbusobjectmanagerserver.h	30;"	d
G_TYPE_DBUS_OBJECT_PROXY	gdbusobjectproxy.h	30;"	d
G_TYPE_DBUS_OBJECT_SKELETON	gdbusobjectskeleton.h	30;"	d
G_TYPE_DBUS_PROPERTY_INFO	gdbusintrospection.h	266;"	d
G_TYPE_DBUS_PROPERTY_INFO_FLAGS	gioenumtypes.h	107;"	d
G_TYPE_DBUS_PROXY	gdbusproxy.h	35;"	d
G_TYPE_DBUS_PROXY_FLAGS	gioenumtypes.h	91;"	d
G_TYPE_DBUS_SEND_MESSAGE_FLAGS	gioenumtypes.h	115;"	d
G_TYPE_DBUS_SERVER	gdbusserver.h	34;"	d
G_TYPE_DBUS_SERVER_FLAGS	gioenumtypes.h	111;"	d
G_TYPE_DBUS_SIGNAL_FLAGS	gioenumtypes.h	113;"	d
G_TYPE_DBUS_SIGNAL_INFO	gdbusintrospection.h	257;"	d
G_TYPE_DBUS_SUBTREE_FLAGS	gioenumtypes.h	109;"	d
G_TYPE_DRIVE	gdrive.h	35;"	d
G_TYPE_DRIVE_START_FLAGS	gioenumtypes.h	37;"	d
G_TYPE_DRIVE_START_STOP_TYPE	gioenumtypes.h	39;"	d
G_TYPE_EMBLEM	gemblem.h	33;"	d
G_TYPE_EMBLEMED_ICON	gemblemedicon.h	36;"	d
G_TYPE_EMBLEM_ORIGIN	gioenumtypes.h	63;"	d
G_TYPE_FILE	gfile.h	34;"	d
G_TYPE_FILENAME_COMPLETER	gfilenamecompleter.h	34;"	d
G_TYPE_FILESYSTEM_PREVIEW_TYPE	gioenumtypes.h	47;"	d
G_TYPE_FILE_ATTRIBUTE_INFO_FLAGS	gioenumtypes.h	25;"	d
G_TYPE_FILE_ATTRIBUTE_STATUS	gioenumtypes.h	27;"	d
G_TYPE_FILE_ATTRIBUTE_TYPE	gioenumtypes.h	23;"	d
G_TYPE_FILE_COPY_FLAGS	gioenumtypes.h	41;"	d
G_TYPE_FILE_CREATE_FLAGS	gioenumtypes.h	31;"	d
G_TYPE_FILE_ENUMERATOR	gfileenumerator.h	34;"	d
G_TYPE_FILE_ICON	gfileicon.h	34;"	d
G_TYPE_FILE_INFO	gfileinfo.h	34;"	d
G_TYPE_FILE_INPUT_STREAM	gfileinputstream.h	34;"	d
G_TYPE_FILE_IO_STREAM	gfileiostream.h	34;"	d
G_TYPE_FILE_MONITOR	gfilemonitor.h	34;"	d
G_TYPE_FILE_MONITOR_EVENT	gioenumtypes.h	49;"	d
G_TYPE_FILE_MONITOR_FLAGS	gioenumtypes.h	43;"	d
G_TYPE_FILE_OUTPUT_STREAM	gfileoutputstream.h	34;"	d
G_TYPE_FILE_QUERY_INFO_FLAGS	gioenumtypes.h	29;"	d
G_TYPE_FILE_TYPE	gioenumtypes.h	45;"	d
G_TYPE_FILTER_INPUT_STREAM	gfilterinputstream.h	34;"	d
G_TYPE_FILTER_OUTPUT_STREAM	gfilteroutputstream.h	34;"	d
G_TYPE_ICON	gicon.h	34;"	d
G_TYPE_INET_ADDRESS	ginetaddress.h	35;"	d
G_TYPE_INET_ADDRESS_MASK	ginetaddressmask.h	32;"	d
G_TYPE_INET_SOCKET_ADDRESS	ginetsocketaddress.h	35;"	d
G_TYPE_INITABLE	ginitable.h	34;"	d
G_TYPE_INPUT_STREAM	ginputstream.h	34;"	d
G_TYPE_IO_ERROR_ENUM	gioenumtypes.h	51;"	d
G_TYPE_IO_MODULE_SCOPE_FLAGS	gioenumtypes.h	143;"	d
G_TYPE_IO_STREAM	giostream.h	31;"	d
G_TYPE_IO_STREAM_SPLICE_FLAGS	gioenumtypes.h	61;"	d
G_TYPE_IS_ASYNC_INITABLE	gasyncinitable.h	39;"	d
G_TYPE_IS_INITABLE	ginitable.h	38;"	d
G_TYPE_LOADABLE_ICON	gloadableicon.h	34;"	d
G_TYPE_MEMORY_INPUT_STREAM	gmemoryinputstream.h	34;"	d
G_TYPE_MEMORY_OUTPUT_STREAM	gmemoryoutputstream.h	34;"	d
G_TYPE_MENU	gmenu.h	29;"	d
G_TYPE_MENU_ATTRIBUTE_ITER	gmenumodel.h	120;"	d
G_TYPE_MENU_ITEM	gmenu.h	35;"	d
G_TYPE_MENU_LINK_ITER	gmenumodel.h	157;"	d
G_TYPE_MENU_MODEL	gmenumodel.h	38;"	d
G_TYPE_MOUNT	gmount.h	35;"	d
G_TYPE_MOUNT_MOUNT_FLAGS	gioenumtypes.h	33;"	d
G_TYPE_MOUNT_OPERATION	gmountoperation.h	34;"	d
G_TYPE_MOUNT_OPERATION_RESULT	gioenumtypes.h	57;"	d
G_TYPE_MOUNT_UNMOUNT_FLAGS	gioenumtypes.h	35;"	d
G_TYPE_NATIVE_VOLUME_MONITOR	gnativevolumemonitor.h	34;"	d
G_TYPE_NETWORK_ADDRESS	gnetworkaddress.h	32;"	d
G_TYPE_NETWORK_MONITOR	gnetworkmonitor.h	42;"	d
G_TYPE_NETWORK_SERVICE	gnetworkservice.h	32;"	d
G_TYPE_OUTPUT_STREAM	goutputstream.h	34;"	d
G_TYPE_OUTPUT_STREAM_SPLICE_FLAGS	gioenumtypes.h	59;"	d
G_TYPE_PASSWORD_SAVE	gioenumtypes.h	55;"	d
G_TYPE_PERMISSION	gpermission.h	33;"	d
G_TYPE_POLLABLE_INPUT_STREAM	gpollableinputstream.h	28;"	d
G_TYPE_POLLABLE_OUTPUT_STREAM	gpollableoutputstream.h	28;"	d
G_TYPE_PROXY	gproxy.h	36;"	d
G_TYPE_PROXY_ADDRESS	gproxyaddress.h	34;"	d
G_TYPE_PROXY_ADDRESS_ENUMERATOR	gproxyaddressenumerator.h	34;"	d
G_TYPE_PROXY_RESOLVER	gproxyresolver.h	34;"	d
G_TYPE_REMOTE_ACTION_GROUP	gremoteactiongroup.h	34;"	d
G_TYPE_RESOLVER	gresolver.h	32;"	d
G_TYPE_RESOLVER_ERROR	gioenumtypes.h	65;"	d
G_TYPE_RESOURCE	gresource.h	39;"	d
G_TYPE_RESOURCE_ERROR	gioenumtypes.h	67;"	d
G_TYPE_RESOURCE_FLAGS	gioenumtypes.h	69;"	d
G_TYPE_RESOURCE_LOOKUP_FLAGS	gioenumtypes.h	71;"	d
G_TYPE_SEEKABLE	gseekable.h	34;"	d
G_TYPE_SETTINGS	gsettings.h	34;"	d
G_TYPE_SETTINGS_BACKEND	gsettingsbackend.h	37;"	d
G_TYPE_SETTINGS_BIND_FLAGS	gioenumtypes.h	149;"	d
G_TYPE_SETTINGS_SCHEMA	gsettingsschema.h	45;"	d
G_TYPE_SETTINGS_SCHEMA_SOURCE	gsettingsschema.h	29;"	d
G_TYPE_SIMPLE_ACTION	gsimpleaction.h	33;"	d
G_TYPE_SIMPLE_ACTION_GROUP	gsimpleactiongroup.h	34;"	d
G_TYPE_SIMPLE_ASYNC_RESULT	gsimpleasyncresult.h	34;"	d
G_TYPE_SIMPLE_PERMISSION	gsimplepermission.h	33;"	d
G_TYPE_SOCKET	gsocket.h	36;"	d
G_TYPE_SOCKET_ADDRESS	gsocketaddress.h	35;"	d
G_TYPE_SOCKET_ADDRESS_ENUMERATOR	gsocketaddressenumerator.h	32;"	d
G_TYPE_SOCKET_CLIENT	gsocketclient.h	36;"	d
G_TYPE_SOCKET_CLIENT_EVENT	gioenumtypes.h	145;"	d
G_TYPE_SOCKET_CONNECTABLE	gsocketconnectable.h	32;"	d
G_TYPE_SOCKET_CONNECTION	gsocketconnection.h	39;"	d
G_TYPE_SOCKET_CONTROL_MESSAGE	gsocketcontrolmessage.h	34;"	d
G_TYPE_SOCKET_FAMILY	gioenumtypes.h	73;"	d
G_TYPE_SOCKET_LISTENER	gsocketlistener.h	39;"	d
G_TYPE_SOCKET_MSG_FLAGS	gioenumtypes.h	77;"	d
G_TYPE_SOCKET_PROTOCOL	gioenumtypes.h	79;"	d
G_TYPE_SOCKET_SERVICE	gsocketservice.h	36;"	d
G_TYPE_SOCKET_TYPE	gioenumtypes.h	75;"	d
G_TYPE_SRV_TARGET	gsrvtarget.h	33;"	d
G_TYPE_TCP_CONNECTION	gtcpconnection.h	34;"	d
G_TYPE_TCP_WRAPPER_CONNECTION	gtcpwrapperconnection.h	34;"	d
G_TYPE_THEMED_ICON	gthemedicon.h	34;"	d
G_TYPE_THREADED_SOCKET_SERVICE	gthreadedsocketservice.h	36;"	d
G_TYPE_TLS_AUTHENTICATION_MODE	gioenumtypes.h	127;"	d
G_TYPE_TLS_BACKEND	gtlsbackend.h	40;"	d
G_TYPE_TLS_CERTIFICATE	gtlscertificate.h	32;"	d
G_TYPE_TLS_CERTIFICATE_FLAGS	gioenumtypes.h	125;"	d
G_TYPE_TLS_CLIENT_CONNECTION	gtlsclientconnection.h	32;"	d
G_TYPE_TLS_CONNECTION	gtlsconnection.h	32;"	d
G_TYPE_TLS_DATABASE	gtlsdatabase.h	37;"	d
G_TYPE_TLS_DATABASE_LOOKUP_FLAGS	gioenumtypes.h	141;"	d
G_TYPE_TLS_DATABASE_VERIFY_FLAGS	gioenumtypes.h	139;"	d
G_TYPE_TLS_ERROR	gioenumtypes.h	123;"	d
G_TYPE_TLS_FILE_DATABASE	gtlsfiledatabase.h	26;"	d
G_TYPE_TLS_INTERACTION	gtlsinteraction.h	34;"	d
G_TYPE_TLS_INTERACTION_RESULT	gioenumtypes.h	133;"	d
G_TYPE_TLS_PASSWORD	gtlspassword.h	34;"	d
G_TYPE_TLS_PASSWORD_FLAGS	gioenumtypes.h	131;"	d
G_TYPE_TLS_REHANDSHAKE_MODE	gioenumtypes.h	129;"	d
G_TYPE_TLS_SERVER_CONNECTION	gtlsserverconnection.h	32;"	d
G_TYPE_UNIX_SOCKET_ADDRESS_TYPE	gioenumtypes.h	83;"	d
G_TYPE_VFS	gvfs.h	34;"	d
G_TYPE_VOLUME	gvolume.h	89;"	d
G_TYPE_VOLUME_MONITOR	gvolumemonitor.h	37;"	d
G_TYPE_ZLIB_COMPRESSOR	gzlibcompressor.h	35;"	d
G_TYPE_ZLIB_COMPRESSOR_FORMAT	gioenumtypes.h	81;"	d
G_TYPE_ZLIB_DECOMPRESSOR	gzlibdecompressor.h	35;"	d
G_UNIX_SOCKET_ADDRESS_ABSTRACT	gioenums.h	/^  G_UNIX_SOCKET_ADDRESS_ABSTRACT,$/;"	e	enum:__anon36
G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED	gioenums.h	/^  G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED$/;"	e	enum:__anon36
G_UNIX_SOCKET_ADDRESS_ANONYMOUS	gioenums.h	/^  G_UNIX_SOCKET_ADDRESS_ANONYMOUS,$/;"	e	enum:__anon36
G_UNIX_SOCKET_ADDRESS_INVALID	gioenums.h	/^  G_UNIX_SOCKET_ADDRESS_INVALID,$/;"	e	enum:__anon36
G_UNIX_SOCKET_ADDRESS_PATH	gioenums.h	/^  G_UNIX_SOCKET_ADDRESS_PATH,$/;"	e	enum:__anon36
G_VFS	gvfs.h	35;"	d
G_VFS_CLASS	gvfs.h	36;"	d
G_VFS_EXTENSION_POINT_NAME	gvfs.h	47;"	d
G_VFS_GET_CLASS	gvfs.h	37;"	d
G_VOLUME	gvolume.h	90;"	d
G_VOLUME_GET_IFACE	gvolume.h	92;"	d
G_VOLUME_IDENTIFIER_KIND_CLASS	gvolume.h	86;"	d
G_VOLUME_IDENTIFIER_KIND_HAL_UDI	gvolume.h	40;"	d
G_VOLUME_IDENTIFIER_KIND_LABEL	gvolume.h	54;"	d
G_VOLUME_IDENTIFIER_KIND_NFS_MOUNT	gvolume.h	68;"	d
G_VOLUME_IDENTIFIER_KIND_UNIX_DEVICE	gvolume.h	47;"	d
G_VOLUME_IDENTIFIER_KIND_UUID	gvolume.h	61;"	d
G_VOLUME_MONITOR	gvolumemonitor.h	38;"	d
G_VOLUME_MONITOR_CLASS	gvolumemonitor.h	39;"	d
G_VOLUME_MONITOR_EXTENSION_POINT_NAME	gvolumemonitor.h	50;"	d
G_VOLUME_MONITOR_GET_CLASS	gvolumemonitor.h	40;"	d
G_ZLIB_COMPRESSOR	gzlibcompressor.h	36;"	d
G_ZLIB_COMPRESSOR_CLASS	gzlibcompressor.h	37;"	d
G_ZLIB_COMPRESSOR_FORMAT_GZIP	gioenums.h	/^  G_ZLIB_COMPRESSOR_FORMAT_GZIP,$/;"	e	enum:__anon35
G_ZLIB_COMPRESSOR_FORMAT_RAW	gioenums.h	/^  G_ZLIB_COMPRESSOR_FORMAT_RAW$/;"	e	enum:__anon35
G_ZLIB_COMPRESSOR_FORMAT_ZLIB	gioenums.h	/^  G_ZLIB_COMPRESSOR_FORMAT_ZLIB,$/;"	e	enum:__anon35
G_ZLIB_COMPRESSOR_GET_CLASS	gzlibcompressor.h	40;"	d
G_ZLIB_DECOMPRESSOR	gzlibdecompressor.h	36;"	d
G_ZLIB_DECOMPRESSOR_CLASS	gzlibdecompressor.h	37;"	d
G_ZLIB_DECOMPRESSOR_GET_CLASS	gzlibdecompressor.h	40;"	d
_GActionEntry	gactionmap.h	/^struct _GActionEntry$/;"	s
_GActionGroupInterface	gactiongroup.h	/^struct _GActionGroupInterface$/;"	s
_GActionInterface	gaction.h	/^struct _GActionInterface$/;"	s
_GActionMapInterface	gactionmap.h	/^struct _GActionMapInterface$/;"	s
_GAppInfoIface	gappinfo.h	/^struct _GAppInfoIface$/;"	s
_GAppLaunchContext	gappinfo.h	/^struct _GAppLaunchContext$/;"	s
_GAppLaunchContextClass	gappinfo.h	/^struct _GAppLaunchContextClass$/;"	s
_GApplication	gapplication.h	/^struct _GApplication$/;"	s
_GApplicationClass	gapplication.h	/^struct _GApplicationClass$/;"	s
_GApplicationCommandLine	gapplicationcommandline.h	/^struct _GApplicationCommandLine$/;"	s
_GApplicationCommandLineClass	gapplicationcommandline.h	/^struct _GApplicationCommandLineClass$/;"	s
_GAsyncInitableIface	gasyncinitable.h	/^struct _GAsyncInitableIface$/;"	s
_GAsyncResultIface	gasyncresult.h	/^struct _GAsyncResultIface$/;"	s
_GBufferedInputStream	gbufferedinputstream.h	/^struct _GBufferedInputStream$/;"	s
_GBufferedInputStreamClass	gbufferedinputstream.h	/^struct _GBufferedInputStreamClass$/;"	s
_GBufferedOutputStream	gbufferedoutputstream.h	/^struct _GBufferedOutputStream$/;"	s
_GBufferedOutputStreamClass	gbufferedoutputstream.h	/^struct _GBufferedOutputStreamClass$/;"	s
_GCancellable	gcancellable.h	/^struct _GCancellable$/;"	s
_GCancellableClass	gcancellable.h	/^struct _GCancellableClass$/;"	s
_GCharsetConverterClass	gcharsetconverter.h	/^struct _GCharsetConverterClass$/;"	s
_GConverterIface	gconverter.h	/^struct _GConverterIface$/;"	s
_GConverterInputStream	gconverterinputstream.h	/^struct _GConverterInputStream$/;"	s
_GConverterInputStreamClass	gconverterinputstream.h	/^struct _GConverterInputStreamClass$/;"	s
_GConverterOutputStream	gconverteroutputstream.h	/^struct _GConverterOutputStream$/;"	s
_GConverterOutputStreamClass	gconverteroutputstream.h	/^struct _GConverterOutputStreamClass$/;"	s
_GDBusAnnotationInfo	gdbusintrospection.h	/^struct _GDBusAnnotationInfo$/;"	s
_GDBusArgInfo	gdbusintrospection.h	/^struct _GDBusArgInfo$/;"	s
_GDBusErrorEntry	gdbuserror.h	/^struct _GDBusErrorEntry$/;"	s
_GDBusInterfaceIface	gdbusinterface.h	/^struct _GDBusInterfaceIface$/;"	s
_GDBusInterfaceInfo	gdbusintrospection.h	/^struct _GDBusInterfaceInfo$/;"	s
_GDBusInterfaceSkeleton	gdbusinterfaceskeleton.h	/^struct _GDBusInterfaceSkeleton$/;"	s
_GDBusInterfaceSkeletonClass	gdbusinterfaceskeleton.h	/^struct _GDBusInterfaceSkeletonClass$/;"	s
_GDBusInterfaceVTable	gdbusconnection.h	/^struct _GDBusInterfaceVTable$/;"	s
_GDBusMethodInfo	gdbusintrospection.h	/^struct _GDBusMethodInfo$/;"	s
_GDBusNodeInfo	gdbusintrospection.h	/^struct _GDBusNodeInfo$/;"	s
_GDBusObjectIface	gdbusobject.h	/^struct _GDBusObjectIface$/;"	s
_GDBusObjectManagerClient	gdbusobjectmanagerclient.h	/^struct _GDBusObjectManagerClient$/;"	s
_GDBusObjectManagerClientClass	gdbusobjectmanagerclient.h	/^struct _GDBusObjectManagerClientClass$/;"	s
_GDBusObjectManagerIface	gdbusobjectmanager.h	/^struct _GDBusObjectManagerIface$/;"	s
_GDBusObjectManagerServer	gdbusobjectmanagerserver.h	/^struct _GDBusObjectManagerServer$/;"	s
_GDBusObjectManagerServerClass	gdbusobjectmanagerserver.h	/^struct _GDBusObjectManagerServerClass$/;"	s
_GDBusObjectProxy	gdbusobjectproxy.h	/^struct _GDBusObjectProxy$/;"	s
_GDBusObjectProxyClass	gdbusobjectproxy.h	/^struct _GDBusObjectProxyClass$/;"	s
_GDBusObjectSkeleton	gdbusobjectskeleton.h	/^struct _GDBusObjectSkeleton$/;"	s
_GDBusObjectSkeletonClass	gdbusobjectskeleton.h	/^struct _GDBusObjectSkeletonClass$/;"	s
_GDBusPropertyInfo	gdbusintrospection.h	/^struct _GDBusPropertyInfo$/;"	s
_GDBusProxy	gdbusproxy.h	/^struct _GDBusProxy$/;"	s
_GDBusProxyClass	gdbusproxy.h	/^struct _GDBusProxyClass$/;"	s
_GDBusSignalInfo	gdbusintrospection.h	/^struct _GDBusSignalInfo$/;"	s
_GDBusSubtreeVTable	gdbusconnection.h	/^struct _GDBusSubtreeVTable$/;"	s
_GDataInputStream	gdatainputstream.h	/^struct _GDataInputStream$/;"	s
_GDataInputStreamClass	gdatainputstream.h	/^struct _GDataInputStreamClass$/;"	s
_GDataOutputStream	gdataoutputstream.h	/^struct _GDataOutputStream$/;"	s
_GDataOutputStreamClass	gdataoutputstream.h	/^struct _GDataOutputStreamClass$/;"	s
_GDriveIface	gdrive.h	/^struct _GDriveIface$/;"	s
_GEmblemedIcon	gemblemedicon.h	/^struct _GEmblemedIcon$/;"	s
_GEmblemedIconClass	gemblemedicon.h	/^struct _GEmblemedIconClass$/;"	s
_GFileAttributeInfo	gfileattribute.h	/^struct _GFileAttributeInfo$/;"	s
_GFileAttributeInfoList	gfileattribute.h	/^struct _GFileAttributeInfoList$/;"	s
_GFileEnumerator	gfileenumerator.h	/^struct _GFileEnumerator$/;"	s
_GFileEnumeratorClass	gfileenumerator.h	/^struct _GFileEnumeratorClass$/;"	s
_GFileIOStream	gfileiostream.h	/^struct _GFileIOStream$/;"	s
_GFileIOStreamClass	gfileiostream.h	/^struct _GFileIOStreamClass$/;"	s
_GFileIface	gfile.h	/^struct _GFileIface$/;"	s
_GFileInputStream	gfileinputstream.h	/^struct _GFileInputStream$/;"	s
_GFileInputStreamClass	gfileinputstream.h	/^struct _GFileInputStreamClass$/;"	s
_GFileMonitor	gfilemonitor.h	/^struct _GFileMonitor$/;"	s
_GFileMonitorClass	gfilemonitor.h	/^struct _GFileMonitorClass$/;"	s
_GFileOutputStream	gfileoutputstream.h	/^struct _GFileOutputStream$/;"	s
_GFileOutputStreamClass	gfileoutputstream.h	/^struct _GFileOutputStreamClass$/;"	s
_GFilenameCompleterClass	gfilenamecompleter.h	/^struct _GFilenameCompleterClass$/;"	s
_GFilterInputStream	gfilterinputstream.h	/^struct _GFilterInputStream$/;"	s
_GFilterInputStreamClass	gfilterinputstream.h	/^struct _GFilterInputStreamClass$/;"	s
_GFilterOutputStream	gfilteroutputstream.h	/^struct _GFilterOutputStream$/;"	s
_GFilterOutputStreamClass	gfilteroutputstream.h	/^struct _GFilterOutputStreamClass$/;"	s
_GIOStream	giostream.h	/^struct _GIOStream$/;"	s
_GIOStreamClass	giostream.h	/^struct _GIOStreamClass$/;"	s
_GIconIface	gicon.h	/^struct _GIconIface$/;"	s
_GInetAddress	ginetaddress.h	/^struct _GInetAddress$/;"	s
_GInetAddressClass	ginetaddress.h	/^struct _GInetAddressClass$/;"	s
_GInetAddressMask	ginetaddressmask.h	/^struct _GInetAddressMask$/;"	s
_GInetAddressMaskClass	ginetaddressmask.h	/^struct _GInetAddressMaskClass$/;"	s
_GInetSocketAddress	ginetsocketaddress.h	/^struct _GInetSocketAddress$/;"	s
_GInetSocketAddressClass	ginetsocketaddress.h	/^struct _GInetSocketAddressClass$/;"	s
_GInitableIface	ginitable.h	/^struct _GInitableIface$/;"	s
_GInputStream	ginputstream.h	/^struct _GInputStream$/;"	s
_GInputStreamClass	ginputstream.h	/^struct _GInputStreamClass$/;"	s
_GInputVector	giotypes.h	/^struct _GInputVector {$/;"	s
_GLoadableIconIface	gloadableicon.h	/^struct _GLoadableIconIface$/;"	s
_GMemoryInputStream	gmemoryinputstream.h	/^struct _GMemoryInputStream$/;"	s
_GMemoryInputStreamClass	gmemoryinputstream.h	/^struct _GMemoryInputStreamClass$/;"	s
_GMemoryOutputStream	gmemoryoutputstream.h	/^struct _GMemoryOutputStream$/;"	s
_GMemoryOutputStreamClass	gmemoryoutputstream.h	/^struct _GMemoryOutputStreamClass$/;"	s
_GMenuAttributeIter	gmenumodel.h	/^struct _GMenuAttributeIter$/;"	s
_GMenuAttributeIterClass	gmenumodel.h	/^struct _GMenuAttributeIterClass$/;"	s
_GMenuLinkIter	gmenumodel.h	/^struct _GMenuLinkIter$/;"	s
_GMenuLinkIterClass	gmenumodel.h	/^struct _GMenuLinkIterClass$/;"	s
_GMenuModel	gmenumodel.h	/^struct _GMenuModel$/;"	s
_GMenuModelClass	gmenumodel.h	/^struct _GMenuModelClass$/;"	s
_GMountIface	gmount.h	/^struct _GMountIface$/;"	s
_GMountOperation	gmountoperation.h	/^struct _GMountOperation$/;"	s
_GMountOperationClass	gmountoperation.h	/^struct _GMountOperationClass$/;"	s
_GNativeVolumeMonitor	gnativevolumemonitor.h	/^struct _GNativeVolumeMonitor$/;"	s
_GNativeVolumeMonitorClass	gnativevolumemonitor.h	/^struct _GNativeVolumeMonitorClass$/;"	s
_GNetworkAddress	gnetworkaddress.h	/^struct _GNetworkAddress$/;"	s
_GNetworkAddressClass	gnetworkaddress.h	/^struct _GNetworkAddressClass$/;"	s
_GNetworkMonitorInterface	gnetworkmonitor.h	/^struct _GNetworkMonitorInterface {$/;"	s
_GNetworkService	gnetworkservice.h	/^struct _GNetworkService$/;"	s
_GNetworkServiceClass	gnetworkservice.h	/^struct _GNetworkServiceClass$/;"	s
_GOutputStream	goutputstream.h	/^struct _GOutputStream$/;"	s
_GOutputStreamClass	goutputstream.h	/^struct _GOutputStreamClass$/;"	s
_GOutputVector	giotypes.h	/^struct _GOutputVector {$/;"	s
_GPermission	gpermission.h	/^struct _GPermission$/;"	s
_GPermissionClass	gpermission.h	/^struct _GPermissionClass {$/;"	s
_GPollableInputStreamInterface	gpollableinputstream.h	/^struct _GPollableInputStreamInterface$/;"	s
_GPollableOutputStreamInterface	gpollableoutputstream.h	/^struct _GPollableOutputStreamInterface$/;"	s
_GProxyAddress	gproxyaddress.h	/^struct _GProxyAddress$/;"	s
_GProxyAddressClass	gproxyaddress.h	/^struct _GProxyAddressClass$/;"	s
_GProxyAddressEnumerator	gproxyaddressenumerator.h	/^struct _GProxyAddressEnumerator$/;"	s
_GProxyAddressEnumeratorClass	gproxyaddressenumerator.h	/^struct _GProxyAddressEnumeratorClass$/;"	s
_GProxyInterface	gproxy.h	/^struct _GProxyInterface$/;"	s
_GProxyResolverInterface	gproxyresolver.h	/^struct _GProxyResolverInterface {$/;"	s
_GRemoteActionGroupInterface	gremoteactiongroup.h	/^struct _GRemoteActionGroupInterface$/;"	s
_GResolver	gresolver.h	/^struct _GResolver {$/;"	s
_GResolverClass	gresolver.h	/^struct _GResolverClass {$/;"	s
_GSeekableIface	gseekable.h	/^struct _GSeekableIface$/;"	s
_GSettings	gsettings.h	/^struct _GSettings$/;"	s
_GSettingsBackend	gsettingsbackend.h	/^struct _GSettingsBackend$/;"	s
_GSettingsBackendClass	gsettingsbackend.h	/^struct _GSettingsBackendClass$/;"	s
_GSettingsClass	gsettings.h	/^struct _GSettingsClass$/;"	s
_GSimpleActionGroup	gsimpleactiongroup.h	/^struct _GSimpleActionGroup$/;"	s
_GSimpleActionGroupClass	gsimpleactiongroup.h	/^struct _GSimpleActionGroupClass$/;"	s
_GSocket	gsocket.h	/^struct _GSocket$/;"	s
_GSocketAddress	gsocketaddress.h	/^struct _GSocketAddress$/;"	s
_GSocketAddressClass	gsocketaddress.h	/^struct _GSocketAddressClass$/;"	s
_GSocketAddressEnumerator	gsocketaddressenumerator.h	/^struct _GSocketAddressEnumerator$/;"	s
_GSocketAddressEnumeratorClass	gsocketaddressenumerator.h	/^struct _GSocketAddressEnumeratorClass$/;"	s
_GSocketClass	gsocket.h	/^struct _GSocketClass$/;"	s
_GSocketClient	gsocketclient.h	/^struct _GSocketClient$/;"	s
_GSocketClientClass	gsocketclient.h	/^struct _GSocketClientClass$/;"	s
_GSocketConnectableIface	gsocketconnectable.h	/^struct _GSocketConnectableIface$/;"	s
_GSocketConnection	gsocketconnection.h	/^struct _GSocketConnection$/;"	s
_GSocketConnectionClass	gsocketconnection.h	/^struct _GSocketConnectionClass$/;"	s
_GSocketControlMessage	gsocketcontrolmessage.h	/^struct _GSocketControlMessage$/;"	s
_GSocketControlMessageClass	gsocketcontrolmessage.h	/^struct _GSocketControlMessageClass$/;"	s
_GSocketListener	gsocketlistener.h	/^struct _GSocketListener$/;"	s
_GSocketListenerClass	gsocketlistener.h	/^struct _GSocketListenerClass$/;"	s
_GSocketService	gsocketservice.h	/^struct _GSocketService$/;"	s
_GSocketServiceClass	gsocketservice.h	/^struct _GSocketServiceClass$/;"	s
_GStaticResource	gresource.h	/^struct _GStaticResource {$/;"	s
_GTcpConnection	gtcpconnection.h	/^struct _GTcpConnection$/;"	s
_GTcpConnectionClass	gtcpconnection.h	/^struct _GTcpConnectionClass$/;"	s
_GTcpWrapperConnection	gtcpwrapperconnection.h	/^struct _GTcpWrapperConnection$/;"	s
_GTcpWrapperConnectionClass	gtcpwrapperconnection.h	/^struct _GTcpWrapperConnectionClass$/;"	s
_GThreadedSocketService	gthreadedsocketservice.h	/^struct _GThreadedSocketService$/;"	s
_GThreadedSocketServiceClass	gthreadedsocketservice.h	/^struct _GThreadedSocketServiceClass$/;"	s
_GTlsBackendInterface	gtlsbackend.h	/^struct _GTlsBackendInterface$/;"	s
_GTlsCertificate	gtlscertificate.h	/^struct _GTlsCertificate {$/;"	s
_GTlsCertificateClass	gtlscertificate.h	/^struct _GTlsCertificateClass$/;"	s
_GTlsClientConnectionInterface	gtlsclientconnection.h	/^struct _GTlsClientConnectionInterface$/;"	s
_GTlsConnection	gtlsconnection.h	/^struct _GTlsConnection {$/;"	s
_GTlsConnectionClass	gtlsconnection.h	/^struct _GTlsConnectionClass$/;"	s
_GTlsDatabase	gtlsdatabase.h	/^struct _GTlsDatabase$/;"	s
_GTlsDatabaseClass	gtlsdatabase.h	/^struct _GTlsDatabaseClass$/;"	s
_GTlsFileDatabaseInterface	gtlsfiledatabase.h	/^struct _GTlsFileDatabaseInterface$/;"	s
_GTlsInteraction	gtlsinteraction.h	/^struct _GTlsInteraction$/;"	s
_GTlsInteractionClass	gtlsinteraction.h	/^struct _GTlsInteractionClass$/;"	s
_GTlsPassword	gtlspassword.h	/^struct _GTlsPassword$/;"	s
_GTlsPasswordClass	gtlspassword.h	/^struct _GTlsPasswordClass$/;"	s
_GTlsPasswordFlags	gioenums.h	/^typedef enum _GTlsPasswordFlags$/;"	g
_GTlsServerConnectionInterface	gtlsserverconnection.h	/^struct _GTlsServerConnectionInterface$/;"	s
_GVfs	gvfs.h	/^struct _GVfs$/;"	s
_GVfsClass	gvfs.h	/^struct _GVfsClass$/;"	s
_GVolumeIface	gvolume.h	/^struct _GVolumeIface$/;"	s
_GVolumeMonitor	gvolumemonitor.h	/^struct _GVolumeMonitor$/;"	s
_GVolumeMonitorClass	gvolumemonitor.h	/^struct _GVolumeMonitorClass$/;"	s
_GZlibCompressorClass	gzlibcompressor.h	/^struct _GZlibCompressorClass$/;"	s
_GZlibDecompressorClass	gzlibdecompressor.h	/^struct _GZlibDecompressorClass$/;"	s
__GIO_ENUMS_H__	gioenums.h	28;"	d
__GIO_ENUM_TYPES_H__	gioenumtypes.h	5;"	d
__GIO_GIO_H_INSIDE__	gio.h	157;"	d
__GIO_GIO_H_INSIDE__	gio.h	26;"	d
__GIO_GIO_H_INSIDE__	gsettingsbackend.h	31;"	d
__GIO_GIO_H_INSIDE__	gsettingsbackend.h	33;"	d
__GIO_TYPES_H__	giotypes.h	28;"	d
__G_ACTION_GROUP_EXPORTER_H__	gactiongroupexporter.h	29;"	d
__G_ACTION_GROUP_H__	gactiongroup.h	27;"	d
__G_ACTION_H__	gaction.h	27;"	d
__G_ACTION_MAP_H__	gactionmap.h	27;"	d
__G_APPLICATION_COMMAND_LINE_H__	gapplicationcommandline.h	28;"	d
__G_APPLICATION_H__	gapplication.h	27;"	d
__G_APP_INFO_H__	gappinfo.h	28;"	d
__G_ASYNC_INITABLE_H__	gasyncinitable.h	28;"	d
__G_ASYNC_RESULT_H__	gasyncresult.h	28;"	d
__G_BUFFERED_INPUT_STREAM_H__	gbufferedinputstream.h	28;"	d
__G_BUFFERED_OUTPUT_STREAM_H__	gbufferedoutputstream.h	28;"	d
__G_CANCELLABLE_H__	gcancellable.h	28;"	d
__G_CHARSET_CONVERTER_H__	gcharsetconverter.h	28;"	d
__G_CONTENT_TYPE_H__	gcontenttype.h	28;"	d
__G_CONVERTER_H__	gconverter.h	28;"	d
__G_CONVERTER_INPUT_STREAM_H__	gconverterinputstream.h	28;"	d
__G_CONVERTER_OUTPUT_STREAM_H__	gconverteroutputstream.h	28;"	d
__G_CREDENTIALS_H__	gcredentials.h	28;"	d
__G_DATA_INPUT_STREAM_H__	gdatainputstream.h	28;"	d
__G_DATA_OUTPUT_STREAM_H__	gdataoutputstream.h	28;"	d
__G_DBUS_ACTION_GROUP_H__	gdbusactiongroup.h	28;"	d
__G_DBUS_ADDRESS_H__	gdbusaddress.h	28;"	d
__G_DBUS_AUTH_OBSERVER_H__	gdbusauthobserver.h	28;"	d
__G_DBUS_CONNECTION_H__	gdbusconnection.h	28;"	d
__G_DBUS_ERROR_H__	gdbuserror.h	28;"	d
__G_DBUS_INTERFACE_H__	gdbusinterface.h	24;"	d
__G_DBUS_INTERFACE_SKELETON_H__	gdbusinterfaceskeleton.h	24;"	d
__G_DBUS_INTROSPECTION_H__	gdbusintrospection.h	28;"	d
__G_DBUS_MENU_MODEL_H__	gdbusmenumodel.h	23;"	d
__G_DBUS_MESSAGE_H__	gdbusmessage.h	28;"	d
__G_DBUS_METHOD_INVOCATION_H__	gdbusmethodinvocation.h	28;"	d
__G_DBUS_NAME_OWNING_H__	gdbusnameowning.h	28;"	d
__G_DBUS_NAME_WATCHING_H__	gdbusnamewatching.h	28;"	d
__G_DBUS_OBJECT_H__	gdbusobject.h	24;"	d
__G_DBUS_OBJECT_MANAGER_CLIENT_H__	gdbusobjectmanagerclient.h	24;"	d
__G_DBUS_OBJECT_MANAGER_H__	gdbusobjectmanager.h	24;"	d
__G_DBUS_OBJECT_MANAGER_SERVER_H__	gdbusobjectmanagerserver.h	24;"	d
__G_DBUS_OBJECT_PROXY_H__	gdbusobjectproxy.h	24;"	d
__G_DBUS_OBJECT_SKELETON_H__	gdbusobjectskeleton.h	24;"	d
__G_DBUS_PROXY_H__	gdbusproxy.h	28;"	d
__G_DBUS_SERVER_H__	gdbusserver.h	28;"	d
__G_DBUS_UTILS_H__	gdbusutils.h	28;"	d
__G_DRIVE_H__	gdrive.h	29;"	d
__G_EMBLEMED_ICON_H__	gemblemedicon.h	29;"	d
__G_EMBLEM_H__	gemblem.h	27;"	d
__G_FILENAME_COMPLETER_H__	gfilenamecompleter.h	28;"	d
__G_FILE_ATTRIBUTE_H__	gfileattribute.h	28;"	d
__G_FILE_ENUMERATOR_H__	gfileenumerator.h	28;"	d
__G_FILE_H__	gfile.h	28;"	d
__G_FILE_ICON_H__	gfileicon.h	28;"	d
__G_FILE_INFO_H__	gfileinfo.h	28;"	d
__G_FILE_INPUT_STREAM_H__	gfileinputstream.h	28;"	d
__G_FILE_IO_STREAM_H__	gfileiostream.h	28;"	d
__G_FILE_MONITOR_H__	gfilemonitor.h	28;"	d
__G_FILE_OUTPUT_STREAM_H__	gfileoutputstream.h	28;"	d
__G_FILTER_INPUT_STREAM_H__	gfilterinputstream.h	28;"	d
__G_FILTER_OUTPUT_STREAM_H__	gfilteroutputstream.h	28;"	d
__G_ICON_H__	gicon.h	28;"	d
__G_INET_ADDRESS_H__	ginetaddress.h	29;"	d
__G_INET_ADDRESS_MASK_H__	ginetaddressmask.h	26;"	d
__G_INET_SOCKET_ADDRESS_H__	ginetsocketaddress.h	29;"	d
__G_INITABLE_H__	ginitable.h	28;"	d
__G_INPUT_STREAM_H__	ginputstream.h	28;"	d
__G_IO_ERROR_H__	gioerror.h	28;"	d
__G_IO_H__	gio.h	24;"	d
__G_IO_MODULE_H__	giomodule.h	28;"	d
__G_IO_SCHEDULER_H__	gioscheduler.h	28;"	d
__G_IO_STREAM_H__	giostream.h	22;"	d
__G_LOADABLE_ICON_H__	gloadableicon.h	28;"	d
__G_MEMORY_INPUT_STREAM_H__	gmemoryinputstream.h	28;"	d
__G_MEMORY_OUTPUT_STREAM_H__	gmemoryoutputstream.h	28;"	d
__G_MENU_EXPORTER_H__	gmenuexporter.h	23;"	d
__G_MENU_H__	gmenu.h	23;"	d
__G_MENU_MODEL_H__	gmenumodel.h	23;"	d
__G_MOUNT_H__	gmount.h	29;"	d
__G_MOUNT_OPERATION_H__	gmountoperation.h	28;"	d
__G_NATIVE_VOLUME_MONITOR_H__	gnativevolumemonitor.h	28;"	d
__G_NETWORK_ADDRESS_H__	gnetworkaddress.h	26;"	d
__G_NETWORK_MONITOR_H__	gnetworkmonitor.h	26;"	d
__G_NETWORK_SERVICE_H__	gnetworkservice.h	26;"	d
__G_OUTPUT_STREAM_H__	goutputstream.h	28;"	d
__G_PERMISSION_H__	gpermission.h	27;"	d
__G_POLLABLE_INPUT_STREAM_H__	gpollableinputstream.h	22;"	d
__G_POLLABLE_OUTPUT_STREAM_H__	gpollableoutputstream.h	22;"	d
__G_PROXY_ADDRESS_ENUMERATOR_H__	gproxyaddressenumerator.h	28;"	d
__G_PROXY_ADDRESS_H__	gproxyaddress.h	28;"	d
__G_PROXY_H__	gproxy.h	30;"	d
__G_PROXY_RESOLVER_H__	gproxyresolver.h	28;"	d
__G_REMOTE_ACTION_GROUP_H__	gremoteactiongroup.h	27;"	d
__G_RESOLVER_H__	gresolver.h	26;"	d
__G_RESOURCE_H__	gresource.h	28;"	d
__G_SEEKABLE_H__	gseekable.h	28;"	d
__G_SETTINGS_BACKEND_H__	gsettingsbackend.h	25;"	d
__G_SETTINGS_H__	gsettings.h	27;"	d
__G_SETTINGS_SCHEMA_H__	gsettingsschema.h	22;"	d
__G_SIMPLE_ACTION_GROUP_H__	gsimpleactiongroup.h	27;"	d
__G_SIMPLE_ACTION_H__	gsimpleaction.h	27;"	d
__G_SIMPLE_ASYNC_RESULT_H__	gsimpleasyncresult.h	28;"	d
__G_SIMPLE_PERMISSION_H__	gsimplepermission.h	27;"	d
__G_SOCKET_ADDRESS_ENUMERATOR_H__	gsocketaddressenumerator.h	26;"	d
__G_SOCKET_ADDRESS_H__	gsocketaddress.h	29;"	d
__G_SOCKET_CLIENT_H__	gsocketclient.h	30;"	d
__G_SOCKET_CONNECTABLE_H__	gsocketconnectable.h	26;"	d
__G_SOCKET_CONNECTION_H__	gsocketconnection.h	31;"	d
__G_SOCKET_CONTROL_MESSAGE_H__	gsocketcontrolmessage.h	28;"	d
__G_SOCKET_H__	gsocket.h	30;"	d
__G_SOCKET_LISTENER_H__	gsocketlistener.h	33;"	d
__G_SOCKET_SERVICE_H__	gsocketservice.h	30;"	d
__G_SRV_TARGET_H__	gsrvtarget.h	26;"	d
__G_TCP_CONNECTION_H__	gtcpconnection.h	28;"	d
__G_TCP_WRAPPER_CONNECTION_H__	gtcpwrapperconnection.h	28;"	d
__G_THEMED_ICON_H__	gthemedicon.h	28;"	d
__G_THREADED_SOCKET_SERVICE_H__	gthreadedsocketservice.h	30;"	d
__G_TLS_BACKEND_H__	gtlsbackend.h	26;"	d
__G_TLS_CERTIFICATE_H__	gtlscertificate.h	26;"	d
__G_TLS_CLIENT_CONNECTION_H__	gtlsclientconnection.h	26;"	d
__G_TLS_CONNECTION_H__	gtlsconnection.h	26;"	d
__G_TLS_DATABASE_H__	gtlsdatabase.h	28;"	d
__G_TLS_FILE_DATABASE_H__	gtlsfiledatabase.h	20;"	d
__G_TLS_INTERACTION_H__	gtlsinteraction.h	28;"	d
__G_TLS_PASSWORD_H__	gtlspassword.h	28;"	d
__G_TLS_SERVER_CONNECTION_H__	gtlsserverconnection.h	26;"	d
__G_VFS_H__	gvfs.h	28;"	d
__G_VOLUME_H__	gvolume.h	29;"	d
__G_VOLUME_MONITOR_H__	gvolumemonitor.h	31;"	d
__G_ZLIB_COMPRESSOR_H__	gzlibcompressor.h	28;"	d
__G_ZLIB_DECOMPRESSOR_H__	gzlibdecompressor.h	28;"	d
_delete_file_async	gfile.h	/^  void                (* _delete_file_async)          (void);$/;"	m	struct:_GFileIface
_delete_file_finish	gfile.h	/^  void                (* _delete_file_finish)         (void);$/;"	m	struct:_GFileIface
_g_reserved1	gappinfo.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GAppLaunchContextClass
_g_reserved1	gbufferedinputstream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GBufferedInputStreamClass
_g_reserved1	gbufferedoutputstream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GBufferedOutputStreamClass
_g_reserved1	gcancellable.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GCancellableClass
_g_reserved1	gconverterinputstream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GConverterInputStreamClass
_g_reserved1	gconverteroutputstream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GConverterOutputStreamClass
_g_reserved1	gdatainputstream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GDataInputStreamClass
_g_reserved1	gdataoutputstream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GDataOutputStreamClass
_g_reserved1	gfileenumerator.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GFileEnumeratorClass
_g_reserved1	gfileinputstream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GFileInputStreamClass
_g_reserved1	gfileiostream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GFileIOStreamClass
_g_reserved1	gfilemonitor.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GFileMonitorClass
_g_reserved1	gfilenamecompleter.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GFilenameCompleterClass
_g_reserved1	gfileoutputstream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GFileOutputStreamClass
_g_reserved1	gfilterinputstream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GFilterInputStreamClass
_g_reserved1	gfilteroutputstream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GFilterOutputStreamClass
_g_reserved1	ginputstream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GInputStreamClass
_g_reserved1	giostream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GIOStreamClass
_g_reserved1	gmemoryinputstream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GMemoryInputStreamClass
_g_reserved1	gmemoryoutputstream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GMemoryOutputStreamClass
_g_reserved1	gmountoperation.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GMountOperationClass
_g_reserved1	goutputstream.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GOutputStreamClass
_g_reserved1	gproxyaddressenumerator.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GProxyAddressEnumeratorClass
_g_reserved1	gresolver.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GResolverClass
_g_reserved1	gsocket.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GSocketClass
_g_reserved1	gsocketclient.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GSocketClientClass
_g_reserved1	gsocketconnection.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GSocketConnectionClass
_g_reserved1	gsocketcontrolmessage.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GSocketControlMessageClass
_g_reserved1	gsocketlistener.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GSocketListenerClass
_g_reserved1	gsocketservice.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GSocketServiceClass
_g_reserved1	gthreadedsocketservice.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GThreadedSocketServiceClass
_g_reserved1	gvfs.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GVfsClass
_g_reserved1	gvolumemonitor.h	/^  void (*_g_reserved1) (void);$/;"	m	struct:_GVolumeMonitorClass
_g_reserved10	giostream.h	/^  void (*_g_reserved10) (void);$/;"	m	struct:_GIOStreamClass
_g_reserved10	gmountoperation.h	/^  void (*_g_reserved10) (void);$/;"	m	struct:_GMountOperationClass
_g_reserved10	gsocket.h	/^  void (*_g_reserved10) (void);$/;"	m	struct:_GSocketClass
_g_reserved2	gappinfo.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GAppLaunchContextClass
_g_reserved2	gbufferedinputstream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GBufferedInputStreamClass
_g_reserved2	gbufferedoutputstream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GBufferedOutputStreamClass
_g_reserved2	gcancellable.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GCancellableClass
_g_reserved2	gconverterinputstream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GConverterInputStreamClass
_g_reserved2	gconverteroutputstream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GConverterOutputStreamClass
_g_reserved2	gdatainputstream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GDataInputStreamClass
_g_reserved2	gdataoutputstream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GDataOutputStreamClass
_g_reserved2	gfileenumerator.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GFileEnumeratorClass
_g_reserved2	gfileinputstream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GFileInputStreamClass
_g_reserved2	gfileiostream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GFileIOStreamClass
_g_reserved2	gfilemonitor.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GFileMonitorClass
_g_reserved2	gfilenamecompleter.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GFilenameCompleterClass
_g_reserved2	gfileoutputstream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GFileOutputStreamClass
_g_reserved2	gfilterinputstream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GFilterInputStreamClass
_g_reserved2	gfilteroutputstream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GFilterOutputStreamClass
_g_reserved2	ginputstream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GInputStreamClass
_g_reserved2	giostream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GIOStreamClass
_g_reserved2	gmemoryinputstream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GMemoryInputStreamClass
_g_reserved2	gmemoryoutputstream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GMemoryOutputStreamClass
_g_reserved2	gmountoperation.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GMountOperationClass
_g_reserved2	goutputstream.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GOutputStreamClass
_g_reserved2	gproxyaddressenumerator.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GProxyAddressEnumeratorClass
_g_reserved2	gresolver.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GResolverClass
_g_reserved2	gsocket.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GSocketClass
_g_reserved2	gsocketclient.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GSocketClientClass
_g_reserved2	gsocketconnection.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GSocketConnectionClass
_g_reserved2	gsocketcontrolmessage.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GSocketControlMessageClass
_g_reserved2	gsocketlistener.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GSocketListenerClass
_g_reserved2	gsocketservice.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GSocketServiceClass
_g_reserved2	gthreadedsocketservice.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GThreadedSocketServiceClass
_g_reserved2	gvfs.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GVfsClass
_g_reserved2	gvolumemonitor.h	/^  void (*_g_reserved2) (void);$/;"	m	struct:_GVolumeMonitorClass
_g_reserved3	gappinfo.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GAppLaunchContextClass
_g_reserved3	gbufferedinputstream.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GBufferedInputStreamClass
_g_reserved3	gcancellable.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GCancellableClass
_g_reserved3	gconverterinputstream.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GConverterInputStreamClass
_g_reserved3	gconverteroutputstream.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GConverterOutputStreamClass
_g_reserved3	gdatainputstream.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GDataInputStreamClass
_g_reserved3	gdataoutputstream.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GDataOutputStreamClass
_g_reserved3	gfileenumerator.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GFileEnumeratorClass
_g_reserved3	gfileinputstream.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GFileInputStreamClass
_g_reserved3	gfileiostream.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GFileIOStreamClass
_g_reserved3	gfilemonitor.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GFileMonitorClass
_g_reserved3	gfilenamecompleter.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GFilenameCompleterClass
_g_reserved3	gfileoutputstream.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GFileOutputStreamClass
_g_reserved3	gfilterinputstream.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GFilterInputStreamClass
_g_reserved3	gfilteroutputstream.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GFilterOutputStreamClass
_g_reserved3	ginputstream.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GInputStreamClass
_g_reserved3	giostream.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GIOStreamClass
_g_reserved3	gmemoryinputstream.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GMemoryInputStreamClass
_g_reserved3	gmemoryoutputstream.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GMemoryOutputStreamClass
_g_reserved3	gmountoperation.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GMountOperationClass
_g_reserved3	goutputstream.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GOutputStreamClass
_g_reserved3	gproxyaddressenumerator.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GProxyAddressEnumeratorClass
_g_reserved3	gresolver.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GResolverClass
_g_reserved3	gsocket.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GSocketClass
_g_reserved3	gsocketclient.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GSocketClientClass
_g_reserved3	gsocketconnection.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GSocketConnectionClass
_g_reserved3	gsocketcontrolmessage.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GSocketControlMessageClass
_g_reserved3	gsocketlistener.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GSocketListenerClass
_g_reserved3	gsocketservice.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GSocketServiceClass
_g_reserved3	gthreadedsocketservice.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GThreadedSocketServiceClass
_g_reserved3	gvfs.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GVfsClass
_g_reserved3	gvolumemonitor.h	/^  void (*_g_reserved3) (void);$/;"	m	struct:_GVolumeMonitorClass
_g_reserved4	gappinfo.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GAppLaunchContextClass
_g_reserved4	gbufferedinputstream.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GBufferedInputStreamClass
_g_reserved4	gcancellable.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GCancellableClass
_g_reserved4	gconverterinputstream.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GConverterInputStreamClass
_g_reserved4	gconverteroutputstream.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GConverterOutputStreamClass
_g_reserved4	gdatainputstream.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GDataInputStreamClass
_g_reserved4	gdataoutputstream.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GDataOutputStreamClass
_g_reserved4	gfileenumerator.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GFileEnumeratorClass
_g_reserved4	gfileinputstream.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GFileInputStreamClass
_g_reserved4	gfileiostream.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GFileIOStreamClass
_g_reserved4	gfilemonitor.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GFileMonitorClass
_g_reserved4	gfileoutputstream.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GFileOutputStreamClass
_g_reserved4	ginputstream.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GInputStreamClass
_g_reserved4	giostream.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GIOStreamClass
_g_reserved4	gmemoryinputstream.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GMemoryInputStreamClass
_g_reserved4	gmemoryoutputstream.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GMemoryOutputStreamClass
_g_reserved4	gmountoperation.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GMountOperationClass
_g_reserved4	goutputstream.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GOutputStreamClass
_g_reserved4	gproxyaddressenumerator.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GProxyAddressEnumeratorClass
_g_reserved4	gresolver.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GResolverClass
_g_reserved4	gsocket.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GSocketClass
_g_reserved4	gsocketclient.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GSocketClientClass
_g_reserved4	gsocketconnection.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GSocketConnectionClass
_g_reserved4	gsocketcontrolmessage.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GSocketControlMessageClass
_g_reserved4	gsocketlistener.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GSocketListenerClass
_g_reserved4	gsocketservice.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GSocketServiceClass
_g_reserved4	gthreadedsocketservice.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GThreadedSocketServiceClass
_g_reserved4	gvfs.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GVfsClass
_g_reserved4	gvolumemonitor.h	/^  void (*_g_reserved4) (void);$/;"	m	struct:_GVolumeMonitorClass
_g_reserved5	gappinfo.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GAppLaunchContextClass
_g_reserved5	gbufferedinputstream.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GBufferedInputStreamClass
_g_reserved5	gcancellable.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GCancellableClass
_g_reserved5	gconverterinputstream.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GConverterInputStreamClass
_g_reserved5	gconverteroutputstream.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GConverterOutputStreamClass
_g_reserved5	gdatainputstream.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GDataInputStreamClass
_g_reserved5	gdataoutputstream.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GDataOutputStreamClass
_g_reserved5	gfileenumerator.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GFileEnumeratorClass
_g_reserved5	gfileinputstream.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GFileInputStreamClass
_g_reserved5	gfileiostream.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GFileIOStreamClass
_g_reserved5	gfilemonitor.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GFileMonitorClass
_g_reserved5	gfileoutputstream.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GFileOutputStreamClass
_g_reserved5	ginputstream.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GInputStreamClass
_g_reserved5	giostream.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GIOStreamClass
_g_reserved5	gmemoryinputstream.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GMemoryInputStreamClass
_g_reserved5	gmemoryoutputstream.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GMemoryOutputStreamClass
_g_reserved5	gmountoperation.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GMountOperationClass
_g_reserved5	goutputstream.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GOutputStreamClass
_g_reserved5	gproxyaddressenumerator.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GProxyAddressEnumeratorClass
_g_reserved5	gresolver.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GResolverClass
_g_reserved5	gsocket.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GSocketClass
_g_reserved5	gsocketconnection.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GSocketConnectionClass
_g_reserved5	gsocketcontrolmessage.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GSocketControlMessageClass
_g_reserved5	gsocketlistener.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GSocketListenerClass
_g_reserved5	gsocketservice.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GSocketServiceClass
_g_reserved5	gthreadedsocketservice.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GThreadedSocketServiceClass
_g_reserved5	gvfs.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GVfsClass
_g_reserved5	gvolumemonitor.h	/^  void (*_g_reserved5) (void);$/;"	m	struct:_GVolumeMonitorClass
_g_reserved6	gfileenumerator.h	/^  void (*_g_reserved6) (void);$/;"	m	struct:_GFileEnumeratorClass
_g_reserved6	giostream.h	/^  void (*_g_reserved6) (void);$/;"	m	struct:_GIOStreamClass
_g_reserved6	gmountoperation.h	/^  void (*_g_reserved6) (void);$/;"	m	struct:_GMountOperationClass
_g_reserved6	goutputstream.h	/^  void (*_g_reserved6) (void);$/;"	m	struct:_GOutputStreamClass
_g_reserved6	gproxyaddressenumerator.h	/^  void (*_g_reserved6) (void);$/;"	m	struct:_GProxyAddressEnumeratorClass
_g_reserved6	gresolver.h	/^  void (*_g_reserved6) (void);$/;"	m	struct:_GResolverClass
_g_reserved6	gsocket.h	/^  void (*_g_reserved6) (void);$/;"	m	struct:_GSocketClass
_g_reserved6	gsocketconnection.h	/^  void (*_g_reserved6) (void);$/;"	m	struct:_GSocketConnectionClass
_g_reserved6	gsocketlistener.h	/^  void (*_g_reserved6) (void);$/;"	m	struct:_GSocketListenerClass
_g_reserved6	gsocketservice.h	/^  void (*_g_reserved6) (void);$/;"	m	struct:_GSocketServiceClass
_g_reserved6	gvfs.h	/^  void (*_g_reserved6) (void);$/;"	m	struct:_GVfsClass
_g_reserved6	gvolumemonitor.h	/^  void (*_g_reserved6) (void);$/;"	m	struct:_GVolumeMonitorClass
_g_reserved7	gfileenumerator.h	/^  void (*_g_reserved7) (void);$/;"	m	struct:_GFileEnumeratorClass
_g_reserved7	giostream.h	/^  void (*_g_reserved7) (void);$/;"	m	struct:_GIOStreamClass
_g_reserved7	gmountoperation.h	/^  void (*_g_reserved7) (void);$/;"	m	struct:_GMountOperationClass
_g_reserved7	goutputstream.h	/^  void (*_g_reserved7) (void);$/;"	m	struct:_GOutputStreamClass
_g_reserved7	gproxyaddressenumerator.h	/^  void (*_g_reserved7) (void);$/;"	m	struct:_GProxyAddressEnumeratorClass
_g_reserved7	gsocket.h	/^  void (*_g_reserved7) (void);$/;"	m	struct:_GSocketClass
_g_reserved7	gvfs.h	/^  void (*_g_reserved7) (void);$/;"	m	struct:_GVfsClass
_g_reserved8	giostream.h	/^  void (*_g_reserved8) (void);$/;"	m	struct:_GIOStreamClass
_g_reserved8	gmountoperation.h	/^  void (*_g_reserved8) (void);$/;"	m	struct:_GMountOperationClass
_g_reserved8	goutputstream.h	/^  void (*_g_reserved8) (void);$/;"	m	struct:_GOutputStreamClass
_g_reserved8	gsocket.h	/^  void (*_g_reserved8) (void);$/;"	m	struct:_GSocketClass
_g_reserved9	giostream.h	/^  void (*_g_reserved9) (void);$/;"	m	struct:_GIOStreamClass
_g_reserved9	gmountoperation.h	/^  void (*_g_reserved9) (void);$/;"	m	struct:_GMountOperationClass
_g_reserved9	gsocket.h	/^  void (*_g_reserved9) (void);$/;"	m	struct:_GSocketClass
_make_directory_async	gfile.h	/^  void                (* _make_directory_async)       (void);$/;"	m	struct:_GFileIface
_make_directory_finish	gfile.h	/^  void                (* _make_directory_finish)      (void);$/;"	m	struct:_GFileIface
_make_symbolic_link_async	gfile.h	/^  void                (* _make_symbolic_link_async)   (void);$/;"	m	struct:_GFileIface
_make_symbolic_link_finish	gfile.h	/^  void                (* _make_symbolic_link_finish)  (void);$/;"	m	struct:_GFileIface
_move_async	gfile.h	/^  void                (* _move_async)                 (void);$/;"	m	struct:_GFileIface
_move_finish	gfile.h	/^  void                (* _move_finish)                (void);$/;"	m	struct:_GFileIface
_query_settable_attributes_async	gfile.h	/^  void                (* _query_settable_attributes_async)  (void);$/;"	m	struct:_GFileIface
_query_settable_attributes_finish	gfile.h	/^  void                (* _query_settable_attributes_finish) (void);$/;"	m	struct:_GFileIface
_query_writable_namespaces_async	gfile.h	/^  void                (* _query_writable_namespaces_async)  (void);$/;"	m	struct:_GFileIface
_query_writable_namespaces_finish	gfile.h	/^  void                (* _query_writable_namespaces_finish) (void);$/;"	m	struct:_GFileIface
_trash_async	gfile.h	/^  void                (* _trash_async)                (void);$/;"	m	struct:_GFileIface
_trash_finish	gfile.h	/^  void                (* _trash_finish)               (void);$/;"	m	struct:_GFileIface
aborted	gmountoperation.h	/^  void (* aborted)      (GMountOperation       *op);$/;"	m	struct:_GMountOperationClass
accept_certificate	gtlsconnection.h	/^  gboolean          ( *accept_certificate) (GTlsConnection       *connection,$/;"	m	struct:_GTlsConnectionClass
acquire	gpermission.h	/^  gboolean (*acquire)        (GPermission          *permission,$/;"	m	struct:_GPermissionClass
acquire_async	gpermission.h	/^  void     (*acquire_async)  (GPermission          *permission,$/;"	m	struct:_GPermissionClass
acquire_finish	gpermission.h	/^  gboolean (*acquire_finish) (GPermission          *permission,$/;"	m	struct:_GPermissionClass
action_added	gactiongroup.h	/^  void                  (* action_added)               (GActionGroup  *action_group,$/;"	m	struct:_GActionGroupInterface
action_enabled_changed	gactiongroup.h	/^  void                  (* action_enabled_changed)     (GActionGroup  *action_group,$/;"	m	struct:_GActionGroupInterface
action_removed	gactiongroup.h	/^  void                  (* action_removed)             (GActionGroup  *action_group,$/;"	m	struct:_GActionGroupInterface
action_state_changed	gactiongroup.h	/^  void                  (* action_state_changed)       (GActionGroup   *action_group,$/;"	m	struct:_GActionGroupInterface
activate	gaction.h	/^  void                 (* activate)             (GAction  *action,$/;"	m	struct:_GActionInterface
activate	gactionmap.h	/^  void (* activate) (GSimpleAction *action,$/;"	m	struct:_GActionEntry
activate	gapplication.h	/^  void                      (* activate)            (GApplication              *application);$/;"	m	struct:_GApplicationClass
activate_action	gactiongroup.h	/^  void                  (* activate_action)            (GActionGroup  *action_group,$/;"	m	struct:_GActionGroupInterface
activate_action_full	gremoteactiongroup.h	/^  void (* activate_action_full)     (GRemoteActionGroup *remote,$/;"	m	struct:_GRemoteActionGroupInterface
add_action	gactionmap.h	/^  void      (* add_action)    (GActionMap  *action_map,$/;"	m	struct:_GActionMapInterface
add_platform_data	gapplication.h	/^  void                      (* add_platform_data)   (GApplication              *application,$/;"	m	struct:_GApplicationClass
add_supports_type	gappinfo.h	/^  gboolean     (* add_supports_type)            (GAppInfo           *appinfo,$/;"	m	struct:_GAppInfoIface
add_writable_namespaces	gvfs.h	/^  void                  (* add_writable_namespaces)   (GVfs       *vfs,$/;"	m	struct:_GVfsClass
adopt_orphan_mount	gvolumemonitor.h	/^  GVolume * (* adopt_orphan_mount)   (GMount         *mount,$/;"	m	struct:_GVolumeMonitorClass
after_emit	gapplication.h	/^  void                      (* after_emit)          (GApplication              *application,$/;"	m	struct:_GApplicationClass
annotations	gdbusintrospection.h	/^  GDBusAnnotationInfo     **annotations;$/;"	m	struct:_GDBusPropertyInfo
annotations	gdbusintrospection.h	/^  GDBusAnnotationInfo **annotations;$/;"	m	struct:_GDBusAnnotationInfo
annotations	gdbusintrospection.h	/^  GDBusAnnotationInfo **annotations;$/;"	m	struct:_GDBusArgInfo
annotations	gdbusintrospection.h	/^  GDBusAnnotationInfo **annotations;$/;"	m	struct:_GDBusInterfaceInfo
annotations	gdbusintrospection.h	/^  GDBusAnnotationInfo **annotations;$/;"	m	struct:_GDBusMethodInfo
annotations	gdbusintrospection.h	/^  GDBusAnnotationInfo **annotations;$/;"	m	struct:_GDBusNodeInfo
annotations	gdbusintrospection.h	/^  GDBusAnnotationInfo **annotations;$/;"	m	struct:_GDBusSignalInfo
append_to	gfile.h	/^  GFileOutputStream * (* append_to)                   (GFile                *file,$/;"	m	struct:_GFileIface
append_to_async	gfile.h	/^  void                (* append_to_async)             (GFile                *file,$/;"	m	struct:_GFileIface
append_to_finish	gfile.h	/^  GFileOutputStream * (* append_to_finish)            (GFile                *file,$/;"	m	struct:_GFileIface
args	gdbusintrospection.h	/^  GDBusArgInfo        **args;$/;"	m	struct:_GDBusSignalInfo
ask_password	gmountoperation.h	/^  void (* ask_password) (GMountOperation       *op,$/;"	m	struct:_GMountOperationClass
ask_password	gtlsinteraction.h	/^  GTlsInteractionResult  (* ask_password)        (GTlsInteraction    *interaction,$/;"	m	struct:_GTlsInteractionClass
ask_password_async	gtlsinteraction.h	/^  void                   (* ask_password_async)  (GTlsInteraction    *interaction,$/;"	m	struct:_GTlsInteractionClass
ask_password_finish	gtlsinteraction.h	/^  GTlsInteractionResult  (* ask_password_finish) (GTlsInteraction    *interaction,$/;"	m	struct:_GTlsInteractionClass
ask_question	gmountoperation.h	/^  void (* ask_question) (GMountOperation       *op,$/;"	m	struct:_GMountOperationClass
authorize_method	gdbusobjectskeleton.h	/^  gboolean (*authorize_method) (GDBusObjectSkeleton       *object,$/;"	m	struct:_GDBusObjectSkeletonClass
base_stream	gfilterinputstream.h	/^  GInputStream *base_stream;$/;"	m	struct:_GFilterInputStream
base_stream	gfilteroutputstream.h	/^  GOutputStream *base_stream;$/;"	m	struct:_GFilterOutputStream
before_emit	gapplication.h	/^  void                      (* before_emit)         (GApplication              *application,$/;"	m	struct:_GApplicationClass
buffer	giotypes.h	/^  gconstpointer buffer;$/;"	m	struct:_GOutputVector
buffer	giotypes.h	/^  gpointer buffer;$/;"	m	struct:_GInputVector
can_delete	gappinfo.h	/^  gboolean     (* can_delete)                   (GAppInfo           *appinfo);$/;"	m	struct:_GAppInfoIface
can_eject	gdrive.h	/^  gboolean (* can_eject)                (GDrive              *drive);$/;"	m	struct:_GDriveIface
can_eject	gmount.h	/^  gboolean    (* can_eject)                 (GMount              *mount);$/;"	m	struct:_GMountIface
can_eject	gvolume.h	/^  gboolean    (* can_eject)             (GVolume             *volume);$/;"	m	struct:_GVolumeIface
can_mount	gvolume.h	/^  gboolean    (* can_mount)             (GVolume             *volume);$/;"	m	struct:_GVolumeIface
can_poll	gpollableinputstream.h	/^  gboolean     (*can_poll)         (GPollableInputStream  *stream);$/;"	m	struct:_GPollableInputStreamInterface
can_poll	gpollableoutputstream.h	/^  gboolean     (*can_poll)          (GPollableOutputStream  *stream);$/;"	m	struct:_GPollableOutputStreamInterface
can_poll_for_media	gdrive.h	/^  gboolean (* can_poll_for_media)       (GDrive              *drive);$/;"	m	struct:_GDriveIface
can_reach	gnetworkmonitor.h	/^  gboolean (*can_reach)        (GNetworkMonitor      *monitor,$/;"	m	struct:_GNetworkMonitorInterface
can_reach_async	gnetworkmonitor.h	/^  void     (*can_reach_async)  (GNetworkMonitor      *monitor,$/;"	m	struct:_GNetworkMonitorInterface
can_reach_finish	gnetworkmonitor.h	/^  gboolean (*can_reach_finish) (GNetworkMonitor      *monitor,$/;"	m	struct:_GNetworkMonitorInterface
can_remove_supports_type	gappinfo.h	/^  gboolean     (* can_remove_supports_type)     (GAppInfo           *appinfo);$/;"	m	struct:_GAppInfoIface
can_seek	gfileinputstream.h	/^  gboolean    (* can_seek)          (GFileInputStream     *stream);$/;"	m	struct:_GFileInputStreamClass
can_seek	gfileiostream.h	/^  gboolean    (* can_seek)          (GFileIOStream    *stream);$/;"	m	struct:_GFileIOStreamClass
can_seek	gfileoutputstream.h	/^  gboolean    (* can_seek)          (GFileOutputStream    *stream);$/;"	m	struct:_GFileOutputStreamClass
can_seek	gseekable.h	/^  gboolean    (* can_seek)       (GSeekable    *seekable);$/;"	m	struct:_GSeekableIface
can_start	gdrive.h	/^  gboolean (* can_start)                (GDrive              *drive);$/;"	m	struct:_GDriveIface
can_start_degraded	gdrive.h	/^  gboolean (* can_start_degraded)       (GDrive              *drive);$/;"	m	struct:_GDriveIface
can_stop	gdrive.h	/^  gboolean (* can_stop)                 (GDrive              *drive);$/;"	m	struct:_GDriveIface
can_truncate	gfileiostream.h	/^  gboolean    (* can_truncate)      (GFileIOStream    *stream);$/;"	m	struct:_GFileIOStreamClass
can_truncate	gfileoutputstream.h	/^  gboolean    (* can_truncate)      (GFileOutputStream    *stream);$/;"	m	struct:_GFileOutputStreamClass
can_truncate	gseekable.h	/^  gboolean    (* can_truncate)   (GSeekable    *seekable);$/;"	m	struct:_GSeekableIface
can_unmount	gmount.h	/^  gboolean    (* can_unmount)               (GMount              *mount);$/;"	m	struct:_GMountIface
cancel	gfilemonitor.h	/^  gboolean (* cancel)  (GFileMonitor      *monitor);$/;"	m	struct:_GFileMonitorClass
cancelled	gcancellable.h	/^  void (* cancelled) (GCancellable *cancellable);$/;"	m	struct:_GCancellableClass
change_action_state	gactiongroup.h	/^  void                  (* change_action_state)        (GActionGroup  *action_group,$/;"	m	struct:_GActionGroupInterface
change_action_state_full	gremoteactiongroup.h	/^  void (* change_action_state_full) (GRemoteActionGroup *remote,$/;"	m	struct:_GRemoteActionGroupInterface
change_event	gsettings.h	/^  gboolean    (*change_event)          (GSettings    *settings,$/;"	m	struct:_GSettingsClass
change_state	gaction.h	/^  void                 (* change_state)         (GAction  *action,$/;"	m	struct:_GActionInterface
change_state	gactionmap.h	/^  void (* change_state) (GSimpleAction *action,$/;"	m	struct:_GActionEntry
changed	gdrive.h	/^  void     (* changed)                  (GDrive              *drive);$/;"	m	struct:_GDriveIface
changed	gfilemonitor.h	/^  void     (* changed) (GFileMonitor      *monitor,$/;"	m	struct:_GFileMonitorClass
changed	gmount.h	/^  void        (* changed)                   (GMount              *mount);$/;"	m	struct:_GMountIface
changed	gsettings.h	/^  void        (*changed)               (GSettings    *settings,$/;"	m	struct:_GSettingsClass
changed	gsocketlistener.h	/^  void (* changed) (GSocketListener *listener);$/;"	m	struct:_GSocketListenerClass
changed	gvolume.h	/^  void        (* changed)               (GVolume             *volume);$/;"	m	struct:_GVolumeIface
close_async	gfileenumerator.h	/^  void        (* close_async)       (GFileEnumerator      *enumerator,$/;"	m	struct:_GFileEnumeratorClass
close_async	ginputstream.h	/^  void     (* close_async)  (GInputStream        *stream,$/;"	m	struct:_GInputStreamClass
close_async	giostream.h	/^  void     (* close_async)  (GIOStream           *stream,$/;"	m	struct:_GIOStreamClass
close_async	goutputstream.h	/^  void        (* close_async)   (GOutputStream            *stream,$/;"	m	struct:_GOutputStreamClass
close_finish	gfileenumerator.h	/^  gboolean    (* close_finish)      (GFileEnumerator      *enumerator,$/;"	m	struct:_GFileEnumeratorClass
close_finish	ginputstream.h	/^  gboolean (* close_finish) (GInputStream        *stream,$/;"	m	struct:_GInputStreamClass
close_finish	giostream.h	/^  gboolean (* close_finish) (GIOStream           *stream,$/;"	m	struct:_GIOStreamClass
close_finish	goutputstream.h	/^  gboolean    (* close_finish)  (GOutputStream            *stream,$/;"	m	struct:_GOutputStreamClass
close_fn	gfileenumerator.h	/^  gboolean    (* close_fn)          (GFileEnumerator      *enumerator,$/;"	m	struct:_GFileEnumeratorClass
close_fn	ginputstream.h	/^  gboolean (* close_fn)	    (GInputStream        *stream,$/;"	m	struct:_GInputStreamClass
close_fn	giostream.h	/^  gboolean (* close_fn)	    (GIOStream           *stream,$/;"	m	struct:_GIOStreamClass
close_fn	goutputstream.h	/^  gboolean    (* close_fn)      (GOutputStream            *stream,$/;"	m	struct:_GOutputStreamClass
command_line	gapplication.h	/^  int                       (* command_line)        (GApplication              *application,$/;"	m	struct:_GApplicationClass
connect	gproxy.h	/^  GIOStream * (* connect)           (GProxy               *proxy,$/;"	m	struct:_GProxyInterface
connect_async	gproxy.h	/^  void        (* connect_async)     (GProxy               *proxy,$/;"	m	struct:_GProxyInterface
connect_finish	gproxy.h	/^  GIOStream * (* connect_finish)    (GProxy               *proxy,$/;"	m	struct:_GProxyInterface
convert	gconverter.h	/^  GConverterResult (* convert) (GConverter *converter,$/;"	m	struct:_GConverterIface
copy	gfile.h	/^  gboolean            (* copy)                        (GFile                *source,$/;"	m	struct:_GFileIface
copy_async	gfile.h	/^  void                (* copy_async)                  (GFile                *source,$/;"	m	struct:_GFileIface
copy_finish	gfile.h	/^  gboolean            (* copy_finish)                 (GFile                *file,$/;"	m	struct:_GFileIface
create	gfile.h	/^  GFileOutputStream * (* create)                      (GFile                *file,$/;"	m	struct:_GFileIface
create_async	gfile.h	/^  void                (* create_async)                (GFile                *file,$/;"	m	struct:_GFileIface
create_certificate_handle	gtlsdatabase.h	/^  gchar*                (*create_certificate_handle)            (GTlsDatabase            *self,$/;"	m	struct:_GTlsDatabaseClass
create_finish	gfile.h	/^  GFileOutputStream * (* create_finish)               (GFile                *file,$/;"	m	struct:_GFileIface
create_readwrite	gfile.h	/^  GFileIOStream *     (* create_readwrite)            (GFile                *file,$/;"	m	struct:_GFileIface
create_readwrite_async	gfile.h	/^  void                (* create_readwrite_async)      (GFile                *file,$/;"	m	struct:_GFileIface
create_readwrite_finish	gfile.h	/^  GFileIOStream *     (* create_readwrite_finish)      (GFile                *file,$/;"	m	struct:_GFileIface
create_source	gpollableinputstream.h	/^  GSource *    (*create_source)    (GPollableInputStream  *stream,$/;"	m	struct:_GPollableInputStreamInterface
create_source	gpollableoutputstream.h	/^  GSource *    (*create_source)     (GPollableOutputStream  *stream,$/;"	m	struct:_GPollableOutputStreamInterface
data	gresource.h	/^  const guint8 *data;$/;"	m	struct:_GStaticResource
data_len	gresource.h	/^  gsize data_len;$/;"	m	struct:_GStaticResource
dbus_error_name	gdbuserror.h	/^  const gchar *dbus_error_name;$/;"	m	struct:_GDBusErrorEntry
delete_file	gfile.h	/^  gboolean            (* delete_file)                 (GFile                *file,$/;"	m	struct:_GFileIface
deserialize	gsocketcontrolmessage.h	/^  GSocketControlMessage *(* deserialize) (int                   level,$/;"	m	struct:_GSocketControlMessageClass
disconnected	gdrive.h	/^  void     (* disconnected)             (GDrive              *drive);$/;"	m	struct:_GDriveIface
dispatch	gdbusconnection.h	/^  GDBusSubtreeDispatchFunc   dispatch;$/;"	m	struct:_GDBusSubtreeVTable
do_delete	gappinfo.h	/^  gboolean     (* do_delete)                    (GAppInfo           *appinfo);$/;"	m	struct:_GAppInfoIface
drive_changed	gvolumemonitor.h	/^  void      (* drive_changed)        (GVolumeMonitor *volume_monitor,$/;"	m	struct:_GVolumeMonitorClass
drive_connected	gvolumemonitor.h	/^  void      (* drive_connected)      (GVolumeMonitor *volume_monitor,$/;"	m	struct:_GVolumeMonitorClass
drive_disconnected	gvolumemonitor.h	/^  void      (* drive_disconnected)   (GVolumeMonitor *volume_monitor,$/;"	m	struct:_GVolumeMonitorClass
drive_eject_button	gvolumemonitor.h	/^  void      (* drive_eject_button)   (GVolumeMonitor *volume_monitor,$/;"	m	struct:_GVolumeMonitorClass
drive_stop_button	gvolumemonitor.h	/^  void      (* drive_stop_button)   (GVolumeMonitor *volume_monitor,$/;"	m	struct:_GVolumeMonitorClass
dup	gappinfo.h	/^  GAppInfo *   (* dup)                          (GAppInfo           *appinfo);$/;"	m	struct:_GAppInfoIface
dup	gfile.h	/^  GFile *             (* dup)                         (GFile         *file);$/;"	m	struct:_GFileIface
dup_object	gdbusinterface.h	/^  GDBusObject          *(*dup_object) (GDBusInterface      *interface_);$/;"	m	struct:_GDBusInterfaceIface
eject	gdrive.h	/^  void     (* eject)                    (GDrive              *drive,$/;"	m	struct:_GDriveIface
eject	gmount.h	/^  void        (* eject)                     (GMount              *mount,$/;"	m	struct:_GMountIface
eject	gvolume.h	/^  void        (* eject)                 (GVolume             *volume,$/;"	m	struct:_GVolumeIface
eject_button	gdrive.h	/^  void     (* eject_button)             (GDrive              *drive);$/;"	m	struct:_GDriveIface
eject_finish	gdrive.h	/^  gboolean (* eject_finish)             (GDrive              *drive,$/;"	m	struct:_GDriveIface
eject_finish	gmount.h	/^  gboolean    (* eject_finish)              (GMount              *mount,$/;"	m	struct:_GMountIface
eject_finish	gvolume.h	/^  gboolean    (* eject_finish)          (GVolume             *volume,$/;"	m	struct:_GVolumeIface
eject_mountable	gfile.h	/^  void                (* eject_mountable)             (GFile                *file,$/;"	m	struct:_GFileIface
eject_mountable_finish	gfile.h	/^  gboolean            (* eject_mountable_finish)      (GFile                *file,$/;"	m	struct:_GFileIface
eject_mountable_with_operation	gfile.h	/^  void                (* eject_mountable_with_operation) (GFile             *file,$/;"	m	struct:_GFileIface
eject_mountable_with_operation_finish	gfile.h	/^  gboolean            (* eject_mountable_with_operation_finish) (GFile      *file,$/;"	m	struct:_GFileIface
eject_with_operation	gdrive.h	/^  void        (* eject_with_operation)      (GDrive              *drive,$/;"	m	struct:_GDriveIface
eject_with_operation	gmount.h	/^  void        (* eject_with_operation)      (GMount              *mount,$/;"	m	struct:_GMountIface
eject_with_operation	gvolume.h	/^  void        (* eject_with_operation)      (GVolume             *volume,$/;"	m	struct:_GVolumeIface
eject_with_operation_finish	gdrive.h	/^  gboolean    (* eject_with_operation_finish) (GDrive            *drive,$/;"	m	struct:_GDriveIface
eject_with_operation_finish	gmount.h	/^  gboolean    (* eject_with_operation_finish) (GMount            *mount,$/;"	m	struct:_GMountIface
eject_with_operation_finish	gvolume.h	/^  gboolean    (* eject_with_operation_finish) (GVolume           *volume,$/;"	m	struct:_GVolumeIface
enumerate	gdbusconnection.h	/^  GDBusSubtreeEnumerateFunc  enumerate;$/;"	m	struct:_GDBusSubtreeVTable
enumerate	gsocketconnectable.h	/^  GSocketAddressEnumerator * (* enumerate)       (GSocketConnectable *connectable);$/;"	m	struct:_GSocketConnectableIface
enumerate_children	gfile.h	/^  GFileEnumerator *   (* enumerate_children)          (GFile                *file,$/;"	m	struct:_GFileIface
enumerate_children_async	gfile.h	/^  void                (* enumerate_children_async)    (GFile                *file,$/;"	m	struct:_GFileIface
enumerate_children_finish	gfile.h	/^  GFileEnumerator *   (* enumerate_children_finish)   (GFile                *file,$/;"	m	struct:_GFileIface
enumerate_identifiers	gdrive.h	/^  char **  (* enumerate_identifiers)    (GDrive              *drive);$/;"	m	struct:_GDriveIface
enumerate_identifiers	gvolume.h	/^  char     ** (* enumerate_identifiers) (GVolume             *volume);$/;"	m	struct:_GVolumeIface
equal	gappinfo.h	/^  gboolean     (* equal)                        (GAppInfo           *appinfo1,$/;"	m	struct:_GAppInfoIface
equal	gfile.h	/^  gboolean            (* equal)                       (GFile         *file1,$/;"	m	struct:_GFileIface
equal	gicon.h	/^  gboolean    (* equal)       (GIcon   *icon1,$/;"	m	struct:_GIconIface
error_code	gdbuserror.h	/^  gint         error_code;$/;"	m	struct:_GDBusErrorEntry
event	gsocketclient.h	/^  void (* event) (GSocketClient       *client,$/;"	m	struct:_GSocketClientClass
fill	gbufferedinputstream.h	/^  gssize   (* fill)        (GBufferedInputStream *stream,$/;"	m	struct:_GBufferedInputStreamClass
fill_async	gbufferedinputstream.h	/^  void     (* fill_async)  (GBufferedInputStream *stream,$/;"	m	struct:_GBufferedInputStreamClass
fill_finish	gbufferedinputstream.h	/^  gssize   (* fill_finish) (GBufferedInputStream *stream,$/;"	m	struct:_GBufferedInputStreamClass
find_enclosing_mount	gfile.h	/^  GMount *            (* find_enclosing_mount)        (GFile                *file,$/;"	m	struct:_GFileIface
find_enclosing_mount_async	gfile.h	/^  void                (* find_enclosing_mount_async)  (GFile                *file,$/;"	m	struct:_GFileIface
find_enclosing_mount_finish	gfile.h	/^  GMount *            (* find_enclosing_mount_finish) (GFile                *file,$/;"	m	struct:_GFileIface
flags	gdbusintrospection.h	/^  GDBusPropertyInfoFlags    flags;$/;"	m	struct:_GDBusPropertyInfo
flags	gfileattribute.h	/^  GFileAttributeInfoFlags  flags;$/;"	m	struct:_GFileAttributeInfo
flush	gdbusinterfaceskeleton.h	/^  void                  (*flush)          (GDBusInterfaceSkeleton  *interface_);$/;"	m	struct:_GDBusInterfaceSkeletonClass
flush	goutputstream.h	/^  gboolean    (* flush)	        (GOutputStream            *stream,$/;"	m	struct:_GOutputStreamClass
flush_async	goutputstream.h	/^  void        (* flush_async)   (GOutputStream            *stream,$/;"	m	struct:_GOutputStreamClass
flush_finish	goutputstream.h	/^  gboolean    (* flush_finish)  (GOutputStream            *stream,$/;"	m	struct:_GOutputStreamClass
from_tokens	gicon.h	/^  GIcon *     (* from_tokens) (gchar  **tokens,$/;"	m	struct:_GIconIface
g_action_activate	gaction.h	/^void                    g_action_activate                               (GAction            *action,$/;"	p
g_action_change_state	gaction.h	/^void                    g_action_change_state                           (GAction            *action,$/;"	p
g_action_get_enabled	gaction.h	/^gboolean                g_action_get_enabled                            (GAction            *action);$/;"	p
g_action_get_name	gaction.h	/^const gchar *           g_action_get_name                               (GAction            *action);$/;"	p
g_action_get_parameter_type	gaction.h	/^const GVariantType *    g_action_get_parameter_type                     (GAction            *action);$/;"	p
g_action_get_state	gaction.h	/^GVariant *              g_action_get_state                              (GAction            *action);$/;"	p
g_action_get_state_hint	gaction.h	/^GVariant *              g_action_get_state_hint                         (GAction            *action);$/;"	p
g_action_get_state_type	gaction.h	/^const GVariantType *    g_action_get_state_type                         (GAction            *action);$/;"	p
g_action_group_action_added	gactiongroup.h	/^void                    g_action_group_action_added                     (GActionGroup *action_group,$/;"	p
g_action_group_action_enabled_changed	gactiongroup.h	/^void                    g_action_group_action_enabled_changed           (GActionGroup *action_group,$/;"	p
g_action_group_action_removed	gactiongroup.h	/^void                    g_action_group_action_removed                   (GActionGroup *action_group,$/;"	p
g_action_group_action_state_changed	gactiongroup.h	/^void                    g_action_group_action_state_changed             (GActionGroup *action_group,$/;"	p
g_action_group_activate_action	gactiongroup.h	/^void                    g_action_group_activate_action                  (GActionGroup *action_group,$/;"	p
g_action_group_change_action_state	gactiongroup.h	/^void                    g_action_group_change_action_state              (GActionGroup *action_group,$/;"	p
g_action_group_get_action_enabled	gactiongroup.h	/^gboolean                g_action_group_get_action_enabled               (GActionGroup *action_group,$/;"	p
g_action_group_get_action_parameter_type	gactiongroup.h	/^const GVariantType *    g_action_group_get_action_parameter_type        (GActionGroup *action_group,$/;"	p
g_action_group_get_action_state	gactiongroup.h	/^GVariant *              g_action_group_get_action_state                 (GActionGroup *action_group,$/;"	p
g_action_group_get_action_state_hint	gactiongroup.h	/^GVariant *              g_action_group_get_action_state_hint            (GActionGroup *action_group,$/;"	p
g_action_group_get_action_state_type	gactiongroup.h	/^const GVariantType *    g_action_group_get_action_state_type            (GActionGroup *action_group,$/;"	p
g_action_group_has_action	gactiongroup.h	/^gboolean                g_action_group_has_action                       (GActionGroup *action_group,$/;"	p
g_action_group_list_actions	gactiongroup.h	/^gchar **                g_action_group_list_actions                     (GActionGroup *action_group);$/;"	p
g_action_group_query_action	gactiongroup.h	/^gboolean                g_action_group_query_action                     (GActionGroup        *action_group,$/;"	p
g_action_map_add_action	gactionmap.h	/^void                    g_action_map_add_action                         (GActionMap         *action_map,$/;"	p
g_action_map_add_action_entries	gactionmap.h	/^void                    g_action_map_add_action_entries                 (GActionMap         *action_map,$/;"	p
g_action_map_lookup_action	gactionmap.h	/^GAction *               g_action_map_lookup_action                      (GActionMap         *action_map,$/;"	p
g_action_map_remove_action	gactionmap.h	/^void                    g_action_map_remove_action                      (GActionMap         *action_map,$/;"	p
g_app_info_add_supports_type	gappinfo.h	/^gboolean    g_app_info_add_supports_type            (GAppInfo             *appinfo,$/;"	p
g_app_info_can_delete	gappinfo.h	/^gboolean    g_app_info_can_delete                   (GAppInfo   *appinfo);$/;"	p
g_app_info_can_remove_supports_type	gappinfo.h	/^gboolean    g_app_info_can_remove_supports_type     (GAppInfo             *appinfo);$/;"	p
g_app_info_create_from_commandline	gappinfo.h	/^GAppInfo *  g_app_info_create_from_commandline      (const char           *commandline,$/;"	p
g_app_info_delete	gappinfo.h	/^gboolean    g_app_info_delete                       (GAppInfo   *appinfo);$/;"	p
g_app_info_dup	gappinfo.h	/^GAppInfo *  g_app_info_dup                          (GAppInfo             *appinfo);$/;"	p
g_app_info_equal	gappinfo.h	/^gboolean    g_app_info_equal                        (GAppInfo             *appinfo1,$/;"	p
g_app_info_get_all	gappinfo.h	/^GList *   g_app_info_get_all                     (void);$/;"	p
g_app_info_get_all_for_type	gappinfo.h	/^GList *   g_app_info_get_all_for_type            (const char  *content_type);$/;"	p
g_app_info_get_commandline	gappinfo.h	/^const char *g_app_info_get_commandline              (GAppInfo             *appinfo);$/;"	p
g_app_info_get_default_for_type	gappinfo.h	/^GAppInfo *g_app_info_get_default_for_type        (const char  *content_type,$/;"	p
g_app_info_get_default_for_uri_scheme	gappinfo.h	/^GAppInfo *g_app_info_get_default_for_uri_scheme  (const char  *uri_scheme);$/;"	p
g_app_info_get_description	gappinfo.h	/^const char *g_app_info_get_description              (GAppInfo             *appinfo);$/;"	p
g_app_info_get_display_name	gappinfo.h	/^const char *g_app_info_get_display_name             (GAppInfo             *appinfo);$/;"	p
g_app_info_get_executable	gappinfo.h	/^const char *g_app_info_get_executable               (GAppInfo             *appinfo);$/;"	p
g_app_info_get_fallback_for_type	gappinfo.h	/^GList *   g_app_info_get_fallback_for_type       (const gchar *content_type);$/;"	p
g_app_info_get_icon	gappinfo.h	/^GIcon *     g_app_info_get_icon                     (GAppInfo             *appinfo);$/;"	p
g_app_info_get_id	gappinfo.h	/^const char *g_app_info_get_id                       (GAppInfo             *appinfo);$/;"	p
g_app_info_get_name	gappinfo.h	/^const char *g_app_info_get_name                     (GAppInfo             *appinfo);$/;"	p
g_app_info_get_recommended_for_type	gappinfo.h	/^GList *   g_app_info_get_recommended_for_type    (const gchar *content_type);$/;"	p
g_app_info_launch	gappinfo.h	/^gboolean    g_app_info_launch                       (GAppInfo             *appinfo,$/;"	p
g_app_info_launch_default_for_uri	gappinfo.h	/^gboolean  g_app_info_launch_default_for_uri      (const char              *uri,$/;"	p
g_app_info_launch_uris	gappinfo.h	/^gboolean    g_app_info_launch_uris                  (GAppInfo             *appinfo,$/;"	p
g_app_info_remove_supports_type	gappinfo.h	/^gboolean    g_app_info_remove_supports_type         (GAppInfo             *appinfo,$/;"	p
g_app_info_reset_type_associations	gappinfo.h	/^void      g_app_info_reset_type_associations     (const char  *content_type);$/;"	p
g_app_info_set_as_default_for_extension	gappinfo.h	/^gboolean    g_app_info_set_as_default_for_extension (GAppInfo             *appinfo,$/;"	p
g_app_info_set_as_default_for_type	gappinfo.h	/^gboolean    g_app_info_set_as_default_for_type      (GAppInfo             *appinfo,$/;"	p
g_app_info_set_as_last_used_for_type	gappinfo.h	/^gboolean    g_app_info_set_as_last_used_for_type    (GAppInfo             *appinfo,$/;"	p
g_app_info_should_show	gappinfo.h	/^gboolean    g_app_info_should_show                  (GAppInfo             *appinfo);$/;"	p
g_app_info_supports_files	gappinfo.h	/^gboolean    g_app_info_supports_files               (GAppInfo             *appinfo);$/;"	p
g_app_info_supports_uris	gappinfo.h	/^gboolean    g_app_info_supports_uris                (GAppInfo             *appinfo);$/;"	p
g_app_launch_context_get_display	gappinfo.h	/^char *             g_app_launch_context_get_display           (GAppLaunchContext *context,$/;"	p
g_app_launch_context_get_environment	gappinfo.h	/^char **            g_app_launch_context_get_environment       (GAppLaunchContext *context);$/;"	p
g_app_launch_context_get_startup_notify_id	gappinfo.h	/^char *             g_app_launch_context_get_startup_notify_id (GAppLaunchContext *context,$/;"	p
g_app_launch_context_launch_failed	gappinfo.h	/^void               g_app_launch_context_launch_failed         (GAppLaunchContext *context,$/;"	p
g_app_launch_context_new	gappinfo.h	/^GAppLaunchContext *g_app_launch_context_new                   (void);$/;"	p
g_app_launch_context_setenv	gappinfo.h	/^void               g_app_launch_context_setenv                (GAppLaunchContext *context,$/;"	p
g_app_launch_context_unsetenv	gappinfo.h	/^void               g_app_launch_context_unsetenv              (GAppLaunchContext *context,$/;"	p
g_application_activate	gapplication.h	/^void                    g_application_activate                          (GApplication             *application);$/;"	p
g_application_command_line_get_arguments	gapplicationcommandline.h	/^gchar **                g_application_command_line_get_arguments        (GApplicationCommandLine   *cmdline,$/;"	p
g_application_command_line_get_cwd	gapplicationcommandline.h	/^const gchar *           g_application_command_line_get_cwd              (GApplicationCommandLine   *cmdline);$/;"	p
g_application_command_line_get_environ	gapplicationcommandline.h	/^const gchar * const *   g_application_command_line_get_environ          (GApplicationCommandLine   *cmdline);$/;"	p
g_application_command_line_get_exit_status	gapplicationcommandline.h	/^int                     g_application_command_line_get_exit_status      (GApplicationCommandLine   *cmdline);$/;"	p
g_application_command_line_get_is_remote	gapplicationcommandline.h	/^gboolean                g_application_command_line_get_is_remote        (GApplicationCommandLine   *cmdline);$/;"	p
g_application_command_line_get_platform_data	gapplicationcommandline.h	/^GVariant *              g_application_command_line_get_platform_data    (GApplicationCommandLine   *cmdline);$/;"	p
g_application_command_line_getenv	gapplicationcommandline.h	/^const gchar *           g_application_command_line_getenv               (GApplicationCommandLine   *cmdline,$/;"	p
g_application_command_line_set_exit_status	gapplicationcommandline.h	/^void                    g_application_command_line_set_exit_status      (GApplicationCommandLine   *cmdline,$/;"	p
g_application_get_application_id	gapplication.h	/^const gchar *           g_application_get_application_id                (GApplication             *application);$/;"	p
g_application_get_default	gapplication.h	/^GApplication *          g_application_get_default                       (void);$/;"	p
g_application_get_flags	gapplication.h	/^GApplicationFlags       g_application_get_flags                         (GApplication             *application);$/;"	p
g_application_get_inactivity_timeout	gapplication.h	/^guint                   g_application_get_inactivity_timeout            (GApplication             *application);$/;"	p
g_application_get_is_registered	gapplication.h	/^gboolean                g_application_get_is_registered                 (GApplication             *application);$/;"	p
g_application_get_is_remote	gapplication.h	/^gboolean                g_application_get_is_remote                     (GApplication             *application);$/;"	p
g_application_hold	gapplication.h	/^void                    g_application_hold                              (GApplication             *application);$/;"	p
g_application_id_is_valid	gapplication.h	/^gboolean                g_application_id_is_valid                       (const gchar              *application_id);$/;"	p
g_application_new	gapplication.h	/^GApplication *          g_application_new                               (const gchar              *application_id,$/;"	p
g_application_open	gapplication.h	/^void                    g_application_open                              (GApplication             *application,$/;"	p
g_application_quit	gapplication.h	/^void                    g_application_quit                              (GApplication             *application);$/;"	p
g_application_register	gapplication.h	/^gboolean                g_application_register                          (GApplication             *application,$/;"	p
g_application_release	gapplication.h	/^void                    g_application_release                           (GApplication             *application);$/;"	p
g_application_run	gapplication.h	/^int                     g_application_run                               (GApplication             *application,$/;"	p
g_application_set_action_group	gapplication.h	/^void                    g_application_set_action_group                  (GApplication             *application,$/;"	p
g_application_set_application_id	gapplication.h	/^void                    g_application_set_application_id                (GApplication             *application,$/;"	p
g_application_set_default	gapplication.h	/^void                    g_application_set_default                       (GApplication             *application);$/;"	p
g_application_set_flags	gapplication.h	/^void                    g_application_set_flags                         (GApplication             *application,$/;"	p
g_application_set_inactivity_timeout	gapplication.h	/^void                    g_application_set_inactivity_timeout            (GApplication             *application,$/;"	p
g_async_initable_init_async	gasyncinitable.h	/^void     g_async_initable_init_async       (GAsyncInitable       *initable,$/;"	p
g_async_initable_init_finish	gasyncinitable.h	/^gboolean g_async_initable_init_finish      (GAsyncInitable       *initable,$/;"	p
g_async_initable_new_async	gasyncinitable.h	/^void     g_async_initable_new_async        (GType                 object_type,$/;"	p
g_async_initable_new_finish	gasyncinitable.h	/^GObject *g_async_initable_new_finish       (GAsyncInitable       *initable,$/;"	p
g_async_initable_new_valist_async	gasyncinitable.h	/^void     g_async_initable_new_valist_async (GType                 object_type,$/;"	p
g_async_initable_newv_async	gasyncinitable.h	/^void     g_async_initable_newv_async       (GType                 object_type,$/;"	p
g_async_result_get_source_object	gasyncresult.h	/^GObject *g_async_result_get_source_object (GAsyncResult *res);$/;"	p
g_async_result_get_user_data	gasyncresult.h	/^gpointer g_async_result_get_user_data     (GAsyncResult *res);$/;"	p
g_authorize_method	gdbusinterfaceskeleton.h	/^  gboolean (*g_authorize_method) (GDBusInterfaceSkeleton  *interface_,$/;"	m	struct:_GDBusInterfaceSkeletonClass
g_buffered_input_stream_fill	gbufferedinputstream.h	/^gssize        g_buffered_input_stream_fill            (GBufferedInputStream  *stream,$/;"	p
g_buffered_input_stream_fill_async	gbufferedinputstream.h	/^void          g_buffered_input_stream_fill_async      (GBufferedInputStream  *stream,$/;"	p
g_buffered_input_stream_fill_finish	gbufferedinputstream.h	/^gssize        g_buffered_input_stream_fill_finish     (GBufferedInputStream  *stream,$/;"	p
g_buffered_input_stream_get_available	gbufferedinputstream.h	/^gsize         g_buffered_input_stream_get_available   (GBufferedInputStream  *stream);$/;"	p
g_buffered_input_stream_get_buffer_size	gbufferedinputstream.h	/^gsize         g_buffered_input_stream_get_buffer_size (GBufferedInputStream  *stream);$/;"	p
g_buffered_input_stream_new	gbufferedinputstream.h	/^GInputStream* g_buffered_input_stream_new             (GInputStream          *base_stream);$/;"	p
g_buffered_input_stream_new_sized	gbufferedinputstream.h	/^GInputStream* g_buffered_input_stream_new_sized       (GInputStream          *base_stream,$/;"	p
g_buffered_input_stream_peek	gbufferedinputstream.h	/^gsize         g_buffered_input_stream_peek            (GBufferedInputStream  *stream,$/;"	p
g_buffered_input_stream_peek_buffer	gbufferedinputstream.h	/^const void*   g_buffered_input_stream_peek_buffer     (GBufferedInputStream  *stream,$/;"	p
g_buffered_input_stream_read_byte	gbufferedinputstream.h	/^int           g_buffered_input_stream_read_byte       (GBufferedInputStream  *stream,$/;"	p
g_buffered_input_stream_set_buffer_size	gbufferedinputstream.h	/^void          g_buffered_input_stream_set_buffer_size (GBufferedInputStream  *stream,$/;"	p
g_buffered_output_stream_get_auto_grow	gbufferedoutputstream.h	/^gboolean       g_buffered_output_stream_get_auto_grow   (GBufferedOutputStream *stream);$/;"	p
g_buffered_output_stream_get_buffer_size	gbufferedoutputstream.h	/^gsize          g_buffered_output_stream_get_buffer_size (GBufferedOutputStream *stream);$/;"	p
g_buffered_output_stream_new	gbufferedoutputstream.h	/^GOutputStream* g_buffered_output_stream_new             (GOutputStream         *base_stream);$/;"	p
g_buffered_output_stream_new_sized	gbufferedoutputstream.h	/^GOutputStream* g_buffered_output_stream_new_sized       (GOutputStream         *base_stream,$/;"	p
g_buffered_output_stream_set_auto_grow	gbufferedoutputstream.h	/^void           g_buffered_output_stream_set_auto_grow   (GBufferedOutputStream *stream,$/;"	p
g_buffered_output_stream_set_buffer_size	gbufferedoutputstream.h	/^void           g_buffered_output_stream_set_buffer_size (GBufferedOutputStream *stream,$/;"	p
g_bus_get	gdbusconnection.h	/^void              g_bus_get                    (GBusType             bus_type,$/;"	p
g_bus_get_finish	gdbusconnection.h	/^GDBusConnection  *g_bus_get_finish             (GAsyncResult        *res,$/;"	p
g_bus_get_sync	gdbusconnection.h	/^GDBusConnection  *g_bus_get_sync               (GBusType            bus_type,$/;"	p
g_bus_own_name	gdbusnameowning.h	/^guint g_bus_own_name                 (GBusType                  bus_type,$/;"	p
g_bus_own_name_on_connection	gdbusnameowning.h	/^guint g_bus_own_name_on_connection   (GDBusConnection          *connection,$/;"	p
g_bus_own_name_on_connection_with_closures	gdbusnameowning.h	/^guint g_bus_own_name_on_connection_with_closures ($/;"	p
g_bus_own_name_with_closures	gdbusnameowning.h	/^guint g_bus_own_name_with_closures   (GBusType                  bus_type,$/;"	p
g_bus_unown_name	gdbusnameowning.h	/^void  g_bus_unown_name               (guint                     owner_id);$/;"	p
g_bus_unwatch_name	gdbusnamewatching.h	/^void  g_bus_unwatch_name             (guint                     watcher_id);$/;"	p
g_bus_watch_name	gdbusnamewatching.h	/^guint g_bus_watch_name               (GBusType                  bus_type,$/;"	p
g_bus_watch_name_on_connection	gdbusnamewatching.h	/^guint g_bus_watch_name_on_connection (GDBusConnection          *connection,$/;"	p
g_bus_watch_name_on_connection_with_closures	gdbusnamewatching.h	/^guint g_bus_watch_name_on_connection_with_closures ($/;"	p
g_bus_watch_name_with_closures	gdbusnamewatching.h	/^guint g_bus_watch_name_with_closures (GBusType                  bus_type,$/;"	p
g_cancellable_cancel	gcancellable.h	/^void          g_cancellable_cancel       (GCancellable  *cancellable);$/;"	p
g_cancellable_connect	gcancellable.h	/^gulong        g_cancellable_connect                (GCancellable  *cancellable,$/;"	p
g_cancellable_disconnect	gcancellable.h	/^void          g_cancellable_disconnect             (GCancellable  *cancellable,$/;"	p
g_cancellable_get_current	gcancellable.h	/^GCancellable *g_cancellable_get_current            (void);$/;"	p
g_cancellable_get_fd	gcancellable.h	/^int           g_cancellable_get_fd                 (GCancellable  *cancellable);$/;"	p
g_cancellable_is_cancelled	gcancellable.h	/^gboolean      g_cancellable_is_cancelled           (GCancellable  *cancellable);$/;"	p
g_cancellable_make_pollfd	gcancellable.h	/^gboolean      g_cancellable_make_pollfd            (GCancellable  *cancellable,$/;"	p
g_cancellable_new	gcancellable.h	/^GCancellable *g_cancellable_new                    (void);$/;"	p
g_cancellable_pop_current	gcancellable.h	/^void          g_cancellable_pop_current            (GCancellable  *cancellable);$/;"	p
g_cancellable_push_current	gcancellable.h	/^void          g_cancellable_push_current           (GCancellable  *cancellable);$/;"	p
g_cancellable_release_fd	gcancellable.h	/^void          g_cancellable_release_fd             (GCancellable  *cancellable);$/;"	p
g_cancellable_reset	gcancellable.h	/^void          g_cancellable_reset                  (GCancellable  *cancellable);$/;"	p
g_cancellable_set_error_if_cancelled	gcancellable.h	/^gboolean      g_cancellable_set_error_if_cancelled (GCancellable  *cancellable,$/;"	p
g_cancellable_source_new	gcancellable.h	/^GSource *     g_cancellable_source_new             (GCancellable  *cancellable);$/;"	p
g_charset_converter_get_num_fallbacks	gcharsetconverter.h	/^guint              g_charset_converter_get_num_fallbacks (GCharsetConverter *converter);$/;"	p
g_charset_converter_get_use_fallback	gcharsetconverter.h	/^gboolean           g_charset_converter_get_use_fallback (GCharsetConverter *converter);$/;"	p
g_charset_converter_new	gcharsetconverter.h	/^GCharsetConverter *g_charset_converter_new            (const gchar  *to_charset,$/;"	p
g_charset_converter_set_use_fallback	gcharsetconverter.h	/^void               g_charset_converter_set_use_fallback (GCharsetConverter *converter,$/;"	p
g_content_type_can_be_executable	gcontenttype.h	/^gboolean g_content_type_can_be_executable (const gchar  *type);$/;"	p
g_content_type_equals	gcontenttype.h	/^gboolean g_content_type_equals            (const gchar  *type1,$/;"	p
g_content_type_from_mime_type	gcontenttype.h	/^gchar *  g_content_type_from_mime_type    (const gchar  *mime_type);$/;"	p
g_content_type_get_description	gcontenttype.h	/^gchar *  g_content_type_get_description   (const gchar  *type);$/;"	p
g_content_type_get_icon	gcontenttype.h	/^GIcon *  g_content_type_get_icon          (const gchar  *type);$/;"	p
g_content_type_get_mime_type	gcontenttype.h	/^gchar *  g_content_type_get_mime_type     (const gchar  *type);$/;"	p
g_content_type_guess	gcontenttype.h	/^gchar *  g_content_type_guess             (const gchar  *filename,$/;"	p
g_content_type_guess_for_tree	gcontenttype.h	/^gchar ** g_content_type_guess_for_tree    (GFile        *root);$/;"	p
g_content_type_is_a	gcontenttype.h	/^gboolean g_content_type_is_a              (const gchar  *type,$/;"	p
g_content_type_is_unknown	gcontenttype.h	/^gboolean g_content_type_is_unknown        (const gchar  *type);$/;"	p
g_content_types_get_registered	gcontenttype.h	/^GList *  g_content_types_get_registered   (void);$/;"	p
g_converter_convert	gconverter.h	/^GConverterResult g_converter_convert (GConverter       *converter,$/;"	p
g_converter_input_stream_get_converter	gconverterinputstream.h	/^GConverter            *g_converter_input_stream_get_converter (GConverterInputStream *converter_stream);$/;"	p
g_converter_input_stream_new	gconverterinputstream.h	/^GInputStream          *g_converter_input_stream_new           (GInputStream          *base_stream,$/;"	p
g_converter_output_stream_get_converter	gconverteroutputstream.h	/^GConverter             *g_converter_output_stream_get_converter (GConverterOutputStream *converter_stream);$/;"	p
g_converter_output_stream_new	gconverteroutputstream.h	/^GOutputStream          *g_converter_output_stream_new           (GOutputStream         *base_stream,$/;"	p
g_converter_reset	gconverter.h	/^void             g_converter_reset   (GConverter       *converter);$/;"	p
g_credentials_get_native	gcredentials.h	/^gpointer         g_credentials_get_native         (GCredentials    *credentials,$/;"	p
g_credentials_get_unix_user	gcredentials.h	/^uid_t            g_credentials_get_unix_user      (GCredentials    *credentials,$/;"	p
g_credentials_is_same_user	gcredentials.h	/^gboolean         g_credentials_is_same_user       (GCredentials    *credentials,$/;"	p
g_credentials_new	gcredentials.h	/^GCredentials    *g_credentials_new                (void);$/;"	p
g_credentials_set_native	gcredentials.h	/^void             g_credentials_set_native         (GCredentials    *credentials,$/;"	p
g_credentials_set_unix_user	gcredentials.h	/^gboolean         g_credentials_set_unix_user      (GCredentials    *credentials,$/;"	p
g_credentials_to_string	gcredentials.h	/^gchar           *g_credentials_to_string          (GCredentials    *credentials);$/;"	p
g_data_input_stream_get_byte_order	gdatainputstream.h	/^GDataStreamByteOrder   g_data_input_stream_get_byte_order       (GDataInputStream        *stream);$/;"	p
g_data_input_stream_get_newline_type	gdatainputstream.h	/^GDataStreamNewlineType g_data_input_stream_get_newline_type     (GDataInputStream        *stream);$/;"	p
g_data_input_stream_new	gdatainputstream.h	/^GDataInputStream *     g_data_input_stream_new                  (GInputStream            *base_stream);$/;"	p
g_data_input_stream_read_byte	gdatainputstream.h	/^guchar                 g_data_input_stream_read_byte            (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_int16	gdatainputstream.h	/^gint16                 g_data_input_stream_read_int16           (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_int32	gdatainputstream.h	/^gint32                 g_data_input_stream_read_int32           (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_int64	gdatainputstream.h	/^gint64                 g_data_input_stream_read_int64           (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_line	gdatainputstream.h	/^char *                 g_data_input_stream_read_line            (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_line_async	gdatainputstream.h	/^void                   g_data_input_stream_read_line_async      (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_line_finish	gdatainputstream.h	/^char *                 g_data_input_stream_read_line_finish     (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_line_finish_utf8	gdatainputstream.h	/^char *                 g_data_input_stream_read_line_finish_utf8(GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_line_utf8	gdatainputstream.h	/^char *                 g_data_input_stream_read_line_utf8       (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_uint16	gdatainputstream.h	/^guint16                g_data_input_stream_read_uint16          (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_uint32	gdatainputstream.h	/^guint32                g_data_input_stream_read_uint32          (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_uint64	gdatainputstream.h	/^guint64                g_data_input_stream_read_uint64          (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_until	gdatainputstream.h	/^char *                 g_data_input_stream_read_until           (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_until_async	gdatainputstream.h	/^void                   g_data_input_stream_read_until_async     (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_until_finish	gdatainputstream.h	/^char *                 g_data_input_stream_read_until_finish    (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_upto	gdatainputstream.h	/^char *                 g_data_input_stream_read_upto            (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_upto_async	gdatainputstream.h	/^void                   g_data_input_stream_read_upto_async      (GDataInputStream        *stream,$/;"	p
g_data_input_stream_read_upto_finish	gdatainputstream.h	/^char *                 g_data_input_stream_read_upto_finish     (GDataInputStream        *stream,$/;"	p
g_data_input_stream_set_byte_order	gdatainputstream.h	/^void                   g_data_input_stream_set_byte_order       (GDataInputStream        *stream,$/;"	p
g_data_input_stream_set_newline_type	gdatainputstream.h	/^void                   g_data_input_stream_set_newline_type     (GDataInputStream        *stream,$/;"	p
g_data_output_stream_get_byte_order	gdataoutputstream.h	/^GDataStreamByteOrder g_data_output_stream_get_byte_order (GDataOutputStream     *stream);$/;"	p
g_data_output_stream_new	gdataoutputstream.h	/^GDataOutputStream *  g_data_output_stream_new            (GOutputStream         *base_stream);$/;"	p
g_data_output_stream_put_byte	gdataoutputstream.h	/^gboolean             g_data_output_stream_put_byte       (GDataOutputStream     *stream,$/;"	p
g_data_output_stream_put_int16	gdataoutputstream.h	/^gboolean             g_data_output_stream_put_int16      (GDataOutputStream     *stream,$/;"	p
g_data_output_stream_put_int32	gdataoutputstream.h	/^gboolean             g_data_output_stream_put_int32      (GDataOutputStream     *stream,$/;"	p
g_data_output_stream_put_int64	gdataoutputstream.h	/^gboolean             g_data_output_stream_put_int64      (GDataOutputStream     *stream,$/;"	p
g_data_output_stream_put_string	gdataoutputstream.h	/^gboolean             g_data_output_stream_put_string     (GDataOutputStream     *stream,$/;"	p
g_data_output_stream_put_uint16	gdataoutputstream.h	/^gboolean             g_data_output_stream_put_uint16     (GDataOutputStream     *stream,$/;"	p
g_data_output_stream_put_uint32	gdataoutputstream.h	/^gboolean             g_data_output_stream_put_uint32     (GDataOutputStream     *stream,$/;"	p
g_data_output_stream_put_uint64	gdataoutputstream.h	/^gboolean             g_data_output_stream_put_uint64     (GDataOutputStream     *stream,$/;"	p
g_data_output_stream_set_byte_order	gdataoutputstream.h	/^void                 g_data_output_stream_set_byte_order (GDataOutputStream     *stream,$/;"	p
g_dbus_action_group_get	gdbusactiongroup.h	/^GDBusActionGroup *      g_dbus_action_group_get                       (GDBusConnection        *connection,$/;"	p
g_dbus_address_get_for_bus_sync	gdbusaddress.h	/^gchar               *g_dbus_address_get_for_bus_sync  (GBusType              bus_type,$/;"	p
g_dbus_address_get_stream	gdbusaddress.h	/^void                 g_dbus_address_get_stream        (const gchar          *address,$/;"	p
g_dbus_address_get_stream_finish	gdbusaddress.h	/^GIOStream           *g_dbus_address_get_stream_finish (GAsyncResult         *res,$/;"	p
g_dbus_address_get_stream_sync	gdbusaddress.h	/^GIOStream           *g_dbus_address_get_stream_sync   (const gchar          *address,$/;"	p
g_dbus_annotation_info_lookup	gdbusintrospection.h	/^const gchar        *g_dbus_annotation_info_lookup          (GDBusAnnotationInfo **annotations,$/;"	p
g_dbus_annotation_info_ref	gdbusintrospection.h	/^GDBusAnnotationInfo *g_dbus_annotation_info_ref            (GDBusAnnotationInfo  *info);$/;"	p
g_dbus_annotation_info_unref	gdbusintrospection.h	/^void                 g_dbus_annotation_info_unref          (GDBusAnnotationInfo  *info);$/;"	p
g_dbus_arg_info_ref	gdbusintrospection.h	/^GDBusArgInfo        *g_dbus_arg_info_ref                   (GDBusArgInfo         *info);$/;"	p
g_dbus_arg_info_unref	gdbusintrospection.h	/^void                 g_dbus_arg_info_unref                 (GDBusArgInfo         *info);$/;"	p
g_dbus_auth_observer_authorize_authenticated_peer	gdbusauthobserver.h	/^gboolean           g_dbus_auth_observer_authorize_authenticated_peer (GDBusAuthObserver  *observer,$/;"	p
g_dbus_auth_observer_new	gdbusauthobserver.h	/^GDBusAuthObserver *g_dbus_auth_observer_new                          (void);$/;"	p
g_dbus_connection_add_filter	gdbusconnection.h	/^guint g_dbus_connection_add_filter (GDBusConnection            *connection,$/;"	p
g_dbus_connection_call	gdbusconnection.h	/^void      g_dbus_connection_call                              (GDBusConnection    *connection,$/;"	p
g_dbus_connection_call_finish	gdbusconnection.h	/^GVariant *g_dbus_connection_call_finish                       (GDBusConnection    *connection,$/;"	p
g_dbus_connection_call_sync	gdbusconnection.h	/^GVariant *g_dbus_connection_call_sync                         (GDBusConnection    *connection,$/;"	p
g_dbus_connection_call_with_unix_fd_list	gdbusconnection.h	/^void      g_dbus_connection_call_with_unix_fd_list            (GDBusConnection    *connection,$/;"	p
g_dbus_connection_call_with_unix_fd_list_finish	gdbusconnection.h	/^GVariant *g_dbus_connection_call_with_unix_fd_list_finish     (GDBusConnection    *connection,$/;"	p
g_dbus_connection_call_with_unix_fd_list_sync	gdbusconnection.h	/^GVariant *g_dbus_connection_call_with_unix_fd_list_sync       (GDBusConnection    *connection,$/;"	p
g_dbus_connection_close	gdbusconnection.h	/^void             g_dbus_connection_close                          (GDBusConnection     *connection,$/;"	p
g_dbus_connection_close_finish	gdbusconnection.h	/^gboolean         g_dbus_connection_close_finish                   (GDBusConnection     *connection,$/;"	p
g_dbus_connection_close_sync	gdbusconnection.h	/^gboolean         g_dbus_connection_close_sync                     (GDBusConnection     *connection,$/;"	p
g_dbus_connection_emit_signal	gdbusconnection.h	/^gboolean  g_dbus_connection_emit_signal                       (GDBusConnection    *connection,$/;"	p
g_dbus_connection_export_action_group	gactiongroupexporter.h	/^guint                   g_dbus_connection_export_action_group           (GDBusConnection  *connection,$/;"	p
g_dbus_connection_export_menu_model	gmenuexporter.h	/^guint                   g_dbus_connection_export_menu_model             (GDBusConnection  *connection,$/;"	p
g_dbus_connection_flush	gdbusconnection.h	/^void             g_dbus_connection_flush                          (GDBusConnection     *connection,$/;"	p
g_dbus_connection_flush_finish	gdbusconnection.h	/^gboolean         g_dbus_connection_flush_finish                   (GDBusConnection     *connection,$/;"	p
g_dbus_connection_flush_sync	gdbusconnection.h	/^gboolean         g_dbus_connection_flush_sync                     (GDBusConnection     *connection,$/;"	p
g_dbus_connection_get_capabilities	gdbusconnection.h	/^GDBusCapabilityFlags  g_dbus_connection_get_capabilities      (GDBusConnection    *connection);$/;"	p
g_dbus_connection_get_exit_on_close	gdbusconnection.h	/^gboolean         g_dbus_connection_get_exit_on_close          (GDBusConnection    *connection);$/;"	p
g_dbus_connection_get_guid	gdbusconnection.h	/^const gchar     *g_dbus_connection_get_guid                   (GDBusConnection    *connection);$/;"	p
g_dbus_connection_get_peer_credentials	gdbusconnection.h	/^GCredentials    *g_dbus_connection_get_peer_credentials       (GDBusConnection    *connection);$/;"	p
g_dbus_connection_get_stream	gdbusconnection.h	/^GIOStream       *g_dbus_connection_get_stream                 (GDBusConnection    *connection);$/;"	p
g_dbus_connection_get_unique_name	gdbusconnection.h	/^const gchar     *g_dbus_connection_get_unique_name            (GDBusConnection    *connection);$/;"	p
g_dbus_connection_is_closed	gdbusconnection.h	/^gboolean         g_dbus_connection_is_closed                  (GDBusConnection    *connection);$/;"	p
g_dbus_connection_new	gdbusconnection.h	/^void             g_dbus_connection_new                        (GIOStream              *stream,$/;"	p
g_dbus_connection_new_finish	gdbusconnection.h	/^GDBusConnection *g_dbus_connection_new_finish                 (GAsyncResult           *res,$/;"	p
g_dbus_connection_new_for_address	gdbusconnection.h	/^void             g_dbus_connection_new_for_address            (const gchar            *address,$/;"	p
g_dbus_connection_new_for_address_finish	gdbusconnection.h	/^GDBusConnection *g_dbus_connection_new_for_address_finish     (GAsyncResult           *res,$/;"	p
g_dbus_connection_new_for_address_sync	gdbusconnection.h	/^GDBusConnection *g_dbus_connection_new_for_address_sync       (const gchar            *address,$/;"	p
g_dbus_connection_new_sync	gdbusconnection.h	/^GDBusConnection *g_dbus_connection_new_sync                   (GIOStream              *stream,$/;"	p
g_dbus_connection_register_object	gdbusconnection.h	/^guint            g_dbus_connection_register_object            (GDBusConnection            *connection,$/;"	p
g_dbus_connection_register_subtree	gdbusconnection.h	/^guint            g_dbus_connection_register_subtree           (GDBusConnection            *connection,$/;"	p
g_dbus_connection_remove_filter	gdbusconnection.h	/^void  g_dbus_connection_remove_filter (GDBusConnection    *connection,$/;"	p
g_dbus_connection_send_message	gdbusconnection.h	/^gboolean         g_dbus_connection_send_message                   (GDBusConnection     *connection,$/;"	p
g_dbus_connection_send_message_with_reply	gdbusconnection.h	/^void             g_dbus_connection_send_message_with_reply        (GDBusConnection     *connection,$/;"	p
g_dbus_connection_send_message_with_reply_finish	gdbusconnection.h	/^GDBusMessage    *g_dbus_connection_send_message_with_reply_finish (GDBusConnection     *connection,$/;"	p
g_dbus_connection_send_message_with_reply_sync	gdbusconnection.h	/^GDBusMessage    *g_dbus_connection_send_message_with_reply_sync   (GDBusConnection     *connection,$/;"	p
g_dbus_connection_set_exit_on_close	gdbusconnection.h	/^void             g_dbus_connection_set_exit_on_close          (GDBusConnection    *connection,$/;"	p
g_dbus_connection_signal_subscribe	gdbusconnection.h	/^guint            g_dbus_connection_signal_subscribe           (GDBusConnection     *connection,$/;"	p
g_dbus_connection_signal_unsubscribe	gdbusconnection.h	/^void             g_dbus_connection_signal_unsubscribe         (GDBusConnection     *connection,$/;"	p
g_dbus_connection_start_message_processing	gdbusconnection.h	/^void             g_dbus_connection_start_message_processing   (GDBusConnection    *connection);$/;"	p
g_dbus_connection_unexport_action_group	gactiongroupexporter.h	/^void                    g_dbus_connection_unexport_action_group         (GDBusConnection  *connection,$/;"	p
g_dbus_connection_unexport_menu_model	gmenuexporter.h	/^void                    g_dbus_connection_unexport_menu_model           (GDBusConnection  *connection,$/;"	p
g_dbus_connection_unregister_object	gdbusconnection.h	/^gboolean         g_dbus_connection_unregister_object          (GDBusConnection            *connection,$/;"	p
g_dbus_connection_unregister_subtree	gdbusconnection.h	/^gboolean         g_dbus_connection_unregister_subtree         (GDBusConnection            *connection,$/;"	p
g_dbus_error_encode_gerror	gdbuserror.h	/^gchar   *g_dbus_error_encode_gerror         (const GError    *error);$/;"	p
g_dbus_error_get_remote_error	gdbuserror.h	/^gchar   *g_dbus_error_get_remote_error      (const GError    *error);$/;"	p
g_dbus_error_is_remote_error	gdbuserror.h	/^gboolean g_dbus_error_is_remote_error       (const GError    *error);$/;"	p
g_dbus_error_new_for_dbus_error	gdbuserror.h	/^GError  *g_dbus_error_new_for_dbus_error    (const gchar     *dbus_error_name,$/;"	p
g_dbus_error_quark	gdbuserror.h	/^GQuark g_dbus_error_quark (void);$/;"	p
g_dbus_error_register_error	gdbuserror.h	/^gboolean g_dbus_error_register_error        (GQuark                 error_domain,$/;"	p
g_dbus_error_register_error_domain	gdbuserror.h	/^void     g_dbus_error_register_error_domain (const gchar           *error_domain_quark_name,$/;"	p
g_dbus_error_set_dbus_error	gdbuserror.h	/^void     g_dbus_error_set_dbus_error        (GError         **error,$/;"	p
g_dbus_error_set_dbus_error_valist	gdbuserror.h	/^void     g_dbus_error_set_dbus_error_valist (GError         **error,$/;"	p
g_dbus_error_strip_remote_error	gdbuserror.h	/^gboolean g_dbus_error_strip_remote_error    (GError          *error);$/;"	p
g_dbus_error_unregister_error	gdbuserror.h	/^gboolean g_dbus_error_unregister_error      (GQuark                 error_domain,$/;"	p
g_dbus_generate_guid	gdbusutils.h	/^gchar *g_dbus_generate_guid (void);$/;"	p
g_dbus_gvalue_to_gvariant	gdbusutils.h	/^GVariant *g_dbus_gvalue_to_gvariant (const GValue         *gvalue,$/;"	p
g_dbus_gvariant_to_gvalue	gdbusutils.h	/^void g_dbus_gvariant_to_gvalue (GVariant  *value,$/;"	p
g_dbus_interface_dup_object	gdbusinterface.h	/^GDBusObject          *g_dbus_interface_dup_object       (GDBusInterface      *interface_);$/;"	p
g_dbus_interface_get_info	gdbusinterface.h	/^GDBusInterfaceInfo   *g_dbus_interface_get_info         (GDBusInterface      *interface_);$/;"	p
g_dbus_interface_get_object	gdbusinterface.h	/^GDBusObject          *g_dbus_interface_get_object       (GDBusInterface      *interface_);$/;"	p
g_dbus_interface_info_cache_build	gdbusintrospection.h	/^void                g_dbus_interface_info_cache_build      (GDBusInterfaceInfo   *info);$/;"	p
g_dbus_interface_info_cache_release	gdbusintrospection.h	/^void                g_dbus_interface_info_cache_release    (GDBusInterfaceInfo   *info);$/;"	p
g_dbus_interface_info_generate_xml	gdbusintrospection.h	/^void                g_dbus_interface_info_generate_xml     (GDBusInterfaceInfo   *info,$/;"	p
g_dbus_interface_info_lookup_method	gdbusintrospection.h	/^GDBusMethodInfo    *g_dbus_interface_info_lookup_method    (GDBusInterfaceInfo   *info,$/;"	p
g_dbus_interface_info_lookup_property	gdbusintrospection.h	/^GDBusPropertyInfo  *g_dbus_interface_info_lookup_property  (GDBusInterfaceInfo   *info,$/;"	p
g_dbus_interface_info_lookup_signal	gdbusintrospection.h	/^GDBusSignalInfo    *g_dbus_interface_info_lookup_signal    (GDBusInterfaceInfo   *info,$/;"	p
g_dbus_interface_info_ref	gdbusintrospection.h	/^GDBusInterfaceInfo  *g_dbus_interface_info_ref             (GDBusInterfaceInfo   *info);$/;"	p
g_dbus_interface_info_unref	gdbusintrospection.h	/^void                 g_dbus_interface_info_unref           (GDBusInterfaceInfo   *info);$/;"	p
g_dbus_interface_set_object	gdbusinterface.h	/^void                  g_dbus_interface_set_object       (GDBusInterface      *interface_,$/;"	p
g_dbus_interface_skeleton_export	gdbusinterfaceskeleton.h	/^gboolean                     g_dbus_interface_skeleton_export          (GDBusInterfaceSkeleton      *interface_,$/;"	p
g_dbus_interface_skeleton_flush	gdbusinterfaceskeleton.h	/^void                         g_dbus_interface_skeleton_flush           (GDBusInterfaceSkeleton      *interface_);$/;"	p
g_dbus_interface_skeleton_get_connection	gdbusinterfaceskeleton.h	/^GDBusConnection             *g_dbus_interface_skeleton_get_connection  (GDBusInterfaceSkeleton      *interface_);$/;"	p
g_dbus_interface_skeleton_get_connections	gdbusinterfaceskeleton.h	/^GList                       *g_dbus_interface_skeleton_get_connections (GDBusInterfaceSkeleton      *interface_);$/;"	p
g_dbus_interface_skeleton_get_flags	gdbusinterfaceskeleton.h	/^GDBusInterfaceSkeletonFlags  g_dbus_interface_skeleton_get_flags       (GDBusInterfaceSkeleton      *interface_);$/;"	p
g_dbus_interface_skeleton_get_info	gdbusinterfaceskeleton.h	/^GDBusInterfaceInfo          *g_dbus_interface_skeleton_get_info        (GDBusInterfaceSkeleton      *interface_);$/;"	p
g_dbus_interface_skeleton_get_object_path	gdbusinterfaceskeleton.h	/^const gchar                 *g_dbus_interface_skeleton_get_object_path (GDBusInterfaceSkeleton      *interface_);$/;"	p
g_dbus_interface_skeleton_get_properties	gdbusinterfaceskeleton.h	/^GVariant                    *g_dbus_interface_skeleton_get_properties  (GDBusInterfaceSkeleton      *interface_);$/;"	p
g_dbus_interface_skeleton_get_vtable	gdbusinterfaceskeleton.h	/^GDBusInterfaceVTable        *g_dbus_interface_skeleton_get_vtable      (GDBusInterfaceSkeleton      *interface_);$/;"	p
g_dbus_interface_skeleton_has_connection	gdbusinterfaceskeleton.h	/^gboolean                     g_dbus_interface_skeleton_has_connection  (GDBusInterfaceSkeleton      *interface_,$/;"	p
g_dbus_interface_skeleton_set_flags	gdbusinterfaceskeleton.h	/^void                         g_dbus_interface_skeleton_set_flags       (GDBusInterfaceSkeleton      *interface_,$/;"	p
g_dbus_interface_skeleton_unexport	gdbusinterfaceskeleton.h	/^void                         g_dbus_interface_skeleton_unexport        (GDBusInterfaceSkeleton      *interface_);$/;"	p
g_dbus_interface_skeleton_unexport_from_connection	gdbusinterfaceskeleton.h	/^void                g_dbus_interface_skeleton_unexport_from_connection (GDBusInterfaceSkeleton      *interface_,$/;"	p
g_dbus_is_address	gdbusaddress.h	/^gboolean g_dbus_is_address (const gchar *string);$/;"	p
g_dbus_is_guid	gdbusutils.h	/^gboolean g_dbus_is_guid (const gchar *string);$/;"	p
g_dbus_is_interface_name	gdbusutils.h	/^gboolean g_dbus_is_interface_name (const gchar *string);$/;"	p
g_dbus_is_member_name	gdbusutils.h	/^gboolean g_dbus_is_member_name (const gchar *string);$/;"	p
g_dbus_is_name	gdbusutils.h	/^gboolean g_dbus_is_name (const gchar *string);$/;"	p
g_dbus_is_supported_address	gdbusaddress.h	/^gboolean g_dbus_is_supported_address (const gchar  *string,$/;"	p
g_dbus_is_unique_name	gdbusutils.h	/^gboolean g_dbus_is_unique_name (const gchar *string);$/;"	p
g_dbus_menu_model_get	gdbusmenumodel.h	/^GDBusMenuModel *        g_dbus_menu_model_get          (GDBusConnection *connection,$/;"	p
g_dbus_message_bytes_needed	gdbusmessage.h	/^gssize                    g_dbus_message_bytes_needed       (guchar                   *blob,$/;"	p
g_dbus_message_copy	gdbusmessage.h	/^GDBusMessage             *g_dbus_message_copy               (GDBusMessage             *message,$/;"	p
g_dbus_message_get_arg0	gdbusmessage.h	/^const gchar              *g_dbus_message_get_arg0           (GDBusMessage             *message);$/;"	p
g_dbus_message_get_body	gdbusmessage.h	/^GVariant                 *g_dbus_message_get_body           (GDBusMessage             *message);$/;"	p
g_dbus_message_get_byte_order	gdbusmessage.h	/^GDBusMessageByteOrder     g_dbus_message_get_byte_order     (GDBusMessage             *message);$/;"	p
g_dbus_message_get_destination	gdbusmessage.h	/^const gchar              *g_dbus_message_get_destination    (GDBusMessage             *message);$/;"	p
g_dbus_message_get_error_name	gdbusmessage.h	/^const gchar              *g_dbus_message_get_error_name     (GDBusMessage             *message);$/;"	p
g_dbus_message_get_flags	gdbusmessage.h	/^GDBusMessageFlags         g_dbus_message_get_flags          (GDBusMessage             *message);$/;"	p
g_dbus_message_get_header	gdbusmessage.h	/^GVariant                 *g_dbus_message_get_header         (GDBusMessage             *message,$/;"	p
g_dbus_message_get_header_fields	gdbusmessage.h	/^guchar                   *g_dbus_message_get_header_fields  (GDBusMessage             *message);$/;"	p
g_dbus_message_get_interface	gdbusmessage.h	/^const gchar              *g_dbus_message_get_interface      (GDBusMessage             *message);$/;"	p
g_dbus_message_get_locked	gdbusmessage.h	/^gboolean                  g_dbus_message_get_locked         (GDBusMessage             *message);$/;"	p
g_dbus_message_get_member	gdbusmessage.h	/^const gchar              *g_dbus_message_get_member         (GDBusMessage             *message);$/;"	p
g_dbus_message_get_message_type	gdbusmessage.h	/^GDBusMessageType          g_dbus_message_get_message_type   (GDBusMessage             *message);$/;"	p
g_dbus_message_get_num_unix_fds	gdbusmessage.h	/^guint32                   g_dbus_message_get_num_unix_fds   (GDBusMessage             *message);$/;"	p
g_dbus_message_get_path	gdbusmessage.h	/^const gchar              *g_dbus_message_get_path           (GDBusMessage             *message);$/;"	p
g_dbus_message_get_reply_serial	gdbusmessage.h	/^guint32                   g_dbus_message_get_reply_serial   (GDBusMessage             *message);$/;"	p
g_dbus_message_get_sender	gdbusmessage.h	/^const gchar              *g_dbus_message_get_sender         (GDBusMessage             *message);$/;"	p
g_dbus_message_get_serial	gdbusmessage.h	/^guint32                   g_dbus_message_get_serial         (GDBusMessage             *message);$/;"	p
g_dbus_message_get_signature	gdbusmessage.h	/^const gchar              *g_dbus_message_get_signature      (GDBusMessage             *message);$/;"	p
g_dbus_message_get_unix_fd_list	gdbusmessage.h	/^GUnixFDList              *g_dbus_message_get_unix_fd_list   (GDBusMessage             *message);$/;"	p
g_dbus_message_lock	gdbusmessage.h	/^void                      g_dbus_message_lock               (GDBusMessage             *message);$/;"	p
g_dbus_message_new	gdbusmessage.h	/^GDBusMessage             *g_dbus_message_new                (void);$/;"	p
g_dbus_message_new_from_blob	gdbusmessage.h	/^GDBusMessage             *g_dbus_message_new_from_blob      (guchar                   *blob,$/;"	p
g_dbus_message_new_method_call	gdbusmessage.h	/^GDBusMessage             *g_dbus_message_new_method_call    (const gchar              *name,$/;"	p
g_dbus_message_new_method_error	gdbusmessage.h	/^GDBusMessage             *g_dbus_message_new_method_error   (GDBusMessage             *method_call_message,$/;"	p
g_dbus_message_new_method_error_literal	gdbusmessage.h	/^GDBusMessage             *g_dbus_message_new_method_error_literal (GDBusMessage             *method_call_message,$/;"	p
g_dbus_message_new_method_error_valist	gdbusmessage.h	/^GDBusMessage             *g_dbus_message_new_method_error_valist (GDBusMessage             *method_call_message,$/;"	p
g_dbus_message_new_method_reply	gdbusmessage.h	/^GDBusMessage             *g_dbus_message_new_method_reply   (GDBusMessage             *method_call_message);$/;"	p
g_dbus_message_new_signal	gdbusmessage.h	/^GDBusMessage             *g_dbus_message_new_signal         (const gchar              *path,$/;"	p
g_dbus_message_print	gdbusmessage.h	/^gchar                    *g_dbus_message_print              (GDBusMessage             *message,$/;"	p
g_dbus_message_set_body	gdbusmessage.h	/^void                      g_dbus_message_set_body           (GDBusMessage             *message,$/;"	p
g_dbus_message_set_byte_order	gdbusmessage.h	/^void                      g_dbus_message_set_byte_order     (GDBusMessage             *message,$/;"	p
g_dbus_message_set_destination	gdbusmessage.h	/^void                      g_dbus_message_set_destination    (GDBusMessage             *message,$/;"	p
g_dbus_message_set_error_name	gdbusmessage.h	/^void                      g_dbus_message_set_error_name     (GDBusMessage             *message,$/;"	p
g_dbus_message_set_flags	gdbusmessage.h	/^void                      g_dbus_message_set_flags          (GDBusMessage             *message,$/;"	p
g_dbus_message_set_header	gdbusmessage.h	/^void                      g_dbus_message_set_header         (GDBusMessage             *message,$/;"	p
g_dbus_message_set_interface	gdbusmessage.h	/^void                      g_dbus_message_set_interface      (GDBusMessage             *message,$/;"	p
g_dbus_message_set_member	gdbusmessage.h	/^void                      g_dbus_message_set_member         (GDBusMessage             *message,$/;"	p
g_dbus_message_set_message_type	gdbusmessage.h	/^void                      g_dbus_message_set_message_type   (GDBusMessage             *message,$/;"	p
g_dbus_message_set_num_unix_fds	gdbusmessage.h	/^void                      g_dbus_message_set_num_unix_fds   (GDBusMessage             *message,$/;"	p
g_dbus_message_set_path	gdbusmessage.h	/^void                      g_dbus_message_set_path           (GDBusMessage             *message,$/;"	p
g_dbus_message_set_reply_serial	gdbusmessage.h	/^void                      g_dbus_message_set_reply_serial   (GDBusMessage             *message,$/;"	p
g_dbus_message_set_sender	gdbusmessage.h	/^void                      g_dbus_message_set_sender         (GDBusMessage             *message,$/;"	p
g_dbus_message_set_serial	gdbusmessage.h	/^void                      g_dbus_message_set_serial         (GDBusMessage             *message,$/;"	p
g_dbus_message_set_signature	gdbusmessage.h	/^void                      g_dbus_message_set_signature      (GDBusMessage             *message,$/;"	p
g_dbus_message_set_unix_fd_list	gdbusmessage.h	/^void                      g_dbus_message_set_unix_fd_list   (GDBusMessage             *message,$/;"	p
g_dbus_message_to_blob	gdbusmessage.h	/^guchar                   *g_dbus_message_to_blob            (GDBusMessage             *message,$/;"	p
g_dbus_message_to_gerror	gdbusmessage.h	/^gboolean                  g_dbus_message_to_gerror          (GDBusMessage             *message,$/;"	p
g_dbus_method_info_ref	gdbusintrospection.h	/^GDBusMethodInfo     *g_dbus_method_info_ref                (GDBusMethodInfo      *info);$/;"	p
g_dbus_method_info_unref	gdbusintrospection.h	/^void                 g_dbus_method_info_unref              (GDBusMethodInfo      *info);$/;"	p
g_dbus_method_invocation_get_connection	gdbusmethodinvocation.h	/^GDBusConnection       *g_dbus_method_invocation_get_connection       (GDBusMethodInvocation *invocation);$/;"	p
g_dbus_method_invocation_get_interface_name	gdbusmethodinvocation.h	/^const gchar           *g_dbus_method_invocation_get_interface_name   (GDBusMethodInvocation *invocation);$/;"	p
g_dbus_method_invocation_get_message	gdbusmethodinvocation.h	/^GDBusMessage          *g_dbus_method_invocation_get_message          (GDBusMethodInvocation *invocation);$/;"	p
g_dbus_method_invocation_get_method_info	gdbusmethodinvocation.h	/^const GDBusMethodInfo *g_dbus_method_invocation_get_method_info      (GDBusMethodInvocation *invocation);$/;"	p
g_dbus_method_invocation_get_method_name	gdbusmethodinvocation.h	/^const gchar           *g_dbus_method_invocation_get_method_name      (GDBusMethodInvocation *invocation);$/;"	p
g_dbus_method_invocation_get_object_path	gdbusmethodinvocation.h	/^const gchar           *g_dbus_method_invocation_get_object_path      (GDBusMethodInvocation *invocation);$/;"	p
g_dbus_method_invocation_get_parameters	gdbusmethodinvocation.h	/^GVariant              *g_dbus_method_invocation_get_parameters       (GDBusMethodInvocation *invocation);$/;"	p
g_dbus_method_invocation_get_sender	gdbusmethodinvocation.h	/^const gchar           *g_dbus_method_invocation_get_sender           (GDBusMethodInvocation *invocation);$/;"	p
g_dbus_method_invocation_get_user_data	gdbusmethodinvocation.h	/^gpointer               g_dbus_method_invocation_get_user_data        (GDBusMethodInvocation *invocation);$/;"	p
g_dbus_method_invocation_return_dbus_error	gdbusmethodinvocation.h	/^void                   g_dbus_method_invocation_return_dbus_error    (GDBusMethodInvocation *invocation,$/;"	p
g_dbus_method_invocation_return_error	gdbusmethodinvocation.h	/^void                   g_dbus_method_invocation_return_error         (GDBusMethodInvocation *invocation,$/;"	p
g_dbus_method_invocation_return_error_literal	gdbusmethodinvocation.h	/^void                   g_dbus_method_invocation_return_error_literal (GDBusMethodInvocation *invocation,$/;"	p
g_dbus_method_invocation_return_error_valist	gdbusmethodinvocation.h	/^void                   g_dbus_method_invocation_return_error_valist  (GDBusMethodInvocation *invocation,$/;"	p
g_dbus_method_invocation_return_gerror	gdbusmethodinvocation.h	/^void                   g_dbus_method_invocation_return_gerror        (GDBusMethodInvocation *invocation,$/;"	p
g_dbus_method_invocation_return_value	gdbusmethodinvocation.h	/^void                   g_dbus_method_invocation_return_value         (GDBusMethodInvocation *invocation,$/;"	p
g_dbus_method_invocation_return_value_with_unix_fd_list	gdbusmethodinvocation.h	/^void                   g_dbus_method_invocation_return_value_with_unix_fd_list (GDBusMethodInvocation *invocation,$/;"	p
g_dbus_method_invocation_take_error	gdbusmethodinvocation.h	/^void                   g_dbus_method_invocation_take_error           (GDBusMethodInvocation *invocation,$/;"	p
g_dbus_node_info_generate_xml	gdbusintrospection.h	/^void                g_dbus_node_info_generate_xml          (GDBusNodeInfo        *info,$/;"	p
g_dbus_node_info_lookup_interface	gdbusintrospection.h	/^GDBusInterfaceInfo *g_dbus_node_info_lookup_interface      (GDBusNodeInfo        *info,$/;"	p
g_dbus_node_info_new_for_xml	gdbusintrospection.h	/^GDBusNodeInfo      *g_dbus_node_info_new_for_xml           (const gchar          *xml_data,$/;"	p
g_dbus_node_info_ref	gdbusintrospection.h	/^GDBusNodeInfo       *g_dbus_node_info_ref                  (GDBusNodeInfo        *info);$/;"	p
g_dbus_node_info_unref	gdbusintrospection.h	/^void                 g_dbus_node_info_unref                (GDBusNodeInfo        *info);$/;"	p
g_dbus_object_get_interface	gdbusobject.h	/^GDBusInterface  *g_dbus_object_get_interface   (GDBusObject  *object,$/;"	p
g_dbus_object_get_interfaces	gdbusobject.h	/^GList           *g_dbus_object_get_interfaces  (GDBusObject  *object);$/;"	p
g_dbus_object_get_object_path	gdbusobject.h	/^const gchar     *g_dbus_object_get_object_path (GDBusObject  *object);$/;"	p
g_dbus_object_manager_client_get_connection	gdbusobjectmanagerclient.h	/^GDBusConnection              *g_dbus_object_manager_client_get_connection     (GDBusObjectManagerClient      *manager);$/;"	p
g_dbus_object_manager_client_get_flags	gdbusobjectmanagerclient.h	/^GDBusObjectManagerClientFlags g_dbus_object_manager_client_get_flags          (GDBusObjectManagerClient      *manager);$/;"	p
g_dbus_object_manager_client_get_name	gdbusobjectmanagerclient.h	/^const gchar                  *g_dbus_object_manager_client_get_name           (GDBusObjectManagerClient      *manager);$/;"	p
g_dbus_object_manager_client_get_name_owner	gdbusobjectmanagerclient.h	/^gchar                        *g_dbus_object_manager_client_get_name_owner     (GDBusObjectManagerClient      *manager);$/;"	p
g_dbus_object_manager_client_new	gdbusobjectmanagerclient.h	/^void                          g_dbus_object_manager_client_new                (GDBusConnection               *connection,$/;"	p
g_dbus_object_manager_client_new_finish	gdbusobjectmanagerclient.h	/^GDBusObjectManager           *g_dbus_object_manager_client_new_finish         (GAsyncResult                  *res,$/;"	p
g_dbus_object_manager_client_new_for_bus	gdbusobjectmanagerclient.h	/^void                          g_dbus_object_manager_client_new_for_bus        (GBusType                       bus_type,$/;"	p
g_dbus_object_manager_client_new_for_bus_finish	gdbusobjectmanagerclient.h	/^GDBusObjectManager           *g_dbus_object_manager_client_new_for_bus_finish (GAsyncResult                  *res,$/;"	p
g_dbus_object_manager_client_new_for_bus_sync	gdbusobjectmanagerclient.h	/^GDBusObjectManager           *g_dbus_object_manager_client_new_for_bus_sync   (GBusType                       bus_type,$/;"	p
g_dbus_object_manager_client_new_sync	gdbusobjectmanagerclient.h	/^GDBusObjectManager           *g_dbus_object_manager_client_new_sync           (GDBusConnection               *connection,$/;"	p
g_dbus_object_manager_get_interface	gdbusobjectmanager.h	/^GDBusInterface  *g_dbus_object_manager_get_interface   (GDBusObjectManager    *manager,$/;"	p
g_dbus_object_manager_get_object	gdbusobjectmanager.h	/^GDBusObject     *g_dbus_object_manager_get_object      (GDBusObjectManager    *manager,$/;"	p
g_dbus_object_manager_get_object_path	gdbusobjectmanager.h	/^const gchar     *g_dbus_object_manager_get_object_path (GDBusObjectManager    *manager);$/;"	p
g_dbus_object_manager_get_objects	gdbusobjectmanager.h	/^GList           *g_dbus_object_manager_get_objects     (GDBusObjectManager    *manager);$/;"	p
g_dbus_object_manager_server_export	gdbusobjectmanagerserver.h	/^void                      g_dbus_object_manager_server_export              (GDBusObjectManagerServer  *manager,$/;"	p
g_dbus_object_manager_server_export_uniquely	gdbusobjectmanagerserver.h	/^void                      g_dbus_object_manager_server_export_uniquely     (GDBusObjectManagerServer  *manager,$/;"	p
g_dbus_object_manager_server_get_connection	gdbusobjectmanagerserver.h	/^GDBusConnection          *g_dbus_object_manager_server_get_connection      (GDBusObjectManagerServer  *manager);$/;"	p
g_dbus_object_manager_server_new	gdbusobjectmanagerserver.h	/^GDBusObjectManagerServer *g_dbus_object_manager_server_new                 (const gchar               *object_path);$/;"	p
g_dbus_object_manager_server_set_connection	gdbusobjectmanagerserver.h	/^void                      g_dbus_object_manager_server_set_connection      (GDBusObjectManagerServer  *manager,$/;"	p
g_dbus_object_manager_server_unexport	gdbusobjectmanagerserver.h	/^gboolean                  g_dbus_object_manager_server_unexport            (GDBusObjectManagerServer  *manager,$/;"	p
g_dbus_object_proxy_get_connection	gdbusobjectproxy.h	/^GDBusConnection  *g_dbus_object_proxy_get_connection (GDBusObjectProxy  *proxy);$/;"	p
g_dbus_object_proxy_new	gdbusobjectproxy.h	/^GDBusObjectProxy *g_dbus_object_proxy_new            (GDBusConnection   *connection,$/;"	p
g_dbus_object_skeleton_add_interface	gdbusobjectskeleton.h	/^void                 g_dbus_object_skeleton_add_interface             (GDBusObjectSkeleton    *object,$/;"	p
g_dbus_object_skeleton_flush	gdbusobjectskeleton.h	/^void                 g_dbus_object_skeleton_flush                     (GDBusObjectSkeleton    *object);$/;"	p
g_dbus_object_skeleton_new	gdbusobjectskeleton.h	/^GDBusObjectSkeleton *g_dbus_object_skeleton_new                       (const gchar            *object_path);$/;"	p
g_dbus_object_skeleton_remove_interface	gdbusobjectskeleton.h	/^void                 g_dbus_object_skeleton_remove_interface          (GDBusObjectSkeleton    *object,$/;"	p
g_dbus_object_skeleton_remove_interface_by_name	gdbusobjectskeleton.h	/^void                 g_dbus_object_skeleton_remove_interface_by_name  (GDBusObjectSkeleton    *object,$/;"	p
g_dbus_object_skeleton_set_object_path	gdbusobjectskeleton.h	/^void                 g_dbus_object_skeleton_set_object_path           (GDBusObjectSkeleton    *object,$/;"	p
g_dbus_property_info_ref	gdbusintrospection.h	/^GDBusPropertyInfo   *g_dbus_property_info_ref              (GDBusPropertyInfo    *info);$/;"	p
g_dbus_property_info_unref	gdbusintrospection.h	/^void                 g_dbus_property_info_unref            (GDBusPropertyInfo    *info);$/;"	p
g_dbus_proxy_call	gdbusproxy.h	/^void             g_dbus_proxy_call                      (GDBusProxy          *proxy,$/;"	p
g_dbus_proxy_call_finish	gdbusproxy.h	/^GVariant        *g_dbus_proxy_call_finish               (GDBusProxy          *proxy,$/;"	p
g_dbus_proxy_call_sync	gdbusproxy.h	/^GVariant        *g_dbus_proxy_call_sync                 (GDBusProxy          *proxy,$/;"	p
g_dbus_proxy_call_with_unix_fd_list	gdbusproxy.h	/^void             g_dbus_proxy_call_with_unix_fd_list        (GDBusProxy          *proxy,$/;"	p
g_dbus_proxy_call_with_unix_fd_list_finish	gdbusproxy.h	/^GVariant        *g_dbus_proxy_call_with_unix_fd_list_finish (GDBusProxy          *proxy,$/;"	p
g_dbus_proxy_call_with_unix_fd_list_sync	gdbusproxy.h	/^GVariant        *g_dbus_proxy_call_with_unix_fd_list_sync   (GDBusProxy          *proxy,$/;"	p
g_dbus_proxy_get_cached_property	gdbusproxy.h	/^GVariant        *g_dbus_proxy_get_cached_property       (GDBusProxy          *proxy,$/;"	p
g_dbus_proxy_get_cached_property_names	gdbusproxy.h	/^gchar          **g_dbus_proxy_get_cached_property_names (GDBusProxy          *proxy);$/;"	p
g_dbus_proxy_get_connection	gdbusproxy.h	/^GDBusConnection *g_dbus_proxy_get_connection            (GDBusProxy          *proxy);$/;"	p
g_dbus_proxy_get_default_timeout	gdbusproxy.h	/^gint             g_dbus_proxy_get_default_timeout       (GDBusProxy          *proxy);$/;"	p
g_dbus_proxy_get_flags	gdbusproxy.h	/^GDBusProxyFlags  g_dbus_proxy_get_flags                 (GDBusProxy          *proxy);$/;"	p
g_dbus_proxy_get_interface_info	gdbusproxy.h	/^GDBusInterfaceInfo *g_dbus_proxy_get_interface_info     (GDBusProxy          *proxy);$/;"	p
g_dbus_proxy_get_interface_name	gdbusproxy.h	/^const gchar     *g_dbus_proxy_get_interface_name        (GDBusProxy          *proxy);$/;"	p
g_dbus_proxy_get_name	gdbusproxy.h	/^const gchar     *g_dbus_proxy_get_name                  (GDBusProxy          *proxy);$/;"	p
g_dbus_proxy_get_name_owner	gdbusproxy.h	/^gchar           *g_dbus_proxy_get_name_owner            (GDBusProxy          *proxy);$/;"	p
g_dbus_proxy_get_object_path	gdbusproxy.h	/^const gchar     *g_dbus_proxy_get_object_path           (GDBusProxy          *proxy);$/;"	p
g_dbus_proxy_new	gdbusproxy.h	/^void             g_dbus_proxy_new                       (GDBusConnection     *connection,$/;"	p
g_dbus_proxy_new_finish	gdbusproxy.h	/^GDBusProxy      *g_dbus_proxy_new_finish                (GAsyncResult        *res,$/;"	p
g_dbus_proxy_new_for_bus	gdbusproxy.h	/^void             g_dbus_proxy_new_for_bus               (GBusType             bus_type,$/;"	p
g_dbus_proxy_new_for_bus_finish	gdbusproxy.h	/^GDBusProxy      *g_dbus_proxy_new_for_bus_finish        (GAsyncResult        *res,$/;"	p
g_dbus_proxy_new_for_bus_sync	gdbusproxy.h	/^GDBusProxy      *g_dbus_proxy_new_for_bus_sync          (GBusType             bus_type,$/;"	p
g_dbus_proxy_new_sync	gdbusproxy.h	/^GDBusProxy      *g_dbus_proxy_new_sync                  (GDBusConnection     *connection,$/;"	p
g_dbus_proxy_set_cached_property	gdbusproxy.h	/^void             g_dbus_proxy_set_cached_property       (GDBusProxy          *proxy,$/;"	p
g_dbus_proxy_set_default_timeout	gdbusproxy.h	/^void             g_dbus_proxy_set_default_timeout       (GDBusProxy          *proxy,$/;"	p
g_dbus_proxy_set_interface_info	gdbusproxy.h	/^void             g_dbus_proxy_set_interface_info        (GDBusProxy           *proxy,$/;"	p
g_dbus_server_get_client_address	gdbusserver.h	/^const gchar      *g_dbus_server_get_client_address (GDBusServer       *server);$/;"	p
g_dbus_server_get_flags	gdbusserver.h	/^GDBusServerFlags  g_dbus_server_get_flags          (GDBusServer       *server);$/;"	p
g_dbus_server_get_guid	gdbusserver.h	/^const gchar      *g_dbus_server_get_guid           (GDBusServer       *server);$/;"	p
g_dbus_server_is_active	gdbusserver.h	/^gboolean          g_dbus_server_is_active          (GDBusServer       *server);$/;"	p
g_dbus_server_new_sync	gdbusserver.h	/^GDBusServer      *g_dbus_server_new_sync           (const gchar       *address,$/;"	p
g_dbus_server_start	gdbusserver.h	/^void              g_dbus_server_start              (GDBusServer       *server);$/;"	p
g_dbus_server_stop	gdbusserver.h	/^void              g_dbus_server_stop               (GDBusServer       *server);$/;"	p
g_dbus_signal_info_ref	gdbusintrospection.h	/^GDBusSignalInfo     *g_dbus_signal_info_ref                (GDBusSignalInfo      *info);$/;"	p
g_dbus_signal_info_unref	gdbusintrospection.h	/^void                 g_dbus_signal_info_unref              (GDBusSignalInfo      *info);$/;"	p
g_drive_can_eject	gdrive.h	/^gboolean g_drive_can_eject                (GDrive               *drive);$/;"	p
g_drive_can_poll_for_media	gdrive.h	/^gboolean g_drive_can_poll_for_media       (GDrive               *drive);$/;"	p
g_drive_can_start	gdrive.h	/^gboolean g_drive_can_start                (GDrive              *drive);$/;"	p
g_drive_can_start_degraded	gdrive.h	/^gboolean g_drive_can_start_degraded       (GDrive              *drive);$/;"	p
g_drive_can_stop	gdrive.h	/^gboolean g_drive_can_stop                 (GDrive               *drive);$/;"	p
g_drive_eject_finish	gdrive.h	/^gboolean g_drive_eject_finish             (GDrive               *drive,$/;"	v
g_drive_eject_with_operation	gdrive.h	/^void        g_drive_eject_with_operation      (GDrive              *drive,$/;"	p
g_drive_eject_with_operation_finish	gdrive.h	/^gboolean    g_drive_eject_with_operation_finish (GDrive            *drive,$/;"	p
g_drive_enumerate_identifiers	gdrive.h	/^char **  g_drive_enumerate_identifiers    (GDrive              *drive);$/;"	p
g_drive_get_icon	gdrive.h	/^GIcon *  g_drive_get_icon                 (GDrive               *drive);$/;"	p
g_drive_get_identifier	gdrive.h	/^char *   g_drive_get_identifier           (GDrive              *drive,$/;"	p
g_drive_get_name	gdrive.h	/^char *   g_drive_get_name                 (GDrive               *drive);$/;"	p
g_drive_get_sort_key	gdrive.h	/^const gchar *g_drive_get_sort_key         (GDrive               *drive);$/;"	p
g_drive_get_start_stop_type	gdrive.h	/^GDriveStartStopType g_drive_get_start_stop_type (GDrive        *drive);$/;"	p
g_drive_get_volumes	gdrive.h	/^GList *  g_drive_get_volumes              (GDrive               *drive);$/;"	p
g_drive_has_media	gdrive.h	/^gboolean g_drive_has_media                (GDrive               *drive);$/;"	p
g_drive_has_volumes	gdrive.h	/^gboolean g_drive_has_volumes              (GDrive               *drive);$/;"	p
g_drive_is_media_check_automatic	gdrive.h	/^gboolean g_drive_is_media_check_automatic (GDrive               *drive);$/;"	p
g_drive_is_media_removable	gdrive.h	/^gboolean g_drive_is_media_removable       (GDrive               *drive);$/;"	p
g_drive_poll_for_media	gdrive.h	/^void     g_drive_poll_for_media           (GDrive               *drive,$/;"	p
g_drive_poll_for_media_finish	gdrive.h	/^gboolean g_drive_poll_for_media_finish    (GDrive               *drive,$/;"	p
g_drive_start	gdrive.h	/^void     g_drive_start                    (GDrive              *drive,$/;"	p
g_drive_start_finish	gdrive.h	/^gboolean g_drive_start_finish             (GDrive               *drive,$/;"	p
g_drive_stop	gdrive.h	/^void     g_drive_stop                     (GDrive               *drive,$/;"	p
g_drive_stop_finish	gdrive.h	/^gboolean g_drive_stop_finish              (GDrive               *drive,$/;"	p
g_emblem_get_icon	gemblem.h	/^GIcon         *g_emblem_get_icon        (GEmblem       *emblem);$/;"	p
g_emblem_get_origin	gemblem.h	/^GEmblemOrigin  g_emblem_get_origin      (GEmblem       *emblem);$/;"	p
g_emblem_new	gemblem.h	/^GEmblem       *g_emblem_new             (GIcon         *icon);$/;"	p
g_emblem_new_with_origin	gemblem.h	/^GEmblem       *g_emblem_new_with_origin (GIcon         *icon,$/;"	p
g_emblemed_icon_add_emblem	gemblemedicon.h	/^void   g_emblemed_icon_add_emblem  (GEmblemedIcon *emblemed,$/;"	p
g_emblemed_icon_clear_emblems	gemblemedicon.h	/^void   g_emblemed_icon_clear_emblems  (GEmblemedIcon *emblemed);$/;"	p
g_emblemed_icon_get_emblems	gemblemedicon.h	/^GList *g_emblemed_icon_get_emblems (GEmblemedIcon *emblemed);$/;"	p
g_emblemed_icon_get_icon	gemblemedicon.h	/^GIcon *g_emblemed_icon_get_icon    (GEmblemedIcon *emblemed);$/;"	p
g_emblemed_icon_new	gemblemedicon.h	/^GIcon *g_emblemed_icon_new         (GIcon         *icon,$/;"	p
g_file_append_to	gfile.h	/^GFileOutputStream *     g_file_append_to                  (GFile                      *file,$/;"	p
g_file_append_to_async	gfile.h	/^void                    g_file_append_to_async            (GFile                      *file,$/;"	p
g_file_append_to_finish	gfile.h	/^GFileOutputStream *     g_file_append_to_finish           (GFile                      *file,$/;"	p
g_file_attribute_info_list_add	gfileattribute.h	/^void                      g_file_attribute_info_list_add    (GFileAttributeInfoList *list,$/;"	p
g_file_attribute_info_list_dup	gfileattribute.h	/^GFileAttributeInfoList *  g_file_attribute_info_list_dup    (GFileAttributeInfoList *list);$/;"	p
g_file_attribute_info_list_get_type	gfileattribute.h	/^GType                     g_file_attribute_info_list_get_type (void);$/;"	p
g_file_attribute_info_list_lookup	gfileattribute.h	/^const GFileAttributeInfo *g_file_attribute_info_list_lookup (GFileAttributeInfoList *list,$/;"	p
g_file_attribute_info_list_new	gfileattribute.h	/^GFileAttributeInfoList *  g_file_attribute_info_list_new    (void);$/;"	p
g_file_attribute_info_list_ref	gfileattribute.h	/^GFileAttributeInfoList *  g_file_attribute_info_list_ref    (GFileAttributeInfoList *list);$/;"	p
g_file_attribute_info_list_unref	gfileattribute.h	/^void                      g_file_attribute_info_list_unref  (GFileAttributeInfoList *list);$/;"	p
g_file_attribute_matcher_enumerate_namespace	gfileinfo.h	/^gboolean               g_file_attribute_matcher_enumerate_namespace (GFileAttributeMatcher *matcher,$/;"	p
g_file_attribute_matcher_enumerate_next	gfileinfo.h	/^const char *           g_file_attribute_matcher_enumerate_next (GFileAttributeMatcher *matcher);$/;"	p
g_file_attribute_matcher_matches	gfileinfo.h	/^gboolean               g_file_attribute_matcher_matches        (GFileAttributeMatcher *matcher,$/;"	p
g_file_attribute_matcher_matches_only	gfileinfo.h	/^gboolean               g_file_attribute_matcher_matches_only   (GFileAttributeMatcher *matcher,$/;"	p
g_file_attribute_matcher_new	gfileinfo.h	/^GFileAttributeMatcher *g_file_attribute_matcher_new            (const char            *attributes);$/;"	p
g_file_attribute_matcher_ref	gfileinfo.h	/^GFileAttributeMatcher *g_file_attribute_matcher_ref            (GFileAttributeMatcher *matcher);$/;"	p
g_file_attribute_matcher_subtract	gfileinfo.h	/^GFileAttributeMatcher *g_file_attribute_matcher_subtract       (GFileAttributeMatcher *matcher,$/;"	p
g_file_attribute_matcher_to_string	gfileinfo.h	/^char *                 g_file_attribute_matcher_to_string      (GFileAttributeMatcher *matcher);$/;"	p
g_file_attribute_matcher_unref	gfileinfo.h	/^void                   g_file_attribute_matcher_unref          (GFileAttributeMatcher *matcher);$/;"	p
g_file_copy	gfile.h	/^gboolean                g_file_copy                       (GFile                      *source,$/;"	p
g_file_copy_async	gfile.h	/^void                    g_file_copy_async                 (GFile                      *source,$/;"	p
g_file_copy_attributes	gfile.h	/^gboolean                g_file_copy_attributes            (GFile                      *source,$/;"	p
g_file_copy_finish	gfile.h	/^gboolean                g_file_copy_finish                (GFile                      *file,$/;"	p
g_file_create	gfile.h	/^GFileOutputStream *     g_file_create                     (GFile                      *file,$/;"	p
g_file_create_async	gfile.h	/^void                    g_file_create_async               (GFile                      *file,$/;"	p
g_file_create_finish	gfile.h	/^GFileOutputStream *     g_file_create_finish              (GFile                      *file,$/;"	p
g_file_create_readwrite	gfile.h	/^GFileIOStream *         g_file_create_readwrite           (GFile                      *file,$/;"	p
g_file_create_readwrite_async	gfile.h	/^void                    g_file_create_readwrite_async     (GFile                      *file,$/;"	p
g_file_create_readwrite_finish	gfile.h	/^GFileIOStream *         g_file_create_readwrite_finish    (GFile                      *file,$/;"	p
g_file_delete	gfile.h	/^gboolean                g_file_delete                     (GFile                      *file,$/;"	p
g_file_dup	gfile.h	/^GFile *                 g_file_dup                        (GFile                      *file);$/;"	p
g_file_eject_mountable_finish	gfile.h	/^gboolean                g_file_eject_mountable_finish     (GFile                      *file,$/;"	v
g_file_eject_mountable_with_operation	gfile.h	/^void                    g_file_eject_mountable_with_operation (GFile                  *file,$/;"	p
g_file_eject_mountable_with_operation_finish	gfile.h	/^gboolean                g_file_eject_mountable_with_operation_finish (GFile           *file,$/;"	p
g_file_enumerate_children	gfile.h	/^GFileEnumerator *       g_file_enumerate_children         (GFile                      *file,$/;"	p
g_file_enumerate_children_async	gfile.h	/^void                    g_file_enumerate_children_async   (GFile                      *file,$/;"	p
g_file_enumerate_children_finish	gfile.h	/^GFileEnumerator *       g_file_enumerate_children_finish  (GFile                      *file,$/;"	p
g_file_enumerator_close	gfileenumerator.h	/^gboolean   g_file_enumerator_close             (GFileEnumerator      *enumerator,$/;"	p
g_file_enumerator_close_async	gfileenumerator.h	/^void       g_file_enumerator_close_async       (GFileEnumerator      *enumerator,$/;"	p
g_file_enumerator_close_finish	gfileenumerator.h	/^gboolean   g_file_enumerator_close_finish      (GFileEnumerator      *enumerator,$/;"	p
g_file_enumerator_get_container	gfileenumerator.h	/^GFile *    g_file_enumerator_get_container     (GFileEnumerator *enumerator);$/;"	p
g_file_enumerator_has_pending	gfileenumerator.h	/^gboolean   g_file_enumerator_has_pending       (GFileEnumerator      *enumerator);$/;"	p
g_file_enumerator_is_closed	gfileenumerator.h	/^gboolean   g_file_enumerator_is_closed         (GFileEnumerator      *enumerator);$/;"	p
g_file_enumerator_next_file	gfileenumerator.h	/^GFileInfo *g_file_enumerator_next_file         (GFileEnumerator      *enumerator,$/;"	p
g_file_enumerator_next_files_async	gfileenumerator.h	/^void       g_file_enumerator_next_files_async  (GFileEnumerator      *enumerator,$/;"	p
g_file_enumerator_next_files_finish	gfileenumerator.h	/^GList *    g_file_enumerator_next_files_finish (GFileEnumerator      *enumerator,$/;"	p
g_file_enumerator_set_pending	gfileenumerator.h	/^void       g_file_enumerator_set_pending       (GFileEnumerator      *enumerator,$/;"	p
g_file_equal	gfile.h	/^gboolean                g_file_equal                      (GFile                      *file1,$/;"	p
g_file_find_enclosing_mount	gfile.h	/^GMount *                g_file_find_enclosing_mount       (GFile                      *file,$/;"	p
g_file_find_enclosing_mount_async	gfile.h	/^void                    g_file_find_enclosing_mount_async (GFile                      *file,$/;"	p
g_file_find_enclosing_mount_finish	gfile.h	/^GMount *                g_file_find_enclosing_mount_finish (GFile                     *file,$/;"	p
g_file_get_basename	gfile.h	/^char *                  g_file_get_basename               (GFile                      *file);$/;"	p
g_file_get_child	gfile.h	/^GFile *                 g_file_get_child                  (GFile                      *file,$/;"	p
g_file_get_child_for_display_name	gfile.h	/^GFile *                 g_file_get_child_for_display_name (GFile                      *file,$/;"	p
g_file_get_parent	gfile.h	/^GFile *                 g_file_get_parent                 (GFile                      *file);$/;"	p
g_file_get_parse_name	gfile.h	/^char *                  g_file_get_parse_name             (GFile                      *file);$/;"	p
g_file_get_path	gfile.h	/^char *                  g_file_get_path                   (GFile                      *file);$/;"	p
g_file_get_relative_path	gfile.h	/^char *                  g_file_get_relative_path          (GFile                      *parent,$/;"	p
g_file_get_uri	gfile.h	/^char *                  g_file_get_uri                    (GFile                      *file);$/;"	p
g_file_get_uri_scheme	gfile.h	/^char *                  g_file_get_uri_scheme             (GFile                      *file);$/;"	p
g_file_has_parent	gfile.h	/^gboolean                g_file_has_parent                 (GFile                      *file,$/;"	p
g_file_has_prefix	gfile.h	/^gboolean                g_file_has_prefix                 (GFile                      *file,$/;"	p
g_file_has_uri_scheme	gfile.h	/^gboolean                g_file_has_uri_scheme             (GFile                      *file,$/;"	p
g_file_hash	gfile.h	/^guint                   g_file_hash                       (gconstpointer               file);$/;"	p
g_file_icon_get_file	gfileicon.h	/^GFile * g_file_icon_get_file (GFileIcon *icon);$/;"	p
g_file_icon_new	gfileicon.h	/^GIcon * g_file_icon_new      (GFile     *file);$/;"	p
g_file_info_clear_status	gfileinfo.h	/^void               g_file_info_clear_status              (GFileInfo  *info);$/;"	p
g_file_info_copy_into	gfileinfo.h	/^void               g_file_info_copy_into                 (GFileInfo  *src_info,$/;"	p
g_file_info_dup	gfileinfo.h	/^GFileInfo *        g_file_info_dup                       (GFileInfo  *other);$/;"	p
g_file_info_get_attribute_as_string	gfileinfo.h	/^char *             g_file_info_get_attribute_as_string   (GFileInfo  *info,$/;"	p
g_file_info_get_attribute_boolean	gfileinfo.h	/^gboolean           g_file_info_get_attribute_boolean     (GFileInfo  *info,$/;"	p
g_file_info_get_attribute_byte_string	gfileinfo.h	/^const char *       g_file_info_get_attribute_byte_string (GFileInfo  *info,$/;"	p
g_file_info_get_attribute_data	gfileinfo.h	/^gboolean           g_file_info_get_attribute_data        (GFileInfo  *info,$/;"	p
g_file_info_get_attribute_int32	gfileinfo.h	/^gint32             g_file_info_get_attribute_int32       (GFileInfo  *info,$/;"	p
g_file_info_get_attribute_int64	gfileinfo.h	/^gint64             g_file_info_get_attribute_int64       (GFileInfo  *info,$/;"	p
g_file_info_get_attribute_object	gfileinfo.h	/^GObject *          g_file_info_get_attribute_object      (GFileInfo  *info,$/;"	p
g_file_info_get_attribute_status	gfileinfo.h	/^GFileAttributeStatus g_file_info_get_attribute_status    (GFileInfo  *info,$/;"	p
g_file_info_get_attribute_string	gfileinfo.h	/^const char *       g_file_info_get_attribute_string      (GFileInfo  *info,$/;"	p
g_file_info_get_attribute_stringv	gfileinfo.h	/^char **            g_file_info_get_attribute_stringv     (GFileInfo  *info,$/;"	p
g_file_info_get_attribute_type	gfileinfo.h	/^GFileAttributeType g_file_info_get_attribute_type        (GFileInfo  *info,$/;"	p
g_file_info_get_attribute_uint32	gfileinfo.h	/^guint32            g_file_info_get_attribute_uint32      (GFileInfo  *info,$/;"	p
g_file_info_get_attribute_uint64	gfileinfo.h	/^guint64            g_file_info_get_attribute_uint64      (GFileInfo  *info,$/;"	p
g_file_info_get_content_type	gfileinfo.h	/^const char *      g_file_info_get_content_type       (GFileInfo         *info);$/;"	p
g_file_info_get_display_name	gfileinfo.h	/^const char *      g_file_info_get_display_name       (GFileInfo         *info);$/;"	p
g_file_info_get_edit_name	gfileinfo.h	/^const char *      g_file_info_get_edit_name          (GFileInfo         *info);$/;"	p
g_file_info_get_etag	gfileinfo.h	/^const char *      g_file_info_get_etag               (GFileInfo         *info);$/;"	p
g_file_info_get_file_type	gfileinfo.h	/^GFileType         g_file_info_get_file_type          (GFileInfo         *info);$/;"	p
g_file_info_get_icon	gfileinfo.h	/^GIcon *           g_file_info_get_icon               (GFileInfo         *info);$/;"	p
g_file_info_get_is_backup	gfileinfo.h	/^gboolean          g_file_info_get_is_backup          (GFileInfo         *info);$/;"	p
g_file_info_get_is_hidden	gfileinfo.h	/^gboolean          g_file_info_get_is_hidden          (GFileInfo         *info);$/;"	p
g_file_info_get_is_symlink	gfileinfo.h	/^gboolean          g_file_info_get_is_symlink         (GFileInfo         *info);$/;"	p
g_file_info_get_modification_time	gfileinfo.h	/^void              g_file_info_get_modification_time  (GFileInfo         *info,$/;"	p
g_file_info_get_name	gfileinfo.h	/^const char *      g_file_info_get_name               (GFileInfo         *info);$/;"	p
g_file_info_get_size	gfileinfo.h	/^goffset           g_file_info_get_size               (GFileInfo         *info);$/;"	p
g_file_info_get_sort_order	gfileinfo.h	/^gint32            g_file_info_get_sort_order         (GFileInfo         *info);$/;"	p
g_file_info_get_symlink_target	gfileinfo.h	/^const char *      g_file_info_get_symlink_target     (GFileInfo         *info);$/;"	p
g_file_info_has_attribute	gfileinfo.h	/^gboolean           g_file_info_has_attribute             (GFileInfo  *info,$/;"	p
g_file_info_has_namespace	gfileinfo.h	/^gboolean           g_file_info_has_namespace             (GFileInfo  *info,$/;"	p
g_file_info_list_attributes	gfileinfo.h	/^char **            g_file_info_list_attributes           (GFileInfo  *info,$/;"	p
g_file_info_new	gfileinfo.h	/^GFileInfo *        g_file_info_new                       (void);$/;"	p
g_file_info_remove_attribute	gfileinfo.h	/^void               g_file_info_remove_attribute          (GFileInfo  *info,$/;"	p
g_file_info_set_attribute	gfileinfo.h	/^void               g_file_info_set_attribute             (GFileInfo  *info,$/;"	p
g_file_info_set_attribute_boolean	gfileinfo.h	/^void               g_file_info_set_attribute_boolean     (GFileInfo  *info,$/;"	p
g_file_info_set_attribute_byte_string	gfileinfo.h	/^void               g_file_info_set_attribute_byte_string (GFileInfo  *info,$/;"	p
g_file_info_set_attribute_int32	gfileinfo.h	/^void               g_file_info_set_attribute_int32       (GFileInfo  *info,$/;"	p
g_file_info_set_attribute_int64	gfileinfo.h	/^void               g_file_info_set_attribute_int64       (GFileInfo  *info,$/;"	p
g_file_info_set_attribute_mask	gfileinfo.h	/^void              g_file_info_set_attribute_mask     (GFileInfo         *info,$/;"	p
g_file_info_set_attribute_object	gfileinfo.h	/^void               g_file_info_set_attribute_object      (GFileInfo  *info,$/;"	p
g_file_info_set_attribute_status	gfileinfo.h	/^gboolean           g_file_info_set_attribute_status      (GFileInfo  *info,$/;"	p
g_file_info_set_attribute_string	gfileinfo.h	/^void               g_file_info_set_attribute_string      (GFileInfo  *info,$/;"	p
g_file_info_set_attribute_stringv	gfileinfo.h	/^void               g_file_info_set_attribute_stringv     (GFileInfo  *info,$/;"	p
g_file_info_set_attribute_uint32	gfileinfo.h	/^void               g_file_info_set_attribute_uint32      (GFileInfo  *info,$/;"	p
g_file_info_set_attribute_uint64	gfileinfo.h	/^void               g_file_info_set_attribute_uint64      (GFileInfo  *info,$/;"	p
g_file_info_set_content_type	gfileinfo.h	/^void              g_file_info_set_content_type       (GFileInfo         *info,$/;"	p
g_file_info_set_display_name	gfileinfo.h	/^void              g_file_info_set_display_name       (GFileInfo         *info,$/;"	p
g_file_info_set_edit_name	gfileinfo.h	/^void              g_file_info_set_edit_name          (GFileInfo         *info,$/;"	p
g_file_info_set_file_type	gfileinfo.h	/^void              g_file_info_set_file_type          (GFileInfo         *info,$/;"	p
g_file_info_set_icon	gfileinfo.h	/^void              g_file_info_set_icon               (GFileInfo         *info,$/;"	p
g_file_info_set_is_hidden	gfileinfo.h	/^void              g_file_info_set_is_hidden          (GFileInfo         *info,$/;"	p
g_file_info_set_is_symlink	gfileinfo.h	/^void              g_file_info_set_is_symlink         (GFileInfo         *info,$/;"	p
g_file_info_set_modification_time	gfileinfo.h	/^void              g_file_info_set_modification_time  (GFileInfo         *info,$/;"	p
g_file_info_set_name	gfileinfo.h	/^void              g_file_info_set_name               (GFileInfo         *info,$/;"	p
g_file_info_set_size	gfileinfo.h	/^void              g_file_info_set_size               (GFileInfo         *info,$/;"	p
g_file_info_set_sort_order	gfileinfo.h	/^void              g_file_info_set_sort_order         (GFileInfo         *info,$/;"	p
g_file_info_set_symlink_target	gfileinfo.h	/^void              g_file_info_set_symlink_target     (GFileInfo         *info,$/;"	p
g_file_info_unset_attribute_mask	gfileinfo.h	/^void              g_file_info_unset_attribute_mask   (GFileInfo         *info);$/;"	p
g_file_input_stream_query_info	gfileinputstream.h	/^GFileInfo *g_file_input_stream_query_info        (GFileInputStream     *stream,$/;"	p
g_file_input_stream_query_info_async	gfileinputstream.h	/^void       g_file_input_stream_query_info_async  (GFileInputStream     *stream,$/;"	p
g_file_input_stream_query_info_finish	gfileinputstream.h	/^GFileInfo *g_file_input_stream_query_info_finish (GFileInputStream     *stream,$/;"	p
g_file_io_stream_get_etag	gfileiostream.h	/^char *     g_file_io_stream_get_etag          (GFileIOStream    *stream);$/;"	p
g_file_io_stream_query_info	gfileiostream.h	/^GFileInfo *g_file_io_stream_query_info        (GFileIOStream    *stream,$/;"	p
g_file_io_stream_query_info_async	gfileiostream.h	/^void       g_file_io_stream_query_info_async  (GFileIOStream    *stream,$/;"	p
g_file_io_stream_query_info_finish	gfileiostream.h	/^GFileInfo *g_file_io_stream_query_info_finish (GFileIOStream    *stream,$/;"	p
g_file_is_native	gfile.h	/^gboolean                g_file_is_native                  (GFile                      *file);$/;"	p
g_file_load_contents	gfile.h	/^gboolean g_file_load_contents                (GFile                  *file,$/;"	p
g_file_load_contents_async	gfile.h	/^void     g_file_load_contents_async          (GFile                  *file,$/;"	p
g_file_load_contents_finish	gfile.h	/^gboolean g_file_load_contents_finish         (GFile                  *file,$/;"	p
g_file_load_partial_contents_async	gfile.h	/^void     g_file_load_partial_contents_async  (GFile                  *file,$/;"	p
g_file_load_partial_contents_finish	gfile.h	/^gboolean g_file_load_partial_contents_finish (GFile                  *file,$/;"	p
g_file_make_directory	gfile.h	/^gboolean                g_file_make_directory             (GFile                      *file,$/;"	p
g_file_make_directory_with_parents	gfile.h	/^gboolean                g_file_make_directory_with_parents (GFile                     *file,$/;"	p
g_file_make_symbolic_link	gfile.h	/^gboolean                g_file_make_symbolic_link         (GFile                      *file,$/;"	p
g_file_monitor	gfile.h	/^GFileMonitor*           g_file_monitor                    (GFile                  *file,$/;"	p
g_file_monitor_cancel	gfilemonitor.h	/^gboolean g_file_monitor_cancel         (GFileMonitor      *monitor);$/;"	p
g_file_monitor_directory	gfile.h	/^GFileMonitor*           g_file_monitor_directory          (GFile                  *file,$/;"	p
g_file_monitor_emit_event	gfilemonitor.h	/^void     g_file_monitor_emit_event     (GFileMonitor      *monitor,$/;"	p
g_file_monitor_file	gfile.h	/^GFileMonitor*           g_file_monitor_file               (GFile                  *file,$/;"	p
g_file_monitor_is_cancelled	gfilemonitor.h	/^gboolean g_file_monitor_is_cancelled   (GFileMonitor      *monitor);$/;"	p
g_file_monitor_set_rate_limit	gfilemonitor.h	/^void     g_file_monitor_set_rate_limit (GFileMonitor      *monitor,$/;"	p
g_file_mount_enclosing_volume	gfile.h	/^void                    g_file_mount_enclosing_volume     (GFile                      *location,$/;"	p
g_file_mount_enclosing_volume_finish	gfile.h	/^gboolean                g_file_mount_enclosing_volume_finish (GFile                      *location,$/;"	p
g_file_mount_mountable	gfile.h	/^void                    g_file_mount_mountable            (GFile                      *file,$/;"	p
g_file_mount_mountable_finish	gfile.h	/^GFile *                 g_file_mount_mountable_finish     (GFile                      *file,$/;"	p
g_file_move	gfile.h	/^gboolean                g_file_move                       (GFile                      *source,$/;"	p
g_file_new_for_commandline_arg	gfile.h	/^GFile *                 g_file_new_for_commandline_arg    (const char                 *arg);$/;"	p
g_file_new_for_path	gfile.h	/^GFile *                 g_file_new_for_path               (const char                 *path);$/;"	p
g_file_new_for_uri	gfile.h	/^GFile *                 g_file_new_for_uri                (const char                 *uri);$/;"	p
g_file_new_tmp	gfile.h	/^GFile *                 g_file_new_tmp                    (const char                 *tmpl,$/;"	p
g_file_open_readwrite	gfile.h	/^GFileIOStream *         g_file_open_readwrite             (GFile                      *file,$/;"	p
g_file_open_readwrite_async	gfile.h	/^void                    g_file_open_readwrite_async       (GFile                      *file,$/;"	p
g_file_open_readwrite_finish	gfile.h	/^GFileIOStream *         g_file_open_readwrite_finish      (GFile                      *file,$/;"	p
g_file_output_stream_get_etag	gfileoutputstream.h	/^char *     g_file_output_stream_get_etag          (GFileOutputStream    *stream);$/;"	p
g_file_output_stream_query_info	gfileoutputstream.h	/^GFileInfo *g_file_output_stream_query_info        (GFileOutputStream    *stream,$/;"	p
g_file_output_stream_query_info_async	gfileoutputstream.h	/^void       g_file_output_stream_query_info_async  (GFileOutputStream    *stream,$/;"	p
g_file_output_stream_query_info_finish	gfileoutputstream.h	/^GFileInfo *g_file_output_stream_query_info_finish (GFileOutputStream    *stream,$/;"	p
g_file_parse_name	gfile.h	/^GFile *                 g_file_parse_name                 (const char                 *parse_name);$/;"	p
g_file_poll_mountable	gfile.h	/^void                    g_file_poll_mountable             (GFile                      *file,$/;"	p
g_file_poll_mountable_finish	gfile.h	/^gboolean                g_file_poll_mountable_finish      (GFile                      *file,$/;"	p
g_file_query_default_handler	gfile.h	/^GAppInfo *g_file_query_default_handler       (GFile                  *file,$/;"	p
g_file_query_exists	gfile.h	/^gboolean                g_file_query_exists               (GFile                      *file,$/;"	p
g_file_query_file_type	gfile.h	/^GFileType               g_file_query_file_type            (GFile                      *file,$/;"	p
g_file_query_filesystem_info	gfile.h	/^GFileInfo *             g_file_query_filesystem_info      (GFile                      *file,$/;"	p
g_file_query_filesystem_info_async	gfile.h	/^void                    g_file_query_filesystem_info_async (GFile                      *file,$/;"	p
g_file_query_filesystem_info_finish	gfile.h	/^GFileInfo *             g_file_query_filesystem_info_finish (GFile                      *file,$/;"	p
g_file_query_info	gfile.h	/^GFileInfo *             g_file_query_info                 (GFile                      *file,$/;"	p
g_file_query_info_async	gfile.h	/^void                    g_file_query_info_async           (GFile                      *file,$/;"	p
g_file_query_info_finish	gfile.h	/^GFileInfo *             g_file_query_info_finish          (GFile                      *file,$/;"	p
g_file_query_settable_attributes	gfile.h	/^GFileAttributeInfoList *g_file_query_settable_attributes  (GFile                      *file,$/;"	p
g_file_query_writable_namespaces	gfile.h	/^GFileAttributeInfoList *g_file_query_writable_namespaces  (GFile                      *file,$/;"	p
g_file_read	gfile.h	/^GFileInputStream *      g_file_read                       (GFile                      *file,$/;"	p
g_file_read_async	gfile.h	/^void                    g_file_read_async                 (GFile                      *file,$/;"	p
g_file_read_finish	gfile.h	/^GFileInputStream *      g_file_read_finish                (GFile                      *file,$/;"	p
g_file_replace	gfile.h	/^GFileOutputStream *     g_file_replace                    (GFile                      *file,$/;"	p
g_file_replace_async	gfile.h	/^void                    g_file_replace_async              (GFile                      *file,$/;"	p
g_file_replace_contents	gfile.h	/^gboolean g_file_replace_contents             (GFile                  *file,$/;"	p
g_file_replace_contents_async	gfile.h	/^void     g_file_replace_contents_async       (GFile                  *file,$/;"	p
g_file_replace_contents_finish	gfile.h	/^gboolean g_file_replace_contents_finish      (GFile                  *file,$/;"	p
g_file_replace_finish	gfile.h	/^GFileOutputStream *     g_file_replace_finish             (GFile                      *file,$/;"	p
g_file_replace_readwrite	gfile.h	/^GFileIOStream *         g_file_replace_readwrite          (GFile                      *file,$/;"	p
g_file_replace_readwrite_async	gfile.h	/^void                    g_file_replace_readwrite_async    (GFile                      *file,$/;"	p
g_file_replace_readwrite_finish	gfile.h	/^GFileIOStream *         g_file_replace_readwrite_finish   (GFile                      *file,$/;"	p
g_file_resolve_relative_path	gfile.h	/^GFile *                 g_file_resolve_relative_path      (GFile                      *file,$/;"	p
g_file_set_attribute	gfile.h	/^gboolean                g_file_set_attribute              (GFile                      *file,$/;"	p
g_file_set_attribute_byte_string	gfile.h	/^gboolean                g_file_set_attribute_byte_string  (GFile                      *file,$/;"	p
g_file_set_attribute_int32	gfile.h	/^gboolean                g_file_set_attribute_int32        (GFile                      *file,$/;"	p
g_file_set_attribute_int64	gfile.h	/^gboolean                g_file_set_attribute_int64        (GFile                      *file,$/;"	p
g_file_set_attribute_string	gfile.h	/^gboolean                g_file_set_attribute_string       (GFile                      *file,$/;"	p
g_file_set_attribute_uint32	gfile.h	/^gboolean                g_file_set_attribute_uint32       (GFile                      *file,$/;"	p
g_file_set_attribute_uint64	gfile.h	/^gboolean                g_file_set_attribute_uint64       (GFile                      *file,$/;"	p
g_file_set_attributes_async	gfile.h	/^void                    g_file_set_attributes_async       (GFile                      *file,$/;"	p
g_file_set_attributes_finish	gfile.h	/^gboolean                g_file_set_attributes_finish      (GFile                      *file,$/;"	p
g_file_set_attributes_from_info	gfile.h	/^gboolean                g_file_set_attributes_from_info   (GFile                      *file,$/;"	p
g_file_set_display_name	gfile.h	/^GFile *                 g_file_set_display_name           (GFile                      *file,$/;"	p
g_file_set_display_name_async	gfile.h	/^void                    g_file_set_display_name_async     (GFile                      *file,$/;"	p
g_file_set_display_name_finish	gfile.h	/^GFile *                 g_file_set_display_name_finish    (GFile                      *file,$/;"	p
g_file_start_mountable	gfile.h	/^void                    g_file_start_mountable            (GFile                      *file,$/;"	p
g_file_start_mountable_finish	gfile.h	/^gboolean                g_file_start_mountable_finish     (GFile                      *file,$/;"	p
g_file_stop_mountable	gfile.h	/^void                    g_file_stop_mountable             (GFile                      *file,$/;"	p
g_file_stop_mountable_finish	gfile.h	/^gboolean                g_file_stop_mountable_finish      (GFile                      *file,$/;"	p
g_file_supports_thread_contexts	gfile.h	/^gboolean g_file_supports_thread_contexts     (GFile                  *file);$/;"	p
g_file_trash	gfile.h	/^gboolean                g_file_trash                      (GFile                      *file,$/;"	p
g_file_unmount_mountable_finish	gfile.h	/^gboolean                g_file_unmount_mountable_finish   (GFile                      *file,$/;"	v
g_file_unmount_mountable_with_operation	gfile.h	/^void                    g_file_unmount_mountable_with_operation (GFile                *file,$/;"	p
g_file_unmount_mountable_with_operation_finish	gfile.h	/^gboolean                g_file_unmount_mountable_with_operation_finish (GFile         *file,$/;"	p
g_filename_completer_get_completion_suffix	gfilenamecompleter.h	/^char *              g_filename_completer_get_completion_suffix (GFilenameCompleter *completer,$/;"	p
g_filename_completer_get_completions	gfilenamecompleter.h	/^char **             g_filename_completer_get_completions       (GFilenameCompleter *completer,$/;"	p
g_filename_completer_new	gfilenamecompleter.h	/^GFilenameCompleter *g_filename_completer_new                   (void);$/;"	p
g_filename_completer_set_dirs_only	gfilenamecompleter.h	/^void                g_filename_completer_set_dirs_only         (GFilenameCompleter *completer,$/;"	p
g_filter_input_stream_get_base_stream	gfilterinputstream.h	/^GInputStream * g_filter_input_stream_get_base_stream       (GFilterInputStream *stream);$/;"	p
g_filter_input_stream_get_close_base_stream	gfilterinputstream.h	/^gboolean       g_filter_input_stream_get_close_base_stream (GFilterInputStream *stream);$/;"	p
g_filter_input_stream_set_close_base_stream	gfilterinputstream.h	/^void           g_filter_input_stream_set_close_base_stream (GFilterInputStream *stream,$/;"	p
g_filter_output_stream_get_base_stream	gfilteroutputstream.h	/^GOutputStream * g_filter_output_stream_get_base_stream       (GFilterOutputStream *stream);$/;"	p
g_filter_output_stream_get_close_base_stream	gfilteroutputstream.h	/^gboolean        g_filter_output_stream_get_close_base_stream (GFilterOutputStream *stream);$/;"	p
g_filter_output_stream_set_close_base_stream	gfilteroutputstream.h	/^void            g_filter_output_stream_set_close_base_stream (GFilterOutputStream *stream,$/;"	p
g_icon_equal	gicon.h	/^gboolean g_icon_equal           (GIcon         *icon1,$/;"	p
g_icon_hash	gicon.h	/^guint    g_icon_hash            (gconstpointer  icon);$/;"	p
g_icon_new_for_string	gicon.h	/^GIcon   *g_icon_new_for_string  (const gchar   *str,$/;"	p
g_icon_to_string	gicon.h	/^gchar   *g_icon_to_string       (GIcon         *icon);$/;"	p
g_iface	gaction.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GActionInterface
g_iface	gactiongroup.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GActionGroupInterface
g_iface	gactionmap.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GActionMapInterface
g_iface	gappinfo.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GAppInfoIface
g_iface	gasyncinitable.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GAsyncInitableIface
g_iface	gasyncresult.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GAsyncResultIface
g_iface	gconverter.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GConverterIface
g_iface	gdrive.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GDriveIface
g_iface	gfile.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GFileIface
g_iface	gicon.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GIconIface
g_iface	ginitable.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GInitableIface
g_iface	gloadableicon.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GLoadableIconIface
g_iface	gmount.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GMountIface
g_iface	gnetworkmonitor.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GNetworkMonitorInterface
g_iface	gpollableinputstream.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GPollableInputStreamInterface
g_iface	gpollableoutputstream.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GPollableOutputStreamInterface
g_iface	gproxy.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GProxyInterface
g_iface	gproxyresolver.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GProxyResolverInterface
g_iface	gremoteactiongroup.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GRemoteActionGroupInterface
g_iface	gseekable.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GSeekableIface
g_iface	gsocketconnectable.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GSocketConnectableIface
g_iface	gtlsbackend.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GTlsBackendInterface
g_iface	gtlsclientconnection.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GTlsClientConnectionInterface
g_iface	gtlsfiledatabase.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GTlsFileDatabaseInterface
g_iface	gtlsserverconnection.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GTlsServerConnectionInterface
g_iface	gvolume.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GVolumeIface
g_inet_address_equal	ginetaddress.h	/^gboolean              g_inet_address_equal                (GInetAddress         *address,$/;"	p
g_inet_address_get_family	ginetaddress.h	/^GSocketFamily         g_inet_address_get_family           (GInetAddress         *address);$/;"	p
g_inet_address_get_is_any	ginetaddress.h	/^gboolean              g_inet_address_get_is_any           (GInetAddress         *address);$/;"	p
g_inet_address_get_is_link_local	ginetaddress.h	/^gboolean              g_inet_address_get_is_link_local    (GInetAddress         *address);$/;"	p
g_inet_address_get_is_loopback	ginetaddress.h	/^gboolean              g_inet_address_get_is_loopback      (GInetAddress         *address);$/;"	p
g_inet_address_get_is_mc_global	ginetaddress.h	/^gboolean              g_inet_address_get_is_mc_global     (GInetAddress         *address);$/;"	p
g_inet_address_get_is_mc_link_local	ginetaddress.h	/^gboolean              g_inet_address_get_is_mc_link_local (GInetAddress         *address);$/;"	p
g_inet_address_get_is_mc_node_local	ginetaddress.h	/^gboolean              g_inet_address_get_is_mc_node_local (GInetAddress         *address);$/;"	p
g_inet_address_get_is_mc_org_local	ginetaddress.h	/^gboolean              g_inet_address_get_is_mc_org_local  (GInetAddress         *address);$/;"	p
g_inet_address_get_is_mc_site_local	ginetaddress.h	/^gboolean              g_inet_address_get_is_mc_site_local (GInetAddress         *address);$/;"	p
g_inet_address_get_is_multicast	ginetaddress.h	/^gboolean              g_inet_address_get_is_multicast     (GInetAddress         *address);$/;"	p
g_inet_address_get_is_site_local	ginetaddress.h	/^gboolean              g_inet_address_get_is_site_local    (GInetAddress         *address);$/;"	p
g_inet_address_get_native_size	ginetaddress.h	/^gsize                 g_inet_address_get_native_size      (GInetAddress         *address);$/;"	p
g_inet_address_mask_equal	ginetaddressmask.h	/^gboolean          g_inet_address_mask_equal           (GInetAddressMask  *mask,$/;"	p
g_inet_address_mask_get_address	ginetaddressmask.h	/^GInetAddress     *g_inet_address_mask_get_address     (GInetAddressMask  *mask);$/;"	p
g_inet_address_mask_get_family	ginetaddressmask.h	/^GSocketFamily     g_inet_address_mask_get_family      (GInetAddressMask  *mask);$/;"	p
g_inet_address_mask_get_length	ginetaddressmask.h	/^guint             g_inet_address_mask_get_length      (GInetAddressMask  *mask);$/;"	p
g_inet_address_mask_matches	ginetaddressmask.h	/^gboolean          g_inet_address_mask_matches         (GInetAddressMask  *mask,$/;"	p
g_inet_address_mask_new	ginetaddressmask.h	/^GInetAddressMask *g_inet_address_mask_new             (GInetAddress      *addr,$/;"	p
g_inet_address_mask_new_from_string	ginetaddressmask.h	/^GInetAddressMask *g_inet_address_mask_new_from_string (const gchar       *mask_string,$/;"	p
g_inet_address_mask_to_string	ginetaddressmask.h	/^gchar            *g_inet_address_mask_to_string       (GInetAddressMask  *mask);$/;"	p
g_inet_address_new_any	ginetaddress.h	/^GInetAddress *        g_inet_address_new_any              (GSocketFamily         family);$/;"	p
g_inet_address_new_from_bytes	ginetaddress.h	/^GInetAddress *        g_inet_address_new_from_bytes       (const guint8         *bytes,$/;"	p
g_inet_address_new_from_string	ginetaddress.h	/^GInetAddress *        g_inet_address_new_from_string      (const gchar          *string);$/;"	p
g_inet_address_new_loopback	ginetaddress.h	/^GInetAddress *        g_inet_address_new_loopback         (GSocketFamily         family);$/;"	p
g_inet_address_to_bytes	ginetaddress.h	/^const guint8 *        g_inet_address_to_bytes             (GInetAddress         *address);$/;"	p
g_inet_address_to_string	ginetaddress.h	/^gchar *               g_inet_address_to_string            (GInetAddress         *address);$/;"	p
g_inet_socket_address_get_address	ginetsocketaddress.h	/^GInetAddress *  g_inet_socket_address_get_address  (GInetSocketAddress *address);$/;"	p
g_inet_socket_address_get_flowinfo	ginetsocketaddress.h	/^guint32         g_inet_socket_address_get_flowinfo (GInetSocketAddress *address);$/;"	p
g_inet_socket_address_get_port	ginetsocketaddress.h	/^guint16         g_inet_socket_address_get_port     (GInetSocketAddress *address);$/;"	p
g_inet_socket_address_get_scope_id	ginetsocketaddress.h	/^guint32         g_inet_socket_address_get_scope_id (GInetSocketAddress *address);$/;"	p
g_inet_socket_address_new	ginetsocketaddress.h	/^GSocketAddress *g_inet_socket_address_new          (GInetAddress       *address,$/;"	p
g_initable_init	ginitable.h	/^gboolean g_initable_init       (GInitable     *initable,$/;"	p
g_initable_new	ginitable.h	/^gpointer g_initable_new        (GType          object_type,$/;"	p
g_initable_new_valist	ginitable.h	/^GObject* g_initable_new_valist (GType          object_type,$/;"	p
g_initable_newv	ginitable.h	/^gpointer g_initable_newv       (GType          object_type,$/;"	p
g_input_stream_clear_pending	ginputstream.h	/^void     g_input_stream_clear_pending (GInputStream          *stream);$/;"	p
g_input_stream_close	ginputstream.h	/^gboolean g_input_stream_close         (GInputStream          *stream,$/;"	p
g_input_stream_close_async	ginputstream.h	/^void     g_input_stream_close_async   (GInputStream          *stream,$/;"	p
g_input_stream_close_finish	ginputstream.h	/^gboolean g_input_stream_close_finish  (GInputStream          *stream,$/;"	p
g_input_stream_has_pending	ginputstream.h	/^gboolean g_input_stream_has_pending   (GInputStream          *stream);$/;"	p
g_input_stream_is_closed	ginputstream.h	/^gboolean g_input_stream_is_closed     (GInputStream          *stream);$/;"	p
g_input_stream_read	ginputstream.h	/^gssize   g_input_stream_read          (GInputStream          *stream,$/;"	p
g_input_stream_read_all	ginputstream.h	/^gboolean g_input_stream_read_all      (GInputStream          *stream,$/;"	p
g_input_stream_read_async	ginputstream.h	/^void     g_input_stream_read_async    (GInputStream          *stream,$/;"	p
g_input_stream_read_finish	ginputstream.h	/^gssize   g_input_stream_read_finish   (GInputStream          *stream,$/;"	p
g_input_stream_set_pending	ginputstream.h	/^gboolean g_input_stream_set_pending   (GInputStream          *stream,$/;"	p
g_input_stream_skip	ginputstream.h	/^gssize   g_input_stream_skip          (GInputStream          *stream,$/;"	p
g_input_stream_skip_async	ginputstream.h	/^void     g_input_stream_skip_async    (GInputStream          *stream,$/;"	p
g_input_stream_skip_finish	ginputstream.h	/^gssize   g_input_stream_skip_finish   (GInputStream          *stream,$/;"	p
g_io_error_from_errno	gioerror.h	/^GIOErrorEnum g_io_error_from_errno (gint err_no);$/;"	p
g_io_error_from_win32_error	gioerror.h	/^GIOErrorEnum g_io_error_from_win32_error (gint error_code);$/;"	p
g_io_error_quark	gioerror.h	/^GQuark       g_io_error_quark      (void);$/;"	p
g_io_extension_get_name	giomodule.h	/^const char *       g_io_extension_get_name                    (GIOExtension      *extension);$/;"	p
g_io_extension_get_priority	giomodule.h	/^gint               g_io_extension_get_priority                (GIOExtension      *extension);$/;"	p
g_io_extension_get_type	giomodule.h	/^GType              g_io_extension_get_type                    (GIOExtension      *extension);$/;"	p
g_io_extension_point_get_extension_by_name	giomodule.h	/^GIOExtension *     g_io_extension_point_get_extension_by_name (GIOExtensionPoint *extension_point,$/;"	p
g_io_extension_point_get_extensions	giomodule.h	/^GList             *g_io_extension_point_get_extensions        (GIOExtensionPoint *extension_point);$/;"	p
g_io_extension_point_get_required_type	giomodule.h	/^GType              g_io_extension_point_get_required_type     (GIOExtensionPoint *extension_point);$/;"	p
g_io_extension_point_implement	giomodule.h	/^GIOExtension *     g_io_extension_point_implement             (const char        *extension_point_name,$/;"	p
g_io_extension_point_lookup	giomodule.h	/^GIOExtensionPoint *g_io_extension_point_lookup                (const char        *name);$/;"	p
g_io_extension_point_register	giomodule.h	/^GIOExtensionPoint *g_io_extension_point_register              (const char        *name);$/;"	p
g_io_extension_point_set_required_type	giomodule.h	/^void               g_io_extension_point_set_required_type     (GIOExtensionPoint *extension_point,$/;"	p
g_io_extension_ref_class	giomodule.h	/^GTypeClass*        g_io_extension_ref_class                   (GIOExtension      *extension);$/;"	p
g_io_module_load	giomodule.h	/^void   g_io_module_load   (GIOModule *module);$/;"	p
g_io_module_new	giomodule.h	/^GIOModule         *g_io_module_new                            (const gchar       *filename);$/;"	p
g_io_module_query	giomodule.h	/^char **g_io_module_query (void);$/;"	p
g_io_module_scope_block	giomodule.h	/^void               g_io_module_scope_block   (GIOModuleScope      *scope,$/;"	p
g_io_module_scope_free	giomodule.h	/^void               g_io_module_scope_free    (GIOModuleScope      *scope);$/;"	p
g_io_module_scope_new	giomodule.h	/^GIOModuleScope *   g_io_module_scope_new     (GIOModuleScopeFlags  flags);$/;"	p
g_io_module_unload	giomodule.h	/^void   g_io_module_unload (GIOModule *module);$/;"	p
g_io_modules_load_all_in_directory	giomodule.h	/^GList             *g_io_modules_load_all_in_directory         (const gchar       *dirname);$/;"	p
g_io_modules_load_all_in_directory_with_scope	giomodule.h	/^GList             *g_io_modules_load_all_in_directory_with_scope   (const gchar       *dirname,$/;"	p
g_io_modules_scan_all_in_directory	giomodule.h	/^void               g_io_modules_scan_all_in_directory         (const char        *dirname);$/;"	p
g_io_modules_scan_all_in_directory_with_scope	giomodule.h	/^void               g_io_modules_scan_all_in_directory_with_scope   (const gchar       *dirname,$/;"	p
g_io_scheduler_cancel_all_jobs	gioscheduler.h	/^void     g_io_scheduler_cancel_all_jobs            (void);$/;"	p
g_io_scheduler_job_send_to_mainloop	gioscheduler.h	/^gboolean g_io_scheduler_job_send_to_mainloop       (GIOSchedulerJob     *job,$/;"	p
g_io_scheduler_job_send_to_mainloop_async	gioscheduler.h	/^void     g_io_scheduler_job_send_to_mainloop_async (GIOSchedulerJob     *job,$/;"	p
g_io_scheduler_push_job	gioscheduler.h	/^void     g_io_scheduler_push_job                   (GIOSchedulerJobFunc  job_func,$/;"	p
g_io_stream_clear_pending	giostream.h	/^void           g_io_stream_clear_pending     (GIOStream            *stream);$/;"	p
g_io_stream_close	giostream.h	/^gboolean       g_io_stream_close             (GIOStream            *stream,$/;"	p
g_io_stream_close_async	giostream.h	/^void           g_io_stream_close_async       (GIOStream            *stream,$/;"	p
g_io_stream_close_finish	giostream.h	/^gboolean       g_io_stream_close_finish      (GIOStream            *stream,$/;"	p
g_io_stream_get_input_stream	giostream.h	/^GInputStream * g_io_stream_get_input_stream  (GIOStream            *stream);$/;"	p
g_io_stream_get_output_stream	giostream.h	/^GOutputStream *g_io_stream_get_output_stream (GIOStream            *stream);$/;"	p
g_io_stream_has_pending	giostream.h	/^gboolean       g_io_stream_has_pending       (GIOStream            *stream);$/;"	p
g_io_stream_is_closed	giostream.h	/^gboolean       g_io_stream_is_closed         (GIOStream            *stream);$/;"	p
g_io_stream_set_pending	giostream.h	/^gboolean       g_io_stream_set_pending       (GIOStream            *stream,$/;"	p
g_io_stream_splice_async	giostream.h	/^void           g_io_stream_splice_async      (GIOStream            *stream1,$/;"	p
g_io_stream_splice_finish	giostream.h	/^gboolean       g_io_stream_splice_finish     (GAsyncResult         *result,$/;"	p
g_keyfile_settings_backend_new	gsettingsbackend.h	/^GSettingsBackend *      g_keyfile_settings_backend_new                  (const gchar         *filename,$/;"	p
g_loadable_icon_load	gloadableicon.h	/^GInputStream *g_loadable_icon_load        (GLoadableIcon        *icon,$/;"	p
g_loadable_icon_load_async	gloadableicon.h	/^void          g_loadable_icon_load_async  (GLoadableIcon        *icon,$/;"	p
g_loadable_icon_load_finish	gloadableicon.h	/^GInputStream *g_loadable_icon_load_finish (GLoadableIcon        *icon,$/;"	p
g_memory_input_stream_add_data	gmemoryinputstream.h	/^void           g_memory_input_stream_add_data      (GMemoryInputStream *stream,$/;"	p
g_memory_input_stream_new	gmemoryinputstream.h	/^GInputStream * g_memory_input_stream_new           (void);$/;"	p
g_memory_input_stream_new_from_data	gmemoryinputstream.h	/^GInputStream * g_memory_input_stream_new_from_data (const void         *data,$/;"	p
g_memory_output_stream_get_data	gmemoryoutputstream.h	/^gpointer       g_memory_output_stream_get_data      (GMemoryOutputStream *ostream);$/;"	p
g_memory_output_stream_get_data_size	gmemoryoutputstream.h	/^gsize          g_memory_output_stream_get_data_size (GMemoryOutputStream *ostream);$/;"	p
g_memory_output_stream_get_size	gmemoryoutputstream.h	/^gsize          g_memory_output_stream_get_size      (GMemoryOutputStream *ostream);$/;"	p
g_memory_output_stream_new	gmemoryoutputstream.h	/^GOutputStream *g_memory_output_stream_new           (gpointer             data,$/;"	p
g_memory_output_stream_steal_data	gmemoryoutputstream.h	/^gpointer       g_memory_output_stream_steal_data    (GMemoryOutputStream *ostream);$/;"	p
g_memory_settings_backend_new	gsettingsbackend.h	/^GSettingsBackend *      g_memory_settings_backend_new                   (void);$/;"	p
g_menu_append	gmenu.h	/^void        g_menu_append                           (GMenu       *menu,$/;"	p
g_menu_append_item	gmenu.h	/^void        g_menu_append_item                      (GMenu       *menu,$/;"	p
g_menu_append_section	gmenu.h	/^void        g_menu_append_section                   (GMenu       *menu,$/;"	p
g_menu_append_submenu	gmenu.h	/^void        g_menu_append_submenu                   (GMenu       *menu,$/;"	p
g_menu_attribute_iter_get_name	gmenumodel.h	/^const gchar *           g_menu_attribute_iter_get_name                  (GMenuAttributeIter  *iter);$/;"	p
g_menu_attribute_iter_get_next	gmenumodel.h	/^gboolean                g_menu_attribute_iter_get_next                  (GMenuAttributeIter  *iter,$/;"	p
g_menu_attribute_iter_get_value	gmenumodel.h	/^GVariant *              g_menu_attribute_iter_get_value                 (GMenuAttributeIter  *iter);$/;"	p
g_menu_attribute_iter_next	gmenumodel.h	/^gboolean                g_menu_attribute_iter_next                      (GMenuAttributeIter  *iter);$/;"	p
g_menu_freeze	gmenu.h	/^void        g_menu_freeze                           (GMenu       *menu);$/;"	p
g_menu_insert	gmenu.h	/^void        g_menu_insert                           (GMenu       *menu,$/;"	p
g_menu_insert_item	gmenu.h	/^void        g_menu_insert_item                      (GMenu       *menu,$/;"	p
g_menu_insert_section	gmenu.h	/^void        g_menu_insert_section                   (GMenu       *menu,$/;"	p
g_menu_insert_submenu	gmenu.h	/^void        g_menu_insert_submenu                   (GMenu       *menu,$/;"	p
g_menu_item_new	gmenu.h	/^GMenuItem * g_menu_item_new                         (const gchar *label,$/;"	p
g_menu_item_new_section	gmenu.h	/^GMenuItem * g_menu_item_new_section                 (const gchar *label,$/;"	p
g_menu_item_new_submenu	gmenu.h	/^GMenuItem * g_menu_item_new_submenu                 (const gchar *label,$/;"	p
g_menu_item_set_action_and_target	gmenu.h	/^void        g_menu_item_set_action_and_target       (GMenuItem   *menu_item,$/;"	p
g_menu_item_set_action_and_target_value	gmenu.h	/^void        g_menu_item_set_action_and_target_value (GMenuItem   *menu_item,$/;"	p
g_menu_item_set_attribute	gmenu.h	/^void        g_menu_item_set_attribute               (GMenuItem   *menu_item,$/;"	p
g_menu_item_set_attribute_value	gmenu.h	/^void        g_menu_item_set_attribute_value         (GMenuItem   *menu_item,$/;"	p
g_menu_item_set_detailed_action	gmenu.h	/^void        g_menu_item_set_detailed_action         (GMenuItem   *menu_item,$/;"	p
g_menu_item_set_label	gmenu.h	/^void        g_menu_item_set_label                   (GMenuItem   *menu_item,$/;"	p
g_menu_item_set_link	gmenu.h	/^void        g_menu_item_set_link                    (GMenuItem   *menu_item,$/;"	p
g_menu_item_set_section	gmenu.h	/^void        g_menu_item_set_section                 (GMenuItem   *menu_item,$/;"	p
g_menu_item_set_submenu	gmenu.h	/^void        g_menu_item_set_submenu                 (GMenuItem   *menu_item,$/;"	p
g_menu_link_iter_get_name	gmenumodel.h	/^const gchar *           g_menu_link_iter_get_name                       (GMenuLinkIter  *iter);$/;"	p
g_menu_link_iter_get_next	gmenumodel.h	/^gboolean                g_menu_link_iter_get_next                       (GMenuLinkIter  *iter,$/;"	p
g_menu_link_iter_get_value	gmenumodel.h	/^GMenuModel *            g_menu_link_iter_get_value                      (GMenuLinkIter  *iter);$/;"	p
g_menu_link_iter_next	gmenumodel.h	/^gboolean                g_menu_link_iter_next                           (GMenuLinkIter  *iter);$/;"	p
g_menu_model_get_item_attribute	gmenumodel.h	/^gboolean                g_menu_model_get_item_attribute                 (GMenuModel         *model,$/;"	p
g_menu_model_get_item_attribute_value	gmenumodel.h	/^GVariant *              g_menu_model_get_item_attribute_value           (GMenuModel         *model,$/;"	p
g_menu_model_get_item_link	gmenumodel.h	/^GMenuModel *            g_menu_model_get_item_link                      (GMenuModel         *model,$/;"	p
g_menu_model_get_n_items	gmenumodel.h	/^gint                    g_menu_model_get_n_items                        (GMenuModel         *model);$/;"	p
g_menu_model_is_mutable	gmenumodel.h	/^gboolean                g_menu_model_is_mutable                         (GMenuModel         *model);$/;"	p
g_menu_model_items_changed	gmenumodel.h	/^void                    g_menu_model_items_changed                      (GMenuModel         *model,$/;"	p
g_menu_model_iterate_item_attributes	gmenumodel.h	/^GMenuAttributeIter *    g_menu_model_iterate_item_attributes            (GMenuModel         *model,$/;"	p
g_menu_model_iterate_item_links	gmenumodel.h	/^GMenuLinkIter *         g_menu_model_iterate_item_links                 (GMenuModel         *model,$/;"	p
g_menu_new	gmenu.h	/^GMenu *     g_menu_new                              (void);$/;"	p
g_menu_prepend	gmenu.h	/^void        g_menu_prepend                          (GMenu       *menu,$/;"	p
g_menu_prepend_item	gmenu.h	/^void        g_menu_prepend_item                     (GMenu       *menu,$/;"	p
g_menu_prepend_section	gmenu.h	/^void        g_menu_prepend_section                  (GMenu       *menu,$/;"	p
g_menu_prepend_submenu	gmenu.h	/^void        g_menu_prepend_submenu                  (GMenu       *menu,$/;"	p
g_menu_remove	gmenu.h	/^void        g_menu_remove                           (GMenu       *menu,$/;"	p
g_mount_can_eject	gmount.h	/^gboolean    g_mount_can_eject                 (GMount              *mount);$/;"	p
g_mount_can_unmount	gmount.h	/^gboolean    g_mount_can_unmount               (GMount              *mount);$/;"	p
g_mount_eject_finish	gmount.h	/^gboolean    g_mount_eject_finish              (GMount              *mount,$/;"	v
g_mount_eject_with_operation	gmount.h	/^void        g_mount_eject_with_operation      (GMount              *mount,$/;"	p
g_mount_eject_with_operation_finish	gmount.h	/^gboolean    g_mount_eject_with_operation_finish (GMount            *mount,$/;"	p
g_mount_get_default_location	gmount.h	/^GFile     * g_mount_get_default_location      (GMount              *mount);$/;"	p
g_mount_get_drive	gmount.h	/^GDrive    * g_mount_get_drive                 (GMount              *mount);$/;"	p
g_mount_get_icon	gmount.h	/^GIcon     * g_mount_get_icon                  (GMount              *mount);$/;"	p
g_mount_get_name	gmount.h	/^char      * g_mount_get_name                  (GMount              *mount);$/;"	p
g_mount_get_root	gmount.h	/^GFile     * g_mount_get_root                  (GMount              *mount);$/;"	p
g_mount_get_sort_key	gmount.h	/^const gchar *g_mount_get_sort_key             (GMount              *mount);$/;"	p
g_mount_get_uuid	gmount.h	/^char      * g_mount_get_uuid                  (GMount              *mount);$/;"	p
g_mount_get_volume	gmount.h	/^GVolume   * g_mount_get_volume                (GMount              *mount);$/;"	p
g_mount_guess_content_type	gmount.h	/^void        g_mount_guess_content_type        (GMount              *mount,$/;"	p
g_mount_guess_content_type_finish	gmount.h	/^gchar    ** g_mount_guess_content_type_finish (GMount              *mount,$/;"	p
g_mount_guess_content_type_sync	gmount.h	/^gchar    ** g_mount_guess_content_type_sync   (GMount              *mount,$/;"	p
g_mount_is_shadowed	gmount.h	/^gboolean    g_mount_is_shadowed               (GMount              *mount);$/;"	p
g_mount_operation_get_anonymous	gmountoperation.h	/^gboolean      g_mount_operation_get_anonymous     (GMountOperation *op);$/;"	p
g_mount_operation_get_choice	gmountoperation.h	/^int           g_mount_operation_get_choice        (GMountOperation *op);$/;"	p
g_mount_operation_get_domain	gmountoperation.h	/^const char *  g_mount_operation_get_domain        (GMountOperation *op);$/;"	p
g_mount_operation_get_password	gmountoperation.h	/^const char *  g_mount_operation_get_password      (GMountOperation *op);$/;"	p
g_mount_operation_get_password_save	gmountoperation.h	/^GPasswordSave g_mount_operation_get_password_save (GMountOperation *op);$/;"	p
g_mount_operation_get_username	gmountoperation.h	/^const char *  g_mount_operation_get_username      (GMountOperation *op);$/;"	p
g_mount_operation_new	gmountoperation.h	/^GMountOperation * g_mount_operation_new           (void);$/;"	p
g_mount_operation_reply	gmountoperation.h	/^void          g_mount_operation_reply             (GMountOperation *op,$/;"	p
g_mount_operation_set_anonymous	gmountoperation.h	/^void          g_mount_operation_set_anonymous     (GMountOperation *op,$/;"	p
g_mount_operation_set_choice	gmountoperation.h	/^void          g_mount_operation_set_choice        (GMountOperation *op,$/;"	p
g_mount_operation_set_domain	gmountoperation.h	/^void          g_mount_operation_set_domain        (GMountOperation *op,$/;"	p
g_mount_operation_set_password	gmountoperation.h	/^void          g_mount_operation_set_password      (GMountOperation *op,$/;"	p
g_mount_operation_set_password_save	gmountoperation.h	/^void          g_mount_operation_set_password_save (GMountOperation *op,$/;"	p
g_mount_operation_set_username	gmountoperation.h	/^void          g_mount_operation_set_username      (GMountOperation *op,$/;"	p
g_mount_remount	gmount.h	/^void        g_mount_remount                   (GMount              *mount,$/;"	p
g_mount_remount_finish	gmount.h	/^gboolean    g_mount_remount_finish            (GMount              *mount,$/;"	p
g_mount_shadow	gmount.h	/^void        g_mount_shadow                    (GMount              *mount);$/;"	p
g_mount_unmount_finish	gmount.h	/^gboolean    g_mount_unmount_finish            (GMount              *mount,$/;"	v
g_mount_unmount_with_operation	gmount.h	/^void        g_mount_unmount_with_operation    (GMount              *mount,$/;"	p
g_mount_unmount_with_operation_finish	gmount.h	/^gboolean    g_mount_unmount_with_operation_finish (GMount          *mount,$/;"	p
g_mount_unshadow	gmount.h	/^void        g_mount_unshadow                  (GMount              *mount);$/;"	p
g_network_address_get_hostname	gnetworkaddress.h	/^const gchar        *g_network_address_get_hostname (GNetworkAddress  *addr);$/;"	p
g_network_address_get_port	gnetworkaddress.h	/^guint16             g_network_address_get_port     (GNetworkAddress  *addr);$/;"	p
g_network_address_get_scheme	gnetworkaddress.h	/^const gchar        *g_network_address_get_scheme   (GNetworkAddress  *addr);$/;"	p
g_network_address_new	gnetworkaddress.h	/^GSocketConnectable *g_network_address_new          (const gchar      *hostname,$/;"	p
g_network_address_parse	gnetworkaddress.h	/^GSocketConnectable *g_network_address_parse        (const gchar      *host_and_port,$/;"	p
g_network_address_parse_uri	gnetworkaddress.h	/^GSocketConnectable *g_network_address_parse_uri    (const gchar      *uri,$/;"	p
g_network_monitor_can_reach	gnetworkmonitor.h	/^gboolean         g_network_monitor_can_reach             (GNetworkMonitor     *monitor,$/;"	p
g_network_monitor_can_reach_async	gnetworkmonitor.h	/^void             g_network_monitor_can_reach_async       (GNetworkMonitor     *monitor,$/;"	p
g_network_monitor_can_reach_finish	gnetworkmonitor.h	/^gboolean         g_network_monitor_can_reach_finish      (GNetworkMonitor     *monitor,$/;"	p
g_network_monitor_get_default	gnetworkmonitor.h	/^GNetworkMonitor *g_network_monitor_get_default           (void);$/;"	p
g_network_monitor_get_network_available	gnetworkmonitor.h	/^gboolean         g_network_monitor_get_network_available (GNetworkMonitor     *monitor);$/;"	p
g_network_service_get_domain	gnetworkservice.h	/^const gchar         *g_network_service_get_domain    (GNetworkService *srv);$/;"	p
g_network_service_get_protocol	gnetworkservice.h	/^const gchar         *g_network_service_get_protocol  (GNetworkService *srv);$/;"	p
g_network_service_get_scheme	gnetworkservice.h	/^const gchar         *g_network_service_get_scheme    (GNetworkService *srv);$/;"	p
g_network_service_get_service	gnetworkservice.h	/^const gchar         *g_network_service_get_service   (GNetworkService *srv);$/;"	p
g_network_service_new	gnetworkservice.h	/^GSocketConnectable  *g_network_service_new           (const gchar     *service,$/;"	p
g_network_service_set_scheme	gnetworkservice.h	/^void                 g_network_service_set_scheme    (GNetworkService *srv, const gchar *scheme);$/;"	p
g_null_settings_backend_new	gsettingsbackend.h	/^GSettingsBackend *      g_null_settings_backend_new                     (void);$/;"	p
g_output_stream_clear_pending	goutputstream.h	/^void     g_output_stream_clear_pending (GOutputStream             *stream);$/;"	p
g_output_stream_close	goutputstream.h	/^gboolean g_output_stream_close         (GOutputStream             *stream,$/;"	p
g_output_stream_close_async	goutputstream.h	/^void     g_output_stream_close_async   (GOutputStream             *stream,$/;"	p
g_output_stream_close_finish	goutputstream.h	/^gboolean g_output_stream_close_finish  (GOutputStream             *stream,$/;"	p
g_output_stream_flush	goutputstream.h	/^gboolean g_output_stream_flush         (GOutputStream             *stream,$/;"	p
g_output_stream_flush_async	goutputstream.h	/^void     g_output_stream_flush_async   (GOutputStream             *stream,$/;"	p
g_output_stream_flush_finish	goutputstream.h	/^gboolean g_output_stream_flush_finish  (GOutputStream             *stream,$/;"	p
g_output_stream_has_pending	goutputstream.h	/^gboolean g_output_stream_has_pending   (GOutputStream             *stream);$/;"	p
g_output_stream_is_closed	goutputstream.h	/^gboolean g_output_stream_is_closed     (GOutputStream             *stream);$/;"	p
g_output_stream_is_closing	goutputstream.h	/^gboolean g_output_stream_is_closing    (GOutputStream             *stream);$/;"	p
g_output_stream_set_pending	goutputstream.h	/^gboolean g_output_stream_set_pending   (GOutputStream             *stream,$/;"	p
g_output_stream_splice	goutputstream.h	/^gssize   g_output_stream_splice        (GOutputStream             *stream,$/;"	p
g_output_stream_splice_async	goutputstream.h	/^void     g_output_stream_splice_async  (GOutputStream             *stream,$/;"	p
g_output_stream_splice_finish	goutputstream.h	/^gssize   g_output_stream_splice_finish (GOutputStream             *stream,$/;"	p
g_output_stream_write	goutputstream.h	/^gssize   g_output_stream_write         (GOutputStream             *stream,$/;"	p
g_output_stream_write_all	goutputstream.h	/^gboolean g_output_stream_write_all     (GOutputStream             *stream,$/;"	p
g_output_stream_write_async	goutputstream.h	/^void     g_output_stream_write_async   (GOutputStream             *stream,$/;"	p
g_output_stream_write_finish	goutputstream.h	/^gssize   g_output_stream_write_finish  (GOutputStream             *stream,$/;"	p
g_permission_acquire	gpermission.h	/^gboolean        g_permission_acquire            (GPermission          *permission,$/;"	p
g_permission_acquire_async	gpermission.h	/^void            g_permission_acquire_async      (GPermission          *permission,$/;"	p
g_permission_acquire_finish	gpermission.h	/^gboolean        g_permission_acquire_finish     (GPermission          *permission,$/;"	p
g_permission_get_allowed	gpermission.h	/^gboolean        g_permission_get_allowed        (GPermission   *permission);$/;"	p
g_permission_get_can_acquire	gpermission.h	/^gboolean        g_permission_get_can_acquire    (GPermission   *permission);$/;"	p
g_permission_get_can_release	gpermission.h	/^gboolean        g_permission_get_can_release    (GPermission   *permission);$/;"	p
g_permission_get_type	gpermission.h	/^GType           g_permission_get_type           (void);$/;"	p
g_permission_impl_update	gpermission.h	/^void            g_permission_impl_update        (GPermission  *permission,$/;"	p
g_permission_release	gpermission.h	/^gboolean        g_permission_release            (GPermission          *permission,$/;"	p
g_permission_release_async	gpermission.h	/^void            g_permission_release_async      (GPermission          *permission,$/;"	p
g_permission_release_finish	gpermission.h	/^gboolean        g_permission_release_finish     (GPermission          *permission,$/;"	p
g_pollable_input_stream_can_poll	gpollableinputstream.h	/^gboolean g_pollable_input_stream_can_poll         (GPollableInputStream  *stream);$/;"	p
g_pollable_input_stream_create_source	gpollableinputstream.h	/^GSource *g_pollable_input_stream_create_source    (GPollableInputStream  *stream,$/;"	p
g_pollable_input_stream_is_readable	gpollableinputstream.h	/^gboolean g_pollable_input_stream_is_readable      (GPollableInputStream  *stream);$/;"	p
g_pollable_input_stream_read_nonblocking	gpollableinputstream.h	/^gssize   g_pollable_input_stream_read_nonblocking (GPollableInputStream  *stream,$/;"	p
g_pollable_output_stream_can_poll	gpollableoutputstream.h	/^gboolean g_pollable_output_stream_can_poll          (GPollableOutputStream  *stream);$/;"	p
g_pollable_output_stream_create_source	gpollableoutputstream.h	/^GSource *g_pollable_output_stream_create_source     (GPollableOutputStream  *stream,$/;"	p
g_pollable_output_stream_is_writable	gpollableoutputstream.h	/^gboolean g_pollable_output_stream_is_writable       (GPollableOutputStream  *stream);$/;"	p
g_pollable_output_stream_write_nonblocking	gpollableoutputstream.h	/^gssize   g_pollable_output_stream_write_nonblocking (GPollableOutputStream  *stream,$/;"	p
g_pollable_source_new	gpollableinputstream.h	/^GSource *g_pollable_source_new                    (GObject               *pollable_stream);$/;"	p
g_properties_changed	gdbusproxy.h	/^  void (*g_properties_changed) (GDBusProxy          *proxy,$/;"	m	struct:_GDBusProxyClass
g_proxy_address_get_destination_hostname	gproxyaddress.h	/^const gchar    *g_proxy_address_get_destination_hostname    (GProxyAddress *proxy);$/;"	p
g_proxy_address_get_destination_port	gproxyaddress.h	/^guint16         g_proxy_address_get_destination_port        (GProxyAddress *proxy);$/;"	p
g_proxy_address_get_password	gproxyaddress.h	/^const gchar    *g_proxy_address_get_password                (GProxyAddress *proxy);$/;"	p
g_proxy_address_get_protocol	gproxyaddress.h	/^const gchar    *g_proxy_address_get_protocol                (GProxyAddress *proxy);$/;"	p
g_proxy_address_get_username	gproxyaddress.h	/^const gchar    *g_proxy_address_get_username                (GProxyAddress *proxy);$/;"	p
g_proxy_address_new	gproxyaddress.h	/^GSocketAddress *g_proxy_address_new         (GInetAddress *inetaddr,$/;"	p
g_proxy_connect	gproxy.h	/^GIOStream *g_proxy_connect           (GProxy               *proxy,$/;"	p
g_proxy_connect_async	gproxy.h	/^void       g_proxy_connect_async     (GProxy               *proxy,$/;"	p
g_proxy_connect_finish	gproxy.h	/^GIOStream *g_proxy_connect_finish    (GProxy               *proxy,$/;"	p
g_proxy_get_default_for_protocol	gproxy.h	/^GProxy    *g_proxy_get_default_for_protocol (const gchar *protocol);$/;"	p
g_proxy_resolver_get_default	gproxyresolver.h	/^GProxyResolver *g_proxy_resolver_get_default    (void);$/;"	p
g_proxy_resolver_is_supported	gproxyresolver.h	/^gboolean        g_proxy_resolver_is_supported   (GProxyResolver       *resolver);$/;"	p
g_proxy_resolver_lookup	gproxyresolver.h	/^gchar	      **g_proxy_resolver_lookup		(GProxyResolver       *resolver,$/;"	p
g_proxy_resolver_lookup_async	gproxyresolver.h	/^void		g_proxy_resolver_lookup_async   (GProxyResolver       *resolver,$/;"	p
g_proxy_resolver_lookup_finish	gproxyresolver.h	/^gchar	      **g_proxy_resolver_lookup_finish  (GProxyResolver       *resolver,$/;"	p
g_proxy_supports_hostname	gproxy.h	/^gboolean   g_proxy_supports_hostname (GProxy               *proxy);$/;"	p
g_remote_action_group_activate_action_full	gremoteactiongroup.h	/^void                    g_remote_action_group_activate_action_full      (GRemoteActionGroup *remote,$/;"	p
g_remote_action_group_change_action_state_full	gremoteactiongroup.h	/^void                    g_remote_action_group_change_action_state_full  (GRemoteActionGroup *remote,$/;"	p
g_resolver_error_quark	gresolver.h	/^GQuark g_resolver_error_quark (void);$/;"	p
g_resolver_free_addresses	gresolver.h	/^void       g_resolver_free_addresses            (GList                *addresses);$/;"	p
g_resolver_free_targets	gresolver.h	/^void       g_resolver_free_targets              (GList                *targets);$/;"	p
g_resolver_get_default	gresolver.h	/^GResolver *g_resolver_get_default               (void);$/;"	p
g_resolver_lookup_by_address	gresolver.h	/^gchar     *g_resolver_lookup_by_address         (GResolver            *resolver,$/;"	p
g_resolver_lookup_by_address_async	gresolver.h	/^void       g_resolver_lookup_by_address_async   (GResolver            *resolver,$/;"	p
g_resolver_lookup_by_address_finish	gresolver.h	/^gchar     *g_resolver_lookup_by_address_finish  (GResolver            *resolver,$/;"	p
g_resolver_lookup_by_name	gresolver.h	/^GList     *g_resolver_lookup_by_name            (GResolver            *resolver,$/;"	p
g_resolver_lookup_by_name_async	gresolver.h	/^void       g_resolver_lookup_by_name_async      (GResolver            *resolver,$/;"	p
g_resolver_lookup_by_name_finish	gresolver.h	/^GList     *g_resolver_lookup_by_name_finish     (GResolver            *resolver,$/;"	p
g_resolver_lookup_service	gresolver.h	/^GList     *g_resolver_lookup_service            (GResolver            *resolver,$/;"	p
g_resolver_lookup_service_async	gresolver.h	/^void       g_resolver_lookup_service_async      (GResolver            *resolver,$/;"	p
g_resolver_lookup_service_finish	gresolver.h	/^GList     *g_resolver_lookup_service_finish     (GResolver            *resolver,$/;"	p
g_resolver_set_default	gresolver.h	/^void       g_resolver_set_default               (GResolver            *resolver);$/;"	p
g_resource_enumerate_children	gresource.h	/^char **       g_resource_enumerate_children  (GResource             *resource,$/;"	p
g_resource_error_quark	gresource.h	/^GQuark g_resource_error_quark (void);$/;"	p
g_resource_get_info	gresource.h	/^gboolean      g_resource_get_info            (GResource             *resource,$/;"	p
g_resource_load	gresource.h	/^GResource *   g_resource_load                (const gchar           *filename,$/;"	p
g_resource_lookup_data	gresource.h	/^GBytes *      g_resource_lookup_data         (GResource             *resource,$/;"	p
g_resource_new_from_data	gresource.h	/^GResource *   g_resource_new_from_data       (GBytes                *data,$/;"	p
g_resource_open_stream	gresource.h	/^GInputStream *g_resource_open_stream         (GResource             *resource,$/;"	p
g_resource_ref	gresource.h	/^GResource *   g_resource_ref                 (GResource             *resource);$/;"	p
g_resource_unref	gresource.h	/^void          g_resource_unref               (GResource             *resource);$/;"	p
g_resources_enumerate_children	gresource.h	/^char **       g_resources_enumerate_children (const char            *path,$/;"	p
g_resources_get_info	gresource.h	/^gboolean      g_resources_get_info           (const char            *path,$/;"	p
g_resources_lookup_data	gresource.h	/^GBytes *      g_resources_lookup_data        (const char            *path,$/;"	p
g_resources_open_stream	gresource.h	/^GInputStream *g_resources_open_stream        (const char            *path,$/;"	p
g_resources_register	gresource.h	/^void          g_resources_register           (GResource             *resource);$/;"	p
g_resources_unregister	gresource.h	/^void          g_resources_unregister         (GResource             *resource);$/;"	p
g_seekable_can_seek	gseekable.h	/^gboolean g_seekable_can_seek     (GSeekable     *seekable);$/;"	p
g_seekable_can_truncate	gseekable.h	/^gboolean g_seekable_can_truncate (GSeekable     *seekable);$/;"	p
g_seekable_seek	gseekable.h	/^gboolean g_seekable_seek         (GSeekable     *seekable,$/;"	p
g_seekable_tell	gseekable.h	/^goffset  g_seekable_tell         (GSeekable     *seekable);$/;"	p
g_seekable_truncate	gseekable.h	/^gboolean g_seekable_truncate     (GSeekable     *seekable,$/;"	p
g_settings_apply	gsettings.h	/^void                    g_settings_apply                                (GSettings          *settings);$/;"	p
g_settings_backend_changed	gsettingsbackend.h	/^void                    g_settings_backend_changed                      (GSettingsBackend    *backend,$/;"	p
g_settings_backend_changed_tree	gsettingsbackend.h	/^void                    g_settings_backend_changed_tree                 (GSettingsBackend    *backend,$/;"	p
g_settings_backend_flatten_tree	gsettingsbackend.h	/^void                    g_settings_backend_flatten_tree                 (GTree               *tree,$/;"	p
g_settings_backend_get_default	gsettingsbackend.h	/^GSettingsBackend *      g_settings_backend_get_default                  (void);$/;"	p
g_settings_backend_get_type	gsettingsbackend.h	/^GType                   g_settings_backend_get_type                     (void);$/;"	p
g_settings_backend_keys_changed	gsettingsbackend.h	/^void                    g_settings_backend_keys_changed                 (GSettingsBackend    *backend,$/;"	p
g_settings_backend_path_changed	gsettingsbackend.h	/^void                    g_settings_backend_path_changed                 (GSettingsBackend    *backend,$/;"	p
g_settings_backend_path_writable_changed	gsettingsbackend.h	/^void                    g_settings_backend_path_writable_changed        (GSettingsBackend    *backend,$/;"	p
g_settings_backend_writable_changed	gsettingsbackend.h	/^void                    g_settings_backend_writable_changed             (GSettingsBackend    *backend,$/;"	p
g_settings_bind	gsettings.h	/^void                    g_settings_bind                                 (GSettings               *settings,$/;"	p
g_settings_bind_with_mapping	gsettings.h	/^void                    g_settings_bind_with_mapping                    (GSettings               *settings,$/;"	p
g_settings_bind_writable	gsettings.h	/^void                    g_settings_bind_writable                        (GSettings               *settings,$/;"	p
g_settings_create_action	gsettings.h	/^GAction *               g_settings_create_action                        (GSettings               *settings,$/;"	p
g_settings_delay	gsettings.h	/^void                    g_settings_delay                                (GSettings          *settings);$/;"	p
g_settings_get	gsettings.h	/^void                    g_settings_get                                  (GSettings          *settings,$/;"	p
g_settings_get_boolean	gsettings.h	/^gboolean                g_settings_get_boolean                          (GSettings          *settings,$/;"	p
g_settings_get_child	gsettings.h	/^GSettings *             g_settings_get_child                            (GSettings          *settings,$/;"	p
g_settings_get_double	gsettings.h	/^gdouble                 g_settings_get_double                           (GSettings          *settings,$/;"	p
g_settings_get_enum	gsettings.h	/^gint                    g_settings_get_enum                             (GSettings          *settings,$/;"	p
g_settings_get_flags	gsettings.h	/^guint                   g_settings_get_flags                            (GSettings          *settings,$/;"	p
g_settings_get_has_unapplied	gsettings.h	/^gboolean                g_settings_get_has_unapplied                    (GSettings          *settings);$/;"	p
g_settings_get_int	gsettings.h	/^gint                    g_settings_get_int                              (GSettings          *settings,$/;"	p
g_settings_get_mapped	gsettings.h	/^gpointer                g_settings_get_mapped                           (GSettings               *settings,$/;"	p
g_settings_get_range	gsettings.h	/^GVariant *              g_settings_get_range                            (GSettings          *settings,$/;"	p
g_settings_get_string	gsettings.h	/^gchar *                 g_settings_get_string                           (GSettings          *settings,$/;"	p
g_settings_get_strv	gsettings.h	/^gchar **                g_settings_get_strv                             (GSettings          *settings,$/;"	p
g_settings_get_type	gsettings.h	/^GType                   g_settings_get_type                             (void);$/;"	p
g_settings_get_uint	gsettings.h	/^guint                   g_settings_get_uint                             (GSettings          *settings,$/;"	p
g_settings_get_value	gsettings.h	/^GVariant *              g_settings_get_value                            (GSettings          *settings,$/;"	p
g_settings_is_writable	gsettings.h	/^gboolean                g_settings_is_writable                          (GSettings          *settings,$/;"	p
g_settings_list_children	gsettings.h	/^gchar **                g_settings_list_children                        (GSettings          *settings);$/;"	p
g_settings_list_keys	gsettings.h	/^gchar **                g_settings_list_keys                            (GSettings          *settings);$/;"	p
g_settings_list_relocatable_schemas	gsettings.h	/^const gchar * const *   g_settings_list_relocatable_schemas             (void);$/;"	p
g_settings_list_schemas	gsettings.h	/^const gchar * const *   g_settings_list_schemas                         (void);$/;"	p
g_settings_new	gsettings.h	/^GSettings *             g_settings_new                                  (const gchar        *schema_id);$/;"	p
g_settings_new_full	gsettings.h	/^GSettings *             g_settings_new_full                             (GSettingsSchema    *schema,$/;"	p
g_settings_new_with_backend	gsettings.h	/^GSettings *             g_settings_new_with_backend                     (const gchar        *schema_id,$/;"	p
g_settings_new_with_backend_and_path	gsettings.h	/^GSettings *             g_settings_new_with_backend_and_path            (const gchar        *schema_id,$/;"	p
g_settings_new_with_path	gsettings.h	/^GSettings *             g_settings_new_with_path                        (const gchar        *schema_id,$/;"	p
g_settings_range_check	gsettings.h	/^gboolean                g_settings_range_check                          (GSettings          *settings,$/;"	p
g_settings_reset	gsettings.h	/^void                    g_settings_reset                                (GSettings          *settings,$/;"	p
g_settings_revert	gsettings.h	/^void                    g_settings_revert                               (GSettings          *settings);$/;"	p
g_settings_schema_get_id	gsettingsschema.h	/^const gchar *           g_settings_schema_get_id                        (GSettingsSchema        *schema);$/;"	p
g_settings_schema_get_path	gsettingsschema.h	/^const gchar *           g_settings_schema_get_path                      (GSettingsSchema        *schema);$/;"	p
g_settings_schema_ref	gsettingsschema.h	/^GSettingsSchema *       g_settings_schema_ref                           (GSettingsSchema        *schema);$/;"	p
g_settings_schema_source_get_default	gsettingsschema.h	/^GSettingsSchemaSource * g_settings_schema_source_get_default            (void);$/;"	p
g_settings_schema_source_lookup	gsettingsschema.h	/^GSettingsSchema *       g_settings_schema_source_lookup                 (GSettingsSchemaSource  *source,$/;"	p
g_settings_schema_source_new_from_directory	gsettingsschema.h	/^GSettingsSchemaSource * g_settings_schema_source_new_from_directory     (const gchar            *directory,$/;"	p
g_settings_schema_source_ref	gsettingsschema.h	/^GSettingsSchemaSource * g_settings_schema_source_ref                    (GSettingsSchemaSource  *source);$/;"	p
g_settings_schema_source_unref	gsettingsschema.h	/^void                    g_settings_schema_source_unref                  (GSettingsSchemaSource  *source);$/;"	p
g_settings_schema_unref	gsettingsschema.h	/^void                    g_settings_schema_unref                         (GSettingsSchema        *schema);$/;"	p
g_settings_set	gsettings.h	/^gboolean                g_settings_set                                  (GSettings          *settings,$/;"	p
g_settings_set_boolean	gsettings.h	/^gboolean                g_settings_set_boolean                          (GSettings          *settings,$/;"	p
g_settings_set_double	gsettings.h	/^gboolean                g_settings_set_double                           (GSettings          *settings,$/;"	p
g_settings_set_enum	gsettings.h	/^gboolean                g_settings_set_enum                             (GSettings          *settings,$/;"	p
g_settings_set_flags	gsettings.h	/^gboolean                g_settings_set_flags                            (GSettings          *settings,$/;"	p
g_settings_set_int	gsettings.h	/^gboolean                g_settings_set_int                              (GSettings          *settings,$/;"	p
g_settings_set_string	gsettings.h	/^gboolean                g_settings_set_string                           (GSettings          *settings,$/;"	p
g_settings_set_strv	gsettings.h	/^gboolean                g_settings_set_strv                             (GSettings          *settings,$/;"	p
g_settings_set_uint	gsettings.h	/^gboolean                g_settings_set_uint                             (GSettings          *settings,$/;"	p
g_settings_set_value	gsettings.h	/^gboolean                g_settings_set_value                            (GSettings          *settings,$/;"	p
g_settings_sync	gsettings.h	/^void                    g_settings_sync                                 (void);$/;"	p
g_settings_unbind	gsettings.h	/^void                    g_settings_unbind                               (gpointer                 object,$/;"	p
g_signal	gdbusproxy.h	/^  void (*g_signal)             (GDBusProxy          *proxy,$/;"	m	struct:_GDBusProxyClass
g_simple_action_group_add_entries	gsimpleactiongroup.h	/^void                    g_simple_action_group_add_entries               (GSimpleActionGroup *simple,$/;"	p
g_simple_action_group_insert	gsimpleactiongroup.h	/^void                    g_simple_action_group_insert                    (GSimpleActionGroup *simple,$/;"	p
g_simple_action_group_lookup	gsimpleactiongroup.h	/^GAction *               g_simple_action_group_lookup                    (GSimpleActionGroup *simple,$/;"	p
g_simple_action_group_new	gsimpleactiongroup.h	/^GSimpleActionGroup *    g_simple_action_group_new                       (void);$/;"	p
g_simple_action_group_remove	gsimpleactiongroup.h	/^void                    g_simple_action_group_remove                    (GSimpleActionGroup *simple,$/;"	p
g_simple_action_new	gsimpleaction.h	/^GSimpleAction *         g_simple_action_new                             (const gchar        *name,$/;"	p
g_simple_action_new_stateful	gsimpleaction.h	/^GSimpleAction *         g_simple_action_new_stateful                    (const gchar        *name,$/;"	p
g_simple_action_set_enabled	gsimpleaction.h	/^void                    g_simple_action_set_enabled                     (GSimpleAction      *simple,$/;"	p
g_simple_action_set_state	gsimpleaction.h	/^void                    g_simple_action_set_state                       (GSimpleAction      *simple,$/;"	p
g_simple_async_report_error_in_idle	gsimpleasyncresult.h	/^void g_simple_async_report_error_in_idle  (GObject            *object,$/;"	p
g_simple_async_report_gerror_in_idle	gsimpleasyncresult.h	/^void g_simple_async_report_gerror_in_idle (GObject            *object,$/;"	p
g_simple_async_report_take_gerror_in_idle	gsimpleasyncresult.h	/^void g_simple_async_report_take_gerror_in_idle (GObject            *object,$/;"	p
g_simple_async_result_complete	gsimpleasyncresult.h	/^void                g_simple_async_result_complete         (GSimpleAsyncResult      *simple);$/;"	p
g_simple_async_result_complete_in_idle	gsimpleasyncresult.h	/^void                g_simple_async_result_complete_in_idle (GSimpleAsyncResult      *simple);$/;"	p
g_simple_async_result_get_op_res_gboolean	gsimpleasyncresult.h	/^gboolean            g_simple_async_result_get_op_res_gboolean (GSimpleAsyncResult      *simple);$/;"	p
g_simple_async_result_get_op_res_gpointer	gsimpleasyncresult.h	/^gpointer            g_simple_async_result_get_op_res_gpointer (GSimpleAsyncResult      *simple);$/;"	p
g_simple_async_result_get_op_res_gssize	gsimpleasyncresult.h	/^gssize              g_simple_async_result_get_op_res_gssize   (GSimpleAsyncResult      *simple);$/;"	p
g_simple_async_result_get_source_tag	gsimpleasyncresult.h	/^gpointer            g_simple_async_result_get_source_tag   (GSimpleAsyncResult      *simple);$/;"	p
g_simple_async_result_is_valid	gsimpleasyncresult.h	/^gboolean            g_simple_async_result_is_valid         (GAsyncResult            *result,$/;"	p
g_simple_async_result_new	gsimpleasyncresult.h	/^GSimpleAsyncResult *g_simple_async_result_new              (GObject                 *source_object,$/;"	p
g_simple_async_result_new_from_error	gsimpleasyncresult.h	/^GSimpleAsyncResult *g_simple_async_result_new_from_error   (GObject                 *source_object,$/;"	p
g_simple_async_result_new_take_error	gsimpleasyncresult.h	/^GSimpleAsyncResult *g_simple_async_result_new_take_error   (GObject                 *source_object,$/;"	p
g_simple_async_result_propagate_error	gsimpleasyncresult.h	/^gboolean            g_simple_async_result_propagate_error  (GSimpleAsyncResult      *simple,$/;"	p
g_simple_async_result_run_in_thread	gsimpleasyncresult.h	/^void                g_simple_async_result_run_in_thread    (GSimpleAsyncResult      *simple,$/;"	p
g_simple_async_result_set_check_cancellable	gsimpleasyncresult.h	/^void                g_simple_async_result_set_check_cancellable (GSimpleAsyncResult *simple,$/;"	p
g_simple_async_result_set_error_va	gsimpleasyncresult.h	/^void                g_simple_async_result_set_error_va     (GSimpleAsyncResult      *simple,$/;"	p
g_simple_async_result_set_from_error	gsimpleasyncresult.h	/^void                g_simple_async_result_set_from_error   (GSimpleAsyncResult      *simple,$/;"	p
g_simple_async_result_set_handle_cancellation	gsimpleasyncresult.h	/^void                g_simple_async_result_set_handle_cancellation (GSimpleAsyncResult      *simple,$/;"	p
g_simple_async_result_set_op_res_gboolean	gsimpleasyncresult.h	/^void                g_simple_async_result_set_op_res_gboolean (GSimpleAsyncResult      *simple,$/;"	p
g_simple_async_result_set_op_res_gpointer	gsimpleasyncresult.h	/^void                g_simple_async_result_set_op_res_gpointer (GSimpleAsyncResult      *simple,$/;"	p
g_simple_async_result_set_op_res_gssize	gsimpleasyncresult.h	/^void                g_simple_async_result_set_op_res_gssize   (GSimpleAsyncResult      *simple,$/;"	p
g_simple_async_result_take_error	gsimpleasyncresult.h	/^void                g_simple_async_result_take_error       (GSimpleAsyncResult      *simple,$/;"	p
g_simple_permission_get_type	gsimplepermission.h	/^GType                   g_simple_permission_get_type            (void);$/;"	p
g_simple_permission_new	gsimplepermission.h	/^GPermission *           g_simple_permission_new                 (gboolean allowed);$/;"	p
g_socket_accept	gsocket.h	/^GSocket *              g_socket_accept                  (GSocket                 *socket,$/;"	p
g_socket_address_enumerator_next	gsocketaddressenumerator.h	/^GSocketAddress *g_socket_address_enumerator_next        (GSocketAddressEnumerator  *enumerator,$/;"	p
g_socket_address_enumerator_next_async	gsocketaddressenumerator.h	/^void            g_socket_address_enumerator_next_async  (GSocketAddressEnumerator  *enumerator,$/;"	p
g_socket_address_enumerator_next_finish	gsocketaddressenumerator.h	/^GSocketAddress *g_socket_address_enumerator_next_finish (GSocketAddressEnumerator  *enumerator,$/;"	p
g_socket_address_get_family	gsocketaddress.h	/^GSocketFamily         g_socket_address_get_family      (GSocketAddress *address);$/;"	p
g_socket_address_get_native_size	gsocketaddress.h	/^gssize                g_socket_address_get_native_size (GSocketAddress *address);$/;"	p
g_socket_address_new_from_native	gsocketaddress.h	/^GSocketAddress *      g_socket_address_new_from_native (gpointer        native,$/;"	p
g_socket_address_to_native	gsocketaddress.h	/^gboolean              g_socket_address_to_native       (GSocketAddress *address,$/;"	p
g_socket_bind	gsocket.h	/^gboolean               g_socket_bind                    (GSocket                 *socket,$/;"	p
g_socket_check_connect_result	gsocket.h	/^gboolean               g_socket_check_connect_result    (GSocket                 *socket,$/;"	p
g_socket_client_add_application_proxy	gsocketclient.h	/^void			g_socket_client_add_application_proxy		(GSocketClient        *client,$/;"	p
g_socket_client_connect	gsocketclient.h	/^GSocketConnection *     g_socket_client_connect                         (GSocketClient        *client,$/;"	p
g_socket_client_connect_async	gsocketclient.h	/^void                    g_socket_client_connect_async                   (GSocketClient        *client,$/;"	p
g_socket_client_connect_finish	gsocketclient.h	/^GSocketConnection *     g_socket_client_connect_finish                  (GSocketClient        *client,$/;"	p
g_socket_client_connect_to_host	gsocketclient.h	/^GSocketConnection *     g_socket_client_connect_to_host                 (GSocketClient        *client,$/;"	p
g_socket_client_connect_to_host_async	gsocketclient.h	/^void                    g_socket_client_connect_to_host_async           (GSocketClient        *client,$/;"	p
g_socket_client_connect_to_host_finish	gsocketclient.h	/^GSocketConnection *     g_socket_client_connect_to_host_finish          (GSocketClient        *client,$/;"	p
g_socket_client_connect_to_service	gsocketclient.h	/^GSocketConnection *     g_socket_client_connect_to_service              (GSocketClient        *client,$/;"	p
g_socket_client_connect_to_service_async	gsocketclient.h	/^void                    g_socket_client_connect_to_service_async        (GSocketClient        *client,$/;"	p
g_socket_client_connect_to_service_finish	gsocketclient.h	/^GSocketConnection *     g_socket_client_connect_to_service_finish       (GSocketClient        *client,$/;"	p
g_socket_client_connect_to_uri	gsocketclient.h	/^GSocketConnection *     g_socket_client_connect_to_uri                  (GSocketClient        *client,$/;"	p
g_socket_client_connect_to_uri_async	gsocketclient.h	/^void                    g_socket_client_connect_to_uri_async            (GSocketClient        *client,$/;"	p
g_socket_client_connect_to_uri_finish	gsocketclient.h	/^GSocketConnection *     g_socket_client_connect_to_uri_finish           (GSocketClient        *client,$/;"	p
g_socket_client_get_enable_proxy	gsocketclient.h	/^gboolean                g_socket_client_get_enable_proxy                (GSocketClient        *client);$/;"	p
g_socket_client_get_family	gsocketclient.h	/^GSocketFamily           g_socket_client_get_family                      (GSocketClient        *client);$/;"	p
g_socket_client_get_local_address	gsocketclient.h	/^GSocketAddress         *g_socket_client_get_local_address               (GSocketClient        *client);$/;"	p
g_socket_client_get_protocol	gsocketclient.h	/^GSocketProtocol         g_socket_client_get_protocol                    (GSocketClient        *client);$/;"	p
g_socket_client_get_socket_type	gsocketclient.h	/^GSocketType             g_socket_client_get_socket_type                 (GSocketClient        *client);$/;"	p
g_socket_client_get_timeout	gsocketclient.h	/^guint                   g_socket_client_get_timeout                     (GSocketClient        *client);$/;"	p
g_socket_client_get_tls	gsocketclient.h	/^gboolean                g_socket_client_get_tls                         (GSocketClient        *client);$/;"	p
g_socket_client_get_tls_validation_flags	gsocketclient.h	/^GTlsCertificateFlags    g_socket_client_get_tls_validation_flags        (GSocketClient        *client);$/;"	p
g_socket_client_new	gsocketclient.h	/^GSocketClient          *g_socket_client_new                             (void);$/;"	p
g_socket_client_set_enable_proxy	gsocketclient.h	/^void                    g_socket_client_set_enable_proxy                (GSocketClient        *client,$/;"	p
g_socket_client_set_family	gsocketclient.h	/^void                    g_socket_client_set_family                      (GSocketClient        *client,$/;"	p
g_socket_client_set_local_address	gsocketclient.h	/^void                    g_socket_client_set_local_address               (GSocketClient        *client,$/;"	p
g_socket_client_set_protocol	gsocketclient.h	/^void                    g_socket_client_set_protocol                    (GSocketClient        *client,$/;"	p
g_socket_client_set_socket_type	gsocketclient.h	/^void                    g_socket_client_set_socket_type                 (GSocketClient        *client,$/;"	p
g_socket_client_set_timeout	gsocketclient.h	/^void                    g_socket_client_set_timeout                     (GSocketClient        *client,$/;"	p
g_socket_client_set_tls	gsocketclient.h	/^void                    g_socket_client_set_tls                         (GSocketClient        *client,$/;"	p
g_socket_client_set_tls_validation_flags	gsocketclient.h	/^void                    g_socket_client_set_tls_validation_flags        (GSocketClient        *client,$/;"	p
g_socket_close	gsocket.h	/^gboolean               g_socket_close                   (GSocket                 *socket,$/;"	p
g_socket_condition_check	gsocket.h	/^GIOCondition           g_socket_condition_check         (GSocket                 *socket,$/;"	p
g_socket_condition_timed_wait	gsocket.h	/^gboolean               g_socket_condition_timed_wait    (GSocket                 *socket,$/;"	p
g_socket_condition_wait	gsocket.h	/^gboolean               g_socket_condition_wait          (GSocket                 *socket,$/;"	p
g_socket_connect	gsocket.h	/^gboolean               g_socket_connect                 (GSocket                 *socket,$/;"	p
g_socket_connectable_enumerate	gsocketconnectable.h	/^GSocketAddressEnumerator *g_socket_connectable_enumerate (GSocketConnectable *connectable);$/;"	p
g_socket_connectable_proxy_enumerate	gsocketconnectable.h	/^GSocketAddressEnumerator *g_socket_connectable_proxy_enumerate (GSocketConnectable *connectable);$/;"	p
g_socket_connection_connect	gsocketconnection.h	/^gboolean           g_socket_connection_connect                   (GSocketConnection  *connection,$/;"	p
g_socket_connection_connect_async	gsocketconnection.h	/^void               g_socket_connection_connect_async             (GSocketConnection  *connection,$/;"	p
g_socket_connection_connect_finish	gsocketconnection.h	/^gboolean           g_socket_connection_connect_finish            (GSocketConnection  *connection,$/;"	p
g_socket_connection_factory_create_connection	gsocketconnection.h	/^GSocketConnection *g_socket_connection_factory_create_connection (GSocket            *socket);$/;"	p
g_socket_connection_factory_lookup_type	gsocketconnection.h	/^GType              g_socket_connection_factory_lookup_type       (GSocketFamily       family,$/;"	p
g_socket_connection_factory_register_type	gsocketconnection.h	/^void               g_socket_connection_factory_register_type     (GType               g_type,$/;"	p
g_socket_connection_get_local_address	gsocketconnection.h	/^GSocketAddress    *g_socket_connection_get_local_address         (GSocketConnection  *connection,$/;"	p
g_socket_connection_get_remote_address	gsocketconnection.h	/^GSocketAddress    *g_socket_connection_get_remote_address        (GSocketConnection  *connection,$/;"	p
g_socket_connection_get_socket	gsocketconnection.h	/^GSocket           *g_socket_connection_get_socket                (GSocketConnection  *connection);$/;"	p
g_socket_connection_is_connected	gsocketconnection.h	/^gboolean           g_socket_connection_is_connected              (GSocketConnection  *connection);$/;"	p
g_socket_control_message_deserialize	gsocketcontrolmessage.h	/^GSocketControlMessage *g_socket_control_message_deserialize  (int                    level,$/;"	p
g_socket_control_message_get_level	gsocketcontrolmessage.h	/^int                    g_socket_control_message_get_level    (GSocketControlMessage *message);$/;"	p
g_socket_control_message_get_msg_type	gsocketcontrolmessage.h	/^int                    g_socket_control_message_get_msg_type (GSocketControlMessage *message);$/;"	p
g_socket_control_message_get_size	gsocketcontrolmessage.h	/^gsize                  g_socket_control_message_get_size     (GSocketControlMessage *message);$/;"	p
g_socket_control_message_serialize	gsocketcontrolmessage.h	/^void                   g_socket_control_message_serialize    (GSocketControlMessage *message,$/;"	p
g_socket_create_source	gsocket.h	/^GSource *              g_socket_create_source           (GSocket                 *socket,$/;"	p
g_socket_get_available_bytes	gsocket.h	/^gssize                 g_socket_get_available_bytes     (GSocket                 *socket);$/;"	p
g_socket_get_blocking	gsocket.h	/^gboolean               g_socket_get_blocking            (GSocket                 *socket);$/;"	p
g_socket_get_broadcast	gsocket.h	/^gboolean               g_socket_get_broadcast           (GSocket                 *socket);$/;"	p
g_socket_get_credentials	gsocket.h	/^GCredentials          *g_socket_get_credentials         (GSocket                 *socket,$/;"	p
g_socket_get_family	gsocket.h	/^GSocketFamily          g_socket_get_family              (GSocket                 *socket);$/;"	p
g_socket_get_fd	gsocket.h	/^int                    g_socket_get_fd                  (GSocket                 *socket);$/;"	p
g_socket_get_keepalive	gsocket.h	/^gboolean               g_socket_get_keepalive           (GSocket                 *socket);$/;"	p
g_socket_get_listen_backlog	gsocket.h	/^gint                   g_socket_get_listen_backlog      (GSocket                 *socket);$/;"	p
g_socket_get_local_address	gsocket.h	/^GSocketAddress *       g_socket_get_local_address       (GSocket                 *socket,$/;"	p
g_socket_get_multicast_loopback	gsocket.h	/^gboolean               g_socket_get_multicast_loopback  (GSocket                 *socket);$/;"	p
g_socket_get_multicast_ttl	gsocket.h	/^guint                  g_socket_get_multicast_ttl       (GSocket                 *socket);$/;"	p
g_socket_get_protocol	gsocket.h	/^GSocketProtocol        g_socket_get_protocol            (GSocket                 *socket);$/;"	p
g_socket_get_remote_address	gsocket.h	/^GSocketAddress *       g_socket_get_remote_address      (GSocket                 *socket,$/;"	p
g_socket_get_socket_type	gsocket.h	/^GSocketType            g_socket_get_socket_type         (GSocket                 *socket);$/;"	p
g_socket_get_timeout	gsocket.h	/^guint                  g_socket_get_timeout             (GSocket                 *socket);$/;"	p
g_socket_get_ttl	gsocket.h	/^guint                  g_socket_get_ttl                 (GSocket                 *socket);$/;"	p
g_socket_is_closed	gsocket.h	/^gboolean               g_socket_is_closed               (GSocket                 *socket);$/;"	p
g_socket_is_connected	gsocket.h	/^gboolean               g_socket_is_connected            (GSocket                 *socket);$/;"	p
g_socket_join_multicast_group	gsocket.h	/^gboolean               g_socket_join_multicast_group    (GSocket                 *socket,$/;"	p
g_socket_leave_multicast_group	gsocket.h	/^gboolean               g_socket_leave_multicast_group   (GSocket                 *socket,$/;"	p
g_socket_listen	gsocket.h	/^gboolean               g_socket_listen                  (GSocket                 *socket,$/;"	p
g_socket_listener_accept	gsocketlistener.h	/^GSocketConnection *     g_socket_listener_accept                        (GSocketListener      *listener,$/;"	p
g_socket_listener_accept_async	gsocketlistener.h	/^void                    g_socket_listener_accept_async                  (GSocketListener      *listener,$/;"	p
g_socket_listener_accept_finish	gsocketlistener.h	/^GSocketConnection *     g_socket_listener_accept_finish                 (GSocketListener      *listener,$/;"	p
g_socket_listener_accept_socket	gsocketlistener.h	/^GSocket *               g_socket_listener_accept_socket                 (GSocketListener      *listener,$/;"	p
g_socket_listener_accept_socket_async	gsocketlistener.h	/^void                    g_socket_listener_accept_socket_async           (GSocketListener      *listener,$/;"	p
g_socket_listener_accept_socket_finish	gsocketlistener.h	/^GSocket *               g_socket_listener_accept_socket_finish          (GSocketListener      *listener,$/;"	p
g_socket_listener_add_address	gsocketlistener.h	/^gboolean                g_socket_listener_add_address                   (GSocketListener     *listener,$/;"	p
g_socket_listener_add_any_inet_port	gsocketlistener.h	/^guint16                 g_socket_listener_add_any_inet_port             (GSocketListener     *listener,$/;"	p
g_socket_listener_add_inet_port	gsocketlistener.h	/^gboolean                g_socket_listener_add_inet_port                 (GSocketListener     *listener,$/;"	p
g_socket_listener_add_socket	gsocketlistener.h	/^gboolean                g_socket_listener_add_socket                    (GSocketListener     *listener,$/;"	p
g_socket_listener_close	gsocketlistener.h	/^void                    g_socket_listener_close                         (GSocketListener      *listener);$/;"	p
g_socket_listener_new	gsocketlistener.h	/^GSocketListener *       g_socket_listener_new                           (void);$/;"	p
g_socket_listener_set_backlog	gsocketlistener.h	/^void                    g_socket_listener_set_backlog                   (GSocketListener     *listener,$/;"	p
g_socket_new	gsocket.h	/^GSocket *              g_socket_new                     (GSocketFamily            family,$/;"	p
g_socket_new_from_fd	gsocket.h	/^GSocket *              g_socket_new_from_fd             (gint                     fd,$/;"	p
g_socket_receive	gsocket.h	/^gssize                 g_socket_receive                 (GSocket                 *socket,$/;"	p
g_socket_receive_from	gsocket.h	/^gssize                 g_socket_receive_from            (GSocket                 *socket,$/;"	p
g_socket_receive_message	gsocket.h	/^gssize                 g_socket_receive_message         (GSocket                 *socket,$/;"	p
g_socket_receive_with_blocking	gsocket.h	/^gssize                 g_socket_receive_with_blocking   (GSocket                 *socket,$/;"	p
g_socket_send	gsocket.h	/^gssize                 g_socket_send                    (GSocket                 *socket,$/;"	p
g_socket_send_message	gsocket.h	/^gssize                 g_socket_send_message            (GSocket                 *socket,$/;"	p
g_socket_send_to	gsocket.h	/^gssize                 g_socket_send_to                 (GSocket                 *socket,$/;"	p
g_socket_send_with_blocking	gsocket.h	/^gssize                 g_socket_send_with_blocking      (GSocket                 *socket,$/;"	p
g_socket_service_get_type	gsocketservice.h	/^GType           g_socket_service_get_type  (void);$/;"	p
g_socket_service_is_active	gsocketservice.h	/^gboolean        g_socket_service_is_active (GSocketService *service);$/;"	p
g_socket_service_new	gsocketservice.h	/^GSocketService *g_socket_service_new       (void);$/;"	p
g_socket_service_start	gsocketservice.h	/^void            g_socket_service_start     (GSocketService *service);$/;"	p
g_socket_service_stop	gsocketservice.h	/^void            g_socket_service_stop      (GSocketService *service);$/;"	p
g_socket_set_blocking	gsocket.h	/^void                   g_socket_set_blocking            (GSocket                 *socket,$/;"	p
g_socket_set_broadcast	gsocket.h	/^void                   g_socket_set_broadcast           (GSocket                 *socket,$/;"	p
g_socket_set_keepalive	gsocket.h	/^void                   g_socket_set_keepalive           (GSocket                 *socket,$/;"	p
g_socket_set_listen_backlog	gsocket.h	/^void                   g_socket_set_listen_backlog      (GSocket                 *socket,$/;"	p
g_socket_set_multicast_loopback	gsocket.h	/^void                   g_socket_set_multicast_loopback  (GSocket                 *socket,$/;"	p
g_socket_set_multicast_ttl	gsocket.h	/^void                   g_socket_set_multicast_ttl       (GSocket                 *socket,$/;"	p
g_socket_set_timeout	gsocket.h	/^void                   g_socket_set_timeout             (GSocket                 *socket,$/;"	p
g_socket_set_ttl	gsocket.h	/^void                   g_socket_set_ttl                 (GSocket                 *socket,$/;"	p
g_socket_shutdown	gsocket.h	/^gboolean               g_socket_shutdown                (GSocket                 *socket,$/;"	p
g_socket_speaks_ipv4	gsocket.h	/^gboolean               g_socket_speaks_ipv4             (GSocket                 *socket);$/;"	p
g_srv_target_copy	gsrvtarget.h	/^GSrvTarget  *g_srv_target_copy         (GSrvTarget  *target);$/;"	p
g_srv_target_free	gsrvtarget.h	/^void         g_srv_target_free         (GSrvTarget  *target);$/;"	p
g_srv_target_get_hostname	gsrvtarget.h	/^const gchar *g_srv_target_get_hostname (GSrvTarget  *target);$/;"	p
g_srv_target_get_port	gsrvtarget.h	/^guint16      g_srv_target_get_port     (GSrvTarget  *target);$/;"	p
g_srv_target_get_priority	gsrvtarget.h	/^guint16      g_srv_target_get_priority (GSrvTarget  *target);$/;"	p
g_srv_target_get_weight	gsrvtarget.h	/^guint16      g_srv_target_get_weight   (GSrvTarget  *target);$/;"	p
g_srv_target_list_sort	gsrvtarget.h	/^GList       *g_srv_target_list_sort    (GList       *targets);$/;"	p
g_srv_target_new	gsrvtarget.h	/^GSrvTarget  *g_srv_target_new          (const gchar *hostname,$/;"	p
g_static_resource_fini	gresource.h	/^void          g_static_resource_fini          (GStaticResource *static_resource);$/;"	p
g_static_resource_get_resource	gresource.h	/^GResource    *g_static_resource_get_resource  (GStaticResource *static_resource);$/;"	p
g_static_resource_init	gresource.h	/^void          g_static_resource_init          (GStaticResource *static_resource);$/;"	p
g_tcp_connection_get_graceful_disconnect	gtcpconnection.h	/^gboolean g_tcp_connection_get_graceful_disconnect (GTcpConnection *connection);$/;"	p
g_tcp_connection_set_graceful_disconnect	gtcpconnection.h	/^void     g_tcp_connection_set_graceful_disconnect (GTcpConnection *connection,$/;"	p
g_tcp_wrapper_connection_get_base_io_stream	gtcpwrapperconnection.h	/^GIOStream         *g_tcp_wrapper_connection_get_base_io_stream (GTcpWrapperConnection *conn);$/;"	p
g_tcp_wrapper_connection_new	gtcpwrapperconnection.h	/^GSocketConnection *g_tcp_wrapper_connection_new                (GIOStream             *base_io_stream,$/;"	p
g_themed_icon_append_name	gthemedicon.h	/^void   g_themed_icon_append_name                (GThemedIcon *icon,$/;"	p
g_themed_icon_get_names	gthemedicon.h	/^const gchar* const * g_themed_icon_get_names     (GThemedIcon *icon);$/;"	p
g_themed_icon_new	gthemedicon.h	/^GIcon *g_themed_icon_new                        (const char  *iconname);$/;"	p
g_themed_icon_new_from_names	gthemedicon.h	/^GIcon *g_themed_icon_new_from_names             (char       **iconnames,$/;"	p
g_themed_icon_new_with_default_fallbacks	gthemedicon.h	/^GIcon *g_themed_icon_new_with_default_fallbacks (const char  *iconname);$/;"	p
g_themed_icon_prepend_name	gthemedicon.h	/^void   g_themed_icon_prepend_name               (GThemedIcon *icon,$/;"	p
g_threaded_socket_service_get_type	gthreadedsocketservice.h	/^GType                   g_threaded_socket_service_get_type              (void);$/;"	p
g_threaded_socket_service_new	gthreadedsocketservice.h	/^GSocketService *        g_threaded_socket_service_new                   (int max_threads);$/;"	p
g_tls_backend_get_certificate_type	gtlsbackend.h	/^GType          g_tls_backend_get_certificate_type       (GTlsBackend *backend);$/;"	p
g_tls_backend_get_client_connection_type	gtlsbackend.h	/^GType          g_tls_backend_get_client_connection_type (GTlsBackend *backend);$/;"	p
g_tls_backend_get_default	gtlsbackend.h	/^GTlsBackend *  g_tls_backend_get_default                (void);$/;"	p
g_tls_backend_get_default_database	gtlsbackend.h	/^GTlsDatabase * g_tls_backend_get_default_database       (GTlsBackend *backend);$/;"	p
g_tls_backend_get_file_database_type	gtlsbackend.h	/^GType          g_tls_backend_get_file_database_type     (GTlsBackend *backend);$/;"	p
g_tls_backend_get_server_connection_type	gtlsbackend.h	/^GType          g_tls_backend_get_server_connection_type (GTlsBackend *backend);$/;"	p
g_tls_backend_supports_tls	gtlsbackend.h	/^gboolean       g_tls_backend_supports_tls               (GTlsBackend *backend);$/;"	p
g_tls_certificate_get_issuer	gtlscertificate.h	/^GTlsCertificate      *g_tls_certificate_get_issuer         (GTlsCertificate     *cert);$/;"	p
g_tls_certificate_list_new_from_file	gtlscertificate.h	/^GList                *g_tls_certificate_list_new_from_file (const gchar         *file,$/;"	p
g_tls_certificate_new_from_file	gtlscertificate.h	/^GTlsCertificate      *g_tls_certificate_new_from_file      (const gchar         *file,$/;"	p
g_tls_certificate_new_from_files	gtlscertificate.h	/^GTlsCertificate      *g_tls_certificate_new_from_files     (const gchar         *cert_file,$/;"	p
g_tls_certificate_new_from_pem	gtlscertificate.h	/^GTlsCertificate      *g_tls_certificate_new_from_pem       (const gchar         *data,$/;"	p
g_tls_certificate_verify	gtlscertificate.h	/^GTlsCertificateFlags  g_tls_certificate_verify             (GTlsCertificate     *cert,$/;"	p
g_tls_client_connection_get_accepted_cas	gtlsclientconnection.h	/^GList *               g_tls_client_connection_get_accepted_cas     (GTlsClientConnection    *conn);$/;"	p
g_tls_client_connection_get_server_identity	gtlsclientconnection.h	/^GSocketConnectable   *g_tls_client_connection_get_server_identity  (GTlsClientConnection    *conn);$/;"	p
g_tls_client_connection_get_use_ssl3	gtlsclientconnection.h	/^gboolean              g_tls_client_connection_get_use_ssl3         (GTlsClientConnection    *conn);$/;"	p
g_tls_client_connection_get_validation_flags	gtlsclientconnection.h	/^GTlsCertificateFlags  g_tls_client_connection_get_validation_flags (GTlsClientConnection    *conn);$/;"	p
g_tls_client_connection_new	gtlsclientconnection.h	/^GIOStream *           g_tls_client_connection_new                  (GIOStream               *base_io_stream,$/;"	p
g_tls_client_connection_set_server_identity	gtlsclientconnection.h	/^void                  g_tls_client_connection_set_server_identity  (GTlsClientConnection    *conn,$/;"	p
g_tls_client_connection_set_use_ssl3	gtlsclientconnection.h	/^void                  g_tls_client_connection_set_use_ssl3         (GTlsClientConnection    *conn,$/;"	p
g_tls_client_connection_set_validation_flags	gtlsclientconnection.h	/^void                  g_tls_client_connection_set_validation_flags (GTlsClientConnection    *conn,$/;"	p
g_tls_connection_emit_accept_certificate	gtlsconnection.h	/^gboolean              g_tls_connection_emit_accept_certificate     (GTlsConnection       *conn,$/;"	p
g_tls_connection_get_certificate	gtlsconnection.h	/^GTlsCertificate      *g_tls_connection_get_certificate             (GTlsConnection       *conn);$/;"	p
g_tls_connection_get_database	gtlsconnection.h	/^GTlsDatabase *        g_tls_connection_get_database                (GTlsConnection       *conn);$/;"	p
g_tls_connection_get_interaction	gtlsconnection.h	/^GTlsInteraction *     g_tls_connection_get_interaction             (GTlsConnection       *conn);$/;"	p
g_tls_connection_get_peer_certificate	gtlsconnection.h	/^GTlsCertificate      *g_tls_connection_get_peer_certificate        (GTlsConnection       *conn);$/;"	p
g_tls_connection_get_peer_certificate_errors	gtlsconnection.h	/^GTlsCertificateFlags  g_tls_connection_get_peer_certificate_errors (GTlsConnection       *conn);$/;"	p
g_tls_connection_get_rehandshake_mode	gtlsconnection.h	/^GTlsRehandshakeMode   g_tls_connection_get_rehandshake_mode        (GTlsConnection       *conn);$/;"	p
g_tls_connection_get_require_close_notify	gtlsconnection.h	/^gboolean              g_tls_connection_get_require_close_notify    (GTlsConnection       *conn);$/;"	p
g_tls_connection_get_use_system_certdb	gtlsconnection.h	/^gboolean              g_tls_connection_get_use_system_certdb       (GTlsConnection       *conn);$/;"	p
g_tls_connection_handshake	gtlsconnection.h	/^gboolean              g_tls_connection_handshake                   (GTlsConnection       *conn,$/;"	p
g_tls_connection_handshake_async	gtlsconnection.h	/^void                  g_tls_connection_handshake_async             (GTlsConnection       *conn,$/;"	p
g_tls_connection_handshake_finish	gtlsconnection.h	/^gboolean              g_tls_connection_handshake_finish            (GTlsConnection       *conn,$/;"	p
g_tls_connection_set_certificate	gtlsconnection.h	/^void                  g_tls_connection_set_certificate             (GTlsConnection       *conn,$/;"	p
g_tls_connection_set_database	gtlsconnection.h	/^void                  g_tls_connection_set_database                (GTlsConnection       *conn,$/;"	p
g_tls_connection_set_interaction	gtlsconnection.h	/^void                  g_tls_connection_set_interaction             (GTlsConnection       *conn,$/;"	p
g_tls_connection_set_rehandshake_mode	gtlsconnection.h	/^void                  g_tls_connection_set_rehandshake_mode        (GTlsConnection       *conn,$/;"	p
g_tls_connection_set_require_close_notify	gtlsconnection.h	/^void                  g_tls_connection_set_require_close_notify    (GTlsConnection       *conn,$/;"	p
g_tls_connection_set_use_system_certdb	gtlsconnection.h	/^void                  g_tls_connection_set_use_system_certdb       (GTlsConnection       *conn,$/;"	p
g_tls_database_create_certificate_handle	gtlsdatabase.h	/^gchar*               g_tls_database_create_certificate_handle             (GTlsDatabase            *self,$/;"	p
g_tls_database_lookup_certificate_for_handle	gtlsdatabase.h	/^GTlsCertificate*     g_tls_database_lookup_certificate_for_handle         (GTlsDatabase            *self,$/;"	p
g_tls_database_lookup_certificate_for_handle_async	gtlsdatabase.h	/^void                 g_tls_database_lookup_certificate_for_handle_async   (GTlsDatabase            *self,$/;"	p
g_tls_database_lookup_certificate_for_handle_finish	gtlsdatabase.h	/^GTlsCertificate*     g_tls_database_lookup_certificate_for_handle_finish  (GTlsDatabase            *self,$/;"	p
g_tls_database_lookup_certificate_issuer	gtlsdatabase.h	/^GTlsCertificate*     g_tls_database_lookup_certificate_issuer             (GTlsDatabase            *self,$/;"	p
g_tls_database_lookup_certificate_issuer_async	gtlsdatabase.h	/^void                 g_tls_database_lookup_certificate_issuer_async       (GTlsDatabase            *self,$/;"	p
g_tls_database_lookup_certificate_issuer_finish	gtlsdatabase.h	/^GTlsCertificate*     g_tls_database_lookup_certificate_issuer_finish      (GTlsDatabase            *self,$/;"	p
g_tls_database_lookup_certificates_issued_by	gtlsdatabase.h	/^GList*               g_tls_database_lookup_certificates_issued_by         (GTlsDatabase            *self,$/;"	p
g_tls_database_lookup_certificates_issued_by_async	gtlsdatabase.h	/^void                 g_tls_database_lookup_certificates_issued_by_async    (GTlsDatabase            *self,$/;"	p
g_tls_database_lookup_certificates_issued_by_finish	gtlsdatabase.h	/^GList*               g_tls_database_lookup_certificates_issued_by_finish   (GTlsDatabase            *self,$/;"	p
g_tls_database_verify_chain	gtlsdatabase.h	/^GTlsCertificateFlags g_tls_database_verify_chain                          (GTlsDatabase            *self,$/;"	p
g_tls_database_verify_chain_async	gtlsdatabase.h	/^void                 g_tls_database_verify_chain_async                    (GTlsDatabase            *self,$/;"	p
g_tls_database_verify_chain_finish	gtlsdatabase.h	/^GTlsCertificateFlags g_tls_database_verify_chain_finish                   (GTlsDatabase            *self,$/;"	p
g_tls_error_quark	gtlsconnection.h	/^GQuark g_tls_error_quark (void);$/;"	p
g_tls_file_database_new	gtlsfiledatabase.h	/^GTlsDatabase*                g_tls_file_database_new                   (const gchar  *anchors,$/;"	p
g_tls_interaction_ask_password	gtlsinteraction.h	/^GTlsInteractionResult  g_tls_interaction_ask_password        (GTlsInteraction    *interaction,$/;"	p
g_tls_interaction_ask_password_async	gtlsinteraction.h	/^void                   g_tls_interaction_ask_password_async  (GTlsInteraction    *interaction,$/;"	p
g_tls_interaction_ask_password_finish	gtlsinteraction.h	/^GTlsInteractionResult  g_tls_interaction_ask_password_finish (GTlsInteraction    *interaction,$/;"	p
g_tls_interaction_invoke_ask_password	gtlsinteraction.h	/^GTlsInteractionResult  g_tls_interaction_invoke_ask_password (GTlsInteraction    *interaction,$/;"	p
g_tls_password_get_description	gtlspassword.h	/^const gchar*      g_tls_password_get_description     (GTlsPassword      *password);$/;"	p
g_tls_password_get_flags	gtlspassword.h	/^GTlsPasswordFlags g_tls_password_get_flags           (GTlsPassword      *password);$/;"	p
g_tls_password_get_value	gtlspassword.h	/^const guchar *    g_tls_password_get_value           (GTlsPassword      *password,$/;"	p
g_tls_password_get_warning	gtlspassword.h	/^const gchar *     g_tls_password_get_warning         (GTlsPassword      *password);$/;"	p
g_tls_password_new	gtlspassword.h	/^GTlsPassword *    g_tls_password_new                 (GTlsPasswordFlags  flags,$/;"	p
g_tls_password_set_description	gtlspassword.h	/^void              g_tls_password_set_description     (GTlsPassword      *password,$/;"	p
g_tls_password_set_flags	gtlspassword.h	/^void              g_tls_password_set_flags           (GTlsPassword      *password,$/;"	p
g_tls_password_set_value	gtlspassword.h	/^void              g_tls_password_set_value           (GTlsPassword      *password,$/;"	p
g_tls_password_set_value_full	gtlspassword.h	/^void              g_tls_password_set_value_full      (GTlsPassword      *password,$/;"	p
g_tls_password_set_warning	gtlspassword.h	/^void              g_tls_password_set_warning         (GTlsPassword      *password,$/;"	p
g_tls_server_connection_new	gtlsserverconnection.h	/^GIOStream *           g_tls_server_connection_new                      (GIOStream        *base_io_stream,$/;"	p
g_vfs_get_default	gvfs.h	/^GVfs *                g_vfs_get_default               (void);$/;"	p
g_vfs_get_file_for_path	gvfs.h	/^GFile *               g_vfs_get_file_for_path         (GVfs       *vfs,$/;"	p
g_vfs_get_file_for_uri	gvfs.h	/^GFile *               g_vfs_get_file_for_uri          (GVfs       *vfs,$/;"	p
g_vfs_get_local	gvfs.h	/^GVfs *                g_vfs_get_local                 (void);$/;"	p
g_vfs_get_supported_uri_schemes	gvfs.h	/^const gchar* const * g_vfs_get_supported_uri_schemes  (GVfs       *vfs);$/;"	p
g_vfs_is_active	gvfs.h	/^gboolean              g_vfs_is_active                 (GVfs       *vfs);$/;"	p
g_vfs_parse_name	gvfs.h	/^GFile *               g_vfs_parse_name                (GVfs       *vfs,$/;"	p
g_volume_can_eject	gvolume.h	/^gboolean g_volume_can_eject             (GVolume              *volume);$/;"	p
g_volume_can_mount	gvolume.h	/^gboolean g_volume_can_mount             (GVolume              *volume);$/;"	p
g_volume_eject_finish	gvolume.h	/^gboolean g_volume_eject_finish          (GVolume              *volume,$/;"	v
g_volume_eject_with_operation	gvolume.h	/^void        g_volume_eject_with_operation     (GVolume             *volume,$/;"	p
g_volume_eject_with_operation_finish	gvolume.h	/^gboolean    g_volume_eject_with_operation_finish (GVolume          *volume,$/;"	p
g_volume_enumerate_identifiers	gvolume.h	/^char **  g_volume_enumerate_identifiers (GVolume              *volume);$/;"	p
g_volume_get_activation_root	gvolume.h	/^GFile *  g_volume_get_activation_root   (GVolume              *volume);$/;"	p
g_volume_get_drive	gvolume.h	/^GDrive * g_volume_get_drive             (GVolume              *volume);$/;"	p
g_volume_get_icon	gvolume.h	/^GIcon *  g_volume_get_icon              (GVolume              *volume);$/;"	p
g_volume_get_identifier	gvolume.h	/^char *   g_volume_get_identifier        (GVolume              *volume,$/;"	p
g_volume_get_mount	gvolume.h	/^GMount * g_volume_get_mount             (GVolume              *volume);$/;"	p
g_volume_get_name	gvolume.h	/^char *   g_volume_get_name              (GVolume              *volume);$/;"	p
g_volume_get_sort_key	gvolume.h	/^const gchar *g_volume_get_sort_key            (GVolume              *volume);$/;"	p
g_volume_get_uuid	gvolume.h	/^char *   g_volume_get_uuid              (GVolume              *volume);$/;"	p
g_volume_monitor_adopt_orphan_mount	gvolumemonitor.h	/^GVolume *       g_volume_monitor_adopt_orphan_mount   (GMount         *mount);$/;"	p
g_volume_monitor_get	gvolumemonitor.h	/^GVolumeMonitor *g_volume_monitor_get                  (void);$/;"	p
g_volume_monitor_get_connected_drives	gvolumemonitor.h	/^GList *         g_volume_monitor_get_connected_drives (GVolumeMonitor *volume_monitor);$/;"	p
g_volume_monitor_get_mount_for_uuid	gvolumemonitor.h	/^GMount *        g_volume_monitor_get_mount_for_uuid   (GVolumeMonitor *volume_monitor,$/;"	p
g_volume_monitor_get_mounts	gvolumemonitor.h	/^GList *         g_volume_monitor_get_mounts           (GVolumeMonitor *volume_monitor);$/;"	p
g_volume_monitor_get_volume_for_uuid	gvolumemonitor.h	/^GVolume *       g_volume_monitor_get_volume_for_uuid  (GVolumeMonitor *volume_monitor,$/;"	p
g_volume_monitor_get_volumes	gvolumemonitor.h	/^GList *         g_volume_monitor_get_volumes          (GVolumeMonitor *volume_monitor);$/;"	p
g_volume_mount	gvolume.h	/^void     g_volume_mount                 (GVolume              *volume,$/;"	p
g_volume_mount_finish	gvolume.h	/^gboolean g_volume_mount_finish          (GVolume              *volume,$/;"	p
g_volume_should_automount	gvolume.h	/^gboolean g_volume_should_automount      (GVolume              *volume);$/;"	p
g_zlib_compressor_get_file_info	gzlibcompressor.h	/^GFileInfo       *g_zlib_compressor_get_file_info (GZlibCompressor *compressor);$/;"	p
g_zlib_compressor_new	gzlibcompressor.h	/^GZlibCompressor *g_zlib_compressor_new (GZlibCompressorFormat format,$/;"	p
g_zlib_compressor_set_file_info	gzlibcompressor.h	/^void             g_zlib_compressor_set_file_info (GZlibCompressor *compressor,$/;"	p
g_zlib_decompressor_get_file_info	gzlibdecompressor.h	/^GFileInfo         *g_zlib_decompressor_get_file_info (GZlibDecompressor *decompressor);$/;"	p
g_zlib_decompressor_new	gzlibdecompressor.h	/^GZlibDecompressor *g_zlib_decompressor_new (GZlibCompressorFormat format);$/;"	p
get_action_enabled	gactiongroup.h	/^  gboolean              (* get_action_enabled)         (GActionGroup  *action_group,$/;"	m	struct:_GActionGroupInterface
get_action_parameter_type	gactiongroup.h	/^  const GVariantType *  (* get_action_parameter_type)  (GActionGroup  *action_group,$/;"	m	struct:_GActionGroupInterface
get_action_state	gactiongroup.h	/^  GVariant *            (* get_action_state)           (GActionGroup  *action_group,$/;"	m	struct:_GActionGroupInterface
get_action_state_hint	gactiongroup.h	/^  GVariant *            (* get_action_state_hint)      (GActionGroup  *action_group,$/;"	m	struct:_GActionGroupInterface
get_action_state_type	gactiongroup.h	/^  const GVariantType *  (* get_action_state_type)      (GActionGroup  *action_group,$/;"	m	struct:_GActionGroupInterface
get_activation_root	gvolume.h	/^  GFile     * (* get_activation_root)   (GVolume             *volume);$/;"	m	struct:_GVolumeIface
get_basename	gfile.h	/^  char *              (* get_basename)                (GFile         *file);$/;"	m	struct:_GFileIface
get_certificate_type	gtlsbackend.h	/^  GType          ( *get_certificate_type)       (void);$/;"	m	struct:_GTlsBackendInterface
get_child_for_display_name	gfile.h	/^  GFile *             (* get_child_for_display_name)  (GFile        *file,$/;"	m	struct:_GFileIface
get_client_connection_type	gtlsbackend.h	/^  GType          ( *get_client_connection_type) (void);$/;"	m	struct:_GTlsBackendInterface
get_commandline	gappinfo.h	/^  const char * (* get_commandline)              (GAppInfo           *appinfo);$/;"	m	struct:_GAppInfoIface
get_connected_drives	gvolumemonitor.h	/^  GList   * (* get_connected_drives) (GVolumeMonitor *volume_monitor);$/;"	m	struct:_GVolumeMonitorClass
get_default_database	gtlsbackend.h	/^  GTlsDatabase * ( *get_default_database)       (GTlsBackend *backend);$/;"	m	struct:_GTlsBackendInterface
get_default_location	gmount.h	/^  GFile     * (* get_default_location)      (GMount              *mount);$/;"	m	struct:_GMountIface
get_default_warning	gtlspassword.h	/^  const gchar*      ( *get_default_warning)  (GTlsPassword  *password);$/;"	m	struct:_GTlsPasswordClass
get_description	gappinfo.h	/^  const char * (* get_description)              (GAppInfo           *appinfo);$/;"	m	struct:_GAppInfoIface
get_display	gappinfo.h	/^  char * (* get_display)           (GAppLaunchContext *context,$/;"	m	struct:_GAppLaunchContextClass
get_display_name	gappinfo.h	/^  const char * (* get_display_name)             (GAppInfo           *appinfo);$/;"	m	struct:_GAppInfoIface
get_drive	gmount.h	/^  GDrive    * (* get_drive)                 (GMount              *mount);$/;"	m	struct:_GMountIface
get_drive	gvolume.h	/^  GDrive    * (* get_drive)             (GVolume             *volume);$/;"	m	struct:_GVolumeIface
get_enabled	gaction.h	/^  gboolean             (* get_enabled)          (GAction  *action);$/;"	m	struct:_GActionInterface
get_etag	gfileiostream.h	/^  char      * (* get_etag)          (GFileIOStream    *stream);$/;"	m	struct:_GFileIOStreamClass
get_etag	gfileoutputstream.h	/^  char      * (* get_etag)          (GFileOutputStream    *stream);$/;"	m	struct:_GFileOutputStreamClass
get_executable	gappinfo.h	/^  const char * (* get_executable)               (GAppInfo           *appinfo);$/;"	m	struct:_GAppInfoIface
get_family	gsocketaddress.h	/^  GSocketFamily  (*get_family)      (GSocketAddress *address);$/;"	m	struct:_GSocketAddressClass
get_file_database_type	gtlsbackend.h	/^  GType          ( *get_file_database_type)     (void);$/;"	m	struct:_GTlsBackendInterface
get_file_for_path	gvfs.h	/^  GFile               * (* get_file_for_path)         (GVfs       *vfs,$/;"	m	struct:_GVfsClass
get_file_for_uri	gvfs.h	/^  GFile               * (* get_file_for_uri)          (GVfs       *vfs,$/;"	m	struct:_GVfsClass
get_icon	gappinfo.h	/^  GIcon *      (* get_icon)                     (GAppInfo           *appinfo);$/;"	m	struct:_GAppInfoIface
get_icon	gdrive.h	/^  GIcon *  (* get_icon)                 (GDrive              *drive);$/;"	m	struct:_GDriveIface
get_icon	gmount.h	/^  GIcon     * (* get_icon)                  (GMount              *mount);$/;"	m	struct:_GMountIface
get_icon	gvolume.h	/^  GIcon     * (* get_icon)              (GVolume             *volume);$/;"	m	struct:_GVolumeIface
get_id	gappinfo.h	/^  const char * (* get_id)                       (GAppInfo           *appinfo);$/;"	m	struct:_GAppInfoIface
get_identifier	gdrive.h	/^  char *   (* get_identifier)           (GDrive              *drive,$/;"	m	struct:_GDriveIface
get_identifier	gvolume.h	/^  char      * (* get_identifier)        (GVolume             *volume,$/;"	m	struct:_GVolumeIface
get_info	gdbusinterface.h	/^  GDBusInterfaceInfo   *(*get_info)   (GDBusInterface      *interface_);$/;"	m	struct:_GDBusInterfaceIface
get_info	gdbusinterfaceskeleton.h	/^  GDBusInterfaceInfo   *(*get_info)       (GDBusInterfaceSkeleton  *interface_);$/;"	m	struct:_GDBusInterfaceSkeletonClass
get_input_stream	giostream.h	/^  GInputStream *  (*get_input_stream)  (GIOStream *stream);$/;"	m	struct:_GIOStreamClass
get_interface	gdbusobject.h	/^  GDBusInterface  *(*get_interface)   (GDBusObject  *object,$/;"	m	struct:_GDBusObjectIface
get_interface	gdbusobjectmanager.h	/^  GDBusInterface  *(*get_interface)   (GDBusObjectManager    *manager,$/;"	m	struct:_GDBusObjectManagerIface
get_interfaces	gdbusobject.h	/^  GList           *(*get_interfaces)  (GDBusObject  *object);$/;"	m	struct:_GDBusObjectIface
get_item_attribute_value	gmenumodel.h	/^  GVariant *            (*get_item_attribute_value)         (GMenuModel          *model,$/;"	m	struct:_GMenuModelClass
get_item_attributes	gmenumodel.h	/^  void                  (*get_item_attributes)              (GMenuModel          *model,$/;"	m	struct:_GMenuModelClass
get_item_link	gmenumodel.h	/^  GMenuModel *          (*get_item_link)                    (GMenuModel          *model,$/;"	m	struct:_GMenuModelClass
get_item_links	gmenumodel.h	/^  void                  (*get_item_links)                   (GMenuModel          *model,$/;"	m	struct:_GMenuModelClass
get_level	gsocketcontrolmessage.h	/^  int                    (* get_level) (GSocketControlMessage  *message);$/;"	m	struct:_GSocketControlMessageClass
get_mount	gvolume.h	/^  GMount    * (* get_mount)             (GVolume             *volume);$/;"	m	struct:_GVolumeIface
get_mount_for_mount_path	gnativevolumemonitor.h	/^  GMount * (* get_mount_for_mount_path) (const char   *mount_path,$/;"	m	struct:_GNativeVolumeMonitorClass
get_mount_for_uuid	gvolumemonitor.h	/^  GMount  * (* get_mount_for_uuid)   (GVolumeMonitor *volume_monitor,$/;"	m	struct:_GVolumeMonitorClass
get_mounts	gvolumemonitor.h	/^  GList   * (* get_mounts)           (GVolumeMonitor *volume_monitor);$/;"	m	struct:_GVolumeMonitorClass
get_n_items	gmenumodel.h	/^  gint                  (*get_n_items)                      (GMenuModel          *model);$/;"	m	struct:_GMenuModelClass
get_name	gaction.h	/^  const gchar *        (* get_name)             (GAction  *action);$/;"	m	struct:_GActionInterface
get_name	gappinfo.h	/^  const char * (* get_name)                     (GAppInfo           *appinfo);$/;"	m	struct:_GAppInfoIface
get_name	gdrive.h	/^  char *   (* get_name)                 (GDrive              *drive);$/;"	m	struct:_GDriveIface
get_name	gmount.h	/^  char      * (* get_name)                  (GMount              *mount);$/;"	m	struct:_GMountIface
get_name	gvolume.h	/^  char      * (* get_name)              (GVolume             *volume);$/;"	m	struct:_GVolumeIface
get_native_size	gsocketaddress.h	/^  gssize         (*get_native_size) (GSocketAddress *address);$/;"	m	struct:_GSocketAddressClass
get_next	gmenumodel.h	/^  gboolean      (*get_next) (GMenuAttributeIter  *iter,$/;"	m	struct:_GMenuAttributeIterClass
get_next	gmenumodel.h	/^  gboolean      (*get_next) (GMenuLinkIter  *iter,$/;"	m	struct:_GMenuLinkIterClass
get_object	gdbusinterface.h	/^  GDBusObject          *(*get_object) (GDBusInterface      *interface_);$/;"	m	struct:_GDBusInterfaceIface
get_object	gdbusobjectmanager.h	/^  GDBusObject     *(*get_object)      (GDBusObjectManager    *manager,$/;"	m	struct:_GDBusObjectManagerIface
get_object_path	gdbusobject.h	/^  const gchar     *(*get_object_path) (GDBusObject  *object);$/;"	m	struct:_GDBusObjectIface
get_object_path	gdbusobjectmanager.h	/^  const gchar     *(*get_object_path) (GDBusObjectManager    *manager);$/;"	m	struct:_GDBusObjectManagerIface
get_objects	gdbusobjectmanager.h	/^  GList           *(*get_objects)     (GDBusObjectManager    *manager);$/;"	m	struct:_GDBusObjectManagerIface
get_output_stream	giostream.h	/^  GOutputStream * (*get_output_stream) (GIOStream *stream);$/;"	m	struct:_GIOStreamClass
get_parameter_type	gaction.h	/^  const GVariantType * (* get_parameter_type)   (GAction  *action);$/;"	m	struct:_GActionInterface
get_parent	gfile.h	/^  GFile *             (* get_parent)                  (GFile         *file);$/;"	m	struct:_GFileIface
get_parse_name	gfile.h	/^  char *              (* get_parse_name)              (GFile         *file);$/;"	m	struct:_GFileIface
get_path	gfile.h	/^  char *              (* get_path)                    (GFile         *file);$/;"	m	struct:_GFileIface
get_permission	gsettingsbackend.h	/^  GPermission * (*get_permission)   (GSettingsBackend    *backend,$/;"	m	struct:_GSettingsBackendClass
get_properties	gdbusinterfaceskeleton.h	/^  GVariant             *(*get_properties) (GDBusInterfaceSkeleton  *interface_);$/;"	m	struct:_GDBusInterfaceSkeletonClass
get_property	gdbusconnection.h	/^  GDBusInterfaceGetPropertyFunc get_property;$/;"	m	struct:_GDBusInterfaceVTable
get_relative_path	gfile.h	/^  char *              (* get_relative_path)           (GFile         *parent,$/;"	m	struct:_GFileIface
get_root	gmount.h	/^  GFile     * (* get_root)                  (GMount              *mount);$/;"	m	struct:_GMountIface
get_server_connection_type	gtlsbackend.h	/^  GType          ( *get_server_connection_type) (void);$/;"	m	struct:_GTlsBackendInterface
get_size	gsocketcontrolmessage.h	/^  gsize                  (* get_size)  (GSocketControlMessage  *message);$/;"	m	struct:_GSocketControlMessageClass
get_sort_key	gdrive.h	/^  const gchar * (* get_sort_key)        (GDrive              *drive);$/;"	m	struct:_GDriveIface
get_sort_key	gmount.h	/^  const gchar * (* get_sort_key)            (GMount              *mount);$/;"	m	struct:_GMountIface
get_sort_key	gvolume.h	/^  const gchar * (* get_sort_key)        (GVolume             *volume);$/;"	m	struct:_GVolumeIface
get_source_object	gasyncresult.h	/^  GObject * (* get_source_object) (GAsyncResult *res);$/;"	m	struct:_GAsyncResultIface
get_start_stop_type	gdrive.h	/^  GDriveStartStopType (* get_start_stop_type) (GDrive        *drive);$/;"	m	struct:_GDriveIface
get_startup_notify_id	gappinfo.h	/^  char * (* get_startup_notify_id) (GAppLaunchContext *context,$/;"	m	struct:_GAppLaunchContextClass
get_state	gaction.h	/^  GVariant *           (* get_state)            (GAction  *action);$/;"	m	struct:_GActionInterface
get_state_hint	gaction.h	/^  GVariant *           (* get_state_hint)       (GAction  *action);$/;"	m	struct:_GActionInterface
get_state_type	gaction.h	/^  const GVariantType * (* get_state_type)       (GAction  *action);$/;"	m	struct:_GActionInterface
get_supported_uri_schemes	gvfs.h	/^  const gchar * const * (* get_supported_uri_schemes) (GVfs       *vfs);$/;"	m	struct:_GVfsClass
get_type	gsocketcontrolmessage.h	/^  int                    (* get_type)  (GSocketControlMessage  *message);$/;"	m	struct:_GSocketControlMessageClass
get_uri	gfile.h	/^  char *              (* get_uri)                     (GFile         *file);$/;"	m	struct:_GFileIface
get_uri_scheme	gfile.h	/^  char *              (* get_uri_scheme)              (GFile         *file);$/;"	m	struct:_GFileIface
get_user_data	gasyncresult.h	/^  gpointer  (* get_user_data)     (GAsyncResult *res);$/;"	m	struct:_GAsyncResultIface
get_uuid	gmount.h	/^  char      * (* get_uuid)                  (GMount              *mount);$/;"	m	struct:_GMountIface
get_uuid	gvolume.h	/^  char      * (* get_uuid)              (GVolume             *volume);$/;"	m	struct:_GVolumeIface
get_value	gtlspassword.h	/^  const guchar *    ( *get_value)            (GTlsPassword  *password,$/;"	m	struct:_GTlsPasswordClass
get_volume	gmount.h	/^  GVolume   * (* get_volume)                (GMount              *mount);$/;"	m	struct:_GMountIface
get_volume_for_uuid	gvolumemonitor.h	/^  GVolume * (* get_volume_for_uuid)  (GVolumeMonitor *volume_monitor,$/;"	m	struct:_GVolumeMonitorClass
get_volumes	gdrive.h	/^  GList *  (* get_volumes)              (GDrive              *drive);$/;"	m	struct:_GDriveIface
get_volumes	gvolumemonitor.h	/^  GList   * (* get_volumes)          (GVolumeMonitor *volume_monitor);$/;"	m	struct:_GVolumeMonitorClass
get_vtable	gdbusinterfaceskeleton.h	/^  GDBusInterfaceVTable *(*get_vtable)     (GDBusInterfaceSkeleton  *interface_);$/;"	m	struct:_GDBusInterfaceSkeletonClass
get_writable	gsettingsbackend.h	/^  gboolean      (*get_writable)     (GSettingsBackend    *backend,$/;"	m	struct:_GSettingsBackendClass
got_completion_data	gfilenamecompleter.h	/^  void (* got_completion_data) (GFilenameCompleter *filename_completer);$/;"	m	struct:_GFilenameCompleterClass
guess_content_type	gmount.h	/^  void        (* guess_content_type)        (GMount              *mount,$/;"	m	struct:_GMountIface
guess_content_type_finish	gmount.h	/^  gchar    ** (* guess_content_type_finish) (GMount              *mount,$/;"	m	struct:_GMountIface
guess_content_type_sync	gmount.h	/^  gchar    ** (* guess_content_type_sync)   (GMount              *mount,$/;"	m	struct:_GMountIface
handshake	gtlsconnection.h	/^  gboolean ( *handshake )        (GTlsConnection       *conn,$/;"	m	struct:_GTlsConnectionClass
handshake_async	gtlsconnection.h	/^  void     ( *handshake_async )  (GTlsConnection       *conn,$/;"	m	struct:_GTlsConnectionClass
handshake_finish	gtlsconnection.h	/^  gboolean ( *handshake_finish ) (GTlsConnection       *conn,$/;"	m	struct:_GTlsConnectionClass
has_action	gactiongroup.h	/^  gboolean              (* has_action)                 (GActionGroup  *action_group,$/;"	m	struct:_GActionGroupInterface
has_media	gdrive.h	/^  gboolean (* has_media)                (GDrive              *drive);$/;"	m	struct:_GDriveIface
has_uri_scheme	gfile.h	/^  gboolean            (* has_uri_scheme)              (GFile         *file,$/;"	m	struct:_GFileIface
has_volumes	gdrive.h	/^  gboolean (* has_volumes)              (GDrive              *drive);$/;"	m	struct:_GDriveIface
hash	gfile.h	/^  guint               (* hash)                        (GFile         *file);$/;"	m	struct:_GFileIface
hash	gicon.h	/^  guint       (* hash)        (GIcon   *icon);$/;"	m	struct:_GIconIface
in_args	gdbusintrospection.h	/^  GDBusArgInfo        **in_args;$/;"	m	struct:_GDBusMethodInfo
incoming	gsocketservice.h	/^  gboolean (* incoming) (GSocketService    *service,$/;"	m	struct:_GSocketServiceClass
infos	gfileattribute.h	/^  GFileAttributeInfo *infos;$/;"	m	struct:_GFileAttributeInfoList
init	ginitable.h	/^  gboolean    (* init) (GInitable    *initable,$/;"	m	struct:_GInitableIface
init_async	gasyncinitable.h	/^  void     (* init_async)  (GAsyncInitable      *initable,$/;"	m	struct:_GAsyncInitableIface
init_finish	gasyncinitable.h	/^  gboolean (* init_finish) (GAsyncInitable      *initable,$/;"	m	struct:_GAsyncInitableIface
interface_added	gdbusobject.h	/^  void (*interface_added)   (GDBusObject     *object,$/;"	m	struct:_GDBusObjectIface
interface_added	gdbusobjectmanager.h	/^  void    (*interface_added)              (GDBusObjectManager   *manager,$/;"	m	struct:_GDBusObjectManagerIface
interface_proxy_properties_changed	gdbusobjectmanagerclient.h	/^  void    (*interface_proxy_properties_changed) (GDBusObjectManagerClient   *manager,$/;"	m	struct:_GDBusObjectManagerClientClass
interface_proxy_signal	gdbusobjectmanagerclient.h	/^  void    (*interface_proxy_signal)             (GDBusObjectManagerClient *manager,$/;"	m	struct:_GDBusObjectManagerClientClass
interface_removed	gdbusobject.h	/^  void (*interface_removed) (GDBusObject     *object,$/;"	m	struct:_GDBusObjectIface
interface_removed	gdbusobjectmanager.h	/^  void    (*interface_removed)            (GDBusObjectManager   *manager,$/;"	m	struct:_GDBusObjectManagerIface
interfaces	gdbusintrospection.h	/^  GDBusInterfaceInfo  **interfaces;$/;"	m	struct:_GDBusNodeInfo
introspect	gdbusconnection.h	/^  GDBusSubtreeIntrospectFunc introspect;$/;"	m	struct:_GDBusSubtreeVTable
is_active	gvfs.h	/^  gboolean              (* is_active)                 (GVfs       *vfs);$/;"	m	struct:_GVfsClass
is_media_check_automatic	gdrive.h	/^  gboolean (* is_media_check_automatic) (GDrive              *drive);$/;"	m	struct:_GDriveIface
is_media_removable	gdrive.h	/^  gboolean (* is_media_removable)       (GDrive              *drive);$/;"	m	struct:_GDriveIface
is_mutable	gmenumodel.h	/^  gboolean              (*is_mutable)                       (GMenuModel          *model);$/;"	m	struct:_GMenuModelClass
is_native	gfile.h	/^  gboolean            (* is_native)                   (GFile         *file);$/;"	m	struct:_GFileIface
is_readable	gpollableinputstream.h	/^  gboolean     (*is_readable)      (GPollableInputStream  *stream);$/;"	m	struct:_GPollableInputStreamInterface
is_supported	gproxyresolver.h	/^  gboolean (* is_supported)  (GProxyResolver       *resolver);$/;"	m	struct:_GProxyResolverInterface
is_supported	gvolumemonitor.h	/^  gboolean  (* is_supported)         (void);$/;"	m	struct:_GVolumeMonitorClass
is_writable	gpollableoutputstream.h	/^  gboolean     (*is_writable)       (GPollableOutputStream  *stream);$/;"	m	struct:_GPollableOutputStreamInterface
iterate_item_attributes	gmenumodel.h	/^  GMenuAttributeIter *  (*iterate_item_attributes)          (GMenuModel          *model,$/;"	m	struct:_GMenuModelClass
iterate_item_links	gmenumodel.h	/^  GMenuLinkIter *       (*iterate_item_links)               (GMenuModel          *model,$/;"	m	struct:_GMenuModelClass
key	gdbusintrospection.h	/^  gchar                *key;$/;"	m	struct:_GDBusAnnotationInfo
launch	gappinfo.h	/^  gboolean     (* launch)                       (GAppInfo           *appinfo,$/;"	m	struct:_GAppInfoIface
launch_failed	gappinfo.h	/^  void   (* launch_failed)         (GAppLaunchContext *context,$/;"	m	struct:_GAppLaunchContextClass
launch_uris	gappinfo.h	/^  gboolean     (* launch_uris)                  (GAppInfo           *appinfo,$/;"	m	struct:_GAppInfoIface
list_actions	gactiongroup.h	/^  gchar **              (* list_actions)               (GActionGroup  *action_group);$/;"	m	struct:_GActionGroupInterface
load	gloadableicon.h	/^  GInputStream * (* load)        (GLoadableIcon       *icon,$/;"	m	struct:_GLoadableIconIface
load_async	gloadableicon.h	/^  void           (* load_async)  (GLoadableIcon       *icon,$/;"	m	struct:_GLoadableIconIface
load_finish	gloadableicon.h	/^  GInputStream * (* load_finish) (GLoadableIcon       *icon,$/;"	m	struct:_GLoadableIconIface
local_command_line	gapplication.h	/^  gboolean                  (* local_command_line)  (GApplication              *application,$/;"	m	struct:_GApplicationClass
local_file_add_info	gvfs.h	/^  void                  (* local_file_add_info)       (GVfs       *vfs,$/;"	m	struct:_GVfsClass
local_file_moved	gvfs.h	/^  void                  (* local_file_moved)          (GVfs       *vfs,$/;"	m	struct:_GVfsClass
local_file_removed	gvfs.h	/^  void                  (* local_file_removed)        (GVfs       *vfs,$/;"	m	struct:_GVfsClass
local_file_set_attributes	gvfs.h	/^  gboolean              (* local_file_set_attributes) (GVfs       *vfs,$/;"	m	struct:_GVfsClass
lookup	gproxyresolver.h	/^  gchar	** (* lookup)        (GProxyResolver       *resolver,$/;"	m	struct:_GProxyResolverInterface
lookup_action	gactionmap.h	/^  GAction * (* lookup_action) (GActionMap  *action_map,$/;"	m	struct:_GActionMapInterface
lookup_async	gproxyresolver.h	/^  void     (* lookup_async)  (GProxyResolver       *resolver,$/;"	m	struct:_GProxyResolverInterface
lookup_by_address	gresolver.h	/^  gchar * ( *lookup_by_address)        (GResolver            *resolver,$/;"	m	struct:_GResolverClass
lookup_by_address_async	gresolver.h	/^  void    ( *lookup_by_address_async)  (GResolver            *resolver,$/;"	m	struct:_GResolverClass
lookup_by_address_finish	gresolver.h	/^  gchar * ( *lookup_by_address_finish) (GResolver            *resolver,$/;"	m	struct:_GResolverClass
lookup_by_name	gresolver.h	/^  GList * ( *lookup_by_name)           (GResolver            *resolver,$/;"	m	struct:_GResolverClass
lookup_by_name_async	gresolver.h	/^  void    ( *lookup_by_name_async)     (GResolver            *resolver,$/;"	m	struct:_GResolverClass
lookup_by_name_finish	gresolver.h	/^  GList * ( *lookup_by_name_finish)    (GResolver            *resolver,$/;"	m	struct:_GResolverClass
lookup_certificate_for_handle	gtlsdatabase.h	/^  GTlsCertificate*      (*lookup_certificate_for_handle)        (GTlsDatabase            *self,$/;"	m	struct:_GTlsDatabaseClass
lookup_certificate_for_handle_async	gtlsdatabase.h	/^  void                  (*lookup_certificate_for_handle_async)  (GTlsDatabase            *self,$/;"	m	struct:_GTlsDatabaseClass
lookup_certificate_for_handle_finish	gtlsdatabase.h	/^  GTlsCertificate*      (*lookup_certificate_for_handle_finish) (GTlsDatabase            *self,$/;"	m	struct:_GTlsDatabaseClass
lookup_certificate_issuer	gtlsdatabase.h	/^  GTlsCertificate*      (*lookup_certificate_issuer)            (GTlsDatabase            *self,$/;"	m	struct:_GTlsDatabaseClass
lookup_certificate_issuer_async	gtlsdatabase.h	/^  void                  (*lookup_certificate_issuer_async)      (GTlsDatabase            *self,$/;"	m	struct:_GTlsDatabaseClass
lookup_certificate_issuer_finish	gtlsdatabase.h	/^  GTlsCertificate*      (*lookup_certificate_issuer_finish)     (GTlsDatabase            *self,$/;"	m	struct:_GTlsDatabaseClass
lookup_certificates_issued_by	gtlsdatabase.h	/^  GList*                (*lookup_certificates_issued_by)        (GTlsDatabase            *self,$/;"	m	struct:_GTlsDatabaseClass
lookup_certificates_issued_by_async	gtlsdatabase.h	/^  void                  (*lookup_certificates_issued_by_async)  (GTlsDatabase            *self,$/;"	m	struct:_GTlsDatabaseClass
lookup_certificates_issued_by_finish	gtlsdatabase.h	/^  GList*                (*lookup_certificates_issued_by_finish) (GTlsDatabase            *self,$/;"	m	struct:_GTlsDatabaseClass
lookup_finish	gproxyresolver.h	/^  gchar	** (* lookup_finish) (GProxyResolver       *resolver,$/;"	m	struct:_GProxyResolverInterface
lookup_service	gresolver.h	/^  GList * ( *lookup_service)           (GResolver            *resolver,$/;"	m	struct:_GResolverClass
lookup_service_async	gresolver.h	/^  void    ( *lookup_service_async)     (GResolver            *resolver,$/;"	m	struct:_GResolverClass
lookup_service_finish	gresolver.h	/^  GList * ( *lookup_service_finish)    (GResolver            *resolver,$/;"	m	struct:_GResolverClass
make_directory	gfile.h	/^  gboolean            (* make_directory)              (GFile                *file,$/;"	m	struct:_GFileIface
make_symbolic_link	gfile.h	/^  gboolean            (* make_symbolic_link)          (GFile                *file,$/;"	m	struct:_GFileIface
method_call	gdbusconnection.h	/^  GDBusInterfaceMethodCallFunc  method_call;$/;"	m	struct:_GDBusInterfaceVTable
methods	gdbusintrospection.h	/^  GDBusMethodInfo     **methods;$/;"	m	struct:_GDBusInterfaceInfo
monitor_dir	gfile.h	/^  GFileMonitor *      (* monitor_dir)                 (GFile                *file,$/;"	m	struct:_GFileIface
monitor_file	gfile.h	/^  GFileMonitor *      (* monitor_file)                (GFile                *file,$/;"	m	struct:_GFileIface
mount_added	gvolumemonitor.h	/^  void      (* mount_added)          (GVolumeMonitor *volume_monitor,$/;"	m	struct:_GVolumeMonitorClass
mount_changed	gvolumemonitor.h	/^  void      (* mount_changed)        (GVolumeMonitor *volume_monitor,$/;"	m	struct:_GVolumeMonitorClass
mount_enclosing_volume	gfile.h	/^  void                (* mount_enclosing_volume)      (GFile                *location,$/;"	m	struct:_GFileIface
mount_enclosing_volume_finish	gfile.h	/^  gboolean         (* mount_enclosing_volume_finish)  (GFile                *location,$/;"	m	struct:_GFileIface
mount_finish	gvolume.h	/^  gboolean    (* mount_finish)          (GVolume             *volume,$/;"	m	struct:_GVolumeIface
mount_fn	gvolume.h	/^  void        (* mount_fn)              (GVolume             *volume,$/;"	m	struct:_GVolumeIface
mount_mountable	gfile.h	/^  void                (* mount_mountable)             (GFile                *file,$/;"	m	struct:_GFileIface
mount_mountable_finish	gfile.h	/^  GFile *             (* mount_mountable_finish)      (GFile                *file,$/;"	m	struct:_GFileIface
mount_pre_unmount	gvolumemonitor.h	/^  void      (* mount_pre_unmount)    (GVolumeMonitor *volume_monitor,$/;"	m	struct:_GVolumeMonitorClass
mount_removed	gvolumemonitor.h	/^  void      (* mount_removed)        (GVolumeMonitor *volume_monitor,$/;"	m	struct:_GVolumeMonitorClass
move	gfile.h	/^  gboolean            (* move)                        (GFile                *source,$/;"	m	struct:_GFileIface
n_infos	gfileattribute.h	/^  int                 n_infos;$/;"	m	struct:_GFileAttributeInfoList
name	gactionmap.h	/^  const gchar *name;$/;"	m	struct:_GActionEntry
name	gdbusintrospection.h	/^  gchar                    *name;$/;"	m	struct:_GDBusPropertyInfo
name	gdbusintrospection.h	/^  gchar                *name;$/;"	m	struct:_GDBusArgInfo
name	gdbusintrospection.h	/^  gchar                *name;$/;"	m	struct:_GDBusInterfaceInfo
name	gdbusintrospection.h	/^  gchar                *name;$/;"	m	struct:_GDBusMethodInfo
name	gdbusintrospection.h	/^  gchar                *name;$/;"	m	struct:_GDBusSignalInfo
name	gfileattribute.h	/^  char                    *name;$/;"	m	struct:_GFileAttributeInfo
network_changed	gnetworkmonitor.h	/^  void     (*network_changed)  (GNetworkMonitor      *monitor,$/;"	m	struct:_GNetworkMonitorInterface
next	gresource.h	/^  GStaticResource *next;$/;"	m	struct:_GStaticResource
next	gsocketaddressenumerator.h	/^  GSocketAddress * (* next)        (GSocketAddressEnumerator  *enumerator,$/;"	m	struct:_GSocketAddressEnumeratorClass
next_async	gsocketaddressenumerator.h	/^  void             (* next_async)  (GSocketAddressEnumerator  *enumerator,$/;"	m	struct:_GSocketAddressEnumeratorClass
next_file	gfileenumerator.h	/^  GFileInfo * (* next_file)         (GFileEnumerator      *enumerator,$/;"	m	struct:_GFileEnumeratorClass
next_files_async	gfileenumerator.h	/^  void        (* next_files_async)  (GFileEnumerator      *enumerator,$/;"	m	struct:_GFileEnumeratorClass
next_files_finish	gfileenumerator.h	/^  GList *     (* next_files_finish) (GFileEnumerator      *enumerator,$/;"	m	struct:_GFileEnumeratorClass
next_finish	gsocketaddressenumerator.h	/^  GSocketAddress * (* next_finish) (GSocketAddressEnumerator  *enumerator,$/;"	m	struct:_GSocketAddressEnumeratorClass
nodes	gdbusintrospection.h	/^  GDBusNodeInfo       **nodes;$/;"	m	struct:_GDBusNodeInfo
object_added	gdbusobjectmanager.h	/^  void    (*object_added)                 (GDBusObjectManager   *manager,$/;"	m	struct:_GDBusObjectManagerIface
object_removed	gdbusobjectmanager.h	/^  void    (*object_removed)               (GDBusObjectManager   *manager,$/;"	m	struct:_GDBusObjectManagerIface
open	gapplication.h	/^  void                      (* open)                (GApplication              *application,$/;"	m	struct:_GApplicationClass
open_readwrite	gfile.h	/^  GFileIOStream *     (* open_readwrite)              (GFile                *file,$/;"	m	struct:_GFileIface
open_readwrite_async	gfile.h	/^  void                (* open_readwrite_async)        (GFile                *file,$/;"	m	struct:_GFileIface
open_readwrite_finish	gfile.h	/^  GFileIOStream *     (* open_readwrite_finish)       (GFile                *file,$/;"	m	struct:_GFileIface
out_args	gdbusintrospection.h	/^  GDBusArgInfo        **out_args;$/;"	m	struct:_GDBusMethodInfo
padding	gactionmap.h	/^  gsize padding[3];$/;"	m	struct:_GActionEntry
padding	gapplication.h	/^  gpointer padding[11];$/;"	m	struct:_GApplicationClass
padding	gapplicationcommandline.h	/^  gpointer padding[12];$/;"	m	struct:_GApplicationCommandLineClass
padding	gdbusconnection.h	/^  gpointer padding[8];$/;"	m	struct:_GDBusInterfaceVTable
padding	gdbusconnection.h	/^  gpointer padding[8];$/;"	m	struct:_GDBusSubtreeVTable
padding	gdbusobjectmanagerclient.h	/^  gpointer padding[8];$/;"	m	struct:_GDBusObjectManagerClientClass
padding	gdbusobjectmanagerserver.h	/^  gpointer padding[8];$/;"	m	struct:_GDBusObjectManagerServerClass
padding	gdbusobjectproxy.h	/^  gpointer padding[8];$/;"	m	struct:_GDBusObjectProxyClass
padding	gdbusobjectskeleton.h	/^  gpointer padding[8];$/;"	m	struct:_GDBusObjectSkeletonClass
padding	gdbusproxy.h	/^  gpointer padding[32];$/;"	m	struct:_GDBusProxyClass
padding	gresource.h	/^  gpointer padding;$/;"	m	struct:_GStaticResource
padding	gsettings.h	/^  gpointer padding[20];$/;"	m	struct:_GSettingsClass
padding	gsettingsbackend.h	/^  gpointer padding[24];$/;"	m	struct:_GSettingsBackendClass
padding	gsimpleactiongroup.h	/^  gpointer padding[12];$/;"	m	struct:_GSimpleActionGroupClass
padding	gtlscertificate.h	/^  gpointer padding[8];$/;"	m	struct:_GTlsCertificateClass
padding	gtlsconnection.h	/^  gpointer padding[8];$/;"	m	struct:_GTlsConnectionClass
padding	gtlsdatabase.h	/^  gpointer padding[16];$/;"	m	struct:_GTlsDatabaseClass
padding	gtlsfiledatabase.h	/^  gpointer padding[8];$/;"	m	struct:_GTlsFileDatabaseInterface
padding	gtlsinteraction.h	/^  gpointer padding[24];$/;"	m	struct:_GTlsInteractionClass
padding	gtlspassword.h	/^  gpointer padding[4];$/;"	m	struct:_GTlsPasswordClass
parameter_type	gactionmap.h	/^  const gchar *parameter_type;$/;"	m	struct:_GActionEntry
parent_class	gappinfo.h	/^  GObjectClass parent_class;$/;"	m	struct:_GAppLaunchContextClass
parent_class	gapplication.h	/^  GObjectClass parent_class;$/;"	m	struct:_GApplicationClass
parent_class	gapplicationcommandline.h	/^  GObjectClass parent_class;$/;"	m	struct:_GApplicationCommandLineClass
parent_class	gbufferedinputstream.h	/^  GFilterInputStreamClass parent_class;$/;"	m	struct:_GBufferedInputStreamClass
parent_class	gbufferedoutputstream.h	/^  GFilterOutputStreamClass parent_class;$/;"	m	struct:_GBufferedOutputStreamClass
parent_class	gcancellable.h	/^  GObjectClass parent_class;$/;"	m	struct:_GCancellableClass
parent_class	gcharsetconverter.h	/^  GObjectClass parent_class;$/;"	m	struct:_GCharsetConverterClass
parent_class	gconverterinputstream.h	/^  GFilterInputStreamClass parent_class;$/;"	m	struct:_GConverterInputStreamClass
parent_class	gconverteroutputstream.h	/^  GFilterOutputStreamClass parent_class;$/;"	m	struct:_GConverterOutputStreamClass
parent_class	gdatainputstream.h	/^  GBufferedInputStreamClass parent_class;$/;"	m	struct:_GDataInputStreamClass
parent_class	gdataoutputstream.h	/^  GFilterOutputStreamClass parent_class;$/;"	m	struct:_GDataOutputStreamClass
parent_class	gdbusinterfaceskeleton.h	/^  GObjectClass parent_class;$/;"	m	struct:_GDBusInterfaceSkeletonClass
parent_class	gdbusobjectmanagerclient.h	/^  GObjectClass parent_class;$/;"	m	struct:_GDBusObjectManagerClientClass
parent_class	gdbusobjectmanagerserver.h	/^  GObjectClass parent_class;$/;"	m	struct:_GDBusObjectManagerServerClass
parent_class	gdbusobjectproxy.h	/^  GObjectClass parent_class;$/;"	m	struct:_GDBusObjectProxyClass
parent_class	gdbusobjectskeleton.h	/^  GObjectClass parent_class;$/;"	m	struct:_GDBusObjectSkeletonClass
parent_class	gdbusproxy.h	/^  GObjectClass parent_class;$/;"	m	struct:_GDBusProxyClass
parent_class	gemblemedicon.h	/^  GObjectClass parent_class;$/;"	m	struct:_GEmblemedIconClass
parent_class	gfileenumerator.h	/^  GObjectClass parent_class;$/;"	m	struct:_GFileEnumeratorClass
parent_class	gfileinputstream.h	/^  GInputStreamClass parent_class;$/;"	m	struct:_GFileInputStreamClass
parent_class	gfileiostream.h	/^  GIOStreamClass parent_class;$/;"	m	struct:_GFileIOStreamClass
parent_class	gfilemonitor.h	/^  GObjectClass parent_class;$/;"	m	struct:_GFileMonitorClass
parent_class	gfilenamecompleter.h	/^  GObjectClass parent_class;$/;"	m	struct:_GFilenameCompleterClass
parent_class	gfileoutputstream.h	/^  GOutputStreamClass parent_class;$/;"	m	struct:_GFileOutputStreamClass
parent_class	gfilterinputstream.h	/^  GInputStreamClass parent_class;$/;"	m	struct:_GFilterInputStreamClass
parent_class	gfilteroutputstream.h	/^  GOutputStreamClass parent_class;$/;"	m	struct:_GFilterOutputStreamClass
parent_class	ginetaddress.h	/^  GObjectClass parent_class;$/;"	m	struct:_GInetAddressClass
parent_class	ginetaddressmask.h	/^  GObjectClass parent_class;$/;"	m	struct:_GInetAddressMaskClass
parent_class	ginetsocketaddress.h	/^  GSocketAddressClass parent_class;$/;"	m	struct:_GInetSocketAddressClass
parent_class	ginputstream.h	/^  GObjectClass parent_class;$/;"	m	struct:_GInputStreamClass
parent_class	giostream.h	/^  GObjectClass parent_class;$/;"	m	struct:_GIOStreamClass
parent_class	gmemoryinputstream.h	/^  GInputStreamClass parent_class;$/;"	m	struct:_GMemoryInputStreamClass
parent_class	gmemoryoutputstream.h	/^  GOutputStreamClass parent_class;$/;"	m	struct:_GMemoryOutputStreamClass
parent_class	gmenumodel.h	/^  GObjectClass parent_class;$/;"	m	struct:_GMenuAttributeIterClass
parent_class	gmenumodel.h	/^  GObjectClass parent_class;$/;"	m	struct:_GMenuLinkIterClass
parent_class	gmenumodel.h	/^  GObjectClass parent_class;$/;"	m	struct:_GMenuModelClass
parent_class	gmountoperation.h	/^  GObjectClass parent_class;$/;"	m	struct:_GMountOperationClass
parent_class	gnativevolumemonitor.h	/^  GVolumeMonitorClass parent_class;$/;"	m	struct:_GNativeVolumeMonitorClass
parent_class	gnetworkaddress.h	/^  GObjectClass parent_class;$/;"	m	struct:_GNetworkAddressClass
parent_class	gnetworkservice.h	/^  GObjectClass parent_class;$/;"	m	struct:_GNetworkServiceClass
parent_class	goutputstream.h	/^  GObjectClass parent_class;$/;"	m	struct:_GOutputStreamClass
parent_class	gpermission.h	/^  GObjectClass parent_class;$/;"	m	struct:_GPermissionClass
parent_class	gproxyaddress.h	/^  GInetSocketAddressClass parent_class;$/;"	m	struct:_GProxyAddressClass
parent_class	gproxyaddressenumerator.h	/^  GSocketAddressEnumeratorClass parent_class;$/;"	m	struct:_GProxyAddressEnumeratorClass
parent_class	gresolver.h	/^  GObjectClass parent_class;$/;"	m	struct:_GResolverClass
parent_class	gsettings.h	/^  GObjectClass parent_class;$/;"	m	struct:_GSettingsClass
parent_class	gsettingsbackend.h	/^  GObjectClass parent_class;$/;"	m	struct:_GSettingsBackendClass
parent_class	gsimpleactiongroup.h	/^  GObjectClass parent_class;$/;"	m	struct:_GSimpleActionGroupClass
parent_class	gsocket.h	/^  GObjectClass parent_class;$/;"	m	struct:_GSocketClass
parent_class	gsocketaddress.h	/^  GObjectClass parent_class;$/;"	m	struct:_GSocketAddressClass
parent_class	gsocketaddressenumerator.h	/^  GObjectClass parent_class;$/;"	m	struct:_GSocketAddressEnumeratorClass
parent_class	gsocketclient.h	/^  GObjectClass parent_class;$/;"	m	struct:_GSocketClientClass
parent_class	gsocketconnection.h	/^  GIOStreamClass parent_class;$/;"	m	struct:_GSocketConnectionClass
parent_class	gsocketcontrolmessage.h	/^  GObjectClass parent_class;$/;"	m	struct:_GSocketControlMessageClass
parent_class	gsocketlistener.h	/^  GObjectClass parent_class;$/;"	m	struct:_GSocketListenerClass
parent_class	gsocketservice.h	/^  GSocketListenerClass parent_class;$/;"	m	struct:_GSocketServiceClass
parent_class	gtcpconnection.h	/^  GSocketConnectionClass parent_class;$/;"	m	struct:_GTcpConnectionClass
parent_class	gtcpwrapperconnection.h	/^  GTcpConnectionClass parent_class;$/;"	m	struct:_GTcpWrapperConnectionClass
parent_class	gthreadedsocketservice.h	/^  GSocketServiceClass parent_class;$/;"	m	struct:_GThreadedSocketServiceClass
parent_class	gtlscertificate.h	/^  GObjectClass parent_class;$/;"	m	struct:_GTlsCertificateClass
parent_class	gtlsconnection.h	/^  GIOStreamClass parent_class;$/;"	m	struct:_GTlsConnectionClass
parent_class	gtlsdatabase.h	/^  GObjectClass parent_class;$/;"	m	struct:_GTlsDatabaseClass
parent_class	gtlsinteraction.h	/^  GObjectClass parent_class;$/;"	m	struct:_GTlsInteractionClass
parent_class	gtlspassword.h	/^  GObjectClass parent_class;$/;"	m	struct:_GTlsPasswordClass
parent_class	gvfs.h	/^  GObjectClass parent_class;$/;"	m	struct:_GVfsClass
parent_class	gvolumemonitor.h	/^  GObjectClass parent_class;$/;"	m	struct:_GVolumeMonitorClass
parent_class	gzlibcompressor.h	/^  GObjectClass parent_class;$/;"	m	struct:_GZlibCompressorClass
parent_class	gzlibdecompressor.h	/^  GObjectClass parent_class;$/;"	m	struct:_GZlibDecompressorClass
parent_iface	gdbusinterface.h	/^  GTypeInterface parent_iface;$/;"	m	struct:_GDBusInterfaceIface
parent_iface	gdbusobject.h	/^  GTypeInterface parent_iface;$/;"	m	struct:_GDBusObjectIface
parent_iface	gdbusobjectmanager.h	/^  GTypeInterface parent_iface;$/;"	m	struct:_GDBusObjectManagerIface
parent_instance	gappinfo.h	/^  GObject parent_instance;$/;"	m	struct:_GAppLaunchContext
parent_instance	gapplication.h	/^  GObject parent_instance;$/;"	m	struct:_GApplication
parent_instance	gapplicationcommandline.h	/^  GObject parent_instance;$/;"	m	struct:_GApplicationCommandLine
parent_instance	gbufferedinputstream.h	/^  GFilterInputStream parent_instance;$/;"	m	struct:_GBufferedInputStream
parent_instance	gbufferedoutputstream.h	/^  GFilterOutputStream parent_instance;$/;"	m	struct:_GBufferedOutputStream
parent_instance	gcancellable.h	/^  GObject parent_instance;$/;"	m	struct:_GCancellable
parent_instance	gconverterinputstream.h	/^  GFilterInputStream parent_instance;$/;"	m	struct:_GConverterInputStream
parent_instance	gconverteroutputstream.h	/^  GFilterOutputStream parent_instance;$/;"	m	struct:_GConverterOutputStream
parent_instance	gdatainputstream.h	/^  GBufferedInputStream parent_instance;$/;"	m	struct:_GDataInputStream
parent_instance	gdataoutputstream.h	/^  GFilterOutputStream parent_instance;$/;"	m	struct:_GDataOutputStream
parent_instance	gdbusinterfaceskeleton.h	/^  GObject parent_instance;$/;"	m	struct:_GDBusInterfaceSkeleton
parent_instance	gdbusobjectmanagerclient.h	/^  GObject parent_instance;$/;"	m	struct:_GDBusObjectManagerClient
parent_instance	gdbusobjectmanagerserver.h	/^  GObject parent_instance;$/;"	m	struct:_GDBusObjectManagerServer
parent_instance	gdbusobjectproxy.h	/^  GObject parent_instance;$/;"	m	struct:_GDBusObjectProxy
parent_instance	gdbusobjectskeleton.h	/^  GObject parent_instance;$/;"	m	struct:_GDBusObjectSkeleton
parent_instance	gdbusproxy.h	/^  GObject parent_instance;$/;"	m	struct:_GDBusProxy
parent_instance	gemblemedicon.h	/^  GObject parent_instance;$/;"	m	struct:_GEmblemedIcon
parent_instance	gfileenumerator.h	/^  GObject parent_instance;$/;"	m	struct:_GFileEnumerator
parent_instance	gfileinputstream.h	/^  GInputStream parent_instance;$/;"	m	struct:_GFileInputStream
parent_instance	gfileiostream.h	/^  GIOStream parent_instance;$/;"	m	struct:_GFileIOStream
parent_instance	gfilemonitor.h	/^  GObject parent_instance;$/;"	m	struct:_GFileMonitor
parent_instance	gfileoutputstream.h	/^  GOutputStream parent_instance;$/;"	m	struct:_GFileOutputStream
parent_instance	gfilterinputstream.h	/^  GInputStream parent_instance;$/;"	m	struct:_GFilterInputStream
parent_instance	gfilteroutputstream.h	/^  GOutputStream parent_instance;$/;"	m	struct:_GFilterOutputStream
parent_instance	ginetaddress.h	/^  GObject parent_instance;$/;"	m	struct:_GInetAddress
parent_instance	ginetaddressmask.h	/^  GObject parent_instance;$/;"	m	struct:_GInetAddressMask
parent_instance	ginetsocketaddress.h	/^  GSocketAddress parent_instance;$/;"	m	struct:_GInetSocketAddress
parent_instance	ginputstream.h	/^  GObject parent_instance;$/;"	m	struct:_GInputStream
parent_instance	giostream.h	/^  GObject parent_instance;$/;"	m	struct:_GIOStream
parent_instance	gmemoryinputstream.h	/^  GInputStream parent_instance;$/;"	m	struct:_GMemoryInputStream
parent_instance	gmemoryoutputstream.h	/^  GOutputStream parent_instance;$/;"	m	struct:_GMemoryOutputStream
parent_instance	gmenumodel.h	/^  GObject            parent_instance;$/;"	m	struct:_GMenuModel
parent_instance	gmenumodel.h	/^  GObject parent_instance;$/;"	m	struct:_GMenuAttributeIter
parent_instance	gmenumodel.h	/^  GObject parent_instance;$/;"	m	struct:_GMenuLinkIter
parent_instance	gmountoperation.h	/^  GObject parent_instance;$/;"	m	struct:_GMountOperation
parent_instance	gnativevolumemonitor.h	/^  GVolumeMonitor parent_instance;$/;"	m	struct:_GNativeVolumeMonitor
parent_instance	gnetworkaddress.h	/^  GObject parent_instance;$/;"	m	struct:_GNetworkAddress
parent_instance	gnetworkservice.h	/^  GObject parent_instance;$/;"	m	struct:_GNetworkService
parent_instance	goutputstream.h	/^  GObject parent_instance;$/;"	m	struct:_GOutputStream
parent_instance	gpermission.h	/^  GObject parent_instance;$/;"	m	struct:_GPermission
parent_instance	gproxyaddress.h	/^  GInetSocketAddress parent_instance;$/;"	m	struct:_GProxyAddress
parent_instance	gproxyaddressenumerator.h	/^  GSocketAddressEnumerator parent_instance;$/;"	m	struct:_GProxyAddressEnumerator
parent_instance	gresolver.h	/^  GObject parent_instance;$/;"	m	struct:_GResolver
parent_instance	gsettings.h	/^  GObject parent_instance;$/;"	m	struct:_GSettings
parent_instance	gsettingsbackend.h	/^  GObject parent_instance;$/;"	m	struct:_GSettingsBackend
parent_instance	gsimpleactiongroup.h	/^  GObject parent_instance;$/;"	m	struct:_GSimpleActionGroup
parent_instance	gsocket.h	/^  GObject parent_instance;$/;"	m	struct:_GSocket
parent_instance	gsocketaddress.h	/^  GObject parent_instance;$/;"	m	struct:_GSocketAddress
parent_instance	gsocketaddressenumerator.h	/^  GObject parent_instance;$/;"	m	struct:_GSocketAddressEnumerator
parent_instance	gsocketclient.h	/^  GObject parent_instance;$/;"	m	struct:_GSocketClient
parent_instance	gsocketconnection.h	/^  GIOStream parent_instance;$/;"	m	struct:_GSocketConnection
parent_instance	gsocketcontrolmessage.h	/^  GObject parent_instance;$/;"	m	struct:_GSocketControlMessage
parent_instance	gsocketlistener.h	/^  GObject parent_instance;$/;"	m	struct:_GSocketListener
parent_instance	gsocketservice.h	/^  GSocketListener parent_instance;$/;"	m	struct:_GSocketService
parent_instance	gtcpconnection.h	/^  GSocketConnection parent_instance;$/;"	m	struct:_GTcpConnection
parent_instance	gtcpwrapperconnection.h	/^  GTcpConnection parent_instance;$/;"	m	struct:_GTcpWrapperConnection
parent_instance	gthreadedsocketservice.h	/^  GSocketService parent_instance;$/;"	m	struct:_GThreadedSocketService
parent_instance	gtlscertificate.h	/^  GObject parent_instance;$/;"	m	struct:_GTlsCertificate
parent_instance	gtlsconnection.h	/^  GIOStream parent_instance;$/;"	m	struct:_GTlsConnection
parent_instance	gtlsdatabase.h	/^  GObject parent_instance;$/;"	m	struct:_GTlsDatabase
parent_instance	gtlsinteraction.h	/^  GObject parent_instance;$/;"	m	struct:_GTlsInteraction
parent_instance	gtlspassword.h	/^  GObject parent_instance;$/;"	m	struct:_GTlsPassword
parent_instance	gvfs.h	/^  GObject parent_instance;$/;"	m	struct:_GVfs
parent_instance	gvolumemonitor.h	/^  GObject parent_instance;$/;"	m	struct:_GVolumeMonitor
parse_name	gvfs.h	/^  GFile               * (* parse_name)                (GVfs       *vfs,$/;"	m	struct:_GVfsClass
path	gdbusintrospection.h	/^  gchar                *path;$/;"	m	struct:_GDBusNodeInfo
poll_for_media	gdrive.h	/^  void     (* poll_for_media)           (GDrive              *drive,$/;"	m	struct:_GDriveIface
poll_for_media_finish	gdrive.h	/^  gboolean (* poll_for_media_finish)    (GDrive              *drive,$/;"	m	struct:_GDriveIface
poll_mountable	gfile.h	/^  void                (* poll_mountable)              (GFile                *file,$/;"	m	struct:_GFileIface
poll_mountable_finish	gfile.h	/^  gboolean            (* poll_mountable_finish)       (GFile                *file,$/;"	m	struct:_GFileIface
pre_unmount	gmount.h	/^  void        (* pre_unmount)               (GMount              *mount);$/;"	m	struct:_GMountIface
prefix_matches	gfile.h	/^  gboolean            (* prefix_matches)              (GFile         *prefix,$/;"	m	struct:_GFileIface
print_literal	gapplicationcommandline.h	/^  void (* print_literal)    (GApplicationCommandLine *cmdline,$/;"	m	struct:_GApplicationCommandLineClass
printerr_literal	gapplicationcommandline.h	/^  void (* printerr_literal) (GApplicationCommandLine *cmdline,$/;"	m	struct:_GApplicationCommandLineClass
priv	gappinfo.h	/^  GAppLaunchContextPrivate *priv;$/;"	m	struct:_GAppLaunchContext
priv	gapplication.h	/^  GApplicationPrivate *priv;$/;"	m	struct:_GApplication
priv	gapplicationcommandline.h	/^  GApplicationCommandLinePrivate *priv;$/;"	m	struct:_GApplicationCommandLine
priv	gbufferedinputstream.h	/^  GBufferedInputStreamPrivate *priv;$/;"	m	struct:_GBufferedInputStream
priv	gbufferedoutputstream.h	/^  GBufferedOutputStreamPrivate *priv;$/;"	m	struct:_GBufferedOutputStream
priv	gcancellable.h	/^  GCancellablePrivate *priv;$/;"	m	struct:_GCancellable
priv	gconverterinputstream.h	/^  GConverterInputStreamPrivate *priv;$/;"	m	struct:_GConverterInputStream
priv	gconverteroutputstream.h	/^  GConverterOutputStreamPrivate *priv;$/;"	m	struct:_GConverterOutputStream
priv	gdatainputstream.h	/^  GDataInputStreamPrivate *priv;$/;"	m	struct:_GDataInputStream
priv	gdataoutputstream.h	/^  GDataOutputStreamPrivate *priv;$/;"	m	struct:_GDataOutputStream
priv	gdbusinterfaceskeleton.h	/^  GDBusInterfaceSkeletonPrivate *priv;$/;"	m	struct:_GDBusInterfaceSkeleton
priv	gdbusobjectmanagerclient.h	/^  GDBusObjectManagerClientPrivate *priv;$/;"	m	struct:_GDBusObjectManagerClient
priv	gdbusobjectmanagerserver.h	/^  GDBusObjectManagerServerPrivate *priv;$/;"	m	struct:_GDBusObjectManagerServer
priv	gdbusobjectproxy.h	/^  GDBusObjectProxyPrivate *priv;$/;"	m	struct:_GDBusObjectProxy
priv	gdbusobjectskeleton.h	/^  GDBusObjectSkeletonPrivate *priv;$/;"	m	struct:_GDBusObjectSkeleton
priv	gdbusproxy.h	/^  GDBusProxyPrivate *priv;$/;"	m	struct:_GDBusProxy
priv	gemblemedicon.h	/^  GEmblemedIconPrivate *priv;$/;"	m	struct:_GEmblemedIcon
priv	gfileenumerator.h	/^  GFileEnumeratorPrivate *priv;$/;"	m	struct:_GFileEnumerator
priv	gfileinputstream.h	/^  GFileInputStreamPrivate *priv;$/;"	m	struct:_GFileInputStream
priv	gfileiostream.h	/^  GFileIOStreamPrivate *priv;$/;"	m	struct:_GFileIOStream
priv	gfilemonitor.h	/^  GFileMonitorPrivate *priv;$/;"	m	struct:_GFileMonitor
priv	gfileoutputstream.h	/^  GFileOutputStreamPrivate *priv;$/;"	m	struct:_GFileOutputStream
priv	ginetaddress.h	/^  GInetAddressPrivate *priv;$/;"	m	struct:_GInetAddress
priv	ginetaddressmask.h	/^  GInetAddressMaskPrivate *priv;$/;"	m	struct:_GInetAddressMask
priv	ginetsocketaddress.h	/^  GInetSocketAddressPrivate *priv;$/;"	m	struct:_GInetSocketAddress
priv	ginputstream.h	/^  GInputStreamPrivate *priv;$/;"	m	struct:_GInputStream
priv	giostream.h	/^  GIOStreamPrivate *priv;$/;"	m	struct:_GIOStream
priv	gmemoryinputstream.h	/^  GMemoryInputStreamPrivate *priv;$/;"	m	struct:_GMemoryInputStream
priv	gmemoryoutputstream.h	/^  GMemoryOutputStreamPrivate *priv;$/;"	m	struct:_GMemoryOutputStream
priv	gmenumodel.h	/^  GMenuAttributeIterPrivate *priv;$/;"	m	struct:_GMenuAttributeIter
priv	gmenumodel.h	/^  GMenuLinkIterPrivate *priv;$/;"	m	struct:_GMenuLinkIter
priv	gmenumodel.h	/^  GMenuModelPrivate *priv;$/;"	m	struct:_GMenuModel
priv	gmountoperation.h	/^  GMountOperationPrivate *priv;$/;"	m	struct:_GMountOperation
priv	gnetworkaddress.h	/^  GNetworkAddressPrivate *priv;$/;"	m	struct:_GNetworkAddress
priv	gnetworkservice.h	/^  GNetworkServicePrivate *priv;$/;"	m	struct:_GNetworkService
priv	goutputstream.h	/^  GOutputStreamPrivate *priv;$/;"	m	struct:_GOutputStream
priv	gpermission.h	/^  GPermissionPrivate *priv;$/;"	m	struct:_GPermission
priv	gproxyaddress.h	/^  GProxyAddressPrivate *priv;$/;"	m	struct:_GProxyAddress
priv	gproxyaddressenumerator.h	/^  GProxyAddressEnumeratorPrivate *priv;$/;"	m	struct:_GProxyAddressEnumerator
priv	gresolver.h	/^  GResolverPrivate *priv;$/;"	m	struct:_GResolver
priv	gsettings.h	/^  GSettingsPrivate *priv;$/;"	m	struct:_GSettings
priv	gsettingsbackend.h	/^  GSettingsBackendPrivate *priv;$/;"	m	struct:_GSettingsBackend
priv	gsimpleactiongroup.h	/^  GSimpleActionGroupPrivate *priv;$/;"	m	struct:_GSimpleActionGroup
priv	gsocket.h	/^  GSocketPrivate *priv;$/;"	m	struct:_GSocket
priv	gsocketclient.h	/^  GSocketClientPrivate *priv;$/;"	m	struct:_GSocketClient
priv	gsocketconnection.h	/^  GSocketConnectionPrivate *priv;$/;"	m	struct:_GSocketConnection
priv	gsocketcontrolmessage.h	/^  GSocketControlMessagePrivate *priv;$/;"	m	struct:_GSocketControlMessage
priv	gsocketlistener.h	/^  GSocketListenerPrivate *priv;$/;"	m	struct:_GSocketListener
priv	gsocketservice.h	/^  GSocketServicePrivate *priv;$/;"	m	struct:_GSocketService
priv	gtcpconnection.h	/^  GTcpConnectionPrivate *priv;$/;"	m	struct:_GTcpConnection
priv	gtcpwrapperconnection.h	/^  GTcpWrapperConnectionPrivate *priv;$/;"	m	struct:_GTcpWrapperConnection
priv	gthreadedsocketservice.h	/^  GThreadedSocketServicePrivate *priv;$/;"	m	struct:_GThreadedSocketService
priv	gtlscertificate.h	/^  GTlsCertificatePrivate *priv;$/;"	m	struct:_GTlsCertificate
priv	gtlsconnection.h	/^  GTlsConnectionPrivate *priv;$/;"	m	struct:_GTlsConnection
priv	gtlsdatabase.h	/^  GTlsDatabasePrivate *priv;$/;"	m	struct:_GTlsDatabase
priv	gtlsinteraction.h	/^  GTlsInteractionPrivate *priv;$/;"	m	struct:_GTlsInteraction
priv	gtlspassword.h	/^  GTlsPasswordPrivate *priv;$/;"	m	struct:_GTlsPassword
priv	gvolumemonitor.h	/^  gpointer priv;$/;"	m	struct:_GVolumeMonitor
properties	gdbusintrospection.h	/^  GDBusPropertyInfo   **properties;$/;"	m	struct:_GDBusInterfaceInfo
proxy_enumerate	gsocketconnectable.h	/^  GSocketAddressEnumerator * (* proxy_enumerate) (GSocketConnectable *connectable);$/;"	m	struct:_GSocketConnectableIface
query_action	gactiongroup.h	/^  gboolean              (* query_action)               (GActionGroup        *action_group,$/;"	m	struct:_GActionGroupInterface
query_filesystem_info	gfile.h	/^  GFileInfo *         (* query_filesystem_info)       (GFile                *file,$/;"	m	struct:_GFileIface
query_filesystem_info_async	gfile.h	/^  void                (* query_filesystem_info_async) (GFile                *file,$/;"	m	struct:_GFileIface
query_filesystem_info_finish	gfile.h	/^  GFileInfo *         (* query_filesystem_info_finish)(GFile                *file,$/;"	m	struct:_GFileIface
query_info	gfile.h	/^  GFileInfo *         (* query_info)                  (GFile                *file,$/;"	m	struct:_GFileIface
query_info	gfileinputstream.h	/^  GFileInfo * (* query_info)        (GFileInputStream     *stream,$/;"	m	struct:_GFileInputStreamClass
query_info	gfileiostream.h	/^  GFileInfo * (* query_info)        (GFileIOStream    *stream,$/;"	m	struct:_GFileIOStreamClass
query_info	gfileoutputstream.h	/^  GFileInfo * (* query_info)        (GFileOutputStream    *stream,$/;"	m	struct:_GFileOutputStreamClass
query_info_async	gfile.h	/^  void                (* query_info_async)            (GFile                *file,$/;"	m	struct:_GFileIface
query_info_async	gfileinputstream.h	/^  void        (* query_info_async)  (GFileInputStream     *stream,$/;"	m	struct:_GFileInputStreamClass
query_info_async	gfileiostream.h	/^  void        (* query_info_async)  (GFileIOStream     *stream,$/;"	m	struct:_GFileIOStreamClass
query_info_async	gfileoutputstream.h	/^  void        (* query_info_async)  (GFileOutputStream     *stream,$/;"	m	struct:_GFileOutputStreamClass
query_info_finish	gfile.h	/^  GFileInfo *         (* query_info_finish)           (GFile                *file,$/;"	m	struct:_GFileIface
query_info_finish	gfileinputstream.h	/^  GFileInfo * (* query_info_finish) (GFileInputStream     *stream,$/;"	m	struct:_GFileInputStreamClass
query_info_finish	gfileiostream.h	/^  GFileInfo * (* query_info_finish) (GFileIOStream     *stream,$/;"	m	struct:_GFileIOStreamClass
query_info_finish	gfileoutputstream.h	/^  GFileInfo * (* query_info_finish) (GFileOutputStream     *stream,$/;"	m	struct:_GFileOutputStreamClass
query_settable_attributes	gfile.h	/^  GFileAttributeInfoList * (* query_settable_attributes)    (GFile          *file,$/;"	m	struct:_GFileIface
query_writable_namespaces	gfile.h	/^  GFileAttributeInfoList * (* query_writable_namespaces)    (GFile          *file,$/;"	m	struct:_GFileIface
quit_mainloop	gapplication.h	/^  void                      (* quit_mainloop)       (GApplication              *application);$/;"	m	struct:_GApplicationClass
read	gsettingsbackend.h	/^  GVariant *    (*read)             (GSettingsBackend    *backend,$/;"	m	struct:_GSettingsBackendClass
read_async	gfile.h	/^  void                (* read_async)                  (GFile                *file,$/;"	m	struct:_GFileIface
read_async	ginputstream.h	/^  void     (* read_async)   (GInputStream        *stream,$/;"	m	struct:_GInputStreamClass
read_finish	gfile.h	/^  GFileInputStream *  (* read_finish)                 (GFile                *file,$/;"	m	struct:_GFileIface
read_finish	ginputstream.h	/^  gssize   (* read_finish)  (GInputStream        *stream,$/;"	m	struct:_GInputStreamClass
read_fn	gfile.h	/^  GFileInputStream *  (* read_fn)                     (GFile                *file,$/;"	m	struct:_GFileIface
read_fn	ginputstream.h	/^  gssize   (* read_fn)      (GInputStream        *stream,$/;"	m	struct:_GInputStreamClass
read_nonblocking	gpollableinputstream.h	/^  gssize       (*read_nonblocking) (GPollableInputStream  *stream,$/;"	m	struct:_GPollableInputStreamInterface
ref_count	gdbusintrospection.h	/^  volatile gint             ref_count;$/;"	m	struct:_GDBusPropertyInfo
ref_count	gdbusintrospection.h	/^  volatile gint         ref_count;$/;"	m	struct:_GDBusAnnotationInfo
ref_count	gdbusintrospection.h	/^  volatile gint         ref_count;$/;"	m	struct:_GDBusArgInfo
ref_count	gdbusintrospection.h	/^  volatile gint         ref_count;$/;"	m	struct:_GDBusInterfaceInfo
ref_count	gdbusintrospection.h	/^  volatile gint         ref_count;$/;"	m	struct:_GDBusMethodInfo
ref_count	gdbusintrospection.h	/^  volatile gint         ref_count;$/;"	m	struct:_GDBusNodeInfo
ref_count	gdbusintrospection.h	/^  volatile gint         ref_count;$/;"	m	struct:_GDBusSignalInfo
release	gpermission.h	/^  gboolean (*release)        (GPermission          *permission,$/;"	m	struct:_GPermissionClass
release_async	gpermission.h	/^  void     (*release_async)  (GPermission          *permission,$/;"	m	struct:_GPermissionClass
release_finish	gpermission.h	/^  gboolean (*release_finish) (GPermission          *permission,$/;"	m	struct:_GPermissionClass
reload	gresolver.h	/^  void    ( *reload)                   (GResolver            *resolver);$/;"	m	struct:_GResolverClass
remount	gmount.h	/^  void        (* remount)                   (GMount              *mount,$/;"	m	struct:_GMountIface
remount_finish	gmount.h	/^  gboolean    (* remount_finish)            (GMount              *mount,$/;"	m	struct:_GMountIface
remove_action	gactionmap.h	/^  void      (* remove_action) (GActionMap  *action_map,$/;"	m	struct:_GActionMapInterface
remove_supports_type	gappinfo.h	/^  gboolean     (* remove_supports_type)         (GAppInfo           *appinfo,$/;"	m	struct:_GAppInfoIface
removed	gvolume.h	/^  void        (* removed)               (GVolume             *volume);$/;"	m	struct:_GVolumeIface
replace	gfile.h	/^  GFileOutputStream * (* replace)                     (GFile                *file,$/;"	m	struct:_GFileIface
replace_async	gfile.h	/^  void                (* replace_async)               (GFile                *file,$/;"	m	struct:_GFileIface
replace_finish	gfile.h	/^  GFileOutputStream * (* replace_finish)              (GFile                *file,$/;"	m	struct:_GFileIface
replace_readwrite	gfile.h	/^  GFileIOStream *     (* replace_readwrite)           (GFile                *file,$/;"	m	struct:_GFileIface
replace_readwrite_async	gfile.h	/^  void                (* replace_readwrite_async)     (GFile                *file,$/;"	m	struct:_GFileIface
replace_readwrite_finish	gfile.h	/^  GFileIOStream *     (* replace_readwrite_finish)    (GFile                *file,$/;"	m	struct:_GFileIface
reply	gmountoperation.h	/^  void (* reply)        (GMountOperation       *op,$/;"	m	struct:_GMountOperationClass
reserved	gpermission.h	/^  gpointer reserved[16];$/;"	m	struct:_GPermissionClass
reset	gconverter.h	/^  void  (* reset)   (GConverter *converter);$/;"	m	struct:_GConverterIface
reset	gsettingsbackend.h	/^  void          (*reset)            (GSettingsBackend    *backend,$/;"	m	struct:_GSettingsBackendClass
resolve_relative_path	gfile.h	/^  GFile *             (* resolve_relative_path)       (GFile        *file,$/;"	m	struct:_GFileIface
resource	gresource.h	/^  GResource *resource;$/;"	m	struct:_GStaticResource
run	gthreadedsocketservice.h	/^  gboolean (* run) (GThreadedSocketService *service,$/;"	m	struct:_GThreadedSocketServiceClass
run_mainloop	gapplication.h	/^  void                      (* run_mainloop)        (GApplication              *application);$/;"	m	struct:_GApplicationClass
seek	gfileinputstream.h	/^  gboolean    (* seek)	            (GFileInputStream     *stream,$/;"	m	struct:_GFileInputStreamClass
seek	gfileiostream.h	/^  gboolean    (* seek)	            (GFileIOStream    *stream,$/;"	m	struct:_GFileIOStreamClass
seek	gfileoutputstream.h	/^  gboolean    (* seek)	            (GFileOutputStream    *stream,$/;"	m	struct:_GFileOutputStreamClass
seek	gseekable.h	/^  gboolean    (* seek)	         (GSeekable    *seekable,$/;"	m	struct:_GSeekableIface
serialize	gsocketcontrolmessage.h	/^  void                   (* serialize) (GSocketControlMessage  *message,$/;"	m	struct:_GSocketControlMessageClass
set_as_default_for_extension	gappinfo.h	/^  gboolean     (* set_as_default_for_extension) (GAppInfo           *appinfo,$/;"	m	struct:_GAppInfoIface
set_as_default_for_type	gappinfo.h	/^  gboolean     (* set_as_default_for_type)      (GAppInfo           *appinfo,$/;"	m	struct:_GAppInfoIface
set_as_last_used_for_type	gappinfo.h	/^  gboolean     (* set_as_last_used_for_type)    (GAppInfo           *appinfo,$/;"	m	struct:_GAppInfoIface
set_attribute	gfile.h	/^  gboolean            (* set_attribute)               (GFile                *file,$/;"	m	struct:_GFileIface
set_attributes_async	gfile.h	/^  void                (* set_attributes_async)        (GFile                *file,$/;"	m	struct:_GFileIface
set_attributes_finish	gfile.h	/^  gboolean            (* set_attributes_finish)       (GFile                *file,$/;"	m	struct:_GFileIface
set_attributes_from_info	gfile.h	/^  gboolean            (* set_attributes_from_info)    (GFile                *file,$/;"	m	struct:_GFileIface
set_display_name	gfile.h	/^  GFile *             (* set_display_name)            (GFile                *file,$/;"	m	struct:_GFileIface
set_display_name_async	gfile.h	/^  void                (* set_display_name_async)      (GFile                *file,$/;"	m	struct:_GFileIface
set_display_name_finish	gfile.h	/^  GFile *             (* set_display_name_finish)     (GFile                *file,$/;"	m	struct:_GFileIface
set_object	gdbusinterface.h	/^  void                  (*set_object) (GDBusInterface      *interface_,$/;"	m	struct:_GDBusInterfaceIface
set_property	gdbusconnection.h	/^  GDBusInterfaceSetPropertyFunc set_property;$/;"	m	struct:_GDBusInterfaceVTable
set_value	gtlspassword.h	/^  void              ( *set_value)            (GTlsPassword  *password,$/;"	m	struct:_GTlsPasswordClass
should_automount	gvolume.h	/^  gboolean    (* should_automount)      (GVolume             *volume);$/;"	m	struct:_GVolumeIface
should_show	gappinfo.h	/^  gboolean     (* should_show)                  (GAppInfo           *appinfo);$/;"	m	struct:_GAppInfoIface
show_processes	gmountoperation.h	/^  void (* show_processes) (GMountOperation      *op,$/;"	m	struct:_GMountOperationClass
shutdown	gapplication.h	/^  void                      (* shutdown)            (GApplication              *application);$/;"	m	struct:_GApplicationClass
signal_padding	gdbusinterfaceskeleton.h	/^  gpointer signal_padding[8];$/;"	m	struct:_GDBusInterfaceSkeletonClass
signals	gdbusintrospection.h	/^  GDBusSignalInfo     **signals;$/;"	m	struct:_GDBusInterfaceInfo
signature	gdbusintrospection.h	/^  gchar                    *signature;$/;"	m	struct:_GDBusPropertyInfo
signature	gdbusintrospection.h	/^  gchar                *signature;$/;"	m	struct:_GDBusArgInfo
size	giotypes.h	/^  gsize size;$/;"	m	struct:_GInputVector
size	giotypes.h	/^  gsize size;$/;"	m	struct:_GOutputVector
skip	ginputstream.h	/^  gssize   (* skip)         (GInputStream        *stream,$/;"	m	struct:_GInputStreamClass
skip_async	ginputstream.h	/^  void     (* skip_async)   (GInputStream        *stream,$/;"	m	struct:_GInputStreamClass
skip_finish	ginputstream.h	/^  gssize   (* skip_finish)  (GInputStream        *stream,$/;"	m	struct:_GInputStreamClass
splice	goutputstream.h	/^  gssize      (* splice)        (GOutputStream            *stream,$/;"	m	struct:_GOutputStreamClass
splice_async	goutputstream.h	/^  void        (* splice_async)  (GOutputStream            *stream,$/;"	m	struct:_GOutputStreamClass
splice_finish	goutputstream.h	/^  gssize      (* splice_finish) (GOutputStream            *stream,$/;"	m	struct:_GOutputStreamClass
start	gdrive.h	/^  void     (* start)                    (GDrive              *drive,$/;"	m	struct:_GDriveIface
start_finish	gdrive.h	/^  gboolean (* start_finish)             (GDrive              *drive,$/;"	m	struct:_GDriveIface
start_mountable	gfile.h	/^  void                (* start_mountable)             (GFile                *file,$/;"	m	struct:_GFileIface
start_mountable_finish	gfile.h	/^  gboolean            (* start_mountable_finish)      (GFile                *file,$/;"	m	struct:_GFileIface
startup	gapplication.h	/^  void                      (* startup)             (GApplication              *application);$/;"	m	struct:_GApplicationClass
state	gactionmap.h	/^  const gchar *state;$/;"	m	struct:_GActionEntry
stop	gdrive.h	/^  void     (* stop)                     (GDrive              *drive,$/;"	m	struct:_GDriveIface
stop_button	gdrive.h	/^  void     (* stop_button)              (GDrive              *drive);$/;"	m	struct:_GDriveIface
stop_finish	gdrive.h	/^  gboolean (* stop_finish)              (GDrive              *drive,$/;"	m	struct:_GDriveIface
stop_mountable	gfile.h	/^  void                (* stop_mountable)              (GFile                *file,$/;"	m	struct:_GFileIface
stop_mountable_finish	gfile.h	/^  gboolean            (* stop_mountable_finish)       (GFile                *file,$/;"	m	struct:_GFileIface
subscribe	gsettingsbackend.h	/^  void          (*subscribe)        (GSettingsBackend    *backend,$/;"	m	struct:_GSettingsBackendClass
supports_files	gappinfo.h	/^  gboolean     (* supports_files)               (GAppInfo           *appinfo);$/;"	m	struct:_GAppInfoIface
supports_hostname	gproxy.h	/^  gboolean    (* supports_hostname) (GProxy             *proxy);$/;"	m	struct:_GProxyInterface
supports_thread_contexts	gfile.h	/^  gboolean            supports_thread_contexts;$/;"	m	struct:_GFileIface
supports_tls	gtlsbackend.h	/^  gboolean       ( *supports_tls)               (GTlsBackend *backend);$/;"	m	struct:_GTlsBackendInterface
supports_uris	gappinfo.h	/^  gboolean     (* supports_uris)                (GAppInfo           *appinfo);$/;"	m	struct:_GAppInfoIface
sync	gsettingsbackend.h	/^  void          (*sync)             (GSettingsBackend    *backend);$/;"	m	struct:_GSettingsBackendClass
tell	gfileinputstream.h	/^  goffset     (* tell)              (GFileInputStream     *stream);$/;"	m	struct:_GFileInputStreamClass
tell	gfileiostream.h	/^  goffset     (* tell)              (GFileIOStream    *stream);$/;"	m	struct:_GFileIOStreamClass
tell	gfileoutputstream.h	/^  goffset     (* tell)              (GFileOutputStream    *stream);$/;"	m	struct:_GFileOutputStreamClass
tell	gseekable.h	/^  goffset     (* tell)	         (GSeekable    *seekable);$/;"	m	struct:_GSeekableIface
to_bytes	ginetaddress.h	/^  const guint8 * (*to_bytes)  (GInetAddress *address);$/;"	m	struct:_GInetAddressClass
to_native	gsocketaddress.h	/^  gboolean       (*to_native)       (GSocketAddress *address,$/;"	m	struct:_GSocketAddressClass
to_string	ginetaddress.h	/^  gchar *        (*to_string) (GInetAddress *address);$/;"	m	struct:_GInetAddressClass
to_tokens	gicon.h	/^  gboolean    (* to_tokens)   (GIcon   *icon,$/;"	m	struct:_GIconIface
trash	gfile.h	/^  gboolean            (* trash)                       (GFile                *file,$/;"	m	struct:_GFileIface
truncate_fn	gfileiostream.h	/^  gboolean    (* truncate_fn)       (GFileIOStream    *stream,$/;"	m	struct:_GFileIOStreamClass
truncate_fn	gfileoutputstream.h	/^  gboolean    (* truncate_fn)       (GFileOutputStream    *stream,$/;"	m	struct:_GFileOutputStreamClass
truncate_fn	gseekable.h	/^  gboolean    (* truncate_fn)    (GSeekable    *seekable,$/;"	m	struct:_GSeekableIface
type	gfileattribute.h	/^  GFileAttributeType       type;$/;"	m	struct:_GFileAttributeInfo
unmount	gmount.h	/^  void        (* unmount)                   (GMount              *mount,$/;"	m	struct:_GMountIface
unmount_finish	gmount.h	/^  gboolean    (* unmount_finish)            (GMount              *mount,$/;"	m	struct:_GMountIface
unmount_mountable	gfile.h	/^  void                (* unmount_mountable)           (GFile                *file,$/;"	m	struct:_GFileIface
unmount_mountable_finish	gfile.h	/^  gboolean            (* unmount_mountable_finish)    (GFile                *file,$/;"	m	struct:_GFileIface
unmount_mountable_with_operation	gfile.h	/^  void                (* unmount_mountable_with_operation) (GFile           *file,$/;"	m	struct:_GFileIface
unmount_mountable_with_operation_finish	gfile.h	/^  gboolean            (* unmount_mountable_with_operation_finish) (GFile    *file,$/;"	m	struct:_GFileIface
unmount_with_operation	gmount.h	/^  void        (* unmount_with_operation)    (GMount              *mount,$/;"	m	struct:_GMountIface
unmount_with_operation_finish	gmount.h	/^  gboolean    (* unmount_with_operation_finish) (GMount          *mount,$/;"	m	struct:_GMountIface
unmounted	gmount.h	/^  void        (* unmounted)                 (GMount              *mount);$/;"	m	struct:_GMountIface
unsubscribe	gsettingsbackend.h	/^  void          (*unsubscribe)      (GSettingsBackend    *backend,$/;"	m	struct:_GSettingsBackendClass
value	gdbusintrospection.h	/^  gchar                *value;$/;"	m	struct:_GDBusAnnotationInfo
verify	gtlscertificate.h	/^  GTlsCertificateFlags  (* verify) (GTlsCertificate     *cert,$/;"	m	struct:_GTlsCertificateClass
verify_chain	gtlsdatabase.h	/^  GTlsCertificateFlags  (*verify_chain)                         (GTlsDatabase            *self,$/;"	m	struct:_GTlsDatabaseClass
verify_chain_async	gtlsdatabase.h	/^  void                  (*verify_chain_async)                   (GTlsDatabase            *self,$/;"	m	struct:_GTlsDatabaseClass
verify_chain_finish	gtlsdatabase.h	/^  GTlsCertificateFlags  (*verify_chain_finish)                  (GTlsDatabase            *self,$/;"	m	struct:_GTlsDatabaseClass
vfunc_padding	gdbusinterfaceskeleton.h	/^  gpointer vfunc_padding[8];$/;"	m	struct:_GDBusInterfaceSkeletonClass
volume_added	gvolumemonitor.h	/^  void      (* volume_added)         (GVolumeMonitor *volume_monitor,$/;"	m	struct:_GVolumeMonitorClass
volume_changed	gvolumemonitor.h	/^  void      (* volume_changed)       (GVolumeMonitor *volume_monitor,$/;"	m	struct:_GVolumeMonitorClass
volume_removed	gvolumemonitor.h	/^  void      (* volume_removed)       (GVolumeMonitor *volume_monitor,$/;"	m	struct:_GVolumeMonitorClass
writable_change_event	gsettings.h	/^  gboolean    (*writable_change_event) (GSettings    *settings,$/;"	m	struct:_GSettingsClass
writable_changed	gsettings.h	/^  void        (*writable_changed)      (GSettings    *settings,$/;"	m	struct:_GSettingsClass
write	gsettingsbackend.h	/^  gboolean      (*write)            (GSettingsBackend    *backend,$/;"	m	struct:_GSettingsBackendClass
write_async	goutputstream.h	/^  void        (* write_async)   (GOutputStream            *stream,$/;"	m	struct:_GOutputStreamClass
write_finish	goutputstream.h	/^  gssize      (* write_finish)  (GOutputStream            *stream,$/;"	m	struct:_GOutputStreamClass
write_fn	goutputstream.h	/^  gssize      (* write_fn)      (GOutputStream            *stream,$/;"	m	struct:_GOutputStreamClass
write_nonblocking	gpollableoutputstream.h	/^  gssize       (*write_nonblocking) (GPollableOutputStream  *stream,$/;"	m	struct:_GPollableOutputStreamInterface
write_tree	gsettingsbackend.h	/^  gboolean      (*write_tree)       (GSettingsBackend    *backend,$/;"	m	struct:_GSettingsBackendClass
