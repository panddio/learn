!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
GSEAL	gtkaboutdialog.h	/^  gpointer GSEAL (private_data);$/;"	p	struct:_GtkAboutDialog
GSEAL	gtkaccelgroup.h	/^  GSList             *GSEAL (acceleratables);$/;"	p	struct:_GtkAccelGroup
GSEAL	gtkaccelgroup.h	/^  GdkModifierType     GSEAL (modifier_mask);$/;"	p	struct:_GtkAccelGroup
GSEAL	gtkaccelgroup.h	/^  GtkAccelGroupEntry *GSEAL (priv_accels);$/;"	p	struct:_GtkAccelGroup
GSEAL	gtkaccelgroup.h	/^  guint	              GSEAL (n_accels);$/;"	p	struct:_GtkAccelGroup
GSEAL	gtkaccelgroup.h	/^  guint               GSEAL (lock_count);$/;"	p	struct:_GtkAccelGroup
GSEAL	gtkaccellabel.h	/^  GClosure      *GSEAL (accel_closure);      \/* has set function *\/$/;"	p	struct:_GtkAccelLabel
GSEAL	gtkaccellabel.h	/^  GtkAccelGroup *GSEAL (accel_group);        \/* set by set_accel_closure() *\/$/;"	p	struct:_GtkAccelLabel
GSEAL	gtkaccellabel.h	/^  GtkWidget     *GSEAL (accel_widget);       \/* done*\/$/;"	p	struct:_GtkAccelLabel
GSEAL	gtkaccellabel.h	/^  gchar         *GSEAL (accel_string);       \/* has set function *\/$/;"	p	struct:_GtkAccelLabel
GSEAL	gtkaccellabel.h	/^  guint          GSEAL (accel_padding);      \/* should be style property? *\/$/;"	p	struct:_GtkAccelLabel
GSEAL	gtkaccellabel.h	/^  guint          GSEAL (gtk_reserved);$/;"	p	struct:_GtkAccelLabel
GSEAL	gtkaccellabel.h	/^  guint16        GSEAL (accel_string_width); \/* seems to be private *\/$/;"	p	struct:_GtkAccelLabel
GSEAL	gtkaccessible.h	/^  GtkWidget *GSEAL (widget);$/;"	p	struct:_GtkAccessible
GSEAL	gtkaction.h	/^  GtkActionPrivate *GSEAL (private_data);$/;"	p	struct:_GtkAction
GSEAL	gtkactiongroup.h	/^  GtkActionGroupPrivate *GSEAL (private_data);$/;"	p	struct:_GtkActionGroup
GSEAL	gtkadjustment.h	/^  gdouble GSEAL (lower);$/;"	p	struct:_GtkAdjustment
GSEAL	gtkadjustment.h	/^  gdouble GSEAL (page_increment);$/;"	p	struct:_GtkAdjustment
GSEAL	gtkadjustment.h	/^  gdouble GSEAL (page_size);$/;"	p	struct:_GtkAdjustment
GSEAL	gtkadjustment.h	/^  gdouble GSEAL (step_increment);$/;"	p	struct:_GtkAdjustment
GSEAL	gtkadjustment.h	/^  gdouble GSEAL (upper);$/;"	p	struct:_GtkAdjustment
GSEAL	gtkadjustment.h	/^  gdouble GSEAL (value);$/;"	p	struct:_GtkAdjustment
GSEAL	gtkalignment.h	/^  gfloat GSEAL (xalign);$/;"	p	struct:_GtkAlignment
GSEAL	gtkalignment.h	/^  gfloat GSEAL (xscale);$/;"	p	struct:_GtkAlignment
GSEAL	gtkalignment.h	/^  gfloat GSEAL (yalign);$/;"	p	struct:_GtkAlignment
GSEAL	gtkalignment.h	/^  gfloat GSEAL (yscale);$/;"	p	struct:_GtkAlignment
GSEAL	gtkarrow.h	/^  gint16 GSEAL (arrow_type);$/;"	p	struct:_GtkArrow
GSEAL	gtkarrow.h	/^  gint16 GSEAL (shadow_type);$/;"	p	struct:_GtkArrow
GSEAL	gtkaspectframe.h	/^  GtkAllocation GSEAL (center_allocation);$/;"	p	struct:_GtkAspectFrame
GSEAL	gtkaspectframe.h	/^  gboolean GSEAL (obey_child);$/;"	p	struct:_GtkAspectFrame
GSEAL	gtkaspectframe.h	/^  gfloat   GSEAL (ratio);$/;"	p	struct:_GtkAspectFrame
GSEAL	gtkaspectframe.h	/^  gfloat   GSEAL (xalign);$/;"	p	struct:_GtkAspectFrame
GSEAL	gtkaspectframe.h	/^  gfloat   GSEAL (yalign);$/;"	p	struct:_GtkAspectFrame
GSEAL	gtkassistant.h	/^  GtkAssistantPrivate *GSEAL (priv);$/;"	p	struct:_GtkAssistant
GSEAL	gtkassistant.h	/^  GtkWidget *GSEAL (apply);$/;"	p	struct:_GtkAssistant
GSEAL	gtkassistant.h	/^  GtkWidget *GSEAL (back);$/;"	p	struct:_GtkAssistant
GSEAL	gtkassistant.h	/^  GtkWidget *GSEAL (cancel);$/;"	p	struct:_GtkAssistant
GSEAL	gtkassistant.h	/^  GtkWidget *GSEAL (close);$/;"	p	struct:_GtkAssistant
GSEAL	gtkassistant.h	/^  GtkWidget *GSEAL (forward);$/;"	p	struct:_GtkAssistant
GSEAL	gtkassistant.h	/^  GtkWidget *GSEAL (last);$/;"	p	struct:_GtkAssistant
GSEAL	gtkbbox.h	/^  GtkButtonBoxStyle GSEAL (layout_style);$/;"	p	struct:_GtkButtonBox
GSEAL	gtkbbox.h	/^  gint GSEAL (child_ipad_x);$/;"	p	struct:_GtkButtonBox
GSEAL	gtkbbox.h	/^  gint GSEAL (child_ipad_y);$/;"	p	struct:_GtkButtonBox
GSEAL	gtkbbox.h	/^  gint GSEAL (child_min_height);$/;"	p	struct:_GtkButtonBox
GSEAL	gtkbbox.h	/^  gint GSEAL (child_min_width);$/;"	p	struct:_GtkButtonBox
GSEAL	gtkbin.h	/^  GtkWidget *GSEAL (child);$/;"	p	struct:_GtkBin
GSEAL	gtkbox.h	/^  GList *GSEAL (children);$/;"	p	struct:_GtkBox
GSEAL	gtkbox.h	/^  gint16 GSEAL (spacing);$/;"	p	struct:_GtkBox
GSEAL	gtkbox.h	/^  guint GSEAL (homogeneous) : 1;$/;"	p	struct:_GtkBox
GSEAL	gtkbuilder.h	/^  GtkBuilderPrivate *GSEAL (priv);$/;"	p	struct:_GtkBuilder
GSEAL	gtkbutton.h	/^  GdkWindow *GSEAL (event_window);$/;"	p	struct:_GtkButton
GSEAL	gtkbutton.h	/^  gchar *GSEAL (label_text);$/;"	p	struct:_GtkButton
GSEAL	gtkbutton.h	/^  guint GSEAL (activate_timeout);$/;"	p	struct:_GtkButton
GSEAL	gtkbutton.h	/^  guint GSEAL (button_down) : 1;$/;"	p	struct:_GtkButton
GSEAL	gtkbutton.h	/^  guint GSEAL (constructed) : 1;$/;"	p	struct:_GtkButton
GSEAL	gtkbutton.h	/^  guint GSEAL (depress_on_activate) : 1;$/;"	p	struct:_GtkButton
GSEAL	gtkbutton.h	/^  guint GSEAL (depressed) : 1;$/;"	p	struct:_GtkButton
GSEAL	gtkbutton.h	/^  guint GSEAL (focus_on_click) : 1;$/;"	p	struct:_GtkButton
GSEAL	gtkbutton.h	/^  guint GSEAL (in_button) : 1;$/;"	p	struct:_GtkButton
GSEAL	gtkbutton.h	/^  guint GSEAL (relief) : 2;$/;"	p	struct:_GtkButton
GSEAL	gtkbutton.h	/^  guint GSEAL (use_stock) : 1;$/;"	p	struct:_GtkButton
GSEAL	gtkbutton.h	/^  guint GSEAL (use_underline) : 1;$/;"	p	struct:_GtkButton
GSEAL	gtkcalendar.h	/^  GdkColor GSEAL (marked_date_color[31]);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  GdkGC *GSEAL (gc);			\/* unused *\/$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  GdkGC *GSEAL (xor_gc);		\/* unused *\/$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  GtkCalendarDisplayOptions  GSEAL (display_flags);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  GtkCalendarPrivate *GSEAL (priv);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  GtkStyle  *GSEAL (header_style);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  GtkStyle  *GSEAL (label_style);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  gchar GSEAL (grow_space [32]);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  gint GSEAL (day[6][7]);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  gint GSEAL (day_month[6][7]);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  gint GSEAL (focus_col);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  gint GSEAL (focus_row);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  gint GSEAL (highlight_col);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  gint GSEAL (highlight_row);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  gint GSEAL (marked_date[31]);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  gint GSEAL (month);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  gint GSEAL (num_marked_dates);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  gint GSEAL (selected_day);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcalendar.h	/^  gint GSEAL (year);$/;"	p	struct:_GtkCalendar
GSEAL	gtkcellrenderer.h	/^  gfloat GSEAL (xalign);$/;"	p	struct:_GtkCellRenderer
GSEAL	gtkcellrenderer.h	/^  gfloat GSEAL (yalign);$/;"	p	struct:_GtkCellRenderer
GSEAL	gtkcellrenderer.h	/^  gint GSEAL (height);$/;"	p	struct:_GtkCellRenderer
GSEAL	gtkcellrenderer.h	/^  gint GSEAL (width);$/;"	p	struct:_GtkCellRenderer
GSEAL	gtkcellrenderer.h	/^  guint GSEAL (cell_background_set) : 1;$/;"	p	struct:_GtkCellRenderer
GSEAL	gtkcellrenderer.h	/^  guint GSEAL (editing) : 1;$/;"	p	struct:_GtkCellRenderer
GSEAL	gtkcellrenderer.h	/^  guint GSEAL (is_expanded) : 1;$/;"	p	struct:_GtkCellRenderer
GSEAL	gtkcellrenderer.h	/^  guint GSEAL (is_expander) : 1;$/;"	p	struct:_GtkCellRenderer
GSEAL	gtkcellrenderer.h	/^  guint GSEAL (mode) : 2;$/;"	p	struct:_GtkCellRenderer
GSEAL	gtkcellrenderer.h	/^  guint GSEAL (sensitive) : 1;$/;"	p	struct:_GtkCellRenderer
GSEAL	gtkcellrenderer.h	/^  guint GSEAL (visible) : 1;$/;"	p	struct:_GtkCellRenderer
GSEAL	gtkcellrenderer.h	/^  guint16 GSEAL (xpad);$/;"	p	struct:_GtkCellRenderer
GSEAL	gtkcellrenderer.h	/^  guint16 GSEAL (ypad);$/;"	p	struct:_GtkCellRenderer
GSEAL	gtkcellrendereraccel.h	/^  GdkModifierType GSEAL (accel_mods);$/;"	p	struct:_GtkCellRendererAccel
GSEAL	gtkcellrendereraccel.h	/^  GtkCellRendererAccelMode GSEAL (accel_mode);$/;"	p	struct:_GtkCellRendererAccel
GSEAL	gtkcellrendereraccel.h	/^  GtkWidget *GSEAL (edit_widget);$/;"	p	struct:_GtkCellRendererAccel
GSEAL	gtkcellrendereraccel.h	/^  GtkWidget *GSEAL (grab_widget);$/;"	p	struct:_GtkCellRendererAccel
GSEAL	gtkcellrendereraccel.h	/^  GtkWidget *GSEAL (sizing_label);$/;"	p	struct:_GtkCellRendererAccel
GSEAL	gtkcellrendereraccel.h	/^  guint GSEAL (accel_key);$/;"	p	struct:_GtkCellRendererAccel
GSEAL	gtkcellrendereraccel.h	/^  guint GSEAL (keycode);$/;"	p	struct:_GtkCellRendererAccel
GSEAL	gtkcellrenderercombo.h	/^  GtkTreeModel *GSEAL (model);$/;"	p	struct:_GtkCellRendererCombo
GSEAL	gtkcellrenderercombo.h	/^  gboolean      GSEAL (has_entry);$/;"	p	struct:_GtkCellRendererCombo
GSEAL	gtkcellrenderercombo.h	/^  gint          GSEAL (text_column);$/;"	p	struct:_GtkCellRendererCombo
GSEAL	gtkcellrenderercombo.h	/^  guint         GSEAL (focus_out_id);$/;"	p	struct:_GtkCellRendererCombo
GSEAL	gtkcellrendererpixbuf.h	/^  GdkPixbuf *GSEAL (pixbuf);$/;"	p	struct:_GtkCellRendererPixbuf
GSEAL	gtkcellrendererpixbuf.h	/^  GdkPixbuf *GSEAL (pixbuf_expander_closed);$/;"	p	struct:_GtkCellRendererPixbuf
GSEAL	gtkcellrendererpixbuf.h	/^  GdkPixbuf *GSEAL (pixbuf_expander_open);$/;"	p	struct:_GtkCellRendererPixbuf
GSEAL	gtkcellrendererprogress.h	/^  GtkCellRendererProgressPrivate *GSEAL (priv);$/;"	p	struct:_GtkCellRendererProgress
GSEAL	gtkcellrenderertext.h	/^  PangoAttrList *GSEAL (extra_attrs);$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  PangoColor GSEAL (background);$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  PangoColor GSEAL (foreground);$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  PangoFontDescription *GSEAL (font);$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  PangoUnderline GSEAL (underline_style);$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  gchar *GSEAL (text);$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  gdouble GSEAL (font_scale);$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  gint GSEAL (fixed_height_rows);$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  gint GSEAL (rise);$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  guint GSEAL (background_set) : 1;$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  guint GSEAL (calc_fixed_height) : 1;$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  guint GSEAL (editable)  : 1;$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  guint GSEAL (editable_set) : 1;$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  guint GSEAL (foreground_set) : 1;$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  guint GSEAL (rise_set) : 1;$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  guint GSEAL (scale_set) : 1;$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  guint GSEAL (strikethrough) : 1;$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  guint GSEAL (strikethrough_set) : 1;$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertext.h	/^  guint GSEAL (underline_set) : 1;$/;"	p	struct:_GtkCellRendererText
GSEAL	gtkcellrenderertoggle.h	/^  guint GSEAL (activatable) : 1;$/;"	p	struct:_GtkCellRendererToggle
GSEAL	gtkcellrenderertoggle.h	/^  guint GSEAL (active) : 1;$/;"	p	struct:_GtkCellRendererToggle
GSEAL	gtkcellrenderertoggle.h	/^  guint GSEAL (radio) : 1;$/;"	p	struct:_GtkCellRendererToggle
GSEAL	gtkcellview.h	/^  GtkCellViewPrivate *GSEAL (priv);$/;"	p	struct:_GtkCellView
GSEAL	gtkcheckmenuitem.h	/^  guint GSEAL (active) : 1;$/;"	p	struct:_GtkCheckMenuItem
GSEAL	gtkcheckmenuitem.h	/^  guint GSEAL (always_show_toggle) : 1;$/;"	p	struct:_GtkCheckMenuItem
GSEAL	gtkcheckmenuitem.h	/^  guint GSEAL (draw_as_radio) : 1;$/;"	p	struct:_GtkCheckMenuItem
GSEAL	gtkcheckmenuitem.h	/^  guint GSEAL (inconsistent) : 1;$/;"	p	struct:_GtkCheckMenuItem
GSEAL	gtkcolorbutton.h	/^  GtkColorButtonPrivate *GSEAL (priv);$/;"	p	struct:_GtkColorButton
GSEAL	gtkcolorsel.h	/^  gpointer GSEAL (private_data);$/;"	p	struct:_GtkColorSelection
GSEAL	gtkcolorseldialog.h	/^  GtkWidget *GSEAL (cancel_button);$/;"	p	struct:_GtkColorSelectionDialog
GSEAL	gtkcolorseldialog.h	/^  GtkWidget *GSEAL (colorsel);$/;"	p	struct:_GtkColorSelectionDialog
GSEAL	gtkcolorseldialog.h	/^  GtkWidget *GSEAL (help_button);$/;"	p	struct:_GtkColorSelectionDialog
GSEAL	gtkcolorseldialog.h	/^  GtkWidget *GSEAL (ok_button);$/;"	p	struct:_GtkColorSelectionDialog
GSEAL	gtkcombobox.h	/^  GtkComboBoxPrivate *GSEAL (priv);$/;"	p	struct:_GtkComboBox
GSEAL	gtkcomboboxentry.h	/^  GtkComboBoxEntryPrivate *GSEAL (priv);$/;"	p	struct:_GtkComboBoxEntry
GSEAL	gtkcontainer.h	/^  GtkWidget *GSEAL (focus_child);$/;"	p	struct:_GtkContainer
GSEAL	gtkcontainer.h	/^  guint GSEAL (border_width) : 16;$/;"	p	struct:_GtkContainer
GSEAL	gtkcontainer.h	/^  guint GSEAL (has_focus_chain) : 1;$/;"	p	struct:_GtkContainer
GSEAL	gtkcontainer.h	/^  guint GSEAL (need_resize) : 1;$/;"	p	struct:_GtkContainer
GSEAL	gtkcontainer.h	/^  guint GSEAL (reallocate_redraws) : 1;$/;"	p	struct:_GtkContainer
GSEAL	gtkcontainer.h	/^  guint GSEAL (resize_mode) : 2;$/;"	p	struct:_GtkContainer
GSEAL	gtkdialog.h	/^  GtkWidget *GSEAL (action_area);$/;"	p	struct:_GtkDialog
GSEAL	gtkdialog.h	/^  GtkWidget *GSEAL (separator);$/;"	p	struct:_GtkDialog
GSEAL	gtkdialog.h	/^  GtkWidget *GSEAL (vbox);$/;"	p	struct:_GtkDialog
GSEAL	gtkdrawingarea.h	/^  gpointer GSEAL (draw_data);$/;"	p	struct:_GtkDrawingArea
GSEAL	gtkentry.h	/^  GdkWindow    *GSEAL (text_area);$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  GtkIMContext *GSEAL (im_context);$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  GtkWidget    *GSEAL (popup_menu);$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  PangoLayout  *GSEAL (cached_layout);$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  gchar       *GSEAL (text);                        \/* COMPAT: Deprecated, not used. Remove in GTK+ 3.x *\/$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  gint          GSEAL (ascent);	                    \/* font ascent in pango units  *\/$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  gint          GSEAL (current_pos);$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  gint          GSEAL (descent);	            \/* font descent in pango units *\/$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  gint          GSEAL (dnd_position);		    \/* In chars, -1 == no DND cursor *\/$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  gint          GSEAL (drag_start_x);$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  gint          GSEAL (drag_start_y);$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  gint          GSEAL (scroll_offset);$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  gint          GSEAL (selection_bound);$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  gint          GSEAL (width_chars);$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (activates_default)      : 1;$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (blink_timeout);$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (button);$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (cache_includes_preedit) : 1;$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (cursor_visible)         : 1;$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (editing_canceled)       : 1; \/* Only used by GtkCellRendererText *\/ $/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (has_frame)              : 1;$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (in_click)               : 1; \/* Flag so we don't select all when clicking in entry to focus in *\/$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (is_cell_renderer)       : 1;$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (mouse_cursor_obscured)  : 1;$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (need_im_reset)          : 1;$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (recompute_idle);$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (resolved_dir)           : 4; \/* PangoDirection *\/$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (select_lines)           : 1;$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (select_words)           : 1;$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint         GSEAL (truncate_multiline)     : 1;$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint        GSEAL (editable) : 1;$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint        GSEAL (in_drag) : 1;	            \/* FIXME: Should be private?$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint        GSEAL (overwrite_mode) : 1;$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint        GSEAL (visible)  : 1;$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint16       GSEAL (preedit_cursor);	            \/* offset of cursor within preedit string, in chars *\/$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint16       GSEAL (preedit_length);	            \/* length of preedit string, in bytes *\/$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint16       GSEAL (x_n_bytes);	            \/* length in use, in bytes *\/$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint16       GSEAL (x_text_size);	            \/* allocated size, in bytes *\/$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint16      GSEAL (text_length);                 \/* COMPAT: Deprecated, not used. Remove in GTK+ 3.x *\/$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  guint16      GSEAL (text_max_length);             \/* COMPAT: Deprecated, not used. Remove in GTK+ 3.x *\/$/;"	p	struct:_GtkEntry
GSEAL	gtkentry.h	/^  gunichar      GSEAL (invisible_char);$/;"	p	struct:_GtkEntry
GSEAL	gtkentrycompletion.h	/^  GtkEntryCompletionPrivate *GSEAL (priv);$/;"	p	struct:_GtkEntryCompletion
GSEAL	gtkexpander.h	/^  GtkExpanderPrivate *GSEAL (priv);$/;"	p	struct:_GtkExpander
GSEAL	gtkfilechooserbutton.h	/^  GtkFileChooserButtonPrivate *GSEAL (priv);$/;"	p	struct:_GtkFileChooserButton
GSEAL	gtkfilechooserdialog.h	/^  GtkFileChooserDialogPrivate *GSEAL (priv);$/;"	p	struct:_GtkFileChooserDialog
GSEAL	gtkfilechooserwidget.h	/^  GtkFileChooserWidgetPrivate *GSEAL (priv);$/;"	p	struct:_GtkFileChooserWidget
GSEAL	gtkfixed.h	/^  GList *GSEAL (children);$/;"	p	struct:_GtkFixed
GSEAL	gtkfontbutton.h	/^  GtkFontButtonPrivate *GSEAL (priv);$/;"	p	struct:_GtkFontButton
GSEAL	gtkfontsel.h	/^  GdkFont *GSEAL (font);		\/* Cache for gdk_font_selection_get_font, so we can preserve$/;"	p	struct:_GtkFontSelection
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (action_area);   \/* Not wrapped with an API, can use GTK_DIALOG->action_area instead, -mr *\/$/;"	p	struct:_GtkFontSelectionDialog
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (apply_button);$/;"	p	struct:_GtkFontSelectionDialog
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (cancel_button);$/;"	p	struct:_GtkFontSelectionDialog
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (face_list);$/;"	p	struct:_GtkFontSelection
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (family_list);$/;"	p	struct:_GtkFontSelection
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (filter_button);     \/* Unused, -mr *\/$/;"	p	struct:_GtkFontSelection
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (font_entry);        \/* Used _get_family_entry() for consistency, -mr *\/$/;"	p	struct:_GtkFontSelection
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (font_style_entry);  \/* Used _get_face_entry() for consistency, -mr *\/$/;"	p	struct:_GtkFontSelection
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (fontsel);$/;"	p	struct:_GtkFontSelectionDialog
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (main_vbox);     \/* Not wrapped with an API, can use GTK_DIALOG->vbox instead, -mr *\/$/;"	p	struct:_GtkFontSelectionDialog
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (ok_button);$/;"	p	struct:_GtkFontSelectionDialog
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (pixels_button);     \/* Unused, -mr *\/$/;"	p	struct:_GtkFontSelection
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (points_button);     \/* Unused, -mr *\/$/;"	p	struct:_GtkFontSelection
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (preview_entry);$/;"	p	struct:_GtkFontSelection
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (size_entry);$/;"	p	struct:_GtkFontSelection
GSEAL	gtkfontsel.h	/^  GtkWidget *GSEAL (size_list);$/;"	p	struct:_GtkFontSelection
GSEAL	gtkfontsel.h	/^  PangoFontFace *GSEAL (face);		\/* Current face *\/$/;"	p	struct:_GtkFontSelection
GSEAL	gtkfontsel.h	/^  PangoFontFamily *GSEAL (family);	\/* Current family *\/$/;"	p	struct:_GtkFontSelection
GSEAL	gtkfontsel.h	/^  gboolean GSEAL (auto_resize);$/;"	p	struct:_GtkFontSelectionDialog
GSEAL	gtkfontsel.h	/^  gint GSEAL (dialog_width);$/;"	p	struct:_GtkFontSelectionDialog
GSEAL	gtkfontsel.h	/^  gint GSEAL (size);$/;"	p	struct:_GtkFontSelection
GSEAL	gtkframe.h	/^  GtkAllocation GSEAL (child_allocation);$/;"	p	struct:_GtkFrame
GSEAL	gtkframe.h	/^  GtkWidget *GSEAL (label_widget);$/;"	p	struct:_GtkFrame
GSEAL	gtkframe.h	/^  gfloat GSEAL (label_xalign);$/;"	p	struct:_GtkFrame
GSEAL	gtkframe.h	/^  gfloat GSEAL (label_yalign);$/;"	p	struct:_GtkFrame
GSEAL	gtkframe.h	/^  gint16 GSEAL (shadow_type);$/;"	p	struct:_GtkFrame
GSEAL	gtkgamma.h	/^  GtkWidget *GSEAL (button[5]);	\/* spline, linear, free, gamma, reset *\/$/;"	p	struct:_GtkGammaCurve
GSEAL	gtkgamma.h	/^  GtkWidget *GSEAL (curve);$/;"	p	struct:_GtkGammaCurve
GSEAL	gtkgamma.h	/^  GtkWidget *GSEAL (gamma_dialog);$/;"	p	struct:_GtkGammaCurve
GSEAL	gtkgamma.h	/^  GtkWidget *GSEAL (gamma_text);$/;"	p	struct:_GtkGammaCurve
GSEAL	gtkgamma.h	/^  GtkWidget *GSEAL (table);$/;"	p	struct:_GtkGammaCurve
GSEAL	gtkgamma.h	/^  gfloat GSEAL (gamma);$/;"	p	struct:_GtkGammaCurve
GSEAL	gtkhandlebox.h	/^  GdkWindow      *GSEAL (bin_window);	\/* parent window for children *\/$/;"	p	struct:_GtkHandleBox
GSEAL	gtkhandlebox.h	/^  GdkWindow      *GSEAL (float_window);$/;"	p	struct:_GtkHandleBox
GSEAL	gtkhandlebox.h	/^  GtkAllocation   GSEAL (attach_allocation);$/;"	p	struct:_GtkHandleBox
GSEAL	gtkhandlebox.h	/^  GtkAllocation   GSEAL (float_allocation);$/;"	p	struct:_GtkHandleBox
GSEAL	gtkhandlebox.h	/^  GtkShadowType   GSEAL (shadow_type);$/;"	p	struct:_GtkHandleBox
GSEAL	gtkhandlebox.h	/^  gint            GSEAL (deskoff_x); \/* Offset between root relative coords *\/$/;"	p	struct:_GtkHandleBox
GSEAL	gtkhandlebox.h	/^  gint            GSEAL (deskoff_y); \/* and deskrelative coords             *\/$/;"	p	struct:_GtkHandleBox
GSEAL	gtkhandlebox.h	/^  guint           GSEAL (child_detached) : 1;$/;"	p	struct:_GtkHandleBox
GSEAL	gtkhandlebox.h	/^  guint           GSEAL (float_window_mapped) : 1;$/;"	p	struct:_GtkHandleBox
GSEAL	gtkhandlebox.h	/^  guint           GSEAL (handle_position) : 2;$/;"	p	struct:_GtkHandleBox
GSEAL	gtkhandlebox.h	/^  guint           GSEAL (in_drag) : 1;$/;"	p	struct:_GtkHandleBox
GSEAL	gtkhandlebox.h	/^  guint           GSEAL (shrink_on_detach) : 1;$/;"	p	struct:_GtkHandleBox
GSEAL	gtkhsv.h	/^  gpointer GSEAL (priv);$/;"	p	struct:_GtkHSV
GSEAL	gtkiconfactory.h	/^  GHashTable *GSEAL (icons);$/;"	p	struct:_GtkIconFactory
GSEAL	gtkicontheme.h	/^  GtkIconThemePrivate *GSEAL (priv);$/;"	p	struct:_GtkIconTheme
GSEAL	gtkiconview.h	/^  GtkIconViewPrivate *GSEAL (priv);$/;"	p	struct:_GtkIconView
GSEAL	gtkimage.h	/^  GdkBitmap *GSEAL (mask);$/;"	p	struct:_GtkImage
GSEAL	gtkimage.h	/^  GtkIconSize GSEAL (icon_size);$/;"	p	struct:_GtkImage
GSEAL	gtkimage.h	/^  GtkImageType GSEAL (storage_type);$/;"	p	struct:_GtkImage
GSEAL	gtkimage.h	/^  } GSEAL (data);$/;"	p	struct:_GtkImage
GSEAL	gtkimagemenuitem.h	/^  GtkWidget      *GSEAL (image);$/;"	p	struct:_GtkImageMenuItem
GSEAL	gtkimcontextsimple.h	/^  GSList *GSEAL (tables);$/;"	p	struct:_GtkIMContextSimple
GSEAL	gtkimcontextsimple.h	/^  gint GSEAL (tentative_match_len);$/;"	p	struct:_GtkIMContextSimple
GSEAL	gtkimcontextsimple.h	/^  guint GSEAL (compose_buffer[GTK_MAX_COMPOSE_LEN + 1]);$/;"	p	struct:_GtkIMContextSimple
GSEAL	gtkimcontextsimple.h	/^  guint GSEAL (in_hex_sequence) : 1;$/;"	p	struct:_GtkIMContextSimple
GSEAL	gtkimcontextsimple.h	/^  guint GSEAL (modifiers_dropped) : 1;$/;"	p	struct:_GtkIMContextSimple
GSEAL	gtkimcontextsimple.h	/^  gunichar GSEAL (tentative_match);$/;"	p	struct:_GtkIMContextSimple
GSEAL	gtkimmulticontext.h	/^  GtkIMContext *GSEAL (slave);$/;"	p	struct:_GtkIMMulticontext
GSEAL	gtkimmulticontext.h	/^  GtkIMMulticontextPrivate *GSEAL (priv);$/;"	p	struct:_GtkIMMulticontext
GSEAL	gtkimmulticontext.h	/^  gchar *GSEAL (context_id);$/;"	p	struct:_GtkIMMulticontext
GSEAL	gtkinputdialog.h	/^  GdkDevice *GSEAL (current_device);$/;"	p	struct:_GtkInputDialog
GSEAL	gtkinputdialog.h	/^  GtkWidget *GSEAL (axis_items[GDK_AXIS_LAST]);$/;"	p	struct:_GtkInputDialog
GSEAL	gtkinputdialog.h	/^  GtkWidget *GSEAL (axis_list);$/;"	p	struct:_GtkInputDialog
GSEAL	gtkinputdialog.h	/^  GtkWidget *GSEAL (axis_listbox);$/;"	p	struct:_GtkInputDialog
GSEAL	gtkinputdialog.h	/^  GtkWidget *GSEAL (close_button);$/;"	p	struct:_GtkInputDialog
GSEAL	gtkinputdialog.h	/^  GtkWidget *GSEAL (keys_list);$/;"	p	struct:_GtkInputDialog
GSEAL	gtkinputdialog.h	/^  GtkWidget *GSEAL (keys_listbox);$/;"	p	struct:_GtkInputDialog
GSEAL	gtkinputdialog.h	/^  GtkWidget *GSEAL (mode_optionmenu);$/;"	p	struct:_GtkInputDialog
GSEAL	gtkinputdialog.h	/^  GtkWidget *GSEAL (save_button);$/;"	p	struct:_GtkInputDialog
GSEAL	gtkinvisible.h	/^  GdkScreen *GSEAL (screen);$/;"	p	struct:_GtkInvisible
GSEAL	gtkinvisible.h	/^  gboolean   GSEAL (has_user_ref_count);$/;"	p	struct:_GtkInvisible
GSEAL	gtklabel.h	/^  GtkLabelSelectionInfo *GSEAL (select_info);$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  GtkWidget *GSEAL (mnemonic_widget);$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  GtkWindow *GSEAL (mnemonic_window);$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  PangoAttrList *GSEAL (attrs);$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  PangoAttrList *GSEAL (effective_attrs);$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  PangoLayout *GSEAL (layout);$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  gchar  *GSEAL (label);$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  gchar  *GSEAL (text);$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  guint   GSEAL (ellipsize)        : 3;$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  guint   GSEAL (have_transform)   : 1;$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  guint   GSEAL (in_click)         : 1;$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  guint   GSEAL (jtype)            : 2;$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  guint   GSEAL (mnemonic_keyval);$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  guint   GSEAL (pattern_set)      : 1;$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  guint   GSEAL (single_line_mode) : 1;$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  guint   GSEAL (track_links)      : 1;$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  guint   GSEAL (use_markup)       : 1;$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  guint   GSEAL (use_underline)    : 1;$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  guint   GSEAL (wrap)             : 1;$/;"	p	struct:_GtkLabel
GSEAL	gtklabel.h	/^  guint   GSEAL (wrap_mode)        : 3;$/;"	p	struct:_GtkLabel
GSEAL	gtklayout.h	/^  GList *GSEAL (children);$/;"	p	struct:_GtkLayout
GSEAL	gtklayout.h	/^  GdkVisibilityState GSEAL (visibility);$/;"	p	struct:_GtkLayout
GSEAL	gtklayout.h	/^  GdkWindow *GSEAL (bin_window);$/;"	p	struct:_GtkLayout
GSEAL	gtklayout.h	/^  GtkAdjustment *GSEAL (hadjustment);$/;"	p	struct:_GtkLayout
GSEAL	gtklayout.h	/^  GtkAdjustment *GSEAL (vadjustment);$/;"	p	struct:_GtkLayout
GSEAL	gtklayout.h	/^  GtkContainer GSEAL (container);$/;"	p	struct:_GtkLayout
GSEAL	gtklayout.h	/^  gint GSEAL (scroll_x);$/;"	p	struct:_GtkLayout
GSEAL	gtklayout.h	/^  gint GSEAL (scroll_y);$/;"	p	struct:_GtkLayout
GSEAL	gtklayout.h	/^  guint GSEAL (freeze_count);$/;"	p	struct:_GtkLayout
GSEAL	gtklayout.h	/^  guint GSEAL (height);$/;"	p	struct:_GtkLayout
GSEAL	gtklayout.h	/^  guint GSEAL (width);$/;"	p	struct:_GtkLayout
GSEAL	gtklinkbutton.h	/^  GtkLinkButtonPrivate *GSEAL (priv);$/;"	p	struct:_GtkLinkButton
GSEAL	gtkliststore.h	/^  GDestroyNotify GSEAL (default_sort_destroy);$/;"	p	struct:_GtkListStore
GSEAL	gtkliststore.h	/^  GList *GSEAL (sort_list);$/;"	p	struct:_GtkListStore
GSEAL	gtkliststore.h	/^  GType *GSEAL (column_headers);$/;"	p	struct:_GtkListStore
GSEAL	gtkliststore.h	/^  GtkSortType GSEAL (order);$/;"	p	struct:_GtkListStore
GSEAL	gtkliststore.h	/^  GtkTreeIterCompareFunc GSEAL (default_sort_func);$/;"	p	struct:_GtkListStore
GSEAL	gtkliststore.h	/^  gint GSEAL (length);$/;"	p	struct:_GtkListStore
GSEAL	gtkliststore.h	/^  gint GSEAL (n_columns);$/;"	p	struct:_GtkListStore
GSEAL	gtkliststore.h	/^  gint GSEAL (sort_column_id);$/;"	p	struct:_GtkListStore
GSEAL	gtkliststore.h	/^  gint GSEAL (stamp);$/;"	p	struct:_GtkListStore
GSEAL	gtkliststore.h	/^  gpointer GSEAL (_gtk_reserved1);$/;"	p	struct:_GtkListStore
GSEAL	gtkliststore.h	/^  gpointer GSEAL (default_sort_data);$/;"	p	struct:_GtkListStore
GSEAL	gtkliststore.h	/^  gpointer GSEAL (seq);		\/* head of the list *\/$/;"	p	struct:_GtkListStore
GSEAL	gtkliststore.h	/^  guint GSEAL (columns_dirty) : 1;$/;"	p	struct:_GtkListStore
GSEAL	gtkmenu.h	/^  GdkRegion *GSEAL (navigation_region); \/* unused *\/$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  GdkWindow *GSEAL (bin_window);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  GdkWindow *GSEAL (view_window);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  GtkAccelGroup *GSEAL (accel_group);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  GtkAdjustment *GSEAL (tearoff_adjustment);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  GtkMenuPositionFunc GSEAL (position_func);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  GtkMenuShell GSEAL (menu_shell);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  GtkWidget *GSEAL (old_active_menu_item);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  GtkWidget *GSEAL (parent_menu_item);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  GtkWidget *GSEAL (tearoff_hbox);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  GtkWidget *GSEAL (tearoff_scrollbar);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  GtkWidget *GSEAL (tearoff_window);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  GtkWidget *GSEAL (toplevel);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  gchar         *GSEAL (accel_path);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  gint GSEAL (saved_scroll_offset);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  gint GSEAL (scroll_offset);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  gint GSEAL (scroll_step);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  gpointer GSEAL (position_func_data);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  guint GSEAL (lower_arrow_prelight) : 1;$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  guint GSEAL (lower_arrow_visible) : 1;$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  guint GSEAL (navigation_timeout);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  guint GSEAL (needs_destruction_ref_count) : 1;$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  guint GSEAL (scroll_fast) : 1;$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  guint GSEAL (tearoff_active) : 1;$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  guint GSEAL (timeout_id);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  guint GSEAL (toggle_size);$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  guint GSEAL (torn_off) : 1;$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  guint GSEAL (upper_arrow_prelight) : 1;$/;"	p	struct:_GtkMenu
GSEAL	gtkmenu.h	/^  guint GSEAL (upper_arrow_visible) : 1;$/;"	p	struct:_GtkMenu
GSEAL	gtkmenuitem.h	/^  GdkWindow *GSEAL (event_window);$/;"	p	struct:_GtkMenuItem
GSEAL	gtkmenuitem.h	/^  GtkWidget *GSEAL (submenu);$/;"	p	struct:_GtkMenuItem
GSEAL	gtkmenuitem.h	/^  gchar  *GSEAL (accel_path);$/;"	p	struct:_GtkMenuItem
GSEAL	gtkmenuitem.h	/^  guint GSEAL (from_menubar) : 1;$/;"	p	struct:_GtkMenuItem
GSEAL	gtkmenuitem.h	/^  guint GSEAL (right_justify): 1;$/;"	p	struct:_GtkMenuItem
GSEAL	gtkmenuitem.h	/^  guint GSEAL (show_submenu_indicator) : 1;$/;"	p	struct:_GtkMenuItem
GSEAL	gtkmenuitem.h	/^  guint GSEAL (submenu_direction) : 1;$/;"	p	struct:_GtkMenuItem
GSEAL	gtkmenuitem.h	/^  guint GSEAL (submenu_placement) : 1;$/;"	p	struct:_GtkMenuItem
GSEAL	gtkmenuitem.h	/^  guint GSEAL (timer);$/;"	p	struct:_GtkMenuItem
GSEAL	gtkmenuitem.h	/^  guint GSEAL (timer_from_keypress) : 1;$/;"	p	struct:_GtkMenuItem
GSEAL	gtkmenuitem.h	/^  guint16 GSEAL (accelerator_width);$/;"	p	struct:_GtkMenuItem
GSEAL	gtkmenuitem.h	/^  guint16 GSEAL (toggle_size);$/;"	p	struct:_GtkMenuItem
GSEAL	gtkmenushell.h	/^  GList *GSEAL (children);$/;"	p	struct:_GtkMenuShell
GSEAL	gtkmenushell.h	/^  GtkWidget *GSEAL (active_menu_item);$/;"	p	struct:_GtkMenuShell
GSEAL	gtkmenushell.h	/^  GtkWidget *GSEAL (parent_menu_shell);$/;"	p	struct:_GtkMenuShell
GSEAL	gtkmenushell.h	/^  guint GSEAL (active) : 1;$/;"	p	struct:_GtkMenuShell
GSEAL	gtkmenushell.h	/^  guint GSEAL (button);$/;"	p	struct:_GtkMenuShell
GSEAL	gtkmenushell.h	/^  guint GSEAL (have_grab) : 1;$/;"	p	struct:_GtkMenuShell
GSEAL	gtkmenushell.h	/^  guint GSEAL (have_xgrab) : 1;$/;"	p	struct:_GtkMenuShell
GSEAL	gtkmenushell.h	/^  guint GSEAL (ignore_enter) : 1;$/;"	p	struct:_GtkMenuShell
GSEAL	gtkmenushell.h	/^  guint GSEAL (ignore_leave) : 1; \/* unused *\/$/;"	p	struct:_GtkMenuShell
GSEAL	gtkmenushell.h	/^  guint GSEAL (keyboard_mode) : 1;$/;"	p	struct:_GtkMenuShell
GSEAL	gtkmenushell.h	/^  guint GSEAL (menu_flag) : 1;    \/* unused *\/$/;"	p	struct:_GtkMenuShell
GSEAL	gtkmenushell.h	/^  guint32 GSEAL (activate_time);$/;"	p	struct:_GtkMenuShell
GSEAL	gtkmenutoolbutton.h	/^  GtkMenuToolButtonPrivate *GSEAL (priv);$/;"	p	struct:_GtkMenuToolButton
GSEAL	gtkmessagedialog.h	/^  GtkWidget *GSEAL (image);$/;"	p	struct:_GtkMessageDialog
GSEAL	gtkmessagedialog.h	/^  GtkWidget *GSEAL (label);$/;"	p	struct:_GtkMessageDialog
GSEAL	gtkmisc.h	/^  gfloat GSEAL (xalign);$/;"	p	struct:_GtkMisc
GSEAL	gtkmisc.h	/^  gfloat GSEAL (yalign);$/;"	p	struct:_GtkMisc
GSEAL	gtkmisc.h	/^  guint16 GSEAL (xpad);$/;"	p	struct:_GtkMisc
GSEAL	gtkmisc.h	/^  guint16 GSEAL (ypad);$/;"	p	struct:_GtkMisc
GSEAL	gtknotebook.h	/^  GList *GSEAL (children);$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  GList *GSEAL (first_tab);		\/* The first tab visible (for scrolling notebooks) *\/$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  GList *GSEAL (focus_tab);$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  GdkWindow *GSEAL (event_window);$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  GtkNotebookPage *GSEAL (cur_page);$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  GtkWidget *GSEAL (menu);$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  gpointer GSEAL (cur_page);$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (button)             : 2;$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (child_has_focus)    : 1;$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (click_child)        : 3;$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (focus_out)          : 1;	\/* Flag used by ::move-focus-out implementation *\/$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (has_after_next)      : 1;$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (has_after_previous)  : 1;$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (has_before_next)     : 1;$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (has_before_previous) : 1;$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (have_visible_child) : 1;$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (homogeneous)        : 1;$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (in_child)           : 3;$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (need_timer)         : 1;$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (scrollable)         : 1;$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (show_border)        : 1;$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (show_tabs)          : 1;$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint GSEAL (tab_pos)            : 2;$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint16 GSEAL (tab_hborder);$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint16 GSEAL (tab_vborder);$/;"	p	struct:_GtkNotebook
GSEAL	gtknotebook.h	/^  guint32 GSEAL (timer);$/;"	p	struct:_GtkNotebook
GSEAL	gtkobject.h	/^  guint32 GSEAL (flags);$/;"	p	struct:_GtkObject
GSEAL	gtkpaned.h	/^  GdkCursorType GSEAL (cursor_type);$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  GdkGC *GSEAL (xor_gc);$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  GdkRectangle GSEAL (handle_pos);$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  GdkWindow *GSEAL (handle);$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  GtkPanedPrivate *GSEAL (priv);$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  GtkWidget *GSEAL (child1);$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  GtkWidget *GSEAL (child2);$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  GtkWidget *GSEAL (last_child1_focus);$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  GtkWidget *GSEAL (last_child2_focus);$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  gint GSEAL (child1_size);$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  gint GSEAL (drag_pos);$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  gint GSEAL (last_allocation);$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  gint GSEAL (max_position);$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  gint GSEAL (min_position);$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  gint GSEAL (original_position);$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  guint GSEAL (child1_resize) : 1;$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  guint GSEAL (child1_shrink) : 1;$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  guint GSEAL (child2_resize) : 1;$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  guint GSEAL (child2_shrink) : 1;$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  guint GSEAL (handle_prelit) : 1;$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  guint GSEAL (in_drag) : 1;$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  guint GSEAL (in_recursion) : 1;$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  guint GSEAL (orientation) : 1;$/;"	p	struct:_GtkPaned
GSEAL	gtkpaned.h	/^  guint GSEAL (position_set) : 1;$/;"	p	struct:_GtkPaned
GSEAL	gtkplug.h	/^  GHashTable *GSEAL (grabbed_keys);$/;"	p	struct:_GtkPlug
GSEAL	gtkplug.h	/^  GdkWindow *GSEAL (socket_window);$/;"	p	struct:_GtkPlug
GSEAL	gtkplug.h	/^  GtkWidget *GSEAL (modality_window);$/;"	p	struct:_GtkPlug
GSEAL	gtkplug.h	/^  GtkWindowGroup *GSEAL (modality_group);$/;"	p	struct:_GtkPlug
GSEAL	gtkplug.h	/^  guint GSEAL (same_app) : 1;$/;"	p	struct:_GtkPlug
GSEAL	gtkprintoperation.h	/^  GtkPrintOperationPrivate *GSEAL (priv);$/;"	p	struct:_GtkPrintOperation
GSEAL	gtkprogressbar.h	/^  GtkProgressBarOrientation GSEAL (orientation);$/;"	p	struct:_GtkProgressBar
GSEAL	gtkprogressbar.h	/^  GtkProgressBarStyle       GSEAL (bar_style);$/;"	p	struct:_GtkProgressBar
GSEAL	gtkprogressbar.h	/^  gdouble GSEAL (pulse_fraction);$/;"	p	struct:_GtkProgressBar
GSEAL	gtkprogressbar.h	/^  gint  GSEAL (activity_pos);$/;"	p	struct:_GtkProgressBar
GSEAL	gtkprogressbar.h	/^  gint  GSEAL (in_block);$/;"	p	struct:_GtkProgressBar
GSEAL	gtkprogressbar.h	/^  guint GSEAL (activity_blocks);$/;"	p	struct:_GtkProgressBar
GSEAL	gtkprogressbar.h	/^  guint GSEAL (activity_dir) : 1;$/;"	p	struct:_GtkProgressBar
GSEAL	gtkprogressbar.h	/^  guint GSEAL (activity_step);$/;"	p	struct:_GtkProgressBar
GSEAL	gtkprogressbar.h	/^  guint GSEAL (blocks);$/;"	p	struct:_GtkProgressBar
GSEAL	gtkprogressbar.h	/^  guint GSEAL (dirty) : 1;$/;"	p	struct:_GtkProgressBar
GSEAL	gtkprogressbar.h	/^  guint GSEAL (ellipsize) : 3;$/;"	p	struct:_GtkProgressBar
GSEAL	gtkradioaction.h	/^  GtkRadioActionPrivate *GSEAL (private_data);$/;"	p	struct:_GtkRadioAction
GSEAL	gtkradiobutton.h	/^  GSList *GSEAL (group);$/;"	p	struct:_GtkRadioButton
GSEAL	gtkradiomenuitem.h	/^  GSList *GSEAL (group);$/;"	p	struct:_GtkRadioMenuItem
GSEAL	gtkrange.h	/^  GdkRectangle GSEAL (range_rect);$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  GdkWindow *GSEAL (event_window);$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  GtkAdjustment *GSEAL (adjustment);$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  GtkOrientation GSEAL (orientation);$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  GtkRangeLayout *GSEAL (layout);$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  GtkRangeStepTimer *GSEAL (timer);$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  GtkUpdateType GSEAL (update_policy);$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  gint GSEAL (min_slider_size);$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  gint GSEAL (round_digits);$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  gint GSEAL (slide_initial_coordinate);$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  gint GSEAL (slide_initial_slider_position);$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  gint GSEAL (slider_end);$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  gint GSEAL (slider_start);$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  guint GSEAL (flippable) : 1;$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  guint GSEAL (has_stepper_a) : 1;$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  guint GSEAL (has_stepper_b) : 1;$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  guint GSEAL (has_stepper_c) : 1;$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  guint GSEAL (has_stepper_d) : 1;$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  guint GSEAL (inverted) : 1;$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  guint GSEAL (need_recalc) : 1;$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  guint GSEAL (slider_size_fixed) : 1;$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  guint GSEAL (trough_click_forward) : 1;  \/* trough click was on the forward side of slider *\/$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  guint GSEAL (update_pending) : 1;        \/* need to emit value_changed *\/$/;"	p	struct:_GtkRange
GSEAL	gtkrange.h	/^  guint GSEAL (update_timeout_id);$/;"	p	struct:_GtkRange
GSEAL	gtkrecentaction.h	/^  GtkRecentActionPrivate *GSEAL (priv);$/;"	p	struct:_GtkRecentAction
GSEAL	gtkrecentchooserdialog.h	/^  GtkRecentChooserDialogPrivate *GSEAL (priv);$/;"	p	struct:_GtkRecentChooserDialog
GSEAL	gtkrecentchoosermenu.h	/^  GtkRecentChooserMenuPrivate *GSEAL (priv);$/;"	p	struct:_GtkRecentChooserMenu
GSEAL	gtkrecentchooserwidget.h	/^  GtkRecentChooserWidgetPrivate *GSEAL (priv);$/;"	p	struct:_GtkRecentChooserWidget
GSEAL	gtkrecentmanager.h	/^  GtkRecentManagerPrivate *GSEAL (priv);$/;"	p	struct:_GtkRecentManager
GSEAL	gtkruler.h	/^  GdkGC *GSEAL (non_gr_exp_gc);		\/* unused *\/$/;"	p	struct:_GtkRuler
GSEAL	gtkruler.h	/^  GdkPixmap *GSEAL (backing_store);$/;"	p	struct:_GtkRuler
GSEAL	gtkruler.h	/^  GtkRulerMetric *GSEAL (metric);$/;"	p	struct:_GtkRuler
GSEAL	gtkruler.h	/^  gdouble GSEAL (lower);$/;"	p	struct:_GtkRuler
GSEAL	gtkruler.h	/^  gdouble GSEAL (max_size);$/;"	p	struct:_GtkRuler
GSEAL	gtkruler.h	/^  gdouble GSEAL (position);$/;"	p	struct:_GtkRuler
GSEAL	gtkruler.h	/^  gdouble GSEAL (upper);$/;"	p	struct:_GtkRuler
GSEAL	gtkruler.h	/^  gint GSEAL (slider_size);$/;"	p	struct:_GtkRuler
GSEAL	gtkruler.h	/^  gint GSEAL (xsrc);$/;"	p	struct:_GtkRuler
GSEAL	gtkruler.h	/^  gint GSEAL (ysrc);$/;"	p	struct:_GtkRuler
GSEAL	gtkscale.h	/^  gint  GSEAL (digits);$/;"	p	struct:_GtkScale
GSEAL	gtkscale.h	/^  guint GSEAL (draw_value) : 1;$/;"	p	struct:_GtkScale
GSEAL	gtkscale.h	/^  guint GSEAL (value_pos) : 2;$/;"	p	struct:_GtkScale
GSEAL	gtkscalebutton.h	/^  GtkScaleButtonPrivate *GSEAL (priv);$/;"	p	struct:_GtkScaleButton
GSEAL	gtkscalebutton.h	/^  GtkWidget *GSEAL (minus_button);$/;"	p	struct:_GtkScaleButton
GSEAL	gtkscalebutton.h	/^  GtkWidget *GSEAL (plus_button);$/;"	p	struct:_GtkScaleButton
GSEAL	gtkscrolledwindow.h	/^  GtkWidget *GSEAL (hscrollbar);$/;"	p	struct:_GtkScrolledWindow
GSEAL	gtkscrolledwindow.h	/^  GtkWidget *GSEAL (vscrollbar);$/;"	p	struct:_GtkScrolledWindow
GSEAL	gtkscrolledwindow.h	/^  guint GSEAL (focus_out)              : 1;	\/* Flag used by ::move-focus-out implementation *\/$/;"	p	struct:_GtkScrolledWindow
GSEAL	gtkscrolledwindow.h	/^  guint GSEAL (hscrollbar_policy)      : 2;$/;"	p	struct:_GtkScrolledWindow
GSEAL	gtkscrolledwindow.h	/^  guint GSEAL (hscrollbar_visible)     : 1;$/;"	p	struct:_GtkScrolledWindow
GSEAL	gtkscrolledwindow.h	/^  guint GSEAL (vscrollbar_policy)      : 2;$/;"	p	struct:_GtkScrolledWindow
GSEAL	gtkscrolledwindow.h	/^  guint GSEAL (vscrollbar_visible)     : 1;$/;"	p	struct:_GtkScrolledWindow
GSEAL	gtkscrolledwindow.h	/^  guint GSEAL (window_placement)       : 2;$/;"	p	struct:_GtkScrolledWindow
GSEAL	gtkscrolledwindow.h	/^  guint16 GSEAL (shadow_type);$/;"	p	struct:_GtkScrolledWindow
GSEAL	gtkselection.h	/^  GdkAtom       GSEAL (selection);$/;"	p	struct:_GtkSelectionData
GSEAL	gtkselection.h	/^  GdkAtom       GSEAL (target);$/;"	p	struct:_GtkSelectionData
GSEAL	gtkselection.h	/^  GdkAtom       GSEAL (type);$/;"	p	struct:_GtkSelectionData
GSEAL	gtkselection.h	/^  GdkDisplay   *GSEAL (display);$/;"	p	struct:_GtkSelectionData
GSEAL	gtkselection.h	/^  gint          GSEAL (format);$/;"	p	struct:_GtkSelectionData
GSEAL	gtkselection.h	/^  gint          GSEAL (length);$/;"	p	struct:_GtkSelectionData
GSEAL	gtkselection.h	/^  guchar       *GSEAL (data);$/;"	p	struct:_GtkSelectionData
GSEAL	gtkseparatortoolitem.h	/^  GtkSeparatorToolItemPrivate *GSEAL (priv);$/;"	p	struct:_GtkSeparatorToolItem
GSEAL	gtksettings.h	/^  GData  *GSEAL (queued_settings);	\/* of type GtkSettingsValue* *\/$/;"	p	struct:_GtkSettings
GSEAL	gtksettings.h	/^  GdkScreen    *GSEAL (screen);$/;"	p	struct:_GtkSettings
GSEAL	gtksettings.h	/^  GtkRcContext *GSEAL (rc_context);$/;"	p	struct:_GtkSettings
GSEAL	gtksettings.h	/^  GtkSettingsPropertyValue *GSEAL (property_values);$/;"	p	struct:_GtkSettings
GSEAL	gtksizegroup.h	/^  GSList *GSEAL (widgets);$/;"	p	struct:_GtkSizeGroup
GSEAL	gtksizegroup.h	/^  GtkRequisition GSEAL (requisition);$/;"	p	struct:_GtkSizeGroup
GSEAL	gtksizegroup.h	/^  guint GSEAL (have_height) : 1;$/;"	p	struct:_GtkSizeGroup
GSEAL	gtksizegroup.h	/^  guint GSEAL (have_width) : 1;$/;"	p	struct:_GtkSizeGroup
GSEAL	gtksizegroup.h	/^  guint GSEAL (ignore_hidden) : 1;$/;"	p	struct:_GtkSizeGroup
GSEAL	gtksizegroup.h	/^  guint8 GSEAL (mode);$/;"	p	struct:_GtkSizeGroup
GSEAL	gtksocket.h	/^  GdkWindow *GSEAL (plug_window);$/;"	p	struct:_GtkSocket
GSEAL	gtksocket.h	/^  GtkAccelGroup *GSEAL (accel_group);$/;"	p	struct:_GtkSocket
GSEAL	gtksocket.h	/^  GtkWidget *GSEAL (plug_widget);$/;"	p	struct:_GtkSocket
GSEAL	gtksocket.h	/^  GtkWidget *GSEAL (toplevel);$/;"	p	struct:_GtkSocket
GSEAL	gtksocket.h	/^  gshort GSEAL (xembed_version); \/* -1 == not xembed *\/$/;"	p	struct:_GtkSocket
GSEAL	gtksocket.h	/^  guint GSEAL (active) : 1;$/;"	p	struct:_GtkSocket
GSEAL	gtksocket.h	/^  guint GSEAL (focus_in) : 1;$/;"	p	struct:_GtkSocket
GSEAL	gtksocket.h	/^  guint GSEAL (have_size) : 1;$/;"	p	struct:_GtkSocket
GSEAL	gtksocket.h	/^  guint GSEAL (is_mapped) : 1;$/;"	p	struct:_GtkSocket
GSEAL	gtksocket.h	/^  guint GSEAL (need_map) : 1;$/;"	p	struct:_GtkSocket
GSEAL	gtksocket.h	/^  guint GSEAL (same_app) : 1;$/;"	p	struct:_GtkSocket
GSEAL	gtksocket.h	/^  guint16 GSEAL (current_height);$/;"	p	struct:_GtkSocket
GSEAL	gtksocket.h	/^  guint16 GSEAL (current_width);$/;"	p	struct:_GtkSocket
GSEAL	gtksocket.h	/^  guint16 GSEAL (request_height);$/;"	p	struct:_GtkSocket
GSEAL	gtksocket.h	/^  guint16 GSEAL (request_width);$/;"	p	struct:_GtkSocket
GSEAL	gtkspinbutton.h	/^  GdkWindow *GSEAL (panel);$/;"	p	struct:_GtkSpinButton
GSEAL	gtkspinbutton.h	/^  GtkAdjustment *GSEAL (adjustment);$/;"	p	struct:_GtkSpinButton
GSEAL	gtkspinbutton.h	/^  GtkSpinButtonUpdatePolicy GSEAL (update_policy);$/;"	p	struct:_GtkSpinButton
GSEAL	gtkspinbutton.h	/^  gdouble GSEAL (climb_rate);$/;"	p	struct:_GtkSpinButton
GSEAL	gtkspinbutton.h	/^  gdouble GSEAL (timer_step);$/;"	p	struct:_GtkSpinButton
GSEAL	gtkspinbutton.h	/^  guint GSEAL (button) : 2;$/;"	p	struct:_GtkSpinButton
GSEAL	gtkspinbutton.h	/^  guint GSEAL (click_child) : 2; \/* valid: GTK_ARROW_UP=0, GTK_ARROW_DOWN=1 or 2=NONE\/BOTH *\/$/;"	p	struct:_GtkSpinButton
GSEAL	gtkspinbutton.h	/^  guint GSEAL (digits) : 10;$/;"	p	struct:_GtkSpinButton
GSEAL	gtkspinbutton.h	/^  guint GSEAL (in_child) : 2;$/;"	p	struct:_GtkSpinButton
GSEAL	gtkspinbutton.h	/^  guint GSEAL (need_timer) : 1;$/;"	p	struct:_GtkSpinButton
GSEAL	gtkspinbutton.h	/^  guint GSEAL (numeric) : 1;$/;"	p	struct:_GtkSpinButton
GSEAL	gtkspinbutton.h	/^  guint GSEAL (snap_to_ticks) : 1;$/;"	p	struct:_GtkSpinButton
GSEAL	gtkspinbutton.h	/^  guint GSEAL (timer_calls) : 3;$/;"	p	struct:_GtkSpinButton
GSEAL	gtkspinbutton.h	/^  guint GSEAL (wrap) : 1;$/;"	p	struct:_GtkSpinButton
GSEAL	gtkspinbutton.h	/^  guint32 GSEAL (timer);$/;"	p	struct:_GtkSpinButton
GSEAL	gtkstatusbar.h	/^  GSList *GSEAL (keys);$/;"	p	struct:_GtkStatusbar
GSEAL	gtkstatusbar.h	/^  GSList *GSEAL (messages);$/;"	p	struct:_GtkStatusbar
GSEAL	gtkstatusbar.h	/^  GdkWindow *GSEAL (grip_window);$/;"	p	struct:_GtkStatusbar
GSEAL	gtkstatusbar.h	/^  GtkWidget *GSEAL (frame);$/;"	p	struct:_GtkStatusbar
GSEAL	gtkstatusbar.h	/^  GtkWidget *GSEAL (label);$/;"	p	struct:_GtkStatusbar
GSEAL	gtkstatusbar.h	/^  guint GSEAL (has_resize_grip) : 1;$/;"	p	struct:_GtkStatusbar
GSEAL	gtkstatusbar.h	/^  guint GSEAL (seq_context_id);$/;"	p	struct:_GtkStatusbar
GSEAL	gtkstatusbar.h	/^  guint GSEAL (seq_message_id);$/;"	p	struct:_GtkStatusbar
GSEAL	gtkstatusicon.h	/^  GtkStatusIconPrivate *GSEAL (priv);$/;"	p	struct:_GtkStatusIcon
GSEAL	gtktable.h	/^  GList *GSEAL (children);$/;"	p	struct:_GtkTable
GSEAL	gtktable.h	/^  GtkTableRowCol *GSEAL (cols);$/;"	p	struct:_GtkTable
GSEAL	gtktable.h	/^  GtkTableRowCol *GSEAL (rows);$/;"	p	struct:_GtkTable
GSEAL	gtktable.h	/^  guint GSEAL (homogeneous) : 1;$/;"	p	struct:_GtkTable
GSEAL	gtktable.h	/^  guint16 GSEAL (column_spacing);$/;"	p	struct:_GtkTable
GSEAL	gtktable.h	/^  guint16 GSEAL (ncols);$/;"	p	struct:_GtkTable
GSEAL	gtktable.h	/^  guint16 GSEAL (nrows);$/;"	p	struct:_GtkTable
GSEAL	gtktable.h	/^  guint16 GSEAL (row_spacing);$/;"	p	struct:_GtkTable
GSEAL	gtktearoffmenuitem.h	/^  guint GSEAL (torn_off) : 1;$/;"	p	struct:_GtkTearoffMenuItem
GSEAL	gtktextbuffer.h	/^  GSList *GSEAL (clipboard_contents_buffers);$/;"	p	struct:_GtkTextBuffer
GSEAL	gtktextbuffer.h	/^  GSList *GSEAL (selection_clipboards);$/;"	p	struct:_GtkTextBuffer
GSEAL	gtktextbuffer.h	/^  GtkTextBTree *GSEAL (btree);$/;"	p	struct:_GtkTextBuffer
GSEAL	gtktextbuffer.h	/^  GtkTextLogAttrCache *GSEAL (log_attr_cache);$/;"	p	struct:_GtkTextBuffer
GSEAL	gtktextbuffer.h	/^  GtkTextTagTable *GSEAL (tag_table);$/;"	p	struct:_GtkTextBuffer
GSEAL	gtktextbuffer.h	/^  guint GSEAL (has_selection) : 1;$/;"	p	struct:_GtkTextBuffer
GSEAL	gtktextbuffer.h	/^  guint GSEAL (modified) : 1;$/;"	p	struct:_GtkTextBuffer
GSEAL	gtktextbuffer.h	/^  guint GSEAL (user_action_count);$/;"	p	struct:_GtkTextBuffer
GSEAL	gtktextchild.h	/^  gpointer GSEAL (segment);$/;"	p	struct:_GtkTextChildAnchor
GSEAL	gtktextmark.h	/^  gpointer GSEAL (segment);$/;"	p	struct:_GtkTextMark
GSEAL	gtktexttag.h	/^  GtkTextAttributes *GSEAL (values);$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  GtkTextTagTable *GSEAL (table);$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  char *GSEAL (name);           \/* Name of this tag.  This field is actually$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (accumulative_margin) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (bg_color_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (bg_full_height_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (bg_stipple_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (editable_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (fg_color_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (fg_stipple_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (indent_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (invisible_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (justification_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (language_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (left_margin_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (pad1) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (pg_bg_color_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (pixels_above_lines_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (pixels_below_lines_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (pixels_inside_wrap_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (right_margin_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (rise_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (scale_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (strikethrough_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (tabs_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (underline_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  guint GSEAL (wrap_mode_set) : 1;$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttag.h	/^  int GSEAL (priority);  \/* Priority of this tag within widget.  0$/;"	p	struct:_GtkTextTag
GSEAL	gtktexttagtable.h	/^  GHashTable *GSEAL (hash);$/;"	p	struct:_GtkTextTagTable
GSEAL	gtktexttagtable.h	/^  GSList *GSEAL (anonymous);$/;"	p	struct:_GtkTextTagTable
GSEAL	gtktexttagtable.h	/^  GSList *GSEAL (buffers);$/;"	p	struct:_GtkTextTagTable
GSEAL	gtktexttagtable.h	/^  gint GSEAL (anon_count);$/;"	p	struct:_GtkTextTagTable
GSEAL	gtktextview.h	/^  GSList *GSEAL (children);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  GtkAdjustment *GSEAL (hadjustment);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  GtkAdjustment *GSEAL (vadjustment);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  GtkIMContext *GSEAL (im_context);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  GtkJustification GSEAL (justify);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  GtkTextBuffer *GSEAL (buffer);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  GtkTextMark *GSEAL (dnd_mark);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  GtkTextMark *GSEAL (first_para_mark); \/* Mark at the beginning of the first onscreen paragraph *\/$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  GtkTextPendingScroll *GSEAL (pending_scroll);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  GtkTextWindow *GSEAL (bottom_window);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  GtkTextWindow *GSEAL (left_window);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  GtkTextWindow *GSEAL (right_window);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  GtkTextWindow *GSEAL (text_window);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  GtkTextWindow *GSEAL (top_window);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  GtkWidget *GSEAL (popup_menu);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  GtkWrapMode GSEAL (wrap_mode);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  PangoTabArray *GSEAL (tabs);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (drag_start_x);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (drag_start_y);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (first_para_pixels);       \/* Offset of top of screen in the first onscreen paragraph *\/$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (height);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (indent);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (left_margin);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (pending_place_cursor_button);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (pixels_above_lines);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (pixels_below_lines);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (pixels_inside_wrap);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (right_margin);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (virtual_cursor_x);   \/* -1 means use actual cursor position *\/$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (virtual_cursor_y);   \/* -1 means use actual cursor position *\/$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (width);           \/* Width and height of the buffer *\/$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (xoffset);         \/* Offsets between widget coordinates and buffer coordinates *\/$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  gint GSEAL (yoffset);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  guint GSEAL (accepts_tab) : 1;$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  guint GSEAL (blink_timeout);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  guint GSEAL (cursor_visible) : 1;$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  guint GSEAL (editable) : 1;$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  guint GSEAL (first_validate_idle);        \/* Idle to revalidate onscreen portion, runs before resize *\/$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  guint GSEAL (incremental_validate_idle);  \/* Idle to revalidate offscreen portions, runs after redraw *\/$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  guint GSEAL (mouse_cursor_obscured) : 1;$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  guint GSEAL (need_im_reset) : 1;$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  guint GSEAL (onscreen_validated) : 1;$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  guint GSEAL (overwrite_mode) : 1;$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  guint GSEAL (scroll_timeout);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  guint GSEAL (selection_drag_handler);$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  guint GSEAL (width_changed) : 1;$/;"	p	struct:_GtkTextView
GSEAL	gtktextview.h	/^  struct _GtkTextLayout *GSEAL (layout);$/;"	p	struct:_GtkTextView
GSEAL	gtktoggleaction.h	/^  GtkToggleActionPrivate *GSEAL (private_data);$/;"	p	struct:_GtkToggleAction
GSEAL	gtktogglebutton.h	/^  guint GSEAL (active) : 1;$/;"	p	struct:_GtkToggleButton
GSEAL	gtktogglebutton.h	/^  guint GSEAL (draw_indicator) : 1;$/;"	p	struct:_GtkToggleButton
GSEAL	gtktogglebutton.h	/^  guint GSEAL (inconsistent) : 1;$/;"	p	struct:_GtkToggleButton
GSEAL	gtktoggletoolbutton.h	/^  GtkToggleToolButtonPrivate *GSEAL (priv);$/;"	p	struct:_GtkToggleToolButton
GSEAL	gtktoolbar.h	/^  GList           *GSEAL (children);$/;"	p	struct:_GtkToolbar
GSEAL	gtktoolbar.h	/^  GtkIconSize      GSEAL (icon_size);$/;"	p	struct:_GtkToolbar
GSEAL	gtktoolbar.h	/^  GtkOrientation   GSEAL (orientation);$/;"	p	struct:_GtkToolbar
GSEAL	gtktoolbar.h	/^  GtkToolbarStyle  GSEAL (style);$/;"	p	struct:_GtkToolbar
GSEAL	gtktoolbar.h	/^  GtkTooltips     *GSEAL (tooltips);$/;"	p	struct:_GtkToolbar
GSEAL	gtktoolbar.h	/^  gint             GSEAL (button_maxh);		\/* maximum height of homogeneous children *\/$/;"	p	struct:_GtkToolbar
GSEAL	gtktoolbar.h	/^  gint             GSEAL (button_maxw);		\/* maximum width of homogeneous children *\/$/;"	p	struct:_GtkToolbar
GSEAL	gtktoolbar.h	/^  gint             GSEAL (num_children);$/;"	p	struct:_GtkToolbar
GSEAL	gtktoolbar.h	/^  gpointer         GSEAL (_tooltips);$/;"	p	struct:_GtkToolbar
GSEAL	gtktoolbar.h	/^  guint            GSEAL (icon_size_set) : 1;$/;"	p	struct:_GtkToolbar
GSEAL	gtktoolbar.h	/^  guint            GSEAL (style_set) : 1;$/;"	p	struct:_GtkToolbar
GSEAL	gtktoolbutton.h	/^  GtkToolButtonPrivate *GSEAL (priv);$/;"	p	struct:_GtkToolButton
GSEAL	gtktoolitem.h	/^  GtkToolItemPrivate *GSEAL (priv);$/;"	p	struct:_GtkToolItem
GSEAL	gtktreemodelfilter.h	/^  GtkTreeModelFilterPrivate *GSEAL (priv);$/;"	p	struct:_GtkTreeModelFilter
GSEAL	gtktreemodelsort.h	/^  GDestroyNotify GSEAL (default_sort_destroy);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreemodelsort.h	/^  GList *GSEAL (sort_list);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreemodelsort.h	/^  GtkSortType GSEAL (order);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreemodelsort.h	/^  GtkTreeIterCompareFunc GSEAL (default_sort_func);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreemodelsort.h	/^  GtkTreeModel *GSEAL (child_model);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreemodelsort.h	/^  gint GSEAL (sort_column_id);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreemodelsort.h	/^  gint GSEAL (stamp);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreemodelsort.h	/^  gint GSEAL (zero_ref_count);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreemodelsort.h	/^  gpointer GSEAL (default_sort_data);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreemodelsort.h	/^  gpointer GSEAL (root);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreemodelsort.h	/^  guint GSEAL (changed_id);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreemodelsort.h	/^  guint GSEAL (child_flags);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreemodelsort.h	/^  guint GSEAL (deleted_id);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreemodelsort.h	/^  guint GSEAL (has_child_toggled_id);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreemodelsort.h	/^  guint GSEAL (inserted_id);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreemodelsort.h	/^  guint GSEAL (reordered_id);$/;"	p	struct:_GtkTreeModelSort
GSEAL	gtktreeselection.h	/^  GDestroyNotify GSEAL (destroy);$/;"	p	struct:_GtkTreeSelection
GSEAL	gtktreeselection.h	/^  GtkSelectionMode GSEAL (type);$/;"	p	struct:_GtkTreeSelection
GSEAL	gtktreeselection.h	/^  GtkTreeSelectionFunc GSEAL (user_func);$/;"	p	struct:_GtkTreeSelection
GSEAL	gtktreeselection.h	/^  GtkTreeView *GSEAL (tree_view);$/;"	p	struct:_GtkTreeSelection
GSEAL	gtktreeselection.h	/^  gpointer GSEAL (user_data);$/;"	p	struct:_GtkTreeSelection
GSEAL	gtktreestore.h	/^  GDestroyNotify GSEAL (default_sort_destroy);$/;"	p	struct:_GtkTreeStore
GSEAL	gtktreestore.h	/^  GList *GSEAL (sort_list);$/;"	p	struct:_GtkTreeStore
GSEAL	gtktreestore.h	/^  GType *GSEAL (column_headers);$/;"	p	struct:_GtkTreeStore
GSEAL	gtktreestore.h	/^  GtkSortType GSEAL (order);$/;"	p	struct:_GtkTreeStore
GSEAL	gtktreestore.h	/^  GtkTreeIterCompareFunc GSEAL (default_sort_func);$/;"	p	struct:_GtkTreeStore
GSEAL	gtktreestore.h	/^  gint GSEAL (n_columns);$/;"	p	struct:_GtkTreeStore
GSEAL	gtktreestore.h	/^  gint GSEAL (sort_column_id);$/;"	p	struct:_GtkTreeStore
GSEAL	gtktreestore.h	/^  gint GSEAL (stamp);$/;"	p	struct:_GtkTreeStore
GSEAL	gtktreestore.h	/^  gpointer GSEAL (default_sort_data);$/;"	p	struct:_GtkTreeStore
GSEAL	gtktreestore.h	/^  gpointer GSEAL (last);$/;"	p	struct:_GtkTreeStore
GSEAL	gtktreestore.h	/^  gpointer GSEAL (root);$/;"	p	struct:_GtkTreeStore
GSEAL	gtktreestore.h	/^  guint GSEAL (columns_dirty) : 1;$/;"	p	struct:_GtkTreeStore
GSEAL	gtktreeview.h	/^  GtkTreeViewPrivate *GSEAL (priv);$/;"	p	struct:_GtkTreeView
GSEAL	gtktreeviewcolumn.h	/^  GList *GSEAL (cell_list);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  GdkWindow *GSEAL (window);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  GtkCellEditable *GSEAL (editable_widget);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  GtkSortType GSEAL (sort_order);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  GtkTreeViewColumnSizing GSEAL (column_type);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  GtkWidget *GSEAL (alignment);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  GtkWidget *GSEAL (arrow);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  GtkWidget *GSEAL (button);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  GtkWidget *GSEAL (child);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  GtkWidget *GSEAL (tree_view);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  gchar *GSEAL (title);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  gfloat GSEAL (xalign);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  gint GSEAL (button_request);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  gint GSEAL (drag_x);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  gint GSEAL (drag_y);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  gint GSEAL (fixed_width);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  gint GSEAL (max_width);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  gint GSEAL (min_width);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  gint GSEAL (requested_width);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  gint GSEAL (resized_width);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  gint GSEAL (sort_column_id);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  gint GSEAL (spacing);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  gint GSEAL (width);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  guint GSEAL (clickable)           : 1;$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  guint GSEAL (dirty)               : 1;$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  guint GSEAL (expand)              : 1;$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  guint GSEAL (maybe_reordered)     : 1;$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  guint GSEAL (property_changed_signal);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  guint GSEAL (reorderable)         : 1;$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  guint GSEAL (resizable)           : 1;$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  guint GSEAL (show_sort_indicator) : 1;$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  guint GSEAL (sort_clicked_signal);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  guint GSEAL (sort_column_changed_signal);$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  guint GSEAL (use_resized_width)   : 1;$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtktreeviewcolumn.h	/^  guint GSEAL (visible)             : 1;$/;"	p	struct:_GtkTreeViewColumn
GSEAL	gtkuimanager.h	/^  GtkUIManagerPrivate *GSEAL (private_data);$/;"	p	struct:_GtkUIManager
GSEAL	gtkviewport.h	/^  GdkWindow *GSEAL (bin_window);$/;"	p	struct:_GtkViewport
GSEAL	gtkviewport.h	/^  GdkWindow *GSEAL (view_window);$/;"	p	struct:_GtkViewport
GSEAL	gtkviewport.h	/^  GtkAdjustment *GSEAL (hadjustment);$/;"	p	struct:_GtkViewport
GSEAL	gtkviewport.h	/^  GtkAdjustment *GSEAL (vadjustment);$/;"	p	struct:_GtkViewport
GSEAL	gtkviewport.h	/^  GtkShadowType GSEAL (shadow_type);$/;"	p	struct:_GtkViewport
GSEAL	gtkwidget.h	/^  GdkWindow *GSEAL (window);$/;"	p	struct:_GtkWidget
GSEAL	gtkwidget.h	/^  GtkAllocation GSEAL (allocation);$/;"	p	struct:_GtkWidget
GSEAL	gtkwidget.h	/^  GtkRequisition GSEAL (requisition);$/;"	p	struct:_GtkWidget
GSEAL	gtkwidget.h	/^  GtkStyle *GSEAL (style);$/;"	p	struct:_GtkWidget
GSEAL	gtkwidget.h	/^  GtkWidget *GSEAL (parent);$/;"	p	struct:_GtkWidget
GSEAL	gtkwidget.h	/^  gchar *GSEAL (name);$/;"	p	struct:_GtkWidget
GSEAL	gtkwidget.h	/^  guint16 GSEAL (private_flags);$/;"	p	struct:_GtkWidget
GSEAL	gtkwidget.h	/^  guint8 GSEAL (saved_state);$/;"	p	struct:_GtkWidget
GSEAL	gtkwidget.h	/^  guint8 GSEAL (state);$/;"	p	struct:_GtkWidget
GSEAL	gtkwindow.h	/^  GSList *GSEAL (grabs);$/;"	p	struct:_GtkWindowGroup
GSEAL	gtkwindow.h	/^  GdkModifierType GSEAL (mnemonic_modifier);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  GdkScreen      *GSEAL (screen);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  GdkWindow *GSEAL (frame);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  GtkWidget *GSEAL (default_widget);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  GtkWidget *GSEAL (focus_widget);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  GtkWindow *GSEAL (transient_parent);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  GtkWindowGeometryInfo *GSEAL (geometry_info);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  GtkWindowGroup *GSEAL (group);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  gchar *GSEAL (title);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  gchar *GSEAL (wm_role);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  gchar *GSEAL (wmclass_class);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  gchar *GSEAL (wmclass_name);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (allow_grow) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (allow_shrink) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (configure_notify_received) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (decorated) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (destroy_with_parent) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (frame_bottom);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (frame_left);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (frame_right);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (frame_top);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (gravity) : 5; \/* GdkGravity *\/$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (has_focus) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (has_frame) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (has_toplevel_focus) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (has_user_ref_count) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (iconify_initially) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (is_active) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (keys_changed_handler);$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (maximize_initially) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (modal) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (need_default_position) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (need_default_size) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (position) : 3;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (stick_initially) : 1;$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (type) : 4; \/* GtkWindowType *\/ $/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint GSEAL (type_hint) : 3; \/* GdkWindowTypeHint if the hint is one of the original eight. If not, then$/;"	p	struct:_GtkWindow
GSEAL	gtkwindow.h	/^  guint16 GSEAL (configure_request_count);$/;"	p	struct:_GtkWindow
GTKMAIN_C_VAR	gtkmain.h	70;"	d
GTKMAIN_C_VAR	gtkmain.h	72;"	d
GTKMAIN_C_VAR	gtkmain.h	75;"	d
GTKVAR	gtkdebug.h	67;"	d
GTKVAR	gtkdebug.h	69;"	d
GTKVAR	gtkdebug.h	72;"	d
GTK_ABOUT_DIALOG	gtkaboutdialog.h	37;"	d
GTK_ABOUT_DIALOG_CLASS	gtkaboutdialog.h	38;"	d
GTK_ABOUT_DIALOG_GET_CLASS	gtkaboutdialog.h	41;"	d
GTK_ACCEL_GROUP	gtkaccelgroup.h	43;"	d
GTK_ACCEL_GROUP_CLASS	gtkaccelgroup.h	44;"	d
GTK_ACCEL_GROUP_GET_CLASS	gtkaccelgroup.h	47;"	d
GTK_ACCEL_LABEL	gtkaccellabel.h	44;"	d
GTK_ACCEL_LABEL_CLASS	gtkaccellabel.h	45;"	d
GTK_ACCEL_LABEL_GET_CLASS	gtkaccellabel.h	48;"	d
GTK_ACCEL_LOCKED	gtkaccelgroup.h	/^  GTK_ACCEL_LOCKED         = 1 << 1,	\/* is it removable? *\/$/;"	e	enum:__anon100
GTK_ACCEL_MAP	gtkaccelmap.h	34;"	d
GTK_ACCEL_MAP_CLASS	gtkaccelmap.h	35;"	d
GTK_ACCEL_MAP_GET_CLASS	gtkaccelmap.h	38;"	d
GTK_ACCEL_MASK	gtkaccelgroup.h	/^  GTK_ACCEL_MASK           = 0x07$/;"	e	enum:__anon100
GTK_ACCEL_VISIBLE	gtkaccelgroup.h	/^  GTK_ACCEL_VISIBLE        = 1 << 0,	\/* display in GtkAccelLabel? *\/$/;"	e	enum:__anon100
GTK_ACCESSIBLE	gtkaccessible.h	33;"	d
GTK_ACCESSIBLE_CLASS	gtkaccessible.h	34;"	d
GTK_ACCESSIBLE_GET_CLASS	gtkaccessible.h	37;"	d
GTK_ACTION	gtkaction.h	43;"	d
GTK_ACTION_CLASS	gtkaction.h	44;"	d
GTK_ACTION_GET_CLASS	gtkaction.h	47;"	d
GTK_ACTION_GROUP	gtkactiongroup.h	44;"	d
GTK_ACTION_GROUP_CLASS	gtkactiongroup.h	45;"	d
GTK_ACTION_GROUP_GET_CLASS	gtkactiongroup.h	48;"	d
GTK_ACTIVATABLE	gtkactivatable.h	33;"	d
GTK_ACTIVATABLE_CLASS	gtkactivatable.h	34;"	d
GTK_ACTIVATABLE_GET_IFACE	gtkactivatable.h	36;"	d
GTK_ADJUSTMENT	gtkadjustment.h	41;"	d
GTK_ADJUSTMENT_CLASS	gtkadjustment.h	42;"	d
GTK_ADJUSTMENT_GET_CLASS	gtkadjustment.h	45;"	d
GTK_ALIGNMENT	gtkalignment.h	41;"	d
GTK_ALIGNMENT_CLASS	gtkalignment.h	42;"	d
GTK_ALIGNMENT_GET_CLASS	gtkalignment.h	45;"	d
GTK_ANCHOR_CENTER	gtkenums.h	/^  GTK_ANCHOR_CENTER,$/;"	e	enum:__anon12
GTK_ANCHOR_E	gtkenums.h	/^  GTK_ANCHOR_E		= GTK_ANCHOR_EAST$/;"	e	enum:__anon12
GTK_ANCHOR_EAST	gtkenums.h	/^  GTK_ANCHOR_EAST,$/;"	e	enum:__anon12
GTK_ANCHOR_N	gtkenums.h	/^  GTK_ANCHOR_N		= GTK_ANCHOR_NORTH,$/;"	e	enum:__anon12
GTK_ANCHOR_NE	gtkenums.h	/^  GTK_ANCHOR_NE		= GTK_ANCHOR_NORTH_EAST,$/;"	e	enum:__anon12
GTK_ANCHOR_NORTH	gtkenums.h	/^  GTK_ANCHOR_NORTH,$/;"	e	enum:__anon12
GTK_ANCHOR_NORTH_EAST	gtkenums.h	/^  GTK_ANCHOR_NORTH_EAST,$/;"	e	enum:__anon12
GTK_ANCHOR_NORTH_WEST	gtkenums.h	/^  GTK_ANCHOR_NORTH_WEST,$/;"	e	enum:__anon12
GTK_ANCHOR_NW	gtkenums.h	/^  GTK_ANCHOR_NW		= GTK_ANCHOR_NORTH_WEST,$/;"	e	enum:__anon12
GTK_ANCHOR_S	gtkenums.h	/^  GTK_ANCHOR_S		= GTK_ANCHOR_SOUTH,$/;"	e	enum:__anon12
GTK_ANCHOR_SE	gtkenums.h	/^  GTK_ANCHOR_SE		= GTK_ANCHOR_SOUTH_EAST,$/;"	e	enum:__anon12
GTK_ANCHOR_SOUTH	gtkenums.h	/^  GTK_ANCHOR_SOUTH,$/;"	e	enum:__anon12
GTK_ANCHOR_SOUTH_EAST	gtkenums.h	/^  GTK_ANCHOR_SOUTH_EAST,$/;"	e	enum:__anon12
GTK_ANCHOR_SOUTH_WEST	gtkenums.h	/^  GTK_ANCHOR_SOUTH_WEST,$/;"	e	enum:__anon12
GTK_ANCHOR_SW	gtkenums.h	/^  GTK_ANCHOR_SW		= GTK_ANCHOR_SOUTH_WEST,$/;"	e	enum:__anon12
GTK_ANCHOR_W	gtkenums.h	/^  GTK_ANCHOR_W		= GTK_ANCHOR_WEST,$/;"	e	enum:__anon12
GTK_ANCHOR_WEST	gtkenums.h	/^  GTK_ANCHOR_WEST,$/;"	e	enum:__anon12
GTK_APP_PAINTABLE	gtkwidget.h	/^  GTK_APP_PAINTABLE    = 1 << 19,$/;"	e	enum:__anon77
GTK_ARG_CHILD_ARG	gtkobject.h	/^  GTK_ARG_CHILD_ARG	 = 1 << 4$/;"	e	enum:__anon112
GTK_ARG_CONSTRUCT	gtkobject.h	/^  GTK_ARG_CONSTRUCT	 = G_PARAM_CONSTRUCT,$/;"	e	enum:__anon112
GTK_ARG_CONSTRUCT_ONLY	gtkobject.h	/^  GTK_ARG_CONSTRUCT_ONLY = G_PARAM_CONSTRUCT_ONLY,$/;"	e	enum:__anon112
GTK_ARG_READABLE	gtkobject.h	/^  GTK_ARG_READABLE	 = G_PARAM_READABLE,$/;"	e	enum:__anon112
GTK_ARG_READWRITE	gtkobject.h	234;"	d
GTK_ARG_WRITABLE	gtkobject.h	/^  GTK_ARG_WRITABLE	 = G_PARAM_WRITABLE,$/;"	e	enum:__anon112
GTK_ARROW	gtkarrow.h	42;"	d
GTK_ARROWS_BOTH	gtkenums.h	/^  GTK_ARROWS_BOTH,$/;"	e	enum:__anon13
GTK_ARROWS_END	gtkenums.h	/^  GTK_ARROWS_END$/;"	e	enum:__anon13
GTK_ARROWS_START	gtkenums.h	/^  GTK_ARROWS_START,$/;"	e	enum:__anon13
GTK_ARROW_CLASS	gtkarrow.h	43;"	d
GTK_ARROW_DOWN	gtkenums.h	/^  GTK_ARROW_DOWN,$/;"	e	enum:__anon14
GTK_ARROW_GET_CLASS	gtkarrow.h	46;"	d
GTK_ARROW_LEFT	gtkenums.h	/^  GTK_ARROW_LEFT,$/;"	e	enum:__anon14
GTK_ARROW_NONE	gtkenums.h	/^  GTK_ARROW_NONE$/;"	e	enum:__anon14
GTK_ARROW_RIGHT	gtkenums.h	/^  GTK_ARROW_RIGHT,$/;"	e	enum:__anon14
GTK_ARROW_UP	gtkenums.h	/^  GTK_ARROW_UP,$/;"	e	enum:__anon14
GTK_ASPECT_FRAME	gtkaspectframe.h	41;"	d
GTK_ASPECT_FRAME_CLASS	gtkaspectframe.h	42;"	d
GTK_ASPECT_FRAME_GET_CLASS	gtkaspectframe.h	45;"	d
GTK_ASSISTANT	gtkassistant.h	38;"	d
GTK_ASSISTANT_CLASS	gtkassistant.h	39;"	d
GTK_ASSISTANT_GET_CLASS	gtkassistant.h	42;"	d
GTK_ASSISTANT_PAGE_CONFIRM	gtkassistant.h	/^  GTK_ASSISTANT_PAGE_CONFIRM,$/;"	e	enum:__anon6
GTK_ASSISTANT_PAGE_CONTENT	gtkassistant.h	/^  GTK_ASSISTANT_PAGE_CONTENT,$/;"	e	enum:__anon6
GTK_ASSISTANT_PAGE_INTRO	gtkassistant.h	/^  GTK_ASSISTANT_PAGE_INTRO,$/;"	e	enum:__anon6
GTK_ASSISTANT_PAGE_PROGRESS	gtkassistant.h	/^  GTK_ASSISTANT_PAGE_PROGRESS$/;"	e	enum:__anon6
GTK_ASSISTANT_PAGE_SUMMARY	gtkassistant.h	/^  GTK_ASSISTANT_PAGE_SUMMARY,$/;"	e	enum:__anon6
GTK_BIN	gtkbin.h	41;"	d
GTK_BINARY_AGE	gtkversion.h	39;"	d
GTK_BIN_CLASS	gtkbin.h	42;"	d
GTK_BIN_GET_CLASS	gtkbin.h	45;"	d
GTK_BOX	gtkbox.h	42;"	d
GTK_BOX_CLASS	gtkbox.h	43;"	d
GTK_BOX_GET_CLASS	gtkbox.h	46;"	d
GTK_BUILDABLE	gtkbuildable.h	34;"	d
GTK_BUILDABLE_CLASS	gtkbuildable.h	35;"	d
GTK_BUILDABLE_GET_IFACE	gtkbuildable.h	37;"	d
GTK_BUILDER	gtkbuilder.h	34;"	d
GTK_BUILDER_CLASS	gtkbuilder.h	35;"	d
GTK_BUILDER_ERROR	gtkbuilder.h	40;"	d
GTK_BUILDER_ERROR_DUPLICATE_ID	gtkbuilder.h	/^  GTK_BUILDER_ERROR_DUPLICATE_ID$/;"	e	enum:__anon120
GTK_BUILDER_ERROR_INVALID_ATTRIBUTE	gtkbuilder.h	/^  GTK_BUILDER_ERROR_INVALID_ATTRIBUTE,$/;"	e	enum:__anon120
GTK_BUILDER_ERROR_INVALID_TAG	gtkbuilder.h	/^  GTK_BUILDER_ERROR_INVALID_TAG,$/;"	e	enum:__anon120
GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION	gtkbuilder.h	/^  GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION,$/;"	e	enum:__anon120
GTK_BUILDER_ERROR_INVALID_VALUE	gtkbuilder.h	/^  GTK_BUILDER_ERROR_INVALID_VALUE,$/;"	e	enum:__anon120
GTK_BUILDER_ERROR_MISSING_ATTRIBUTE	gtkbuilder.h	/^  GTK_BUILDER_ERROR_MISSING_ATTRIBUTE,$/;"	e	enum:__anon120
GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE	gtkbuilder.h	/^  GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE,$/;"	e	enum:__anon120
GTK_BUILDER_ERROR_UNHANDLED_TAG	gtkbuilder.h	/^  GTK_BUILDER_ERROR_UNHANDLED_TAG,$/;"	e	enum:__anon120
GTK_BUILDER_ERROR_VERSION_MISMATCH	gtkbuilder.h	/^  GTK_BUILDER_ERROR_VERSION_MISMATCH,$/;"	e	enum:__anon120
GTK_BUILDER_GET_CLASS	gtkbuilder.h	38;"	d
GTK_BUILDER_WARN_INVALID_CHILD_TYPE	gtkbuilder.h	138;"	d
GTK_BUTTON	gtkbutton.h	42;"	d
GTK_BUTTONBOX_CENTER	gtkenums.h	/^  GTK_BUTTONBOX_CENTER$/;"	e	enum:__anon16
GTK_BUTTONBOX_DEFAULT	gtkbbox.h	47;"	d
GTK_BUTTONBOX_DEFAULT_STYLE	gtkenums.h	/^  GTK_BUTTONBOX_DEFAULT_STYLE,$/;"	e	enum:__anon16
GTK_BUTTONBOX_EDGE	gtkenums.h	/^  GTK_BUTTONBOX_EDGE,$/;"	e	enum:__anon16
GTK_BUTTONBOX_END	gtkenums.h	/^  GTK_BUTTONBOX_END,$/;"	e	enum:__anon16
GTK_BUTTONBOX_SPREAD	gtkenums.h	/^  GTK_BUTTONBOX_SPREAD,$/;"	e	enum:__anon16
GTK_BUTTONBOX_START	gtkenums.h	/^  GTK_BUTTONBOX_START,$/;"	e	enum:__anon16
GTK_BUTTONS_CANCEL	gtkmessagedialog.h	/^  GTK_BUTTONS_CANCEL,$/;"	e	enum:__anon70
GTK_BUTTONS_CLOSE	gtkmessagedialog.h	/^  GTK_BUTTONS_CLOSE,$/;"	e	enum:__anon70
GTK_BUTTONS_NONE	gtkmessagedialog.h	/^  GTK_BUTTONS_NONE,$/;"	e	enum:__anon70
GTK_BUTTONS_OK	gtkmessagedialog.h	/^  GTK_BUTTONS_OK,$/;"	e	enum:__anon70
GTK_BUTTONS_OK_CANCEL	gtkmessagedialog.h	/^  GTK_BUTTONS_OK_CANCEL$/;"	e	enum:__anon70
GTK_BUTTONS_YES_NO	gtkmessagedialog.h	/^  GTK_BUTTONS_YES_NO,$/;"	e	enum:__anon70
GTK_BUTTON_BOX	gtkbbox.h	40;"	d
GTK_BUTTON_BOX_CLASS	gtkbbox.h	41;"	d
GTK_BUTTON_BOX_GET_CLASS	gtkbbox.h	44;"	d
GTK_BUTTON_CLASS	gtkbutton.h	43;"	d
GTK_BUTTON_DRAGS	gtkclist.h	/^  GTK_BUTTON_DRAGS   = 1 << 1,$/;"	e	enum:__anon104
GTK_BUTTON_EXPANDS	gtkclist.h	/^  GTK_BUTTON_EXPANDS = 1 << 2$/;"	e	enum:__anon104
GTK_BUTTON_GET_CLASS	gtkbutton.h	46;"	d
GTK_BUTTON_IGNORED	gtkclist.h	/^  GTK_BUTTON_IGNORED = 0,$/;"	e	enum:__anon104
GTK_BUTTON_SELECTS	gtkclist.h	/^  GTK_BUTTON_SELECTS = 1 << 0,$/;"	e	enum:__anon104
GTK_CALENDAR	gtkcalendar.h	46;"	d
GTK_CALENDAR_CLASS	gtkcalendar.h	47;"	d
GTK_CALENDAR_GET_CLASS	gtkcalendar.h	50;"	d
GTK_CALENDAR_NO_MONTH_CHANGE	gtkcalendar.h	/^  GTK_CALENDAR_NO_MONTH_CHANGE		= 1 << 2,$/;"	e	enum:__anon99
GTK_CALENDAR_SHOW_DAY_NAMES	gtkcalendar.h	/^  GTK_CALENDAR_SHOW_DAY_NAMES		= 1 << 1,$/;"	e	enum:__anon99
GTK_CALENDAR_SHOW_DETAILS	gtkcalendar.h	/^  GTK_CALENDAR_SHOW_DETAILS		= 1 << 5$/;"	e	enum:__anon99
GTK_CALENDAR_SHOW_HEADING	gtkcalendar.h	/^  GTK_CALENDAR_SHOW_HEADING		= 1 << 0,$/;"	e	enum:__anon99
GTK_CALENDAR_SHOW_WEEK_NUMBERS	gtkcalendar.h	/^  GTK_CALENDAR_SHOW_WEEK_NUMBERS	= 1 << 3,$/;"	e	enum:__anon99
GTK_CALENDAR_WEEK_START_MONDAY	gtkcalendar.h	/^  GTK_CALENDAR_WEEK_START_MONDAY	= 1 << 4,$/;"	e	enum:__anon99
GTK_CAN_DEFAULT	gtkwidget.h	/^  GTK_CAN_DEFAULT      = 1 << 13,$/;"	e	enum:__anon77
GTK_CAN_FOCUS	gtkwidget.h	/^  GTK_CAN_FOCUS        = 1 << 11,$/;"	e	enum:__anon77
GTK_CELL_EDITABLE	gtkcelleditable.h	32;"	d
GTK_CELL_EDITABLE_CLASS	gtkcelleditable.h	33;"	d
GTK_CELL_EDITABLE_GET_IFACE	gtkcelleditable.h	35;"	d
GTK_CELL_EMPTY	gtkclist.h	/^  GTK_CELL_EMPTY,$/;"	e	enum:__anon102
GTK_CELL_LAYOUT	gtkcelllayout.h	35;"	d
GTK_CELL_LAYOUT_GET_IFACE	gtkcelllayout.h	37;"	d
GTK_CELL_PIXMAP	gtkclist.h	/^  GTK_CELL_PIXMAP,$/;"	e	enum:__anon102
GTK_CELL_PIXMAP	gtkclist.h	113;"	d
GTK_CELL_PIXTEXT	gtkclist.h	/^  GTK_CELL_PIXTEXT,$/;"	e	enum:__anon102
GTK_CELL_PIXTEXT	gtkclist.h	114;"	d
GTK_CELL_RENDERER	gtkcellrenderer.h	49;"	d
GTK_CELL_RENDERER_ACCEL	gtkcellrendereraccel.h	32;"	d
GTK_CELL_RENDERER_ACCEL_CLASS	gtkcellrendereraccel.h	33;"	d
GTK_CELL_RENDERER_ACCEL_GET_CLASS	gtkcellrendereraccel.h	36;"	d
GTK_CELL_RENDERER_ACCEL_MODE_GTK	gtkcellrendereraccel.h	/^  GTK_CELL_RENDERER_ACCEL_MODE_GTK,$/;"	e	enum:__anon109
GTK_CELL_RENDERER_ACCEL_MODE_OTHER	gtkcellrendereraccel.h	/^  GTK_CELL_RENDERER_ACCEL_MODE_OTHER$/;"	e	enum:__anon109
GTK_CELL_RENDERER_CLASS	gtkcellrenderer.h	50;"	d
GTK_CELL_RENDERER_COMBO	gtkcellrenderercombo.h	33;"	d
GTK_CELL_RENDERER_COMBO_CLASS	gtkcellrenderercombo.h	34;"	d
GTK_CELL_RENDERER_COMBO_GET_CLASS	gtkcellrenderercombo.h	37;"	d
GTK_CELL_RENDERER_FOCUSED	gtkcellrenderer.h	/^  GTK_CELL_RENDERER_FOCUSED     = 1 << 4$/;"	e	enum:__anon71
GTK_CELL_RENDERER_GET_CLASS	gtkcellrenderer.h	53;"	d
GTK_CELL_RENDERER_INSENSITIVE	gtkcellrenderer.h	/^  GTK_CELL_RENDERER_INSENSITIVE = 1 << 2,$/;"	e	enum:__anon71
GTK_CELL_RENDERER_MODE_ACTIVATABLE	gtkcellrenderer.h	/^  GTK_CELL_RENDERER_MODE_ACTIVATABLE,$/;"	e	enum:__anon72
GTK_CELL_RENDERER_MODE_EDITABLE	gtkcellrenderer.h	/^  GTK_CELL_RENDERER_MODE_EDITABLE$/;"	e	enum:__anon72
GTK_CELL_RENDERER_MODE_INERT	gtkcellrenderer.h	/^  GTK_CELL_RENDERER_MODE_INERT,$/;"	e	enum:__anon72
GTK_CELL_RENDERER_PIXBUF	gtkcellrendererpixbuf.h	34;"	d
GTK_CELL_RENDERER_PIXBUF_CLASS	gtkcellrendererpixbuf.h	35;"	d
GTK_CELL_RENDERER_PIXBUF_GET_CLASS	gtkcellrendererpixbuf.h	38;"	d
GTK_CELL_RENDERER_PRELIT	gtkcellrenderer.h	/^  GTK_CELL_RENDERER_PRELIT      = 1 << 1,$/;"	e	enum:__anon71
GTK_CELL_RENDERER_PROGRESS	gtkcellrendererprogress.h	40;"	d
GTK_CELL_RENDERER_PROGRESS_CLASS	gtkcellrendererprogress.h	41;"	d
GTK_CELL_RENDERER_PROGRESS_GET_CLASS	gtkcellrendererprogress.h	44;"	d
GTK_CELL_RENDERER_SELECTED	gtkcellrenderer.h	/^  GTK_CELL_RENDERER_SELECTED    = 1 << 0,$/;"	e	enum:__anon71
GTK_CELL_RENDERER_SORTED	gtkcellrenderer.h	/^  GTK_CELL_RENDERER_SORTED      = 1 << 3,$/;"	e	enum:__anon71
GTK_CELL_RENDERER_SPIN	gtkcellrendererspin.h	32;"	d
GTK_CELL_RENDERER_SPINNER	gtkcellrendererspinner.h	35;"	d
GTK_CELL_RENDERER_SPINNER_CLASS	gtkcellrendererspinner.h	36;"	d
GTK_CELL_RENDERER_SPINNER_GET_CLASS	gtkcellrendererspinner.h	39;"	d
GTK_CELL_RENDERER_SPIN_CLASS	gtkcellrendererspin.h	33;"	d
GTK_CELL_RENDERER_SPIN_GET_CLASS	gtkcellrendererspin.h	36;"	d
GTK_CELL_RENDERER_TEXT	gtkcellrenderertext.h	35;"	d
GTK_CELL_RENDERER_TEXT_CLASS	gtkcellrenderertext.h	36;"	d
GTK_CELL_RENDERER_TEXT_GET_CLASS	gtkcellrenderertext.h	39;"	d
GTK_CELL_RENDERER_TOGGLE	gtkcellrenderertoggle.h	34;"	d
GTK_CELL_RENDERER_TOGGLE_CLASS	gtkcellrenderertoggle.h	35;"	d
GTK_CELL_RENDERER_TOGGLE_GET_CLASS	gtkcellrenderertoggle.h	38;"	d
GTK_CELL_TEXT	gtkclist.h	/^  GTK_CELL_TEXT,$/;"	e	enum:__anon102
GTK_CELL_TEXT	gtkclist.h	112;"	d
GTK_CELL_VIEW	gtkcellview.h	34;"	d
GTK_CELL_VIEW_CLASS	gtkcellview.h	35;"	d
GTK_CELL_VIEW_GET_CLASS	gtkcellview.h	38;"	d
GTK_CELL_WIDGET	gtkclist.h	/^  GTK_CELL_WIDGET$/;"	e	enum:__anon102
GTK_CELL_WIDGET	gtkclist.h	115;"	d
GTK_CENTIMETERS	gtkenums.h	/^  GTK_CENTIMETERS$/;"	e	enum:__anon29
GTK_CHECK_BUTTON	gtkcheckbutton.h	41;"	d
GTK_CHECK_BUTTON_CLASS	gtkcheckbutton.h	42;"	d
GTK_CHECK_BUTTON_GET_CLASS	gtkcheckbutton.h	45;"	d
GTK_CHECK_CAST	gtktypeutils.h	111;"	d
GTK_CHECK_CLASS_CAST	gtktypeutils.h	112;"	d
GTK_CHECK_CLASS_TYPE	gtktypeutils.h	115;"	d
GTK_CHECK_GET_CLASS	gtktypeutils.h	113;"	d
GTK_CHECK_MENU_ITEM	gtkcheckmenuitem.h	41;"	d
GTK_CHECK_MENU_ITEM_CLASS	gtkcheckmenuitem.h	42;"	d
GTK_CHECK_MENU_ITEM_GET_CLASS	gtkcheckmenuitem.h	45;"	d
GTK_CHECK_TYPE	gtktypeutils.h	114;"	d
GTK_CHECK_VERSION	gtkversion.h	45;"	d
GTK_CLASS_NAME	gtktypeutils.h	97;"	d
GTK_CLASS_TYPE	gtktypeutils.h	98;"	d
GTK_CLIPBOARD	gtkclipboard.h	34;"	d
GTK_CLIST	gtkclist.h	87;"	d
GTK_CLIST_ADD_MODE	gtkclist.h	/^  GTK_CLIST_ADD_MODE            = 1 <<  4,$/;"	e	enum:__anon101
GTK_CLIST_ADD_MODE	gtkclist.h	101;"	d
GTK_CLIST_AUTO_RESIZE_BLOCKED	gtkclist.h	/^  GTK_CLIST_AUTO_RESIZE_BLOCKED = 1 <<  6,$/;"	e	enum:__anon101
GTK_CLIST_AUTO_RESIZE_BLOCKED	gtkclist.h	103;"	d
GTK_CLIST_AUTO_SORT	gtkclist.h	/^  GTK_CLIST_AUTO_SORT           = 1 <<  5,$/;"	e	enum:__anon101
GTK_CLIST_AUTO_SORT	gtkclist.h	102;"	d
GTK_CLIST_CLASS	gtkclist.h	88;"	d
GTK_CLIST_DRAG_AFTER	gtkclist.h	/^  GTK_CLIST_DRAG_AFTER$/;"	e	enum:__anon103
GTK_CLIST_DRAG_BEFORE	gtkclist.h	/^  GTK_CLIST_DRAG_BEFORE,$/;"	e	enum:__anon103
GTK_CLIST_DRAG_INTO	gtkclist.h	/^  GTK_CLIST_DRAG_INTO,$/;"	e	enum:__anon103
GTK_CLIST_DRAG_NONE	gtkclist.h	/^  GTK_CLIST_DRAG_NONE,$/;"	e	enum:__anon103
GTK_CLIST_DRAW_DRAG_LINE	gtkclist.h	/^  GTK_CLIST_DRAW_DRAG_LINE      = 1 <<  9,$/;"	e	enum:__anon101
GTK_CLIST_DRAW_DRAG_LINE	gtkclist.h	106;"	d
GTK_CLIST_DRAW_DRAG_RECT	gtkclist.h	/^  GTK_CLIST_DRAW_DRAG_RECT      = 1 << 10$/;"	e	enum:__anon101
GTK_CLIST_DRAW_DRAG_RECT	gtkclist.h	107;"	d
GTK_CLIST_FLAGS	gtkclist.h	94;"	d
GTK_CLIST_GET_CLASS	gtkclist.h	91;"	d
GTK_CLIST_IN_DRAG	gtkclist.h	/^  GTK_CLIST_IN_DRAG             = 1 <<  0,$/;"	e	enum:__anon101
GTK_CLIST_IN_DRAG	gtkclist.h	98;"	d
GTK_CLIST_REORDERABLE	gtkclist.h	/^  GTK_CLIST_REORDERABLE         = 1 <<  7,$/;"	e	enum:__anon101
GTK_CLIST_REORDERABLE	gtkclist.h	104;"	d
GTK_CLIST_ROW	gtkclist.h	109;"	d
GTK_CLIST_ROW_HEIGHT_SET	gtkclist.h	/^  GTK_CLIST_ROW_HEIGHT_SET      = 1 <<  1,$/;"	e	enum:__anon101
GTK_CLIST_ROW_HEIGHT_SET	gtkclist.h	99;"	d
GTK_CLIST_SET_FLAG	gtkclist.h	95;"	d
GTK_CLIST_SHOW_TITLES	gtkclist.h	/^  GTK_CLIST_SHOW_TITLES         = 1 <<  2,$/;"	e	enum:__anon101
GTK_CLIST_SHOW_TITLES	gtkclist.h	100;"	d
GTK_CLIST_UNSET_FLAG	gtkclist.h	96;"	d
GTK_CLIST_USE_DRAG_ICONS	gtkclist.h	/^  GTK_CLIST_USE_DRAG_ICONS      = 1 <<  8,$/;"	e	enum:__anon101
GTK_CLIST_USE_DRAG_ICONS	gtkclist.h	105;"	d
GTK_COLOR_BUTTON	gtkcolorbutton.h	52;"	d
GTK_COLOR_BUTTON_CLASS	gtkcolorbutton.h	53;"	d
GTK_COLOR_BUTTON_GET_CLASS	gtkcolorbutton.h	56;"	d
GTK_COLOR_SELECTION	gtkcolorsel.h	41;"	d
GTK_COLOR_SELECTION_CLASS	gtkcolorsel.h	42;"	d
GTK_COLOR_SELECTION_DIALOG	gtkcolorseldialog.h	41;"	d
GTK_COLOR_SELECTION_DIALOG_CLASS	gtkcolorseldialog.h	42;"	d
GTK_COLOR_SELECTION_DIALOG_GET_CLASS	gtkcolorseldialog.h	45;"	d
GTK_COLOR_SELECTION_GET_CLASS	gtkcolorsel.h	45;"	d
GTK_COMBO	gtkcombo.h	38;"	d
GTK_COMBO_BOX	gtkcombobox.h	34;"	d
GTK_COMBO_BOX_CLASS	gtkcombobox.h	35;"	d
GTK_COMBO_BOX_ENTRY	gtkcomboboxentry.h	35;"	d
GTK_COMBO_BOX_ENTRY_CLASS	gtkcomboboxentry.h	36;"	d
GTK_COMBO_BOX_ENTRY_GET_CLASS	gtkcomboboxentry.h	39;"	d
GTK_COMBO_BOX_GET_CLASS	gtkcombobox.h	38;"	d
GTK_COMBO_BOX_TEXT	gtkcomboboxtext.h	31;"	d
GTK_COMBO_BOX_TEXT_CLASS	gtkcomboboxtext.h	32;"	d
GTK_COMBO_BOX_TEXT_GET_CLASS	gtkcomboboxtext.h	35;"	d
GTK_COMBO_CLASS	gtkcombo.h	39;"	d
GTK_COMBO_GET_CLASS	gtkcombo.h	42;"	d
GTK_COMPOSITE_CHILD	gtkwidget.h	/^  GTK_COMPOSITE_CHILD  = 1 << 17,$/;"	e	enum:__anon77
GTK_CONTAINER	gtkcontainer.h	42;"	d
GTK_CONTAINER_CLASS	gtkcontainer.h	43;"	d
GTK_CONTAINER_GET_CLASS	gtkcontainer.h	46;"	d
GTK_CONTAINER_RESIZE_PENDING	gtkprivate.h	57;"	d
GTK_CONTAINER_WARN_INVALID_CHILD_PROPERTY_ID	gtkcontainer.h	204;"	d
GTK_CORNER_BOTTOM_LEFT	gtkenums.h	/^  GTK_CORNER_BOTTOM_LEFT,$/;"	e	enum:__anon33
GTK_CORNER_BOTTOM_RIGHT	gtkenums.h	/^  GTK_CORNER_BOTTOM_RIGHT$/;"	e	enum:__anon33
GTK_CORNER_TOP_LEFT	gtkenums.h	/^  GTK_CORNER_TOP_LEFT,$/;"	e	enum:__anon33
GTK_CORNER_TOP_RIGHT	gtkenums.h	/^  GTK_CORNER_TOP_RIGHT,$/;"	e	enum:__anon33
GTK_CTREE	gtkctree.h	41;"	d
GTK_CTREE_CLASS	gtkctree.h	42;"	d
GTK_CTREE_EXPANDER_CIRCULAR	gtkctree.h	/^  GTK_CTREE_EXPANDER_CIRCULAR$/;"	e	enum:__anon75
GTK_CTREE_EXPANDER_NONE	gtkctree.h	/^  GTK_CTREE_EXPANDER_NONE,$/;"	e	enum:__anon75
GTK_CTREE_EXPANDER_SQUARE	gtkctree.h	/^  GTK_CTREE_EXPANDER_SQUARE,$/;"	e	enum:__anon75
GTK_CTREE_EXPANDER_TRIANGLE	gtkctree.h	/^  GTK_CTREE_EXPANDER_TRIANGLE,$/;"	e	enum:__anon75
GTK_CTREE_EXPANSION_COLLAPSE	gtkctree.h	/^  GTK_CTREE_EXPANSION_COLLAPSE,$/;"	e	enum:__anon76
GTK_CTREE_EXPANSION_COLLAPSE_RECURSIVE	gtkctree.h	/^  GTK_CTREE_EXPANSION_COLLAPSE_RECURSIVE,$/;"	e	enum:__anon76
GTK_CTREE_EXPANSION_EXPAND	gtkctree.h	/^  GTK_CTREE_EXPANSION_EXPAND,$/;"	e	enum:__anon76
GTK_CTREE_EXPANSION_EXPAND_RECURSIVE	gtkctree.h	/^  GTK_CTREE_EXPANSION_EXPAND_RECURSIVE,$/;"	e	enum:__anon76
GTK_CTREE_EXPANSION_TOGGLE	gtkctree.h	/^  GTK_CTREE_EXPANSION_TOGGLE,$/;"	e	enum:__anon76
GTK_CTREE_EXPANSION_TOGGLE_RECURSIVE	gtkctree.h	/^  GTK_CTREE_EXPANSION_TOGGLE_RECURSIVE$/;"	e	enum:__anon76
GTK_CTREE_FUNC	gtkctree.h	51;"	d
GTK_CTREE_GET_CLASS	gtkctree.h	45;"	d
GTK_CTREE_LINES_DOTTED	gtkctree.h	/^  GTK_CTREE_LINES_DOTTED,$/;"	e	enum:__anon74
GTK_CTREE_LINES_NONE	gtkctree.h	/^  GTK_CTREE_LINES_NONE,$/;"	e	enum:__anon74
GTK_CTREE_LINES_SOLID	gtkctree.h	/^  GTK_CTREE_LINES_SOLID,$/;"	e	enum:__anon74
GTK_CTREE_LINES_TABBED	gtkctree.h	/^  GTK_CTREE_LINES_TABBED$/;"	e	enum:__anon74
GTK_CTREE_NODE	gtkctree.h	48;"	d
GTK_CTREE_NODE_NEXT	gtkctree.h	49;"	d
GTK_CTREE_NODE_PREV	gtkctree.h	50;"	d
GTK_CTREE_POS_AFTER	gtkctree.h	/^  GTK_CTREE_POS_AFTER$/;"	e	enum:__anon73
GTK_CTREE_POS_AS_CHILD	gtkctree.h	/^  GTK_CTREE_POS_AS_CHILD,$/;"	e	enum:__anon73
GTK_CTREE_POS_BEFORE	gtkctree.h	/^  GTK_CTREE_POS_BEFORE,$/;"	e	enum:__anon73
GTK_CTREE_ROW	gtkctree.h	47;"	d
GTK_CURVE	gtkcurve.h	39;"	d
GTK_CURVE_CLASS	gtkcurve.h	40;"	d
GTK_CURVE_GET_CLASS	gtkcurve.h	43;"	d
GTK_CURVE_TYPE_FREE	gtkenums.h	/^  GTK_CURVE_TYPE_FREE          \/* free form curve *\/$/;"	e	enum:__anon17
GTK_CURVE_TYPE_LINEAR	gtkenums.h	/^  GTK_CURVE_TYPE_LINEAR,       \/* linear interpolation *\/$/;"	e	enum:__anon17
GTK_CURVE_TYPE_SPLINE	gtkenums.h	/^  GTK_CURVE_TYPE_SPLINE,       \/* spline interpolation *\/$/;"	e	enum:__anon17
GTK_DATADIR	gtkprivate.h	86;"	d
GTK_DATADIR	gtkprivate.h	87;"	d
GTK_DATA_PREFIX	gtkprivate.h	94;"	d
GTK_DATA_PREFIX	gtkprivate.h	95;"	d
GTK_DEBUG_BUILDER	gtkdebug.h	/^  GTK_DEBUG_BUILDER	= 1 << 11$/;"	e	enum:__anon113
GTK_DEBUG_GEOMETRY	gtkdebug.h	/^  GTK_DEBUG_GEOMETRY    = 1 << 8,$/;"	e	enum:__anon113
GTK_DEBUG_ICONTHEME	gtkdebug.h	/^  GTK_DEBUG_ICONTHEME   = 1 << 9,$/;"	e	enum:__anon113
GTK_DEBUG_KEYBINDINGS	gtkdebug.h	/^  GTK_DEBUG_KEYBINDINGS = 1 << 5,$/;"	e	enum:__anon113
GTK_DEBUG_MISC	gtkdebug.h	/^  GTK_DEBUG_MISC        = 1 << 0,$/;"	e	enum:__anon113
GTK_DEBUG_MODULES	gtkdebug.h	/^  GTK_DEBUG_MODULES     = 1 << 7,$/;"	e	enum:__anon113
GTK_DEBUG_MULTIHEAD	gtkdebug.h	/^  GTK_DEBUG_MULTIHEAD   = 1 << 6,$/;"	e	enum:__anon113
GTK_DEBUG_PLUGSOCKET	gtkdebug.h	/^  GTK_DEBUG_PLUGSOCKET  = 1 << 1,$/;"	e	enum:__anon113
GTK_DEBUG_PRINTING	gtkdebug.h	/^  GTK_DEBUG_PRINTING	= 1 << 10,$/;"	e	enum:__anon113
GTK_DEBUG_TEXT	gtkdebug.h	/^  GTK_DEBUG_TEXT        = 1 << 2,$/;"	e	enum:__anon113
GTK_DEBUG_TREE	gtkdebug.h	/^  GTK_DEBUG_TREE        = 1 << 3,$/;"	e	enum:__anon113
GTK_DEBUG_UPDATES	gtkdebug.h	/^  GTK_DEBUG_UPDATES     = 1 << 4,$/;"	e	enum:__anon113
GTK_DEFAULT_ACCEL_MOD_MASK	gtkprivate.h	111;"	d
GTK_DEFAULT_ACCEL_MOD_MASK	gtkprivate.h	114;"	d
GTK_DEFAULT_ACCEL_MOD_MASK_VIRTUAL	gtkprivate.h	112;"	d
GTK_DEFAULT_ACCEL_MOD_MASK_VIRTUAL	gtkprivate.h	115;"	d
GTK_DELETE_CHARS	gtkenums.h	/^  GTK_DELETE_CHARS,$/;"	e	enum:__anon18
GTK_DELETE_DISPLAY_LINES	gtkenums.h	/^  GTK_DELETE_DISPLAY_LINES,$/;"	e	enum:__anon18
GTK_DELETE_DISPLAY_LINE_ENDS	gtkenums.h	/^  GTK_DELETE_DISPLAY_LINE_ENDS,$/;"	e	enum:__anon18
GTK_DELETE_PARAGRAPHS	gtkenums.h	/^  GTK_DELETE_PARAGRAPHS,          \/* C-k in pico, kill whole line *\/$/;"	e	enum:__anon18
GTK_DELETE_PARAGRAPH_ENDS	gtkenums.h	/^  GTK_DELETE_PARAGRAPH_ENDS,      \/* like C-k in Emacs (or its reverse) *\/$/;"	e	enum:__anon18
GTK_DELETE_WHITESPACE	gtkenums.h	/^  GTK_DELETE_WHITESPACE           \/* M-\\ in Emacs *\/$/;"	e	enum:__anon18
GTK_DELETE_WORDS	gtkenums.h	/^  GTK_DELETE_WORDS,$/;"	e	enum:__anon18
GTK_DELETE_WORD_ENDS	gtkenums.h	/^  GTK_DELETE_WORD_ENDS,           \/* delete only the portion of the word to the$/;"	e	enum:__anon18
GTK_DEST_DEFAULT_ALL	gtkdnd.h	/^  GTK_DEST_DEFAULT_ALL        = 0x07$/;"	e	enum:__anon123
GTK_DEST_DEFAULT_DROP	gtkdnd.h	/^  GTK_DEST_DEFAULT_DROP       = 1 << 2, \/* respond to "drag_drop" *\/$/;"	e	enum:__anon123
GTK_DEST_DEFAULT_HIGHLIGHT	gtkdnd.h	/^  GTK_DEST_DEFAULT_HIGHLIGHT  = 1 << 1, \/* auto-highlight *\/$/;"	e	enum:__anon123
GTK_DEST_DEFAULT_MOTION	gtkdnd.h	/^  GTK_DEST_DEFAULT_MOTION     = 1 << 0, \/* respond to "drag_motion" *\/$/;"	e	enum:__anon123
GTK_DIALOG	gtkdialog.h	87;"	d
GTK_DIALOG_CLASS	gtkdialog.h	88;"	d
GTK_DIALOG_DESTROY_WITH_PARENT	gtkdialog.h	/^  GTK_DIALOG_DESTROY_WITH_PARENT = 1 << 1, \/* call gtk_window_set_destroy_with_parent () *\/$/;"	e	enum:__anon9
GTK_DIALOG_GET_CLASS	gtkdialog.h	91;"	d
GTK_DIALOG_MODAL	gtkdialog.h	/^  GTK_DIALOG_MODAL               = 1 << 0, \/* call gtk_window_set_modal (win, TRUE) *\/$/;"	e	enum:__anon9
GTK_DIALOG_NO_SEPARATOR	gtkdialog.h	/^  GTK_DIALOG_NO_SEPARATOR        = 1 << 2  \/* no separator bar above buttons *\/$/;"	e	enum:__anon9
GTK_DIRECTION_LEFT	gtkenums.h	/^  GTK_DIRECTION_LEFT,$/;"	e	enum:__anon47
GTK_DIRECTION_RIGHT	gtkenums.h	/^  GTK_DIRECTION_RIGHT$/;"	e	enum:__anon47
GTK_DIR_DOWN	gtkenums.h	/^  GTK_DIR_DOWN,$/;"	e	enum:__anon19
GTK_DIR_LEFT	gtkenums.h	/^  GTK_DIR_LEFT,$/;"	e	enum:__anon19
GTK_DIR_RIGHT	gtkenums.h	/^  GTK_DIR_RIGHT$/;"	e	enum:__anon19
GTK_DIR_TAB_BACKWARD	gtkenums.h	/^  GTK_DIR_TAB_BACKWARD,$/;"	e	enum:__anon19
GTK_DIR_TAB_FORWARD	gtkenums.h	/^  GTK_DIR_TAB_FORWARD,$/;"	e	enum:__anon19
GTK_DIR_UP	gtkenums.h	/^  GTK_DIR_UP,$/;"	e	enum:__anon19
GTK_DOUBLE_BUFFERED	gtkwidget.h	/^  GTK_DOUBLE_BUFFERED  = 1 << 21,$/;"	e	enum:__anon77
GTK_DRAG_RESULT_ERROR	gtkenums.h	/^  GTK_DRAG_RESULT_ERROR$/;"	e	enum:__anon67
GTK_DRAG_RESULT_GRAB_BROKEN	gtkenums.h	/^  GTK_DRAG_RESULT_GRAB_BROKEN,$/;"	e	enum:__anon67
GTK_DRAG_RESULT_NO_TARGET	gtkenums.h	/^  GTK_DRAG_RESULT_NO_TARGET,$/;"	e	enum:__anon67
GTK_DRAG_RESULT_SUCCESS	gtkenums.h	/^  GTK_DRAG_RESULT_SUCCESS,$/;"	e	enum:__anon67
GTK_DRAG_RESULT_TIMEOUT_EXPIRED	gtkenums.h	/^  GTK_DRAG_RESULT_TIMEOUT_EXPIRED,$/;"	e	enum:__anon67
GTK_DRAG_RESULT_USER_CANCELLED	gtkenums.h	/^  GTK_DRAG_RESULT_USER_CANCELLED,$/;"	e	enum:__anon67
GTK_DRAWING_AREA	gtkdrawingarea.h	41;"	d
GTK_DRAWING_AREA_CLASS	gtkdrawingarea.h	42;"	d
GTK_DRAWING_AREA_GET_CLASS	gtkdrawingarea.h	45;"	d
GTK_EDITABLE	gtkeditable.h	41;"	d
GTK_EDITABLE_CLASS	gtkeditable.h	42;"	d
GTK_EDITABLE_GET_CLASS	gtkeditable.h	45;"	d
GTK_ENTRY	gtkentry.h	51;"	d
GTK_ENTRY_BUFFER	gtkentrybuffer.h	35;"	d
GTK_ENTRY_BUFFER_CLASS	gtkentrybuffer.h	36;"	d
GTK_ENTRY_BUFFER_GET_CLASS	gtkentrybuffer.h	39;"	d
GTK_ENTRY_BUFFER_MAX_SIZE	gtkentrybuffer.h	32;"	d
GTK_ENTRY_CLASS	gtkentry.h	52;"	d
GTK_ENTRY_COMPLETION	gtkentrycompletion.h	35;"	d
GTK_ENTRY_COMPLETION_CLASS	gtkentrycompletion.h	36;"	d
GTK_ENTRY_COMPLETION_GET_CLASS	gtkentrycompletion.h	39;"	d
GTK_ENTRY_GET_CLASS	gtkentry.h	55;"	d
GTK_ENTRY_ICON_PRIMARY	gtkentry.h	/^  GTK_ENTRY_ICON_PRIMARY,$/;"	e	enum:__anon119
GTK_ENTRY_ICON_SECONDARY	gtkentry.h	/^  GTK_ENTRY_ICON_SECONDARY$/;"	e	enum:__anon119
GTK_EVENT_BOX	gtkeventbox.h	41;"	d
GTK_EVENT_BOX_CLASS	gtkeventbox.h	42;"	d
GTK_EVENT_BOX_GET_CLASS	gtkeventbox.h	45;"	d
GTK_EXPAND	gtkenums.h	/^  GTK_EXPAND = 1 << 0,$/;"	e	enum:__anon15
GTK_EXPANDER	gtkexpander.h	36;"	d
GTK_EXPANDER_CLASS	gtkexpander.h	37;"	d
GTK_EXPANDER_COLLAPSED	gtkenums.h	/^  GTK_EXPANDER_COLLAPSED,$/;"	e	enum:__anon20
GTK_EXPANDER_EXPANDED	gtkenums.h	/^  GTK_EXPANDER_EXPANDED$/;"	e	enum:__anon20
GTK_EXPANDER_GET_CLASS	gtkexpander.h	40;"	d
GTK_EXPANDER_SEMI_COLLAPSED	gtkenums.h	/^  GTK_EXPANDER_SEMI_COLLAPSED,$/;"	e	enum:__anon20
GTK_EXPANDER_SEMI_EXPANDED	gtkenums.h	/^  GTK_EXPANDER_SEMI_EXPANDED,$/;"	e	enum:__anon20
GTK_EXTEND_SELECTION_MOD_MASK	gtkprivate.h	129;"	d
GTK_EXTEND_SELECTION_MOD_MASK	gtkprivate.h	132;"	d
GTK_FILE_CHOOSER	gtkfilechooser.h	34;"	d
GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER	gtkfilechooser.h	/^  GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER$/;"	e	enum:__anon91
GTK_FILE_CHOOSER_ACTION_OPEN	gtkfilechooser.h	/^  GTK_FILE_CHOOSER_ACTION_OPEN,$/;"	e	enum:__anon91
GTK_FILE_CHOOSER_ACTION_SAVE	gtkfilechooser.h	/^  GTK_FILE_CHOOSER_ACTION_SAVE,$/;"	e	enum:__anon91
GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER	gtkfilechooser.h	/^  GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER,$/;"	e	enum:__anon91
GTK_FILE_CHOOSER_BUTTON	gtkfilechooserbutton.h	34;"	d
GTK_FILE_CHOOSER_BUTTON_CLASS	gtkfilechooserbutton.h	35;"	d
GTK_FILE_CHOOSER_BUTTON_GET_CLASS	gtkfilechooserbutton.h	38;"	d
GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME	gtkfilechooser.h	/^  GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME,$/;"	e	enum:__anon92
GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM	gtkfilechooser.h	/^  GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM,$/;"	e	enum:__anon92
GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN	gtkfilechooser.h	/^  GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN$/;"	e	enum:__anon92
GTK_FILE_CHOOSER_DIALOG	gtkfilechooserdialog.h	34;"	d
GTK_FILE_CHOOSER_DIALOG_CLASS	gtkfilechooserdialog.h	35;"	d
GTK_FILE_CHOOSER_DIALOG_GET_CLASS	gtkfilechooserdialog.h	38;"	d
GTK_FILE_CHOOSER_ERROR	gtkfilechooser.h	96;"	d
GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS	gtkfilechooser.h	/^  GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS,$/;"	e	enum:__anon93
GTK_FILE_CHOOSER_ERROR_BAD_FILENAME	gtkfilechooser.h	/^  GTK_FILE_CHOOSER_ERROR_BAD_FILENAME,$/;"	e	enum:__anon93
GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME	gtkfilechooser.h	/^  GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME$/;"	e	enum:__anon93
GTK_FILE_CHOOSER_ERROR_NONEXISTENT	gtkfilechooser.h	/^  GTK_FILE_CHOOSER_ERROR_NONEXISTENT,$/;"	e	enum:__anon93
GTK_FILE_CHOOSER_WIDGET	gtkfilechooserwidget.h	34;"	d
GTK_FILE_CHOOSER_WIDGET_CLASS	gtkfilechooserwidget.h	35;"	d
GTK_FILE_CHOOSER_WIDGET_GET_CLASS	gtkfilechooserwidget.h	38;"	d
GTK_FILE_FILTER	gtkfilefilter.h	33;"	d
GTK_FILE_FILTER_DISPLAY_NAME	gtkfilefilter.h	/^  GTK_FILE_FILTER_DISPLAY_NAME = 1 << 2,$/;"	e	enum:__anon108
GTK_FILE_FILTER_FILENAME	gtkfilefilter.h	/^  GTK_FILE_FILTER_FILENAME     = 1 << 0,$/;"	e	enum:__anon108
GTK_FILE_FILTER_MIME_TYPE	gtkfilefilter.h	/^  GTK_FILE_FILTER_MIME_TYPE    = 1 << 3$/;"	e	enum:__anon108
GTK_FILE_FILTER_URI	gtkfilefilter.h	/^  GTK_FILE_FILTER_URI          = 1 << 1,$/;"	e	enum:__anon108
GTK_FILE_SELECTION	gtkfilesel.h	39;"	d
GTK_FILE_SELECTION_CLASS	gtkfilesel.h	40;"	d
GTK_FILE_SELECTION_GET_CLASS	gtkfilesel.h	43;"	d
GTK_FILL	gtkenums.h	/^  GTK_FILL   = 1 << 2$/;"	e	enum:__anon15
GTK_FIXED	gtkfixed.h	41;"	d
GTK_FIXED_CLASS	gtkfixed.h	42;"	d
GTK_FIXED_GET_CLASS	gtkfixed.h	45;"	d
GTK_FLOATING	gtkobject.h	/^  GTK_FLOATING		= 1 << 1,$/;"	e	enum:__anon111
GTK_FONT_BUTTON	gtkfontbutton.h	43;"	d
GTK_FONT_BUTTON_CLASS	gtkfontbutton.h	44;"	d
GTK_FONT_BUTTON_GET_CLASS	gtkfontbutton.h	47;"	d
GTK_FONT_SELECTION	gtkfontsel.h	46;"	d
GTK_FONT_SELECTION_CLASS	gtkfontsel.h	47;"	d
GTK_FONT_SELECTION_DIALOG	gtkfontsel.h	54;"	d
GTK_FONT_SELECTION_DIALOG_CLASS	gtkfontsel.h	55;"	d
GTK_FONT_SELECTION_DIALOG_GET_CLASS	gtkfontsel.h	58;"	d
GTK_FONT_SELECTION_GET_CLASS	gtkfontsel.h	50;"	d
GTK_FRAME	gtkframe.h	42;"	d
GTK_FRAME_CLASS	gtkframe.h	43;"	d
GTK_FRAME_GET_CLASS	gtkframe.h	46;"	d
GTK_FUNDAMENTAL_TYPE	gtktypeutils.h	107;"	d
GTK_GAMMA_CURVE	gtkgamma.h	39;"	d
GTK_GAMMA_CURVE_CLASS	gtkgamma.h	40;"	d
GTK_GAMMA_CURVE_GET_CLASS	gtkgamma.h	43;"	d
GTK_HANDLE_BOX	gtkhandlebox.h	46;"	d
GTK_HANDLE_BOX_CLASS	gtkhandlebox.h	47;"	d
GTK_HANDLE_BOX_GET_CLASS	gtkhandlebox.h	50;"	d
GTK_HAS_DEFAULT	gtkwidget.h	/^  GTK_HAS_DEFAULT      = 1 << 14,$/;"	e	enum:__anon77
GTK_HAS_FOCUS	gtkwidget.h	/^  GTK_HAS_FOCUS        = 1 << 12,$/;"	e	enum:__anon77
GTK_HAS_GRAB	gtkwidget.h	/^  GTK_HAS_GRAB	       = 1 << 15,$/;"	e	enum:__anon77
GTK_HBOX	gtkhbox.h	41;"	d
GTK_HBOX_CLASS	gtkhbox.h	42;"	d
GTK_HBOX_GET_CLASS	gtkhbox.h	45;"	d
GTK_HBUTTON_BOX	gtkhbbox.h	41;"	d
GTK_HBUTTON_BOX_CLASS	gtkhbbox.h	42;"	d
GTK_HBUTTON_BOX_GET_CLASS	gtkhbbox.h	45;"	d
GTK_HPANED	gtkhpaned.h	39;"	d
GTK_HPANED_CLASS	gtkhpaned.h	40;"	d
GTK_HPANED_GET_CLASS	gtkhpaned.h	43;"	d
GTK_HRULER	gtkhruler.h	54;"	d
GTK_HRULER_CLASS	gtkhruler.h	55;"	d
GTK_HRULER_GET_CLASS	gtkhruler.h	58;"	d
GTK_HSCALE	gtkhscale.h	41;"	d
GTK_HSCALE_CLASS	gtkhscale.h	42;"	d
GTK_HSCALE_GET_CLASS	gtkhscale.h	45;"	d
GTK_HSCROLLBAR	gtkhscrollbar.h	42;"	d
GTK_HSCROLLBAR_CLASS	gtkhscrollbar.h	43;"	d
GTK_HSCROLLBAR_GET_CLASS	gtkhscrollbar.h	46;"	d
GTK_HSEPARATOR	gtkhseparator.h	41;"	d
GTK_HSEPARATOR_CLASS	gtkhseparator.h	42;"	d
GTK_HSEPARATOR_GET_CLASS	gtkhseparator.h	45;"	d
GTK_HSV	gtkhsv.h	44;"	d
GTK_HSV_CLASS	gtkhsv.h	45;"	d
GTK_HSV_GET_CLASS	gtkhsv.h	48;"	d
GTK_ICON_FACTORY	gtkiconfactory.h	42;"	d
GTK_ICON_FACTORY_CLASS	gtkiconfactory.h	43;"	d
GTK_ICON_FACTORY_GET_CLASS	gtkiconfactory.h	46;"	d
GTK_ICON_LOOKUP_FORCE_SIZE	gtkicontheme.h	/^  GTK_ICON_LOOKUP_FORCE_SIZE       = 1 << 4$/;"	e	enum:__anon121
GTK_ICON_LOOKUP_FORCE_SVG	gtkicontheme.h	/^  GTK_ICON_LOOKUP_FORCE_SVG        = 1 << 1,$/;"	e	enum:__anon121
GTK_ICON_LOOKUP_GENERIC_FALLBACK	gtkicontheme.h	/^  GTK_ICON_LOOKUP_GENERIC_FALLBACK = 1 << 3,$/;"	e	enum:__anon121
GTK_ICON_LOOKUP_NO_SVG	gtkicontheme.h	/^  GTK_ICON_LOOKUP_NO_SVG           = 1 << 0,$/;"	e	enum:__anon121
GTK_ICON_LOOKUP_USE_BUILTIN	gtkicontheme.h	/^  GTK_ICON_LOOKUP_USE_BUILTIN      = 1 << 2,$/;"	e	enum:__anon121
GTK_ICON_SIZE_BUTTON	gtkenums.h	/^  GTK_ICON_SIZE_BUTTON,$/;"	e	enum:__anon21
GTK_ICON_SIZE_DIALOG	gtkenums.h	/^  GTK_ICON_SIZE_DIALOG$/;"	e	enum:__anon21
GTK_ICON_SIZE_DND	gtkenums.h	/^  GTK_ICON_SIZE_DND,$/;"	e	enum:__anon21
GTK_ICON_SIZE_INVALID	gtkenums.h	/^  GTK_ICON_SIZE_INVALID,$/;"	e	enum:__anon21
GTK_ICON_SIZE_LARGE_TOOLBAR	gtkenums.h	/^  GTK_ICON_SIZE_LARGE_TOOLBAR,$/;"	e	enum:__anon21
GTK_ICON_SIZE_MENU	gtkenums.h	/^  GTK_ICON_SIZE_MENU,$/;"	e	enum:__anon21
GTK_ICON_SIZE_SMALL_TOOLBAR	gtkenums.h	/^  GTK_ICON_SIZE_SMALL_TOOLBAR,$/;"	e	enum:__anon21
GTK_ICON_THEME	gtkicontheme.h	35;"	d
GTK_ICON_THEME_CLASS	gtkicontheme.h	36;"	d
GTK_ICON_THEME_ERROR	gtkicontheme.h	89;"	d
GTK_ICON_THEME_FAILED	gtkicontheme.h	/^  GTK_ICON_THEME_FAILED$/;"	e	enum:__anon122
GTK_ICON_THEME_GET_CLASS	gtkicontheme.h	39;"	d
GTK_ICON_THEME_NOT_FOUND	gtkicontheme.h	/^  GTK_ICON_THEME_NOT_FOUND,$/;"	e	enum:__anon122
GTK_ICON_VIEW	gtkiconview.h	36;"	d
GTK_ICON_VIEW_CLASS	gtkiconview.h	37;"	d
GTK_ICON_VIEW_DROP_ABOVE	gtkiconview.h	/^  GTK_ICON_VIEW_DROP_ABOVE,$/;"	e	enum:__anon86
GTK_ICON_VIEW_DROP_BELOW	gtkiconview.h	/^  GTK_ICON_VIEW_DROP_BELOW$/;"	e	enum:__anon86
GTK_ICON_VIEW_DROP_INTO	gtkiconview.h	/^  GTK_ICON_VIEW_DROP_INTO,$/;"	e	enum:__anon86
GTK_ICON_VIEW_DROP_LEFT	gtkiconview.h	/^  GTK_ICON_VIEW_DROP_LEFT,$/;"	e	enum:__anon86
GTK_ICON_VIEW_DROP_RIGHT	gtkiconview.h	/^  GTK_ICON_VIEW_DROP_RIGHT,$/;"	e	enum:__anon86
GTK_ICON_VIEW_GET_CLASS	gtkiconview.h	40;"	d
GTK_ICON_VIEW_NO_DROP	gtkiconview.h	/^  GTK_ICON_VIEW_NO_DROP,$/;"	e	enum:__anon86
GTK_IMAGE	gtkimage.h	42;"	d
GTK_IMAGE_ANIMATION	gtkimage.h	/^  GTK_IMAGE_ANIMATION,$/;"	e	enum:__anon83
GTK_IMAGE_CLASS	gtkimage.h	43;"	d
GTK_IMAGE_EMPTY	gtkimage.h	/^  GTK_IMAGE_EMPTY,$/;"	e	enum:__anon83
GTK_IMAGE_GET_CLASS	gtkimage.h	46;"	d
GTK_IMAGE_GICON	gtkimage.h	/^  GTK_IMAGE_GICON$/;"	e	enum:__anon83
GTK_IMAGE_ICON_NAME	gtkimage.h	/^  GTK_IMAGE_ICON_NAME,$/;"	e	enum:__anon83
GTK_IMAGE_ICON_SET	gtkimage.h	/^  GTK_IMAGE_ICON_SET,$/;"	e	enum:__anon83
GTK_IMAGE_IMAGE	gtkimage.h	/^  GTK_IMAGE_IMAGE,$/;"	e	enum:__anon83
GTK_IMAGE_MENU_ITEM	gtkimagemenuitem.h	41;"	d
GTK_IMAGE_MENU_ITEM_CLASS	gtkimagemenuitem.h	42;"	d
GTK_IMAGE_MENU_ITEM_GET_CLASS	gtkimagemenuitem.h	45;"	d
GTK_IMAGE_PIXBUF	gtkimage.h	/^  GTK_IMAGE_PIXBUF,$/;"	e	enum:__anon83
GTK_IMAGE_PIXMAP	gtkimage.h	/^  GTK_IMAGE_PIXMAP,$/;"	e	enum:__anon83
GTK_IMAGE_STOCK	gtkimage.h	/^  GTK_IMAGE_STOCK,$/;"	e	enum:__anon83
GTK_IM_CONTEXT	gtkimcontext.h	35;"	d
GTK_IM_CONTEXT_CLASS	gtkimcontext.h	36;"	d
GTK_IM_CONTEXT_GET_CLASS	gtkimcontext.h	39;"	d
GTK_IM_CONTEXT_SIMPLE	gtkimcontextsimple.h	34;"	d
GTK_IM_CONTEXT_SIMPLE_CLASS	gtkimcontextsimple.h	35;"	d
GTK_IM_CONTEXT_SIMPLE_GET_CLASS	gtkimcontextsimple.h	38;"	d
GTK_IM_MULTICONTEXT	gtkimmulticontext.h	33;"	d
GTK_IM_MULTICONTEXT_CLASS	gtkimmulticontext.h	34;"	d
GTK_IM_MULTICONTEXT_GET_CLASS	gtkimmulticontext.h	37;"	d
GTK_IM_PREEDIT_CALLBACK	gtkenums.h	/^  GTK_IM_PREEDIT_CALLBACK,$/;"	e	enum:__anon56
GTK_IM_PREEDIT_NONE	gtkenums.h	/^  GTK_IM_PREEDIT_NONE$/;"	e	enum:__anon56
GTK_IM_PREEDIT_NOTHING	gtkenums.h	/^  GTK_IM_PREEDIT_NOTHING,$/;"	e	enum:__anon56
GTK_IM_STATUS_CALLBACK	gtkenums.h	/^  GTK_IM_STATUS_CALLBACK,$/;"	e	enum:__anon57
GTK_IM_STATUS_NONE	gtkenums.h	/^  GTK_IM_STATUS_NONE$/;"	e	enum:__anon57
GTK_IM_STATUS_NOTHING	gtkenums.h	/^  GTK_IM_STATUS_NOTHING,$/;"	e	enum:__anon57
GTK_INCHES	gtkenums.h	/^  GTK_INCHES,$/;"	e	enum:__anon29
GTK_INFO_BAR	gtkinfobar.h	47;"	d
GTK_INFO_BAR_CLASS	gtkinfobar.h	48;"	d
GTK_INFO_BAR_GET_CLASS	gtkinfobar.h	51;"	d
GTK_INPUT_DIALOG	gtkinputdialog.h	49;"	d
GTK_INPUT_DIALOG_CLASS	gtkinputdialog.h	50;"	d
GTK_INPUT_DIALOG_GET_CLASS	gtkinputdialog.h	53;"	d
GTK_INPUT_ERROR	gtkspinbutton.h	51;"	d
GTK_INTERFACE_AGE	gtkversion.h	40;"	d
GTK_INVISIBLE	gtkinvisible.h	39;"	d
GTK_INVISIBLE_CLASS	gtkinvisible.h	40;"	d
GTK_INVISIBLE_GET_CLASS	gtkinvisible.h	43;"	d
GTK_IN_DESTRUCTION	gtkobject.h	/^  GTK_IN_DESTRUCTION	= 1 << 0, \/* Used internally during dispose *\/$/;"	e	enum:__anon111
GTK_IS_ABOUT_DIALOG	gtkaboutdialog.h	39;"	d
GTK_IS_ABOUT_DIALOG_CLASS	gtkaboutdialog.h	40;"	d
GTK_IS_ACCEL_GROUP	gtkaccelgroup.h	45;"	d
GTK_IS_ACCEL_GROUP_CLASS	gtkaccelgroup.h	46;"	d
GTK_IS_ACCEL_LABEL	gtkaccellabel.h	46;"	d
GTK_IS_ACCEL_LABEL_CLASS	gtkaccellabel.h	47;"	d
GTK_IS_ACCEL_MAP	gtkaccelmap.h	36;"	d
GTK_IS_ACCEL_MAP_CLASS	gtkaccelmap.h	37;"	d
GTK_IS_ACCESSIBLE	gtkaccessible.h	35;"	d
GTK_IS_ACCESSIBLE_CLASS	gtkaccessible.h	36;"	d
GTK_IS_ACTION	gtkaction.h	45;"	d
GTK_IS_ACTION_CLASS	gtkaction.h	46;"	d
GTK_IS_ACTION_GROUP	gtkactiongroup.h	46;"	d
GTK_IS_ACTION_GROUP_CLASS	gtkactiongroup.h	47;"	d
GTK_IS_ACTIVATABLE	gtkactivatable.h	35;"	d
GTK_IS_ADJUSTMENT	gtkadjustment.h	43;"	d
GTK_IS_ADJUSTMENT_CLASS	gtkadjustment.h	44;"	d
GTK_IS_ALIGNMENT	gtkalignment.h	43;"	d
GTK_IS_ALIGNMENT_CLASS	gtkalignment.h	44;"	d
GTK_IS_ARROW	gtkarrow.h	44;"	d
GTK_IS_ARROW_CLASS	gtkarrow.h	45;"	d
GTK_IS_ASPECT_FRAME	gtkaspectframe.h	43;"	d
GTK_IS_ASPECT_FRAME_CLASS	gtkaspectframe.h	44;"	d
GTK_IS_ASSISTANT	gtkassistant.h	40;"	d
GTK_IS_ASSISTANT_CLASS	gtkassistant.h	41;"	d
GTK_IS_BIN	gtkbin.h	43;"	d
GTK_IS_BIN_CLASS	gtkbin.h	44;"	d
GTK_IS_BOX	gtkbox.h	44;"	d
GTK_IS_BOX_CLASS	gtkbox.h	45;"	d
GTK_IS_BUILDABLE	gtkbuildable.h	36;"	d
GTK_IS_BUILDER	gtkbuilder.h	36;"	d
GTK_IS_BUILDER_CLASS	gtkbuilder.h	37;"	d
GTK_IS_BUTTON	gtkbutton.h	44;"	d
GTK_IS_BUTTON_BOX	gtkbbox.h	42;"	d
GTK_IS_BUTTON_BOX_CLASS	gtkbbox.h	43;"	d
GTK_IS_BUTTON_CLASS	gtkbutton.h	45;"	d
GTK_IS_CALENDAR	gtkcalendar.h	48;"	d
GTK_IS_CALENDAR_CLASS	gtkcalendar.h	49;"	d
GTK_IS_CELL_EDITABLE	gtkcelleditable.h	34;"	d
GTK_IS_CELL_LAYOUT	gtkcelllayout.h	36;"	d
GTK_IS_CELL_RENDERER	gtkcellrenderer.h	51;"	d
GTK_IS_CELL_RENDERER_ACCEL	gtkcellrendereraccel.h	34;"	d
GTK_IS_CELL_RENDERER_ACCEL_CLASS	gtkcellrendereraccel.h	35;"	d
GTK_IS_CELL_RENDERER_CLASS	gtkcellrenderer.h	52;"	d
GTK_IS_CELL_RENDERER_COMBO	gtkcellrenderercombo.h	35;"	d
GTK_IS_CELL_RENDERER_COMBO_CLASS	gtkcellrenderercombo.h	36;"	d
GTK_IS_CELL_RENDERER_PIXBUF	gtkcellrendererpixbuf.h	36;"	d
GTK_IS_CELL_RENDERER_PIXBUF_CLASS	gtkcellrendererpixbuf.h	37;"	d
GTK_IS_CELL_RENDERER_PROGRESS	gtkcellrendererprogress.h	42;"	d
GTK_IS_CELL_RENDERER_PROGRESS_CLASS	gtkcellrendererprogress.h	43;"	d
GTK_IS_CELL_RENDERER_SPIN	gtkcellrendererspin.h	34;"	d
GTK_IS_CELL_RENDERER_SPINNER	gtkcellrendererspinner.h	37;"	d
GTK_IS_CELL_RENDERER_SPINNER_CLASS	gtkcellrendererspinner.h	38;"	d
GTK_IS_CELL_RENDERER_SPIN_CLASS	gtkcellrendererspin.h	35;"	d
GTK_IS_CELL_RENDERER_TEXT	gtkcellrenderertext.h	37;"	d
GTK_IS_CELL_RENDERER_TEXT_CLASS	gtkcellrenderertext.h	38;"	d
GTK_IS_CELL_RENDERER_TOGGLE	gtkcellrenderertoggle.h	36;"	d
GTK_IS_CELL_RENDERER_TOGGLE_CLASS	gtkcellrenderertoggle.h	37;"	d
GTK_IS_CELL_VIEW	gtkcellview.h	36;"	d
GTK_IS_CELL_VIEW_CLASS	gtkcellview.h	37;"	d
GTK_IS_CHECK_BUTTON	gtkcheckbutton.h	43;"	d
GTK_IS_CHECK_BUTTON_CLASS	gtkcheckbutton.h	44;"	d
GTK_IS_CHECK_MENU_ITEM	gtkcheckmenuitem.h	43;"	d
GTK_IS_CHECK_MENU_ITEM_CLASS	gtkcheckmenuitem.h	44;"	d
GTK_IS_CLIPBOARD	gtkclipboard.h	35;"	d
GTK_IS_CLIST	gtkclist.h	89;"	d
GTK_IS_CLIST_CLASS	gtkclist.h	90;"	d
GTK_IS_COLOR_BUTTON	gtkcolorbutton.h	54;"	d
GTK_IS_COLOR_BUTTON_CLASS	gtkcolorbutton.h	55;"	d
GTK_IS_COLOR_SELECTION	gtkcolorsel.h	43;"	d
GTK_IS_COLOR_SELECTION_CLASS	gtkcolorsel.h	44;"	d
GTK_IS_COLOR_SELECTION_DIALOG	gtkcolorseldialog.h	43;"	d
GTK_IS_COLOR_SELECTION_DIALOG_CLASS	gtkcolorseldialog.h	44;"	d
GTK_IS_COMBO	gtkcombo.h	40;"	d
GTK_IS_COMBO_BOX	gtkcombobox.h	36;"	d
GTK_IS_COMBO_BOX_CLASS	gtkcombobox.h	37;"	d
GTK_IS_COMBO_BOX_ENTRY	gtkcomboboxentry.h	37;"	d
GTK_IS_COMBO_BOX_ENTRY_CLASS	gtkcomboboxentry.h	38;"	d
GTK_IS_COMBO_BOX_TEXT	gtkcomboboxtext.h	33;"	d
GTK_IS_COMBO_BOX_TEXT_CLASS	gtkcomboboxtext.h	34;"	d
GTK_IS_COMBO_CLASS	gtkcombo.h	41;"	d
GTK_IS_CONTAINER	gtkcontainer.h	44;"	d
GTK_IS_CONTAINER_CLASS	gtkcontainer.h	45;"	d
GTK_IS_CTREE	gtkctree.h	43;"	d
GTK_IS_CTREE_CLASS	gtkctree.h	44;"	d
GTK_IS_CURVE	gtkcurve.h	41;"	d
GTK_IS_CURVE_CLASS	gtkcurve.h	42;"	d
GTK_IS_DIALOG	gtkdialog.h	89;"	d
GTK_IS_DIALOG_CLASS	gtkdialog.h	90;"	d
GTK_IS_DRAWING_AREA	gtkdrawingarea.h	43;"	d
GTK_IS_DRAWING_AREA_CLASS	gtkdrawingarea.h	44;"	d
GTK_IS_EDITABLE	gtkeditable.h	43;"	d
GTK_IS_EDITABLE_CLASS	gtkeditable.h	44;"	d
GTK_IS_ENTRY	gtkentry.h	53;"	d
GTK_IS_ENTRY_BUFFER	gtkentrybuffer.h	37;"	d
GTK_IS_ENTRY_BUFFER_CLASS	gtkentrybuffer.h	38;"	d
GTK_IS_ENTRY_CLASS	gtkentry.h	54;"	d
GTK_IS_ENTRY_COMPLETION	gtkentrycompletion.h	37;"	d
GTK_IS_ENTRY_COMPLETION_CLASS	gtkentrycompletion.h	38;"	d
GTK_IS_EVENT_BOX	gtkeventbox.h	43;"	d
GTK_IS_EVENT_BOX_CLASS	gtkeventbox.h	44;"	d
GTK_IS_EXPANDER	gtkexpander.h	38;"	d
GTK_IS_EXPANDER_CLASS	gtkexpander.h	39;"	d
GTK_IS_FILE_CHOOSER	gtkfilechooser.h	35;"	d
GTK_IS_FILE_CHOOSER_BUTTON	gtkfilechooserbutton.h	36;"	d
GTK_IS_FILE_CHOOSER_BUTTON_CLASS	gtkfilechooserbutton.h	37;"	d
GTK_IS_FILE_CHOOSER_DIALOG	gtkfilechooserdialog.h	36;"	d
GTK_IS_FILE_CHOOSER_DIALOG_CLASS	gtkfilechooserdialog.h	37;"	d
GTK_IS_FILE_CHOOSER_WIDGET	gtkfilechooserwidget.h	36;"	d
GTK_IS_FILE_CHOOSER_WIDGET_CLASS	gtkfilechooserwidget.h	37;"	d
GTK_IS_FILE_FILTER	gtkfilefilter.h	34;"	d
GTK_IS_FILE_SELECTION	gtkfilesel.h	41;"	d
GTK_IS_FILE_SELECTION_CLASS	gtkfilesel.h	42;"	d
GTK_IS_FIXED	gtkfixed.h	43;"	d
GTK_IS_FIXED_CLASS	gtkfixed.h	44;"	d
GTK_IS_FONT_BUTTON	gtkfontbutton.h	45;"	d
GTK_IS_FONT_BUTTON_CLASS	gtkfontbutton.h	46;"	d
GTK_IS_FONT_SELECTION	gtkfontsel.h	48;"	d
GTK_IS_FONT_SELECTION_CLASS	gtkfontsel.h	49;"	d
GTK_IS_FONT_SELECTION_DIALOG	gtkfontsel.h	56;"	d
GTK_IS_FONT_SELECTION_DIALOG_CLASS	gtkfontsel.h	57;"	d
GTK_IS_FRAME	gtkframe.h	44;"	d
GTK_IS_FRAME_CLASS	gtkframe.h	45;"	d
GTK_IS_GAMMA_CURVE	gtkgamma.h	41;"	d
GTK_IS_GAMMA_CURVE_CLASS	gtkgamma.h	42;"	d
GTK_IS_HANDLE_BOX	gtkhandlebox.h	48;"	d
GTK_IS_HANDLE_BOX_CLASS	gtkhandlebox.h	49;"	d
GTK_IS_HBOX	gtkhbox.h	43;"	d
GTK_IS_HBOX_CLASS	gtkhbox.h	44;"	d
GTK_IS_HBUTTON_BOX	gtkhbbox.h	43;"	d
GTK_IS_HBUTTON_BOX_CLASS	gtkhbbox.h	44;"	d
GTK_IS_HPANED	gtkhpaned.h	41;"	d
GTK_IS_HPANED_CLASS	gtkhpaned.h	42;"	d
GTK_IS_HRULER	gtkhruler.h	56;"	d
GTK_IS_HRULER_CLASS	gtkhruler.h	57;"	d
GTK_IS_HSCALE	gtkhscale.h	43;"	d
GTK_IS_HSCALE_CLASS	gtkhscale.h	44;"	d
GTK_IS_HSCROLLBAR	gtkhscrollbar.h	44;"	d
GTK_IS_HSCROLLBAR_CLASS	gtkhscrollbar.h	45;"	d
GTK_IS_HSEPARATOR	gtkhseparator.h	43;"	d
GTK_IS_HSEPARATOR_CLASS	gtkhseparator.h	44;"	d
GTK_IS_HSV	gtkhsv.h	46;"	d
GTK_IS_HSV_CLASS	gtkhsv.h	47;"	d
GTK_IS_ICON_FACTORY	gtkiconfactory.h	44;"	d
GTK_IS_ICON_FACTORY_CLASS	gtkiconfactory.h	45;"	d
GTK_IS_ICON_THEME	gtkicontheme.h	37;"	d
GTK_IS_ICON_THEME_CLASS	gtkicontheme.h	38;"	d
GTK_IS_ICON_VIEW	gtkiconview.h	38;"	d
GTK_IS_ICON_VIEW_CLASS	gtkiconview.h	39;"	d
GTK_IS_IMAGE	gtkimage.h	44;"	d
GTK_IS_IMAGE_CLASS	gtkimage.h	45;"	d
GTK_IS_IMAGE_MENU_ITEM	gtkimagemenuitem.h	43;"	d
GTK_IS_IMAGE_MENU_ITEM_CLASS	gtkimagemenuitem.h	44;"	d
GTK_IS_IM_CONTEXT	gtkimcontext.h	37;"	d
GTK_IS_IM_CONTEXT_CLASS	gtkimcontext.h	38;"	d
GTK_IS_IM_CONTEXT_SIMPLE	gtkimcontextsimple.h	36;"	d
GTK_IS_IM_CONTEXT_SIMPLE_CLASS	gtkimcontextsimple.h	37;"	d
GTK_IS_IM_MULTICONTEXT	gtkimmulticontext.h	35;"	d
GTK_IS_IM_MULTICONTEXT_CLASS	gtkimmulticontext.h	36;"	d
GTK_IS_INFO_BAR	gtkinfobar.h	49;"	d
GTK_IS_INFO_BAR_CLASS	gtkinfobar.h	50;"	d
GTK_IS_INPUT_DIALOG	gtkinputdialog.h	51;"	d
GTK_IS_INPUT_DIALOG_CLASS	gtkinputdialog.h	52;"	d
GTK_IS_INVISIBLE	gtkinvisible.h	41;"	d
GTK_IS_INVISIBLE_CLASS	gtkinvisible.h	42;"	d
GTK_IS_ITEM	gtkitem.h	43;"	d
GTK_IS_ITEM_CLASS	gtkitem.h	44;"	d
GTK_IS_ITEM_FACTORY	gtkitemfactory.h	55;"	d
GTK_IS_ITEM_FACTORY_CLASS	gtkitemfactory.h	56;"	d
GTK_IS_LABEL	gtklabel.h	44;"	d
GTK_IS_LABEL_CLASS	gtklabel.h	45;"	d
GTK_IS_LAYOUT	gtklayout.h	48;"	d
GTK_IS_LAYOUT_CLASS	gtklayout.h	49;"	d
GTK_IS_LINK_BUTTON	gtklinkbutton.h	38;"	d
GTK_IS_LINK_BUTTON_CLASS	gtklinkbutton.h	40;"	d
GTK_IS_LIST	gtklist.h	39;"	d
GTK_IS_LIST_CLASS	gtklist.h	40;"	d
GTK_IS_LIST_ITEM	gtklistitem.h	41;"	d
GTK_IS_LIST_ITEM_CLASS	gtklistitem.h	42;"	d
GTK_IS_LIST_STORE	gtkliststore.h	38;"	d
GTK_IS_LIST_STORE_CLASS	gtkliststore.h	39;"	d
GTK_IS_MENU	gtkmenu.h	44;"	d
GTK_IS_MENU_BAR	gtkmenubar.h	44;"	d
GTK_IS_MENU_BAR_CLASS	gtkmenubar.h	45;"	d
GTK_IS_MENU_CLASS	gtkmenu.h	45;"	d
GTK_IS_MENU_ITEM	gtkmenuitem.h	43;"	d
GTK_IS_MENU_ITEM_CLASS	gtkmenuitem.h	44;"	d
GTK_IS_MENU_SHELL	gtkmenushell.h	43;"	d
GTK_IS_MENU_SHELL_CLASS	gtkmenushell.h	44;"	d
GTK_IS_MENU_TOOL_BUTTON	gtkmenutoolbutton.h	37;"	d
GTK_IS_MENU_TOOL_BUTTON_CLASS	gtkmenutoolbutton.h	38;"	d
GTK_IS_MESSAGE_DIALOG	gtkmessagedialog.h	43;"	d
GTK_IS_MESSAGE_DIALOG_CLASS	gtkmessagedialog.h	44;"	d
GTK_IS_MISC	gtkmisc.h	43;"	d
GTK_IS_MISC_CLASS	gtkmisc.h	44;"	d
GTK_IS_MOUNT_OPERATION	gtkmountoperation.h	39;"	d
GTK_IS_MOUNT_OPERATION_CLASS	gtkmountoperation.h	40;"	d
GTK_IS_NOTEBOOK	gtknotebook.h	44;"	d
GTK_IS_NOTEBOOK_CLASS	gtknotebook.h	45;"	d
GTK_IS_OBJECT	gtkobject.h	50;"	d
GTK_IS_OBJECT_CLASS	gtkobject.h	51;"	d
GTK_IS_OFFSCREEN_WINDOW	gtkoffscreenwindow.h	35;"	d
GTK_IS_OFFSCREEN_WINDOW_CLASS	gtkoffscreenwindow.h	36;"	d
GTK_IS_OLD_EDITABLE	gtkoldeditable.h	40;"	d
GTK_IS_OLD_EDITABLE_CLASS	gtkoldeditable.h	41;"	d
GTK_IS_OPTION_MENU	gtkoptionmenu.h	40;"	d
GTK_IS_OPTION_MENU_CLASS	gtkoptionmenu.h	41;"	d
GTK_IS_ORIENTABLE	gtkorientable.h	38;"	d
GTK_IS_ORIENTABLE_CLASS	gtkorientable.h	39;"	d
GTK_IS_PAGE_SETUP	gtkpagesetup.h	38;"	d
GTK_IS_PANED	gtkpaned.h	41;"	d
GTK_IS_PANED_CLASS	gtkpaned.h	42;"	d
GTK_IS_PIXMAP	gtkpixmap.h	40;"	d
GTK_IS_PIXMAP_CLASS	gtkpixmap.h	41;"	d
GTK_IS_PLUG	gtkplug.h	43;"	d
GTK_IS_PLUG_CLASS	gtkplug.h	44;"	d
GTK_IS_PREVIEW	gtkpreview.h	40;"	d
GTK_IS_PREVIEW_CLASS	gtkpreview.h	41;"	d
GTK_IS_PRINT_CONTEXT	gtkprintcontext.h	39;"	d
GTK_IS_PRINT_OPERATION	gtkprintoperation.h	43;"	d
GTK_IS_PRINT_OPERATION_CLASS	gtkprintoperation.h	44;"	d
GTK_IS_PRINT_OPERATION_PREVIEW	gtkprintoperationpreview.h	35;"	d
GTK_IS_PRINT_SETTINGS	gtkprintsettings.h	36;"	d
GTK_IS_PROGRESS	gtkprogress.h	42;"	d
GTK_IS_PROGRESS_BAR	gtkprogressbar.h	43;"	d
GTK_IS_PROGRESS_BAR_CLASS	gtkprogressbar.h	44;"	d
GTK_IS_PROGRESS_CLASS	gtkprogress.h	43;"	d
GTK_IS_RADIO_ACTION	gtkradioaction.h	45;"	d
GTK_IS_RADIO_ACTION_CLASS	gtkradioaction.h	46;"	d
GTK_IS_RADIO_BUTTON	gtkradiobutton.h	43;"	d
GTK_IS_RADIO_BUTTON_CLASS	gtkradiobutton.h	44;"	d
GTK_IS_RADIO_MENU_ITEM	gtkradiomenuitem.h	43;"	d
GTK_IS_RADIO_MENU_ITEM_CLASS	gtkradiomenuitem.h	44;"	d
GTK_IS_RADIO_TOOL_BUTTON	gtkradiotoolbutton.h	37;"	d
GTK_IS_RADIO_TOOL_BUTTON_CLASS	gtkradiotoolbutton.h	38;"	d
GTK_IS_RANGE	gtkrange.h	45;"	d
GTK_IS_RANGE_CLASS	gtkrange.h	46;"	d
GTK_IS_RC_STYLE	gtkrc.h	48;"	d
GTK_IS_RC_STYLE_CLASS	gtkrc.h	49;"	d
GTK_IS_RECENT_ACTION	gtkrecentaction.h	36;"	d
GTK_IS_RECENT_ACTION_CLASS	gtkrecentaction.h	38;"	d
GTK_IS_RECENT_CHOOSER	gtkrecentchooser.h	37;"	d
GTK_IS_RECENT_CHOOSER_DIALOG	gtkrecentchooserdialog.h	35;"	d
GTK_IS_RECENT_CHOOSER_DIALOG_CLASS	gtkrecentchooserdialog.h	37;"	d
GTK_IS_RECENT_CHOOSER_MENU	gtkrecentchoosermenu.h	35;"	d
GTK_IS_RECENT_CHOOSER_MENU_CLASS	gtkrecentchoosermenu.h	37;"	d
GTK_IS_RECENT_CHOOSER_WIDGET	gtkrecentchooserwidget.h	35;"	d
GTK_IS_RECENT_CHOOSER_WIDGET_CLASS	gtkrecentchooserwidget.h	37;"	d
GTK_IS_RECENT_FILTER	gtkrecentfilter.h	34;"	d
GTK_IS_RECENT_MANAGER	gtkrecentmanager.h	38;"	d
GTK_IS_RECENT_MANAGER_CLASS	gtkrecentmanager.h	40;"	d
GTK_IS_RESIZE_CONTAINER	gtkcontainer.h	48;"	d
GTK_IS_ROOT_TREE	gtktree.h	49;"	d
GTK_IS_RULER	gtkruler.h	55;"	d
GTK_IS_RULER_CLASS	gtkruler.h	56;"	d
GTK_IS_SCALE	gtkscale.h	43;"	d
GTK_IS_SCALE_BUTTON	gtkscalebutton.h	50;"	d
GTK_IS_SCALE_BUTTON_CLASS	gtkscalebutton.h	51;"	d
GTK_IS_SCALE_CLASS	gtkscale.h	44;"	d
GTK_IS_SCROLLBAR	gtkscrollbar.h	43;"	d
GTK_IS_SCROLLBAR_CLASS	gtkscrollbar.h	44;"	d
GTK_IS_SCROLLED_WINDOW	gtkscrolledwindow.h	46;"	d
GTK_IS_SCROLLED_WINDOW_CLASS	gtkscrolledwindow.h	47;"	d
GTK_IS_SEPARATOR	gtkseparator.h	43;"	d
GTK_IS_SEPARATOR_CLASS	gtkseparator.h	44;"	d
GTK_IS_SEPARATOR_MENU_ITEM	gtkseparatormenuitem.h	43;"	d
GTK_IS_SEPARATOR_MENU_ITEM_CLASS	gtkseparatormenuitem.h	44;"	d
GTK_IS_SEPARATOR_TOOL_ITEM	gtkseparatortoolitem.h	36;"	d
GTK_IS_SEPARATOR_TOOL_ITEM_CLASS	gtkseparatortoolitem.h	37;"	d
GTK_IS_SETTINGS	gtksettings.h	35;"	d
GTK_IS_SETTINGS_CLASS	gtksettings.h	36;"	d
GTK_IS_SIZE_GROUP	gtksizegroup.h	35;"	d
GTK_IS_SIZE_GROUP_CLASS	gtksizegroup.h	36;"	d
GTK_IS_SOCKET	gtksocket.h	40;"	d
GTK_IS_SOCKET_CLASS	gtksocket.h	41;"	d
GTK_IS_SPINNER	gtkspinner.h	39;"	d
GTK_IS_SPINNER_CLASS	gtkspinner.h	40;"	d
GTK_IS_SPIN_BUTTON	gtkspinbutton.h	47;"	d
GTK_IS_SPIN_BUTTON_CLASS	gtkspinbutton.h	48;"	d
GTK_IS_STATUSBAR	gtkstatusbar.h	42;"	d
GTK_IS_STATUSBAR_CLASS	gtkstatusbar.h	43;"	d
GTK_IS_STATUS_ICON	gtkstatusicon.h	39;"	d
GTK_IS_STATUS_ICON_CLASS	gtkstatusicon.h	40;"	d
GTK_IS_STYLE	gtkstyle.h	44;"	d
GTK_IS_STYLE_CLASS	gtkstyle.h	45;"	d
GTK_IS_TABLE	gtktable.h	43;"	d
GTK_IS_TABLE_CLASS	gtktable.h	44;"	d
GTK_IS_TEAROFF_MENU_ITEM	gtktearoffmenuitem.h	43;"	d
GTK_IS_TEAROFF_MENU_ITEM_CLASS	gtktearoffmenuitem.h	44;"	d
GTK_IS_TEXT	gtktext.h	41;"	d
GTK_IS_TEXT_BUFFER	gtktextbuffer.h	68;"	d
GTK_IS_TEXT_BUFFER_CLASS	gtktextbuffer.h	69;"	d
GTK_IS_TEXT_CHILD_ANCHOR	gtktextchild.h	51;"	d
GTK_IS_TEXT_CHILD_ANCHOR_CLASS	gtktextchild.h	52;"	d
GTK_IS_TEXT_CLASS	gtktext.h	42;"	d
GTK_IS_TEXT_LAYOUT	gtktextlayout.h	105;"	d
GTK_IS_TEXT_LAYOUT_CLASS	gtktextlayout.h	106;"	d
GTK_IS_TEXT_MARK	gtktextmark.h	67;"	d
GTK_IS_TEXT_MARK_CLASS	gtktextmark.h	68;"	d
GTK_IS_TEXT_TAG	gtktexttag.h	75;"	d
GTK_IS_TEXT_TAG_CLASS	gtktexttag.h	76;"	d
GTK_IS_TEXT_TAG_TABLE	gtktexttagtable.h	43;"	d
GTK_IS_TEXT_TAG_TABLE_CLASS	gtktexttagtable.h	44;"	d
GTK_IS_TEXT_VIEW	gtktextview.h	44;"	d
GTK_IS_TEXT_VIEW_CLASS	gtktextview.h	45;"	d
GTK_IS_TIPS_QUERY	gtktipsquery.h	45;"	d
GTK_IS_TIPS_QUERY_CLASS	gtktipsquery.h	46;"	d
GTK_IS_TOGGLE_ACTION	gtktoggleaction.h	45;"	d
GTK_IS_TOGGLE_ACTION_CLASS	gtktoggleaction.h	46;"	d
GTK_IS_TOGGLE_BUTTON	gtktogglebutton.h	43;"	d
GTK_IS_TOGGLE_BUTTON_CLASS	gtktogglebutton.h	44;"	d
GTK_IS_TOGGLE_TOOL_BUTTON	gtktoggletoolbutton.h	37;"	d
GTK_IS_TOGGLE_TOOL_BUTTON_CLASS	gtktoggletoolbutton.h	38;"	d
GTK_IS_TOOLBAR	gtktoolbar.h	57;"	d
GTK_IS_TOOLBAR_CLASS	gtktoolbar.h	58;"	d
GTK_IS_TOOLTIP	gtktooltip.h	35;"	d
GTK_IS_TOOLTIPS	gtktooltips.h	41;"	d
GTK_IS_TOOLTIPS_CLASS	gtktooltips.h	42;"	d
GTK_IS_TOOL_BUTTON	gtktoolbutton.h	37;"	d
GTK_IS_TOOL_BUTTON_CLASS	gtktoolbutton.h	38;"	d
GTK_IS_TOOL_ITEM	gtktoolitem.h	40;"	d
GTK_IS_TOOL_ITEM_CLASS	gtktoolitem.h	41;"	d
GTK_IS_TOOL_ITEM_GROUP	gtktoolitemgroup.h	37;"	d
GTK_IS_TOOL_ITEM_GROUP_CLASS	gtktoolitemgroup.h	38;"	d
GTK_IS_TOOL_PALETTE	gtktoolpalette.h	38;"	d
GTK_IS_TOOL_PALETTE_CLASS	gtktoolpalette.h	39;"	d
GTK_IS_TOOL_SHELL	gtktoolshell.h	40;"	d
GTK_IS_TREE	gtktree.h	44;"	d
GTK_IS_TREE_CLASS	gtktree.h	45;"	d
GTK_IS_TREE_DRAG_DEST	gtktreednd.h	76;"	d
GTK_IS_TREE_DRAG_SOURCE	gtktreednd.h	34;"	d
GTK_IS_TREE_ITEM	gtktreeitem.h	41;"	d
GTK_IS_TREE_ITEM_CLASS	gtktreeitem.h	42;"	d
GTK_IS_TREE_MODEL	gtktreemodel.h	36;"	d
GTK_IS_TREE_MODEL_FILTER	gtktreemodelfilter.h	36;"	d
GTK_IS_TREE_MODEL_FILTER_CLASS	gtktreemodelfilter.h	37;"	d
GTK_IS_TREE_MODEL_SORT	gtktreemodelsort.h	36;"	d
GTK_IS_TREE_MODEL_SORT_CLASS	gtktreemodelsort.h	37;"	d
GTK_IS_TREE_SELECTION	gtktreeselection.h	35;"	d
GTK_IS_TREE_SELECTION_CLASS	gtktreeselection.h	36;"	d
GTK_IS_TREE_SORTABLE	gtktreesortable.h	37;"	d
GTK_IS_TREE_STORE	gtktreestore.h	39;"	d
GTK_IS_TREE_STORE_CLASS	gtktreestore.h	40;"	d
GTK_IS_TREE_VIEW	gtktreeview.h	51;"	d
GTK_IS_TREE_VIEW_CLASS	gtktreeview.h	52;"	d
GTK_IS_TREE_VIEW_COLUMN	gtktreeviewcolumn.h	41;"	d
GTK_IS_TREE_VIEW_COLUMN_CLASS	gtktreeviewcolumn.h	42;"	d
GTK_IS_UI_MANAGER	gtkuimanager.h	48;"	d
GTK_IS_UI_MANAGER_CLASS	gtkuimanager.h	49;"	d
GTK_IS_VBOX	gtkvbox.h	43;"	d
GTK_IS_VBOX_CLASS	gtkvbox.h	44;"	d
GTK_IS_VBUTTON_BOX	gtkvbbox.h	44;"	d
GTK_IS_VBUTTON_BOX_CLASS	gtkvbbox.h	45;"	d
GTK_IS_VIEWPORT	gtkviewport.h	45;"	d
GTK_IS_VIEWPORT_CLASS	gtkviewport.h	46;"	d
GTK_IS_VOLUME_BUTTON	gtkvolumebutton.h	44;"	d
GTK_IS_VOLUME_BUTTON_CLASS	gtkvolumebutton.h	45;"	d
GTK_IS_VPANED	gtkvpaned.h	41;"	d
GTK_IS_VPANED_CLASS	gtkvpaned.h	42;"	d
GTK_IS_VRULER	gtkvruler.h	56;"	d
GTK_IS_VRULER_CLASS	gtkvruler.h	57;"	d
GTK_IS_VSCALE	gtkvscale.h	44;"	d
GTK_IS_VSCALE_CLASS	gtkvscale.h	45;"	d
GTK_IS_VSCROLLBAR	gtkvscrollbar.h	44;"	d
GTK_IS_VSCROLLBAR_CLASS	gtkvscrollbar.h	45;"	d
GTK_IS_VSEPARATOR	gtkvseparator.h	44;"	d
GTK_IS_VSEPARATOR_CLASS	gtkvseparator.h	45;"	d
GTK_IS_WIDGET	gtkwidget.h	139;"	d
GTK_IS_WIDGET_CLASS	gtkwidget.h	140;"	d
GTK_IS_WINDOW	gtkwindow.h	44;"	d
GTK_IS_WINDOW_CLASS	gtkwindow.h	45;"	d
GTK_IS_WINDOW_GROUP	gtkwindow.h	150;"	d
GTK_IS_WINDOW_GROUP_CLASS	gtkwindow.h	151;"	d
GTK_ITEM	gtkitem.h	41;"	d
GTK_ITEM_CLASS	gtkitem.h	42;"	d
GTK_ITEM_FACTORY	gtkitemfactory.h	53;"	d
GTK_ITEM_FACTORY_CLASS	gtkitemfactory.h	54;"	d
GTK_ITEM_FACTORY_GET_CLASS	gtkitemfactory.h	57;"	d
GTK_ITEM_GET_CLASS	gtkitem.h	45;"	d
GTK_JUSTIFY_CENTER	gtkenums.h	/^  GTK_JUSTIFY_CENTER,$/;"	e	enum:__anon25
GTK_JUSTIFY_FILL	gtkenums.h	/^  GTK_JUSTIFY_FILL$/;"	e	enum:__anon25
GTK_JUSTIFY_LEFT	gtkenums.h	/^  GTK_JUSTIFY_LEFT,$/;"	e	enum:__anon25
GTK_JUSTIFY_RIGHT	gtkenums.h	/^  GTK_JUSTIFY_RIGHT,$/;"	e	enum:__anon25
GTK_LABEL	gtklabel.h	42;"	d
GTK_LABEL_CLASS	gtklabel.h	43;"	d
GTK_LABEL_GET_CLASS	gtklabel.h	46;"	d
GTK_LAYOUT	gtklayout.h	46;"	d
GTK_LAYOUT_CLASS	gtklayout.h	47;"	d
GTK_LAYOUT_GET_CLASS	gtklayout.h	50;"	d
GTK_LEFT_RIGHT	gtkenums.h	/^  GTK_LEFT_RIGHT$/;"	e	enum:__anon48
GTK_LIBDIR	gtkprivate.h	88;"	d
GTK_LIBDIR	gtkprivate.h	89;"	d
GTK_LINK_BUTTON	gtklinkbutton.h	37;"	d
GTK_LINK_BUTTON_CLASS	gtklinkbutton.h	39;"	d
GTK_LINK_BUTTON_GET_CLASS	gtklinkbutton.h	41;"	d
GTK_LIST	gtklist.h	37;"	d
GTK_LIST_CLASS	gtklist.h	38;"	d
GTK_LIST_GET_CLASS	gtklist.h	41;"	d
GTK_LIST_ITEM	gtklistitem.h	39;"	d
GTK_LIST_ITEM_CLASS	gtklistitem.h	40;"	d
GTK_LIST_ITEM_GET_CLASS	gtklistitem.h	43;"	d
GTK_LIST_STORE	gtkliststore.h	36;"	d
GTK_LIST_STORE_CLASS	gtkliststore.h	37;"	d
GTK_LIST_STORE_GET_CLASS	gtkliststore.h	40;"	d
GTK_LOCALEDIR	gtkprivate.h	90;"	d
GTK_LOCALEDIR	gtkprivate.h	91;"	d
GTK_MAJOR_VERSION	gtkversion.h	36;"	d
GTK_MAPPED	gtkwidget.h	/^  GTK_MAPPED           = 1 << 7,$/;"	e	enum:__anon77
GTK_MATCH_ALL	gtkenums.h	/^  GTK_MATCH_ALL,       \/* "*A?A*" *\/$/;"	e	enum:__anon26
GTK_MATCH_ALL_TAIL	gtkenums.h	/^  GTK_MATCH_ALL_TAIL,  \/* "*A?AA" *\/$/;"	e	enum:__anon26
GTK_MATCH_EXACT	gtkenums.h	/^  GTK_MATCH_EXACT,     \/* "AAAAA" *\/$/;"	e	enum:__anon26
GTK_MATCH_HEAD	gtkenums.h	/^  GTK_MATCH_HEAD,      \/* "AAAA*" *\/$/;"	e	enum:__anon26
GTK_MATCH_LAST	gtkenums.h	/^  GTK_MATCH_LAST$/;"	e	enum:__anon26
GTK_MATCH_TAIL	gtkenums.h	/^  GTK_MATCH_TAIL,      \/* "*AAAA" *\/$/;"	e	enum:__anon26
GTK_MAX_COMPOSE_LEN	gtkimcontextsimple.h	44;"	d
GTK_MENU	gtkmenu.h	42;"	d
GTK_MENU_BAR	gtkmenubar.h	42;"	d
GTK_MENU_BAR_CLASS	gtkmenubar.h	43;"	d
GTK_MENU_BAR_GET_CLASS	gtkmenubar.h	46;"	d
GTK_MENU_CLASS	gtkmenu.h	43;"	d
GTK_MENU_DIR_CHILD	gtkenums.h	/^  GTK_MENU_DIR_CHILD,$/;"	e	enum:__anon27
GTK_MENU_DIR_NEXT	gtkenums.h	/^  GTK_MENU_DIR_NEXT,$/;"	e	enum:__anon27
GTK_MENU_DIR_PARENT	gtkenums.h	/^  GTK_MENU_DIR_PARENT,$/;"	e	enum:__anon27
GTK_MENU_DIR_PREV	gtkenums.h	/^  GTK_MENU_DIR_PREV$/;"	e	enum:__anon27
GTK_MENU_GET_CLASS	gtkmenu.h	46;"	d
GTK_MENU_ITEM	gtkmenuitem.h	41;"	d
GTK_MENU_ITEM_CLASS	gtkmenuitem.h	42;"	d
GTK_MENU_ITEM_GET_CLASS	gtkmenuitem.h	45;"	d
GTK_MENU_SHELL	gtkmenushell.h	41;"	d
GTK_MENU_SHELL_CLASS	gtkmenushell.h	42;"	d
GTK_MENU_SHELL_GET_CLASS	gtkmenushell.h	45;"	d
GTK_MENU_TOOL_BUTTON	gtkmenutoolbutton.h	35;"	d
GTK_MENU_TOOL_BUTTON_CLASS	gtkmenutoolbutton.h	36;"	d
GTK_MENU_TOOL_BUTTON_GET_CLASS	gtkmenutoolbutton.h	39;"	d
GTK_MESSAGE_DIALOG	gtkmessagedialog.h	41;"	d
GTK_MESSAGE_DIALOG_CLASS	gtkmessagedialog.h	42;"	d
GTK_MESSAGE_DIALOG_GET_CLASS	gtkmessagedialog.h	45;"	d
GTK_MESSAGE_ERROR	gtkenums.h	/^  GTK_MESSAGE_ERROR,$/;"	e	enum:__anon28
GTK_MESSAGE_INFO	gtkenums.h	/^  GTK_MESSAGE_INFO,$/;"	e	enum:__anon28
GTK_MESSAGE_OTHER	gtkenums.h	/^  GTK_MESSAGE_OTHER$/;"	e	enum:__anon28
GTK_MESSAGE_QUESTION	gtkenums.h	/^  GTK_MESSAGE_QUESTION,$/;"	e	enum:__anon28
GTK_MESSAGE_WARNING	gtkenums.h	/^  GTK_MESSAGE_WARNING,$/;"	e	enum:__anon28
GTK_MICRO_VERSION	gtkversion.h	38;"	d
GTK_MINOR_VERSION	gtkversion.h	37;"	d
GTK_MISC	gtkmisc.h	41;"	d
GTK_MISC_CLASS	gtkmisc.h	42;"	d
GTK_MISC_GET_CLASS	gtkmisc.h	45;"	d
GTK_MODIFY_SELECTION_MOD_MASK	gtkprivate.h	130;"	d
GTK_MODIFY_SELECTION_MOD_MASK	gtkprivate.h	133;"	d
GTK_MOUNT_OPERATION	gtkmountoperation.h	37;"	d
GTK_MOUNT_OPERATION_CLASS	gtkmountoperation.h	38;"	d
GTK_MOUNT_OPERATION_GET_CLASS	gtkmountoperation.h	41;"	d
GTK_MOVEMENT_BUFFER_ENDS	gtkenums.h	/^  GTK_MOVEMENT_BUFFER_ENDS,       \/* move to ends of the buffer *\/$/;"	e	enum:__anon30
GTK_MOVEMENT_DISPLAY_LINES	gtkenums.h	/^  GTK_MOVEMENT_DISPLAY_LINES,     \/* move up\/down lines (wrapped lines) *\/$/;"	e	enum:__anon30
GTK_MOVEMENT_DISPLAY_LINE_ENDS	gtkenums.h	/^  GTK_MOVEMENT_DISPLAY_LINE_ENDS, \/* move to either end of a line *\/$/;"	e	enum:__anon30
GTK_MOVEMENT_HORIZONTAL_PAGES	gtkenums.h	/^  GTK_MOVEMENT_HORIZONTAL_PAGES   \/* move horizontally by pages *\/$/;"	e	enum:__anon30
GTK_MOVEMENT_LOGICAL_POSITIONS	gtkenums.h	/^  GTK_MOVEMENT_LOGICAL_POSITIONS, \/* move by forw\/back graphemes *\/$/;"	e	enum:__anon30
GTK_MOVEMENT_PAGES	gtkenums.h	/^  GTK_MOVEMENT_PAGES,	          \/* move by pages *\/$/;"	e	enum:__anon30
GTK_MOVEMENT_PARAGRAPHS	gtkenums.h	/^  GTK_MOVEMENT_PARAGRAPHS,        \/* move up\/down paragraphs (newline-ended lines) *\/$/;"	e	enum:__anon30
GTK_MOVEMENT_PARAGRAPH_ENDS	gtkenums.h	/^  GTK_MOVEMENT_PARAGRAPH_ENDS,    \/* move to either end of a paragraph *\/$/;"	e	enum:__anon30
GTK_MOVEMENT_VISUAL_POSITIONS	gtkenums.h	/^  GTK_MOVEMENT_VISUAL_POSITIONS,  \/* move by left\/right graphemes *\/$/;"	e	enum:__anon30
GTK_MOVEMENT_WORDS	gtkenums.h	/^  GTK_MOVEMENT_WORDS,             \/* move by forward\/back words *\/$/;"	e	enum:__anon30
GTK_NOTE	gtkdebug.h	55;"	d
GTK_NOTE	gtkdebug.h	61;"	d
GTK_NOTEBOOK	gtknotebook.h	42;"	d
GTK_NOTEBOOK_CLASS	gtknotebook.h	43;"	d
GTK_NOTEBOOK_GET_CLASS	gtknotebook.h	46;"	d
GTK_NOTEBOOK_TAB_FIRST	gtknotebook.h	/^  GTK_NOTEBOOK_TAB_FIRST,$/;"	e	enum:__anon116
GTK_NOTEBOOK_TAB_LAST	gtknotebook.h	/^  GTK_NOTEBOOK_TAB_LAST$/;"	e	enum:__anon116
GTK_NO_REPARENT	gtkwidget.h	/^  GTK_NO_REPARENT      = 1 << 18,$/;"	e	enum:__anon77
GTK_NO_SHOW_ALL	gtkwidget.h	/^  GTK_NO_SHOW_ALL      = 1 << 22$/;"	e	enum:__anon77
GTK_NO_TEXT_INPUT_MOD_MASK	gtkprivate.h	123;"	d
GTK_NO_TEXT_INPUT_MOD_MASK	gtkprivate.h	125;"	d
GTK_NO_WINDOW	gtkwidget.h	/^  GTK_NO_WINDOW        = 1 << 5,$/;"	e	enum:__anon77
GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT	gtkenums.h	/^  GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT, \/*< nick=btlr >*\/$/;"	e	enum:__anon61
GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT	gtkenums.h	/^  GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT  \/*< nick=btrl >*\/$/;"	e	enum:__anon61
GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP	gtkenums.h	/^  GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP, \/*< nick=lrbt >*\/$/;"	e	enum:__anon61
GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM	gtkenums.h	/^  GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM, \/*< nick=lrtb >*\/$/;"	e	enum:__anon61
GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP	gtkenums.h	/^  GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP, \/*< nick=rlbt >*\/$/;"	e	enum:__anon61
GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM	gtkenums.h	/^  GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM, \/*< nick=rltb >*\/$/;"	e	enum:__anon61
GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT	gtkenums.h	/^  GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT, \/*< nick=tblr >*\/$/;"	e	enum:__anon61
GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT	gtkenums.h	/^  GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT, \/*< nick=tbrl >*\/$/;"	e	enum:__anon61
GTK_OBJECT	gtkobject.h	48;"	d
GTK_OBJECT_CLASS	gtkobject.h	49;"	d
GTK_OBJECT_FLAGS	gtkobject.h	93;"	d
GTK_OBJECT_FLOATING	gtkobject.h	95;"	d
GTK_OBJECT_GET_CLASS	gtkobject.h	52;"	d
GTK_OBJECT_SET_FLAGS	gtkobject.h	100;"	d
GTK_OBJECT_TYPE	gtkobject.h	65;"	d
GTK_OBJECT_TYPE_NAME	gtkobject.h	74;"	d
GTK_OBJECT_UNSET_FLAGS	gtkobject.h	101;"	d
GTK_OFFSCREEN_WINDOW	gtkoffscreenwindow.h	33;"	d
GTK_OFFSCREEN_WINDOW_CLASS	gtkoffscreenwindow.h	34;"	d
GTK_OFFSCREEN_WINDOW_GET_CLASS	gtkoffscreenwindow.h	37;"	d
GTK_OLD_EDITABLE	gtkoldeditable.h	38;"	d
GTK_OLD_EDITABLE_CLASS	gtkoldeditable.h	39;"	d
GTK_OLD_EDITABLE_GET_CLASS	gtkoldeditable.h	42;"	d
GTK_OPTION_MENU	gtkoptionmenu.h	38;"	d
GTK_OPTION_MENU_CLASS	gtkoptionmenu.h	39;"	d
GTK_OPTION_MENU_GET_CLASS	gtkoptionmenu.h	42;"	d
GTK_ORIENTABLE	gtkorientable.h	36;"	d
GTK_ORIENTABLE_CLASS	gtkorientable.h	37;"	d
GTK_ORIENTABLE_GET_IFACE	gtkorientable.h	40;"	d
GTK_ORIENTATION_HORIZONTAL	gtkenums.h	/^  GTK_ORIENTATION_HORIZONTAL,$/;"	e	enum:__anon32
GTK_ORIENTATION_VERTICAL	gtkenums.h	/^  GTK_ORIENTATION_VERTICAL$/;"	e	enum:__anon32
GTK_PACK_DIRECTION_BTT	gtkenums.h	/^  GTK_PACK_DIRECTION_BTT$/;"	e	enum:__anon58
GTK_PACK_DIRECTION_LTR	gtkenums.h	/^  GTK_PACK_DIRECTION_LTR,$/;"	e	enum:__anon58
GTK_PACK_DIRECTION_RTL	gtkenums.h	/^  GTK_PACK_DIRECTION_RTL,$/;"	e	enum:__anon58
GTK_PACK_DIRECTION_TTB	gtkenums.h	/^  GTK_PACK_DIRECTION_TTB,$/;"	e	enum:__anon58
GTK_PACK_END	gtkenums.h	/^  GTK_PACK_END$/;"	e	enum:__anon34
GTK_PACK_START	gtkenums.h	/^  GTK_PACK_START,$/;"	e	enum:__anon34
GTK_PAGE_ORIENTATION_LANDSCAPE	gtkenums.h	/^  GTK_PAGE_ORIENTATION_LANDSCAPE,$/;"	e	enum:__anon62
GTK_PAGE_ORIENTATION_PORTRAIT	gtkenums.h	/^  GTK_PAGE_ORIENTATION_PORTRAIT,$/;"	e	enum:__anon62
GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE	gtkenums.h	/^  GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE$/;"	e	enum:__anon62
GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT	gtkenums.h	/^  GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT,$/;"	e	enum:__anon62
GTK_PAGE_SETUP	gtkpagesetup.h	37;"	d
GTK_PAGE_SET_ALL	gtkenums.h	/^  GTK_PAGE_SET_ALL,$/;"	e	enum:__anon60
GTK_PAGE_SET_EVEN	gtkenums.h	/^  GTK_PAGE_SET_EVEN,$/;"	e	enum:__anon60
GTK_PAGE_SET_ODD	gtkenums.h	/^  GTK_PAGE_SET_ODD$/;"	e	enum:__anon60
GTK_PANED	gtkpaned.h	39;"	d
GTK_PANED_CLASS	gtkpaned.h	40;"	d
GTK_PANED_GET_CLASS	gtkpaned.h	43;"	d
GTK_PAPER_NAME_A3	gtkpapersize.h	39;"	d
GTK_PAPER_NAME_A4	gtkpapersize.h	40;"	d
GTK_PAPER_NAME_A5	gtkpapersize.h	41;"	d
GTK_PAPER_NAME_B5	gtkpapersize.h	42;"	d
GTK_PAPER_NAME_EXECUTIVE	gtkpapersize.h	44;"	d
GTK_PAPER_NAME_LEGAL	gtkpapersize.h	45;"	d
GTK_PAPER_NAME_LETTER	gtkpapersize.h	43;"	d
GTK_PARAM_READABLE	gtkprivate.h	103;"	d
GTK_PARAM_READWRITE	gtkprivate.h	105;"	d
GTK_PARAM_WRITABLE	gtkprivate.h	104;"	d
GTK_PARENT_SENSITIVE	gtkwidget.h	/^  GTK_PARENT_SENSITIVE = 1 << 10,$/;"	e	enum:__anon77
GTK_PATH_CLASS	gtkenums.h	/^  GTK_PATH_CLASS$/;"	e	enum:__anon36
GTK_PATH_PRIO_APPLICATION	gtkenums.h	/^  GTK_PATH_PRIO_APPLICATION = 8,$/;"	e	enum:__anon35
GTK_PATH_PRIO_GTK	gtkenums.h	/^  GTK_PATH_PRIO_GTK	    = 4,$/;"	e	enum:__anon35
GTK_PATH_PRIO_HIGHEST	gtkenums.h	/^  GTK_PATH_PRIO_HIGHEST     = 15$/;"	e	enum:__anon35
GTK_PATH_PRIO_LOWEST	gtkenums.h	/^  GTK_PATH_PRIO_LOWEST      = 0,$/;"	e	enum:__anon35
GTK_PATH_PRIO_MASK	gtkenums.h	294;"	d
GTK_PATH_PRIO_RC	gtkenums.h	/^  GTK_PATH_PRIO_RC          = 12,$/;"	e	enum:__anon35
GTK_PATH_PRIO_THEME	gtkenums.h	/^  GTK_PATH_PRIO_THEME       = 10,$/;"	e	enum:__anon35
GTK_PATH_WIDGET	gtkenums.h	/^  GTK_PATH_WIDGET,$/;"	e	enum:__anon36
GTK_PATH_WIDGET_CLASS	gtkenums.h	/^  GTK_PATH_WIDGET_CLASS,$/;"	e	enum:__anon36
GTK_PIXELS	gtkenums.h	/^  GTK_PIXELS,$/;"	e	enum:__anon29
GTK_PIXMAP	gtkpixmap.h	38;"	d
GTK_PIXMAP_CLASS	gtkpixmap.h	39;"	d
GTK_PIXMAP_GET_CLASS	gtkpixmap.h	42;"	d
GTK_PLUG	gtkplug.h	41;"	d
GTK_PLUG_CLASS	gtkplug.h	42;"	d
GTK_PLUG_GET_CLASS	gtkplug.h	45;"	d
GTK_POLICY_ALWAYS	gtkenums.h	/^  GTK_POLICY_ALWAYS,$/;"	e	enum:__anon37
GTK_POLICY_AUTOMATIC	gtkenums.h	/^  GTK_POLICY_AUTOMATIC,$/;"	e	enum:__anon37
GTK_POLICY_NEVER	gtkenums.h	/^  GTK_POLICY_NEVER$/;"	e	enum:__anon37
GTK_POS_BOTTOM	gtkenums.h	/^  GTK_POS_BOTTOM$/;"	e	enum:__anon38
GTK_POS_LEFT	gtkenums.h	/^  GTK_POS_LEFT,$/;"	e	enum:__anon38
GTK_POS_RIGHT	gtkenums.h	/^  GTK_POS_RIGHT,$/;"	e	enum:__anon38
GTK_POS_TOP	gtkenums.h	/^  GTK_POS_TOP,$/;"	e	enum:__anon38
GTK_PREVIEW	gtkpreview.h	38;"	d
GTK_PREVIEW_CLASS	gtkpreview.h	39;"	d
GTK_PREVIEW_COLOR	gtkenums.h	/^  GTK_PREVIEW_COLOR,$/;"	e	enum:__anon39
GTK_PREVIEW_GET_CLASS	gtkpreview.h	42;"	d
GTK_PREVIEW_GRAYSCALE	gtkenums.h	/^  GTK_PREVIEW_GRAYSCALE$/;"	e	enum:__anon39
GTK_PRINT_CONTEXT	gtkprintcontext.h	38;"	d
GTK_PRINT_DUPLEX_HORIZONTAL	gtkenums.h	/^  GTK_PRINT_DUPLEX_HORIZONTAL,$/;"	e	enum:__anon64
GTK_PRINT_DUPLEX_SIMPLEX	gtkenums.h	/^  GTK_PRINT_DUPLEX_SIMPLEX,$/;"	e	enum:__anon64
GTK_PRINT_DUPLEX_VERTICAL	gtkenums.h	/^  GTK_PRINT_DUPLEX_VERTICAL$/;"	e	enum:__anon64
GTK_PRINT_ERROR	gtkprintoperation.h	129;"	d
GTK_PRINT_ERROR_GENERAL	gtkprintoperation.h	/^  GTK_PRINT_ERROR_GENERAL,$/;"	e	enum:__anon128
GTK_PRINT_ERROR_INTERNAL_ERROR	gtkprintoperation.h	/^  GTK_PRINT_ERROR_INTERNAL_ERROR,$/;"	e	enum:__anon128
GTK_PRINT_ERROR_INVALID_FILE	gtkprintoperation.h	/^  GTK_PRINT_ERROR_INVALID_FILE$/;"	e	enum:__anon128
GTK_PRINT_ERROR_NOMEM	gtkprintoperation.h	/^  GTK_PRINT_ERROR_NOMEM,$/;"	e	enum:__anon128
GTK_PRINT_OPERATION	gtkprintoperation.h	41;"	d
GTK_PRINT_OPERATION_ACTION_EXPORT	gtkprintoperation.h	/^  GTK_PRINT_OPERATION_ACTION_EXPORT$/;"	e	enum:__anon127
GTK_PRINT_OPERATION_ACTION_PREVIEW	gtkprintoperation.h	/^  GTK_PRINT_OPERATION_ACTION_PREVIEW,$/;"	e	enum:__anon127
GTK_PRINT_OPERATION_ACTION_PRINT	gtkprintoperation.h	/^  GTK_PRINT_OPERATION_ACTION_PRINT,$/;"	e	enum:__anon127
GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG	gtkprintoperation.h	/^  GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG,$/;"	e	enum:__anon127
GTK_PRINT_OPERATION_CLASS	gtkprintoperation.h	42;"	d
GTK_PRINT_OPERATION_GET_CLASS	gtkprintoperation.h	45;"	d
GTK_PRINT_OPERATION_PREVIEW	gtkprintoperationpreview.h	34;"	d
GTK_PRINT_OPERATION_PREVIEW_GET_IFACE	gtkprintoperationpreview.h	36;"	d
GTK_PRINT_OPERATION_RESULT_APPLY	gtkprintoperation.h	/^  GTK_PRINT_OPERATION_RESULT_APPLY,$/;"	e	enum:__anon126
GTK_PRINT_OPERATION_RESULT_CANCEL	gtkprintoperation.h	/^  GTK_PRINT_OPERATION_RESULT_CANCEL,$/;"	e	enum:__anon126
GTK_PRINT_OPERATION_RESULT_ERROR	gtkprintoperation.h	/^  GTK_PRINT_OPERATION_RESULT_ERROR,$/;"	e	enum:__anon126
GTK_PRINT_OPERATION_RESULT_IN_PROGRESS	gtkprintoperation.h	/^  GTK_PRINT_OPERATION_RESULT_IN_PROGRESS$/;"	e	enum:__anon126
GTK_PRINT_PAGES_ALL	gtkenums.h	/^  GTK_PRINT_PAGES_ALL,$/;"	e	enum:__anon59
GTK_PRINT_PAGES_CURRENT	gtkenums.h	/^  GTK_PRINT_PAGES_CURRENT,$/;"	e	enum:__anon59
GTK_PRINT_PAGES_RANGES	gtkenums.h	/^  GTK_PRINT_PAGES_RANGES,$/;"	e	enum:__anon59
GTK_PRINT_PAGES_SELECTION	gtkenums.h	/^  GTK_PRINT_PAGES_SELECTION$/;"	e	enum:__anon59
GTK_PRINT_QUALITY_DRAFT	gtkenums.h	/^  GTK_PRINT_QUALITY_DRAFT$/;"	e	enum:__anon63
GTK_PRINT_QUALITY_HIGH	gtkenums.h	/^  GTK_PRINT_QUALITY_HIGH,$/;"	e	enum:__anon63
GTK_PRINT_QUALITY_LOW	gtkenums.h	/^  GTK_PRINT_QUALITY_LOW,$/;"	e	enum:__anon63
GTK_PRINT_QUALITY_NORMAL	gtkenums.h	/^  GTK_PRINT_QUALITY_NORMAL,$/;"	e	enum:__anon63
GTK_PRINT_SETTINGS	gtkprintsettings.h	35;"	d
GTK_PRINT_SETTINGS_COLLATE	gtkprintsettings.h	124;"	d
GTK_PRINT_SETTINGS_DEFAULT_SOURCE	gtkprintsettings.h	119;"	d
GTK_PRINT_SETTINGS_DITHER	gtkprintsettings.h	127;"	d
GTK_PRINT_SETTINGS_DUPLEX	gtkprintsettings.h	123;"	d
GTK_PRINT_SETTINGS_FINISHINGS	gtkprintsettings.h	132;"	d
GTK_PRINT_SETTINGS_MEDIA_TYPE	gtkprintsettings.h	126;"	d
GTK_PRINT_SETTINGS_NUMBER_UP	gtkprintsettings.h	133;"	d
GTK_PRINT_SETTINGS_NUMBER_UP_LAYOUT	gtkprintsettings.h	134;"	d
GTK_PRINT_SETTINGS_N_COPIES	gtkprintsettings.h	118;"	d
GTK_PRINT_SETTINGS_ORIENTATION	gtkprintsettings.h	114;"	d
GTK_PRINT_SETTINGS_OUTPUT_BIN	gtkprintsettings.h	135;"	d
GTK_PRINT_SETTINGS_OUTPUT_FILE_FORMAT	gtkprintsettings.h	140;"	d
GTK_PRINT_SETTINGS_OUTPUT_URI	gtkprintsettings.h	141;"	d
GTK_PRINT_SETTINGS_PAGE_RANGES	gtkprintsettings.h	130;"	d
GTK_PRINT_SETTINGS_PAGE_SET	gtkprintsettings.h	131;"	d
GTK_PRINT_SETTINGS_PAPER_FORMAT	gtkprintsettings.h	115;"	d
GTK_PRINT_SETTINGS_PAPER_HEIGHT	gtkprintsettings.h	117;"	d
GTK_PRINT_SETTINGS_PAPER_WIDTH	gtkprintsettings.h	116;"	d
GTK_PRINT_SETTINGS_PRINTER	gtkprintsettings.h	113;"	d
GTK_PRINT_SETTINGS_PRINTER_LPI	gtkprintsettings.h	138;"	d
GTK_PRINT_SETTINGS_PRINT_PAGES	gtkprintsettings.h	129;"	d
GTK_PRINT_SETTINGS_QUALITY	gtkprintsettings.h	120;"	d
GTK_PRINT_SETTINGS_RESOLUTION	gtkprintsettings.h	121;"	d
GTK_PRINT_SETTINGS_RESOLUTION_X	gtkprintsettings.h	136;"	d
GTK_PRINT_SETTINGS_RESOLUTION_Y	gtkprintsettings.h	137;"	d
GTK_PRINT_SETTINGS_REVERSE	gtkprintsettings.h	125;"	d
GTK_PRINT_SETTINGS_SCALE	gtkprintsettings.h	128;"	d
GTK_PRINT_SETTINGS_USE_COLOR	gtkprintsettings.h	122;"	d
GTK_PRINT_SETTINGS_WIN32_DRIVER_EXTRA	gtkprintsettings.h	144;"	d
GTK_PRINT_SETTINGS_WIN32_DRIVER_VERSION	gtkprintsettings.h	143;"	d
GTK_PRINT_STATUS_FINISHED	gtkprintoperation.h	/^  GTK_PRINT_STATUS_FINISHED,$/;"	e	enum:__anon125
GTK_PRINT_STATUS_FINISHED_ABORTED	gtkprintoperation.h	/^  GTK_PRINT_STATUS_FINISHED_ABORTED$/;"	e	enum:__anon125
GTK_PRINT_STATUS_GENERATING_DATA	gtkprintoperation.h	/^  GTK_PRINT_STATUS_GENERATING_DATA,$/;"	e	enum:__anon125
GTK_PRINT_STATUS_INITIAL	gtkprintoperation.h	/^  GTK_PRINT_STATUS_INITIAL,$/;"	e	enum:__anon125
GTK_PRINT_STATUS_PENDING	gtkprintoperation.h	/^  GTK_PRINT_STATUS_PENDING,$/;"	e	enum:__anon125
GTK_PRINT_STATUS_PENDING_ISSUE	gtkprintoperation.h	/^  GTK_PRINT_STATUS_PENDING_ISSUE,$/;"	e	enum:__anon125
GTK_PRINT_STATUS_PREPARING	gtkprintoperation.h	/^  GTK_PRINT_STATUS_PREPARING,$/;"	e	enum:__anon125
GTK_PRINT_STATUS_PRINTING	gtkprintoperation.h	/^  GTK_PRINT_STATUS_PRINTING,$/;"	e	enum:__anon125
GTK_PRINT_STATUS_SENDING_DATA	gtkprintoperation.h	/^  GTK_PRINT_STATUS_SENDING_DATA,$/;"	e	enum:__anon125
GTK_PRIORITY_DEFAULT	gtkmain.h	57;"	d
GTK_PRIORITY_HIGH	gtkmain.h	55;"	d
GTK_PRIORITY_INTERNAL	gtkmain.h	56;"	d
GTK_PRIORITY_LOW	gtkmain.h	58;"	d
GTK_PRIORITY_REDRAW	gtkmain.h	51;"	d
GTK_PRIORITY_RESIZE	gtkmain.h	46;"	d
GTK_PRIVATE_FLAGS	gtkprivate.h	55;"	d
GTK_PRIVATE_SET_FLAG	gtkprivate.h	74;"	d
GTK_PRIVATE_UNSET_FLAG	gtkprivate.h	75;"	d
GTK_PROGRESS	gtkprogress.h	40;"	d
GTK_PROGRESS_BAR	gtkprogressbar.h	41;"	d
GTK_PROGRESS_BAR_CLASS	gtkprogressbar.h	42;"	d
GTK_PROGRESS_BAR_GET_CLASS	gtkprogressbar.h	45;"	d
GTK_PROGRESS_BOTTOM_TO_TOP	gtkprogressbar.h	/^  GTK_PROGRESS_BOTTOM_TO_TOP,$/;"	e	enum:__anon80
GTK_PROGRESS_CLASS	gtkprogress.h	41;"	d
GTK_PROGRESS_CONTINUOUS	gtkprogressbar.h	/^  GTK_PROGRESS_CONTINUOUS,$/;"	e	enum:__anon79
GTK_PROGRESS_DISCRETE	gtkprogressbar.h	/^  GTK_PROGRESS_DISCRETE$/;"	e	enum:__anon79
GTK_PROGRESS_GET_CLASS	gtkprogress.h	44;"	d
GTK_PROGRESS_LEFT_TO_RIGHT	gtkprogressbar.h	/^  GTK_PROGRESS_LEFT_TO_RIGHT,$/;"	e	enum:__anon80
GTK_PROGRESS_RIGHT_TO_LEFT	gtkprogressbar.h	/^  GTK_PROGRESS_RIGHT_TO_LEFT,$/;"	e	enum:__anon80
GTK_PROGRESS_TOP_TO_BOTTOM	gtkprogressbar.h	/^  GTK_PROGRESS_TOP_TO_BOTTOM$/;"	e	enum:__anon80
GTK_RADIO_ACTION	gtkradioaction.h	43;"	d
GTK_RADIO_ACTION_CLASS	gtkradioaction.h	44;"	d
GTK_RADIO_ACTION_GET_CLASS	gtkradioaction.h	47;"	d
GTK_RADIO_BUTTON	gtkradiobutton.h	41;"	d
GTK_RADIO_BUTTON_CLASS	gtkradiobutton.h	42;"	d
GTK_RADIO_BUTTON_GET_CLASS	gtkradiobutton.h	45;"	d
GTK_RADIO_MENU_ITEM	gtkradiomenuitem.h	41;"	d
GTK_RADIO_MENU_ITEM_CLASS	gtkradiomenuitem.h	42;"	d
GTK_RADIO_MENU_ITEM_GET_CLASS	gtkradiomenuitem.h	45;"	d
GTK_RADIO_TOOL_BUTTON	gtkradiotoolbutton.h	35;"	d
GTK_RADIO_TOOL_BUTTON_CLASS	gtkradiotoolbutton.h	36;"	d
GTK_RADIO_TOOL_BUTTON_GET_CLASS	gtkradiotoolbutton.h	39;"	d
GTK_RANGE	gtkrange.h	43;"	d
GTK_RANGE_CLASS	gtkrange.h	44;"	d
GTK_RANGE_GET_CLASS	gtkrange.h	47;"	d
GTK_RC_BASE	gtkrc.h	/^  GTK_RC_BASE		= 1 << 3$/;"	e	enum:__anon1
GTK_RC_BG	gtkrc.h	/^  GTK_RC_BG		= 1 << 1,$/;"	e	enum:__anon1
GTK_RC_FG	gtkrc.h	/^  GTK_RC_FG		= 1 << 0,$/;"	e	enum:__anon1
GTK_RC_STYLE	gtkrc.h	46;"	d
GTK_RC_STYLE	gtkwidget.h	/^  GTK_RC_STYLE	       = 1 << 16,$/;"	e	enum:__anon77
GTK_RC_STYLE_CLASS	gtkrc.h	47;"	d
GTK_RC_STYLE_GET_CLASS	gtkrc.h	50;"	d
GTK_RC_TEXT	gtkrc.h	/^  GTK_RC_TEXT		= 1 << 2,$/;"	e	enum:__anon1
GTK_RC_TOKEN_ACTIVE	gtkrc.h	/^  GTK_RC_TOKEN_ACTIVE,$/;"	e	enum:__anon2
GTK_RC_TOKEN_APPLICATION	gtkrc.h	/^  GTK_RC_TOKEN_APPLICATION,$/;"	e	enum:__anon2
GTK_RC_TOKEN_BASE	gtkrc.h	/^  GTK_RC_TOKEN_BASE,$/;"	e	enum:__anon2
GTK_RC_TOKEN_BG	gtkrc.h	/^  GTK_RC_TOKEN_BG,$/;"	e	enum:__anon2
GTK_RC_TOKEN_BG_PIXMAP	gtkrc.h	/^  GTK_RC_TOKEN_BG_PIXMAP,$/;"	e	enum:__anon2
GTK_RC_TOKEN_BIND	gtkrc.h	/^  GTK_RC_TOKEN_BIND,$/;"	e	enum:__anon2
GTK_RC_TOKEN_BINDING	gtkrc.h	/^  GTK_RC_TOKEN_BINDING,$/;"	e	enum:__anon2
GTK_RC_TOKEN_CLASS	gtkrc.h	/^  GTK_RC_TOKEN_CLASS,$/;"	e	enum:__anon2
GTK_RC_TOKEN_COLOR	gtkrc.h	/^  GTK_RC_TOKEN_COLOR,$/;"	e	enum:__anon2
GTK_RC_TOKEN_ENGINE	gtkrc.h	/^  GTK_RC_TOKEN_ENGINE,$/;"	e	enum:__anon2
GTK_RC_TOKEN_FG	gtkrc.h	/^  GTK_RC_TOKEN_FG,$/;"	e	enum:__anon2
GTK_RC_TOKEN_FONT	gtkrc.h	/^  GTK_RC_TOKEN_FONT,$/;"	e	enum:__anon2
GTK_RC_TOKEN_FONTSET	gtkrc.h	/^  GTK_RC_TOKEN_FONTSET,$/;"	e	enum:__anon2
GTK_RC_TOKEN_FONT_NAME	gtkrc.h	/^  GTK_RC_TOKEN_FONT_NAME,$/;"	e	enum:__anon2
GTK_RC_TOKEN_GTK	gtkrc.h	/^  GTK_RC_TOKEN_GTK,$/;"	e	enum:__anon2
GTK_RC_TOKEN_HIGHEST	gtkrc.h	/^  GTK_RC_TOKEN_HIGHEST,$/;"	e	enum:__anon2
GTK_RC_TOKEN_IM_MODULE_FILE	gtkrc.h	/^  GTK_RC_TOKEN_IM_MODULE_FILE,$/;"	e	enum:__anon2
GTK_RC_TOKEN_IM_MODULE_PATH	gtkrc.h	/^  GTK_RC_TOKEN_IM_MODULE_PATH,$/;"	e	enum:__anon2
GTK_RC_TOKEN_INCLUDE	gtkrc.h	/^  GTK_RC_TOKEN_INCLUDE,$/;"	e	enum:__anon2
GTK_RC_TOKEN_INSENSITIVE	gtkrc.h	/^  GTK_RC_TOKEN_INSENSITIVE,$/;"	e	enum:__anon2
GTK_RC_TOKEN_INVALID	gtkrc.h	/^  GTK_RC_TOKEN_INVALID = G_TOKEN_LAST,$/;"	e	enum:__anon2
GTK_RC_TOKEN_LAST	gtkrc.h	/^  GTK_RC_TOKEN_LAST$/;"	e	enum:__anon2
GTK_RC_TOKEN_LOWEST	gtkrc.h	/^  GTK_RC_TOKEN_LOWEST,$/;"	e	enum:__anon2
GTK_RC_TOKEN_LTR	gtkrc.h	/^  GTK_RC_TOKEN_LTR,$/;"	e	enum:__anon2
GTK_RC_TOKEN_MODULE_PATH	gtkrc.h	/^  GTK_RC_TOKEN_MODULE_PATH,$/;"	e	enum:__anon2
GTK_RC_TOKEN_NORMAL	gtkrc.h	/^  GTK_RC_TOKEN_NORMAL,$/;"	e	enum:__anon2
GTK_RC_TOKEN_PIXMAP_PATH	gtkrc.h	/^  GTK_RC_TOKEN_PIXMAP_PATH,$/;"	e	enum:__anon2
GTK_RC_TOKEN_PRELIGHT	gtkrc.h	/^  GTK_RC_TOKEN_PRELIGHT,$/;"	e	enum:__anon2
GTK_RC_TOKEN_RC	gtkrc.h	/^  GTK_RC_TOKEN_RC,$/;"	e	enum:__anon2
GTK_RC_TOKEN_RTL	gtkrc.h	/^  GTK_RC_TOKEN_RTL,$/;"	e	enum:__anon2
GTK_RC_TOKEN_SELECTED	gtkrc.h	/^  GTK_RC_TOKEN_SELECTED,$/;"	e	enum:__anon2
GTK_RC_TOKEN_STOCK	gtkrc.h	/^  GTK_RC_TOKEN_STOCK,$/;"	e	enum:__anon2
GTK_RC_TOKEN_STYLE	gtkrc.h	/^  GTK_RC_TOKEN_STYLE,$/;"	e	enum:__anon2
GTK_RC_TOKEN_TEXT	gtkrc.h	/^  GTK_RC_TOKEN_TEXT,$/;"	e	enum:__anon2
GTK_RC_TOKEN_THEME	gtkrc.h	/^  GTK_RC_TOKEN_THEME,$/;"	e	enum:__anon2
GTK_RC_TOKEN_UNBIND	gtkrc.h	/^  GTK_RC_TOKEN_UNBIND,$/;"	e	enum:__anon2
GTK_RC_TOKEN_WIDGET	gtkrc.h	/^  GTK_RC_TOKEN_WIDGET,$/;"	e	enum:__anon2
GTK_RC_TOKEN_WIDGET_CLASS	gtkrc.h	/^  GTK_RC_TOKEN_WIDGET_CLASS,$/;"	e	enum:__anon2
GTK_RC_TOKEN_XTHICKNESS	gtkrc.h	/^  GTK_RC_TOKEN_XTHICKNESS,$/;"	e	enum:__anon2
GTK_RC_TOKEN_YTHICKNESS	gtkrc.h	/^  GTK_RC_TOKEN_YTHICKNESS,$/;"	e	enum:__anon2
GTK_REALIZED	gtkwidget.h	/^  GTK_REALIZED         = 1 << 6,$/;"	e	enum:__anon77
GTK_RECEIVES_DEFAULT	gtkwidget.h	/^  GTK_RECEIVES_DEFAULT = 1 << 20,$/;"	e	enum:__anon77
GTK_RECENT_ACTION	gtkrecentaction.h	35;"	d
GTK_RECENT_ACTION_CLASS	gtkrecentaction.h	37;"	d
GTK_RECENT_ACTION_GET_CLASS	gtkrecentaction.h	39;"	d
GTK_RECENT_CHOOSER	gtkrecentchooser.h	36;"	d
GTK_RECENT_CHOOSER_DIALOG	gtkrecentchooserdialog.h	34;"	d
GTK_RECENT_CHOOSER_DIALOG_CLASS	gtkrecentchooserdialog.h	36;"	d
GTK_RECENT_CHOOSER_DIALOG_GET_CLASS	gtkrecentchooserdialog.h	38;"	d
GTK_RECENT_CHOOSER_ERROR	gtkrecentchooser.h	70;"	d
GTK_RECENT_CHOOSER_ERROR_INVALID_URI	gtkrecentchooser.h	/^  GTK_RECENT_CHOOSER_ERROR_INVALID_URI$/;"	e	enum:__anon90
GTK_RECENT_CHOOSER_ERROR_NOT_FOUND	gtkrecentchooser.h	/^  GTK_RECENT_CHOOSER_ERROR_NOT_FOUND,$/;"	e	enum:__anon90
GTK_RECENT_CHOOSER_GET_IFACE	gtkrecentchooser.h	38;"	d
GTK_RECENT_CHOOSER_MENU	gtkrecentchoosermenu.h	34;"	d
GTK_RECENT_CHOOSER_MENU_CLASS	gtkrecentchoosermenu.h	36;"	d
GTK_RECENT_CHOOSER_MENU_GET_CLASS	gtkrecentchoosermenu.h	38;"	d
GTK_RECENT_CHOOSER_WIDGET	gtkrecentchooserwidget.h	34;"	d
GTK_RECENT_CHOOSER_WIDGET_CLASS	gtkrecentchooserwidget.h	36;"	d
GTK_RECENT_CHOOSER_WIDGET_GET_CLASS	gtkrecentchooserwidget.h	38;"	d
GTK_RECENT_FILTER	gtkrecentfilter.h	33;"	d
GTK_RECENT_FILTER_AGE	gtkrecentfilter.h	/^  GTK_RECENT_FILTER_AGE          = 1 << 5$/;"	e	enum:__anon11
GTK_RECENT_FILTER_APPLICATION	gtkrecentfilter.h	/^  GTK_RECENT_FILTER_APPLICATION  = 1 << 3,$/;"	e	enum:__anon11
GTK_RECENT_FILTER_DISPLAY_NAME	gtkrecentfilter.h	/^  GTK_RECENT_FILTER_DISPLAY_NAME = 1 << 1,$/;"	e	enum:__anon11
GTK_RECENT_FILTER_GROUP	gtkrecentfilter.h	/^  GTK_RECENT_FILTER_GROUP        = 1 << 4,$/;"	e	enum:__anon11
GTK_RECENT_FILTER_MIME_TYPE	gtkrecentfilter.h	/^  GTK_RECENT_FILTER_MIME_TYPE    = 1 << 2,$/;"	e	enum:__anon11
GTK_RECENT_FILTER_URI	gtkrecentfilter.h	/^  GTK_RECENT_FILTER_URI          = 1 << 0,$/;"	e	enum:__anon11
GTK_RECENT_MANAGER	gtkrecentmanager.h	37;"	d
GTK_RECENT_MANAGER_CLASS	gtkrecentmanager.h	39;"	d
GTK_RECENT_MANAGER_ERROR	gtkrecentmanager.h	134;"	d
GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING	gtkrecentmanager.h	/^  GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING,$/;"	e	enum:__anon96
GTK_RECENT_MANAGER_ERROR_INVALID_URI	gtkrecentmanager.h	/^  GTK_RECENT_MANAGER_ERROR_INVALID_URI,$/;"	e	enum:__anon96
GTK_RECENT_MANAGER_ERROR_NOT_FOUND	gtkrecentmanager.h	/^  GTK_RECENT_MANAGER_ERROR_NOT_FOUND,$/;"	e	enum:__anon96
GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED	gtkrecentmanager.h	/^  GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED,$/;"	e	enum:__anon96
GTK_RECENT_MANAGER_ERROR_READ	gtkrecentmanager.h	/^  GTK_RECENT_MANAGER_ERROR_READ,$/;"	e	enum:__anon96
GTK_RECENT_MANAGER_ERROR_UNKNOWN	gtkrecentmanager.h	/^  GTK_RECENT_MANAGER_ERROR_UNKNOWN$/;"	e	enum:__anon96
GTK_RECENT_MANAGER_ERROR_WRITE	gtkrecentmanager.h	/^  GTK_RECENT_MANAGER_ERROR_WRITE,$/;"	e	enum:__anon96
GTK_RECENT_MANAGER_GET_CLASS	gtkrecentmanager.h	41;"	d
GTK_RECENT_SORT_CUSTOM	gtkrecentchooser.h	/^  GTK_RECENT_SORT_CUSTOM$/;"	e	enum:__anon89
GTK_RECENT_SORT_LRU	gtkrecentchooser.h	/^  GTK_RECENT_SORT_LRU,$/;"	e	enum:__anon89
GTK_RECENT_SORT_MRU	gtkrecentchooser.h	/^  GTK_RECENT_SORT_MRU,$/;"	e	enum:__anon89
GTK_RECENT_SORT_NONE	gtkrecentchooser.h	/^  GTK_RECENT_SORT_NONE = 0,$/;"	e	enum:__anon89
GTK_RELIEF_HALF	gtkenums.h	/^  GTK_RELIEF_HALF,$/;"	e	enum:__anon40
GTK_RELIEF_NONE	gtkenums.h	/^  GTK_RELIEF_NONE$/;"	e	enum:__anon40
GTK_RELIEF_NORMAL	gtkenums.h	/^  GTK_RELIEF_NORMAL,$/;"	e	enum:__anon40
GTK_RESERVED_1	gtkobject.h	/^  GTK_RESERVED_1	= 1 << 2,$/;"	e	enum:__anon111
GTK_RESERVED_2	gtkobject.h	/^  GTK_RESERVED_2	= 1 << 3$/;"	e	enum:__anon111
GTK_RESIZE_IMMEDIATE	gtkenums.h	/^  GTK_RESIZE_IMMEDIATE		\/* Perform the resizes now *\/$/;"	e	enum:__anon41
GTK_RESIZE_PARENT	gtkenums.h	/^  GTK_RESIZE_PARENT,		\/* Pass resize request to the parent *\/$/;"	e	enum:__anon41
GTK_RESIZE_QUEUE	gtkenums.h	/^  GTK_RESIZE_QUEUE,		\/* Queue resizes on this widget *\/$/;"	e	enum:__anon41
GTK_RESPONSE_ACCEPT	gtkdialog.h	/^  GTK_RESPONSE_ACCEPT = -3,$/;"	e	enum:__anon10
GTK_RESPONSE_APPLY	gtkdialog.h	/^  GTK_RESPONSE_APPLY  = -10,$/;"	e	enum:__anon10
GTK_RESPONSE_CANCEL	gtkdialog.h	/^  GTK_RESPONSE_CANCEL = -6,$/;"	e	enum:__anon10
GTK_RESPONSE_CLOSE	gtkdialog.h	/^  GTK_RESPONSE_CLOSE  = -7,$/;"	e	enum:__anon10
GTK_RESPONSE_DELETE_EVENT	gtkdialog.h	/^  GTK_RESPONSE_DELETE_EVENT = -4,$/;"	e	enum:__anon10
GTK_RESPONSE_HELP	gtkdialog.h	/^  GTK_RESPONSE_HELP   = -11$/;"	e	enum:__anon10
GTK_RESPONSE_NO	gtkdialog.h	/^  GTK_RESPONSE_NO     = -9,$/;"	e	enum:__anon10
GTK_RESPONSE_NONE	gtkdialog.h	/^  GTK_RESPONSE_NONE = -1,$/;"	e	enum:__anon10
GTK_RESPONSE_OK	gtkdialog.h	/^  GTK_RESPONSE_OK     = -5,$/;"	e	enum:__anon10
GTK_RESPONSE_REJECT	gtkdialog.h	/^  GTK_RESPONSE_REJECT = -2,$/;"	e	enum:__anon10
GTK_RESPONSE_YES	gtkdialog.h	/^  GTK_RESPONSE_YES    = -8,$/;"	e	enum:__anon10
GTK_RETLOC_BOOL	gtktypeutils.h	203;"	d
GTK_RETLOC_BOXED	gtktypeutils.h	213;"	d
GTK_RETLOC_CHAR	gtktypeutils.h	201;"	d
GTK_RETLOC_DOUBLE	gtktypeutils.h	209;"	d
GTK_RETLOC_ENUM	gtktypeutils.h	211;"	d
GTK_RETLOC_FLAGS	gtktypeutils.h	212;"	d
GTK_RETLOC_FLOAT	gtktypeutils.h	208;"	d
GTK_RETLOC_INT	gtktypeutils.h	204;"	d
GTK_RETLOC_LONG	gtktypeutils.h	206;"	d
GTK_RETLOC_OBJECT	gtktypeutils.h	214;"	d
GTK_RETLOC_POINTER	gtktypeutils.h	215;"	d
GTK_RETLOC_STRING	gtktypeutils.h	210;"	d
GTK_RETLOC_UCHAR	gtktypeutils.h	202;"	d
GTK_RETLOC_UINT	gtktypeutils.h	205;"	d
GTK_RETLOC_ULONG	gtktypeutils.h	207;"	d
GTK_RULER	gtkruler.h	53;"	d
GTK_RULER_CLASS	gtkruler.h	54;"	d
GTK_RULER_GET_CLASS	gtkruler.h	57;"	d
GTK_RUN_ACTION	gtkenums.h	/^  GTK_RUN_ACTION     = G_SIGNAL_ACTION,$/;"	e	enum:__anon42
GTK_RUN_BOTH	gtkenums.h	/^  GTK_RUN_BOTH       = (GTK_RUN_FIRST | GTK_RUN_LAST),$/;"	e	enum:__anon42
GTK_RUN_FIRST	gtkenums.h	/^  GTK_RUN_FIRST      = G_SIGNAL_RUN_FIRST,$/;"	e	enum:__anon42
GTK_RUN_LAST	gtkenums.h	/^  GTK_RUN_LAST       = G_SIGNAL_RUN_LAST,$/;"	e	enum:__anon42
GTK_RUN_NO_HOOKS	gtkenums.h	/^  GTK_RUN_NO_HOOKS   = G_SIGNAL_NO_HOOKS$/;"	e	enum:__anon42
GTK_RUN_NO_RECURSE	gtkenums.h	/^  GTK_RUN_NO_RECURSE = G_SIGNAL_NO_RECURSE,$/;"	e	enum:__anon42
GTK_SCALE	gtkscale.h	41;"	d
GTK_SCALE_BUTTON	gtkscalebutton.h	48;"	d
GTK_SCALE_BUTTON_CLASS	gtkscalebutton.h	49;"	d
GTK_SCALE_BUTTON_GET_CLASS	gtkscalebutton.h	52;"	d
GTK_SCALE_CLASS	gtkscale.h	42;"	d
GTK_SCALE_GET_CLASS	gtkscale.h	45;"	d
GTK_SCROLLBAR	gtkscrollbar.h	41;"	d
GTK_SCROLLBAR_CLASS	gtkscrollbar.h	42;"	d
GTK_SCROLLBAR_GET_CLASS	gtkscrollbar.h	45;"	d
GTK_SCROLLED_WINDOW	gtkscrolledwindow.h	44;"	d
GTK_SCROLLED_WINDOW_CLASS	gtkscrolledwindow.h	45;"	d
GTK_SCROLLED_WINDOW_GET_CLASS	gtkscrolledwindow.h	48;"	d
GTK_SCROLL_END	gtkenums.h	/^  GTK_SCROLL_END$/;"	e	enum:__anon43
GTK_SCROLL_ENDS	gtkenums.h	/^  GTK_SCROLL_ENDS,$/;"	e	enum:__anon31
GTK_SCROLL_HORIZONTAL_ENDS	gtkenums.h	/^  GTK_SCROLL_HORIZONTAL_ENDS$/;"	e	enum:__anon31
GTK_SCROLL_HORIZONTAL_PAGES	gtkenums.h	/^  GTK_SCROLL_HORIZONTAL_PAGES,$/;"	e	enum:__anon31
GTK_SCROLL_HORIZONTAL_STEPS	gtkenums.h	/^  GTK_SCROLL_HORIZONTAL_STEPS,$/;"	e	enum:__anon31
GTK_SCROLL_JUMP	gtkenums.h	/^  GTK_SCROLL_JUMP,$/;"	e	enum:__anon43
GTK_SCROLL_NONE	gtkenums.h	/^  GTK_SCROLL_NONE,$/;"	e	enum:__anon43
GTK_SCROLL_PAGES	gtkenums.h	/^  GTK_SCROLL_PAGES,$/;"	e	enum:__anon31
GTK_SCROLL_PAGE_BACKWARD	gtkenums.h	/^  GTK_SCROLL_PAGE_BACKWARD,$/;"	e	enum:__anon43
GTK_SCROLL_PAGE_DOWN	gtkenums.h	/^  GTK_SCROLL_PAGE_DOWN,$/;"	e	enum:__anon43
GTK_SCROLL_PAGE_FORWARD	gtkenums.h	/^  GTK_SCROLL_PAGE_FORWARD,$/;"	e	enum:__anon43
GTK_SCROLL_PAGE_LEFT	gtkenums.h	/^  GTK_SCROLL_PAGE_LEFT,$/;"	e	enum:__anon43
GTK_SCROLL_PAGE_RIGHT	gtkenums.h	/^  GTK_SCROLL_PAGE_RIGHT,$/;"	e	enum:__anon43
GTK_SCROLL_PAGE_UP	gtkenums.h	/^  GTK_SCROLL_PAGE_UP,$/;"	e	enum:__anon43
GTK_SCROLL_START	gtkenums.h	/^  GTK_SCROLL_START,$/;"	e	enum:__anon43
GTK_SCROLL_STEPS	gtkenums.h	/^  GTK_SCROLL_STEPS,$/;"	e	enum:__anon31
GTK_SCROLL_STEP_BACKWARD	gtkenums.h	/^  GTK_SCROLL_STEP_BACKWARD,$/;"	e	enum:__anon43
GTK_SCROLL_STEP_DOWN	gtkenums.h	/^  GTK_SCROLL_STEP_DOWN,$/;"	e	enum:__anon43
GTK_SCROLL_STEP_FORWARD	gtkenums.h	/^  GTK_SCROLL_STEP_FORWARD,$/;"	e	enum:__anon43
GTK_SCROLL_STEP_LEFT	gtkenums.h	/^  GTK_SCROLL_STEP_LEFT,$/;"	e	enum:__anon43
GTK_SCROLL_STEP_RIGHT	gtkenums.h	/^  GTK_SCROLL_STEP_RIGHT,$/;"	e	enum:__anon43
GTK_SCROLL_STEP_UP	gtkenums.h	/^  GTK_SCROLL_STEP_UP,$/;"	e	enum:__anon43
GTK_SELECTION_BROWSE	gtkenums.h	/^  GTK_SELECTION_BROWSE,$/;"	e	enum:__anon44
GTK_SELECTION_EXTENDED	gtkenums.h	/^  GTK_SELECTION_EXTENDED = GTK_SELECTION_MULTIPLE \/* Deprecated *\/$/;"	e	enum:__anon44
GTK_SELECTION_MULTIPLE	gtkenums.h	/^  GTK_SELECTION_MULTIPLE,$/;"	e	enum:__anon44
GTK_SELECTION_NONE	gtkenums.h	/^  GTK_SELECTION_NONE,                             \/* Nothing can be selected *\/$/;"	e	enum:__anon44
GTK_SELECTION_SINGLE	gtkenums.h	/^  GTK_SELECTION_SINGLE,$/;"	e	enum:__anon44
GTK_SENSITIVE	gtkwidget.h	/^  GTK_SENSITIVE        = 1 << 9,$/;"	e	enum:__anon77
GTK_SENSITIVITY_AUTO	gtkenums.h	/^  GTK_SENSITIVITY_AUTO,$/;"	e	enum:__anon22
GTK_SENSITIVITY_OFF	gtkenums.h	/^  GTK_SENSITIVITY_OFF$/;"	e	enum:__anon22
GTK_SENSITIVITY_ON	gtkenums.h	/^  GTK_SENSITIVITY_ON,$/;"	e	enum:__anon22
GTK_SEPARATOR	gtkseparator.h	41;"	d
GTK_SEPARATOR_CLASS	gtkseparator.h	42;"	d
GTK_SEPARATOR_GET_CLASS	gtkseparator.h	45;"	d
GTK_SEPARATOR_MENU_ITEM	gtkseparatormenuitem.h	41;"	d
GTK_SEPARATOR_MENU_ITEM_CLASS	gtkseparatormenuitem.h	42;"	d
GTK_SEPARATOR_MENU_ITEM_GET_CLASS	gtkseparatormenuitem.h	45;"	d
GTK_SEPARATOR_TOOL_ITEM	gtkseparatortoolitem.h	34;"	d
GTK_SEPARATOR_TOOL_ITEM_CLASS	gtkseparatortoolitem.h	35;"	d
GTK_SEPARATOR_TOOL_ITEM_GET_CLASS	gtkseparatortoolitem.h	38;"	d
GTK_SETTINGS	gtksettings.h	33;"	d
GTK_SETTINGS_CLASS	gtksettings.h	34;"	d
GTK_SETTINGS_GET_CLASS	gtksettings.h	37;"	d
GTK_SHADOW_ETCHED_IN	gtkenums.h	/^  GTK_SHADOW_ETCHED_IN,$/;"	e	enum:__anon45
GTK_SHADOW_ETCHED_OUT	gtkenums.h	/^  GTK_SHADOW_ETCHED_OUT$/;"	e	enum:__anon45
GTK_SHADOW_IN	gtkenums.h	/^  GTK_SHADOW_IN,$/;"	e	enum:__anon45
GTK_SHADOW_NONE	gtkenums.h	/^  GTK_SHADOW_NONE,$/;"	e	enum:__anon45
GTK_SHADOW_OUT	gtkenums.h	/^  GTK_SHADOW_OUT,$/;"	e	enum:__anon45
GTK_SHRINK	gtkenums.h	/^  GTK_SHRINK = 1 << 1,$/;"	e	enum:__anon15
GTK_SIDE_BOTTOM	gtkenums.h	/^  GTK_SIDE_BOTTOM,$/;"	e	enum:__anon23
GTK_SIDE_LEFT	gtkenums.h	/^  GTK_SIDE_LEFT,$/;"	e	enum:__anon23
GTK_SIDE_RIGHT	gtkenums.h	/^  GTK_SIDE_RIGHT$/;"	e	enum:__anon23
GTK_SIDE_TOP	gtkenums.h	/^  GTK_SIDE_TOP,$/;"	e	enum:__anon23
GTK_SIGNAL_FUNC	gtktypeutils.h	129;"	d
GTK_SIGNAL_OFFSET	gtksignal.h	41;"	d
GTK_SIZE_GROUP	gtksizegroup.h	33;"	d
GTK_SIZE_GROUP_BOTH	gtksizegroup.h	/^  GTK_SIZE_GROUP_BOTH$/;"	e	enum:__anon82
GTK_SIZE_GROUP_CLASS	gtksizegroup.h	34;"	d
GTK_SIZE_GROUP_GET_CLASS	gtksizegroup.h	37;"	d
GTK_SIZE_GROUP_HORIZONTAL	gtksizegroup.h	/^  GTK_SIZE_GROUP_HORIZONTAL,$/;"	e	enum:__anon82
GTK_SIZE_GROUP_NONE	gtksizegroup.h	/^  GTK_SIZE_GROUP_NONE,$/;"	e	enum:__anon82
GTK_SIZE_GROUP_VERTICAL	gtksizegroup.h	/^  GTK_SIZE_GROUP_VERTICAL,$/;"	e	enum:__anon82
GTK_SOCKET	gtksocket.h	38;"	d
GTK_SOCKET_CLASS	gtksocket.h	39;"	d
GTK_SOCKET_GET_CLASS	gtksocket.h	42;"	d
GTK_SORT_ASCENDING	gtkenums.h	/^  GTK_SORT_ASCENDING,$/;"	e	enum:__anon55
GTK_SORT_DESCENDING	gtkenums.h	/^  GTK_SORT_DESCENDING$/;"	e	enum:__anon55
GTK_SPINNER	gtkspinner.h	37;"	d
GTK_SPINNER_CLASS	gtkspinner.h	38;"	d
GTK_SPINNER_GET_CLASS	gtkspinner.h	41;"	d
GTK_SPIN_BUTTON	gtkspinbutton.h	45;"	d
GTK_SPIN_BUTTON_CLASS	gtkspinbutton.h	46;"	d
GTK_SPIN_BUTTON_GET_CLASS	gtkspinbutton.h	49;"	d
GTK_SPIN_END	gtkspinbutton.h	/^  GTK_SPIN_END,$/;"	e	enum:__anon88
GTK_SPIN_HOME	gtkspinbutton.h	/^  GTK_SPIN_HOME,$/;"	e	enum:__anon88
GTK_SPIN_PAGE_BACKWARD	gtkspinbutton.h	/^  GTK_SPIN_PAGE_BACKWARD,$/;"	e	enum:__anon88
GTK_SPIN_PAGE_FORWARD	gtkspinbutton.h	/^  GTK_SPIN_PAGE_FORWARD,$/;"	e	enum:__anon88
GTK_SPIN_STEP_BACKWARD	gtkspinbutton.h	/^  GTK_SPIN_STEP_BACKWARD,$/;"	e	enum:__anon88
GTK_SPIN_STEP_FORWARD	gtkspinbutton.h	/^  GTK_SPIN_STEP_FORWARD,$/;"	e	enum:__anon88
GTK_SPIN_USER_DEFINED	gtkspinbutton.h	/^  GTK_SPIN_USER_DEFINED$/;"	e	enum:__anon88
GTK_STATE_ACTIVE	gtkenums.h	/^  GTK_STATE_ACTIVE,$/;"	e	enum:__anon46
GTK_STATE_INSENSITIVE	gtkenums.h	/^  GTK_STATE_INSENSITIVE$/;"	e	enum:__anon46
GTK_STATE_NORMAL	gtkenums.h	/^  GTK_STATE_NORMAL,$/;"	e	enum:__anon46
GTK_STATE_PRELIGHT	gtkenums.h	/^  GTK_STATE_PRELIGHT,$/;"	e	enum:__anon46
GTK_STATE_SELECTED	gtkenums.h	/^  GTK_STATE_SELECTED,$/;"	e	enum:__anon46
GTK_STATUSBAR	gtkstatusbar.h	40;"	d
GTK_STATUSBAR_CLASS	gtkstatusbar.h	41;"	d
GTK_STATUSBAR_GET_CLASS	gtkstatusbar.h	44;"	d
GTK_STATUS_ICON	gtkstatusicon.h	37;"	d
GTK_STATUS_ICON_CLASS	gtkstatusicon.h	38;"	d
GTK_STATUS_ICON_GET_CLASS	gtkstatusicon.h	41;"	d
GTK_STOCK_ABOUT	gtkstock.h	80;"	d
GTK_STOCK_ADD	gtkstock.h	88;"	d
GTK_STOCK_APPLY	gtkstock.h	96;"	d
GTK_STOCK_BOLD	gtkstock.h	104;"	d
GTK_STOCK_CANCEL	gtkstock.h	112;"	d
GTK_STOCK_CAPS_LOCK_WARNING	gtkstock.h	122;"	d
GTK_STOCK_CDROM	gtkstock.h	130;"	d
GTK_STOCK_CLEAR	gtkstock.h	138;"	d
GTK_STOCK_CLOSE	gtkstock.h	146;"	d
GTK_STOCK_COLOR_PICKER	gtkstock.h	156;"	d
GTK_STOCK_CONNECT	gtkstock.h	166;"	d
GTK_STOCK_CONVERT	gtkstock.h	174;"	d
GTK_STOCK_COPY	gtkstock.h	182;"	d
GTK_STOCK_CUT	gtkstock.h	190;"	d
GTK_STOCK_DELETE	gtkstock.h	198;"	d
GTK_STOCK_DIALOG_AUTHENTICATION	gtkstock.h	208;"	d
GTK_STOCK_DIALOG_ERROR	gtkstock.h	232;"	d
GTK_STOCK_DIALOG_INFO	gtkstock.h	216;"	d
GTK_STOCK_DIALOG_QUESTION	gtkstock.h	240;"	d
GTK_STOCK_DIALOG_WARNING	gtkstock.h	224;"	d
GTK_STOCK_DIRECTORY	gtkstock.h	250;"	d
GTK_STOCK_DISCARD	gtkstock.h	259;"	d
GTK_STOCK_DISCONNECT	gtkstock.h	269;"	d
GTK_STOCK_DND	gtkstock.h	277;"	d
GTK_STOCK_DND_MULTIPLE	gtkstock.h	285;"	d
GTK_STOCK_EDIT	gtkstock.h	295;"	d
GTK_STOCK_EXECUTE	gtkstock.h	303;"	d
GTK_STOCK_FILE	gtkstock.h	313;"	d
GTK_STOCK_FIND	gtkstock.h	321;"	d
GTK_STOCK_FIND_AND_REPLACE	gtkstock.h	329;"	d
GTK_STOCK_FLOPPY	gtkstock.h	337;"	d
GTK_STOCK_FULLSCREEN	gtkstock.h	347;"	d
GTK_STOCK_GOTO_BOTTOM	gtkstock.h	355;"	d
GTK_STOCK_GOTO_FIRST	gtkstock.h	365;"	d
GTK_STOCK_GOTO_LAST	gtkstock.h	375;"	d
GTK_STOCK_GOTO_TOP	gtkstock.h	383;"	d
GTK_STOCK_GO_BACK	gtkstock.h	393;"	d
GTK_STOCK_GO_DOWN	gtkstock.h	401;"	d
GTK_STOCK_GO_FORWARD	gtkstock.h	411;"	d
GTK_STOCK_GO_UP	gtkstock.h	419;"	d
GTK_STOCK_HARDDISK	gtkstock.h	429;"	d
GTK_STOCK_HELP	gtkstock.h	437;"	d
GTK_STOCK_HOME	gtkstock.h	445;"	d
GTK_STOCK_INDENT	gtkstock.h	465;"	d
GTK_STOCK_INDEX	gtkstock.h	453;"	d
GTK_STOCK_INFO	gtkstock.h	475;"	d
GTK_STOCK_ITALIC	gtkstock.h	483;"	d
GTK_STOCK_JUMP_TO	gtkstock.h	493;"	d
GTK_STOCK_JUSTIFY_CENTER	gtkstock.h	501;"	d
GTK_STOCK_JUSTIFY_FILL	gtkstock.h	509;"	d
GTK_STOCK_JUSTIFY_LEFT	gtkstock.h	517;"	d
GTK_STOCK_JUSTIFY_RIGHT	gtkstock.h	525;"	d
GTK_STOCK_LEAVE_FULLSCREEN	gtkstock.h	535;"	d
GTK_STOCK_MEDIA_FORWARD	gtkstock.h	555;"	d
GTK_STOCK_MEDIA_NEXT	gtkstock.h	567;"	d
GTK_STOCK_MEDIA_PAUSE	gtkstock.h	577;"	d
GTK_STOCK_MEDIA_PLAY	gtkstock.h	589;"	d
GTK_STOCK_MEDIA_PREVIOUS	gtkstock.h	601;"	d
GTK_STOCK_MEDIA_RECORD	gtkstock.h	611;"	d
GTK_STOCK_MEDIA_REWIND	gtkstock.h	623;"	d
GTK_STOCK_MEDIA_STOP	gtkstock.h	633;"	d
GTK_STOCK_MISSING_IMAGE	gtkstock.h	543;"	d
GTK_STOCK_NETWORK	gtkstock.h	643;"	d
GTK_STOCK_NEW	gtkstock.h	651;"	d
GTK_STOCK_NO	gtkstock.h	659;"	d
GTK_STOCK_OK	gtkstock.h	667;"	d
GTK_STOCK_OPEN	gtkstock.h	675;"	d
GTK_STOCK_ORIENTATION_LANDSCAPE	gtkstock.h	695;"	d
GTK_STOCK_ORIENTATION_PORTRAIT	gtkstock.h	685;"	d
GTK_STOCK_ORIENTATION_REVERSE_LANDSCAPE	gtkstock.h	705;"	d
GTK_STOCK_ORIENTATION_REVERSE_PORTRAIT	gtkstock.h	715;"	d
GTK_STOCK_PAGE_SETUP	gtkstock.h	725;"	d
GTK_STOCK_PASTE	gtkstock.h	733;"	d
GTK_STOCK_PREFERENCES	gtkstock.h	741;"	d
GTK_STOCK_PRINT	gtkstock.h	749;"	d
GTK_STOCK_PRINT_ERROR	gtkstock.h	759;"	d
GTK_STOCK_PRINT_PAUSED	gtkstock.h	769;"	d
GTK_STOCK_PRINT_PREVIEW	gtkstock.h	777;"	d
GTK_STOCK_PRINT_REPORT	gtkstock.h	787;"	d
GTK_STOCK_PRINT_WARNING	gtkstock.h	798;"	d
GTK_STOCK_PROPERTIES	gtkstock.h	806;"	d
GTK_STOCK_QUIT	gtkstock.h	814;"	d
GTK_STOCK_REDO	gtkstock.h	824;"	d
GTK_STOCK_REFRESH	gtkstock.h	832;"	d
GTK_STOCK_REMOVE	gtkstock.h	840;"	d
GTK_STOCK_REVERT_TO_SAVED	gtkstock.h	850;"	d
GTK_STOCK_SAVE	gtkstock.h	858;"	d
GTK_STOCK_SAVE_AS	gtkstock.h	866;"	d
GTK_STOCK_SELECT_ALL	gtkstock.h	876;"	d
GTK_STOCK_SELECT_COLOR	gtkstock.h	884;"	d
GTK_STOCK_SELECT_FONT	gtkstock.h	892;"	d
GTK_STOCK_SORT_ASCENDING	gtkstock.h	900;"	d
GTK_STOCK_SORT_DESCENDING	gtkstock.h	908;"	d
GTK_STOCK_SPELL_CHECK	gtkstock.h	916;"	d
GTK_STOCK_STOP	gtkstock.h	924;"	d
GTK_STOCK_STRIKETHROUGH	gtkstock.h	932;"	d
GTK_STOCK_UNDELETE	gtkstock.h	942;"	d
GTK_STOCK_UNDERLINE	gtkstock.h	950;"	d
GTK_STOCK_UNDO	gtkstock.h	960;"	d
GTK_STOCK_UNINDENT	gtkstock.h	972;"	d
GTK_STOCK_YES	gtkstock.h	980;"	d
GTK_STOCK_ZOOM_100	gtkstock.h	988;"	d
GTK_STOCK_ZOOM_FIT	gtkstock.h	996;"	d
GTK_STOCK_ZOOM_IN	gtkstock.h	1004;"	d
GTK_STOCK_ZOOM_OUT	gtkstock.h	1012;"	d
GTK_STRUCT_OFFSET	gtktypeutils.h	108;"	d
GTK_STYLE	gtkstyle.h	42;"	d
GTK_STYLE_ATTACHED	gtkstyle.h	71;"	d
GTK_STYLE_CLASS	gtkstyle.h	43;"	d
GTK_STYLE_GET_CLASS	gtkstyle.h	46;"	d
GTK_SYSCONFDIR	gtkprivate.h	92;"	d
GTK_SYSCONFDIR	gtkprivate.h	93;"	d
GTK_TABLE	gtktable.h	41;"	d
GTK_TABLE_CLASS	gtktable.h	42;"	d
GTK_TABLE_GET_CLASS	gtktable.h	45;"	d
GTK_TARGET_OTHER_APP	gtkdnd.h	/^  GTK_TARGET_OTHER_APP = 1 << 2,   \/*< nick=other-app >*\/$/;"	e	enum:__anon124
GTK_TARGET_OTHER_WIDGET	gtkdnd.h	/^  GTK_TARGET_OTHER_WIDGET = 1 << 3 \/*< nick=other-widget >*\/$/;"	e	enum:__anon124
GTK_TARGET_SAME_APP	gtkdnd.h	/^  GTK_TARGET_SAME_APP = 1 << 0,    \/*< nick=same-app >*\/$/;"	e	enum:__anon124
GTK_TARGET_SAME_WIDGET	gtkdnd.h	/^  GTK_TARGET_SAME_WIDGET = 1 << 1, \/*< nick=same-widget >*\/$/;"	e	enum:__anon124
GTK_TEAROFF_MENU_ITEM	gtktearoffmenuitem.h	41;"	d
GTK_TEAROFF_MENU_ITEM_CLASS	gtktearoffmenuitem.h	42;"	d
GTK_TEAROFF_MENU_ITEM_GET_CLASS	gtktearoffmenuitem.h	45;"	d
GTK_TEXT	gtktext.h	39;"	d
GTK_TEXT_BUFFER	gtktextbuffer.h	66;"	d
GTK_TEXT_BUFFER_CLASS	gtktextbuffer.h	67;"	d
GTK_TEXT_BUFFER_GET_CLASS	gtktextbuffer.h	70;"	d
GTK_TEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS	gtktextbuffer.h	/^  GTK_TEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS = - 1,$/;"	e	enum:__anon117
GTK_TEXT_BUFFER_TARGET_INFO_RICH_TEXT	gtktextbuffer.h	/^  GTK_TEXT_BUFFER_TARGET_INFO_RICH_TEXT       = - 2,$/;"	e	enum:__anon117
GTK_TEXT_BUFFER_TARGET_INFO_TEXT	gtktextbuffer.h	/^  GTK_TEXT_BUFFER_TARGET_INFO_TEXT            = - 3$/;"	e	enum:__anon117
GTK_TEXT_CHILD_ANCHOR	gtktextchild.h	49;"	d
GTK_TEXT_CHILD_ANCHOR_CLASS	gtktextchild.h	50;"	d
GTK_TEXT_CHILD_ANCHOR_GET_CLASS	gtktextchild.h	53;"	d
GTK_TEXT_CLASS	gtktext.h	40;"	d
GTK_TEXT_DIR_LTR	gtkenums.h	/^  GTK_TEXT_DIR_LTR,$/;"	e	enum:__anon24
GTK_TEXT_DIR_NONE	gtkenums.h	/^  GTK_TEXT_DIR_NONE,$/;"	e	enum:__anon24
GTK_TEXT_DIR_RTL	gtkenums.h	/^  GTK_TEXT_DIR_RTL$/;"	e	enum:__anon24
GTK_TEXT_GET_CLASS	gtktext.h	43;"	d
GTK_TEXT_INDEX	gtktext.h	207;"	d
GTK_TEXT_LAYOUT	gtktextlayout.h	103;"	d
GTK_TEXT_LAYOUT_CLASS	gtktextlayout.h	104;"	d
GTK_TEXT_LAYOUT_GET_CLASS	gtktextlayout.h	107;"	d
GTK_TEXT_MARK	gtktextmark.h	65;"	d
GTK_TEXT_MARK_CLASS	gtktextmark.h	66;"	d
GTK_TEXT_MARK_GET_CLASS	gtktextmark.h	69;"	d
GTK_TEXT_SEARCH_TEXT_ONLY	gtktextiter.h	/^  GTK_TEXT_SEARCH_TEXT_ONLY    = 1 << 1$/;"	e	enum:__anon110
GTK_TEXT_SEARCH_VISIBLE_ONLY	gtktextiter.h	/^  GTK_TEXT_SEARCH_VISIBLE_ONLY = 1 << 0,$/;"	e	enum:__anon110
GTK_TEXT_TAG	gtktexttag.h	73;"	d
GTK_TEXT_TAG_CLASS	gtktexttag.h	74;"	d
GTK_TEXT_TAG_GET_CLASS	gtktexttag.h	77;"	d
GTK_TEXT_TAG_TABLE	gtktexttagtable.h	41;"	d
GTK_TEXT_TAG_TABLE_CLASS	gtktexttagtable.h	42;"	d
GTK_TEXT_TAG_TABLE_GET_CLASS	gtktexttagtable.h	45;"	d
GTK_TEXT_VIEW	gtktextview.h	42;"	d
GTK_TEXT_VIEW_CLASS	gtktextview.h	43;"	d
GTK_TEXT_VIEW_GET_CLASS	gtktextview.h	46;"	d
GTK_TEXT_VIEW_PRIORITY_VALIDATE	gtktextview.h	59;"	d
GTK_TEXT_WINDOW_BOTTOM	gtktextview.h	/^  GTK_TEXT_WINDOW_BOTTOM$/;"	e	enum:__anon4
GTK_TEXT_WINDOW_LEFT	gtktextview.h	/^  GTK_TEXT_WINDOW_LEFT,$/;"	e	enum:__anon4
GTK_TEXT_WINDOW_PRIVATE	gtktextview.h	/^  GTK_TEXT_WINDOW_PRIVATE,$/;"	e	enum:__anon4
GTK_TEXT_WINDOW_RIGHT	gtktextview.h	/^  GTK_TEXT_WINDOW_RIGHT,$/;"	e	enum:__anon4
GTK_TEXT_WINDOW_TEXT	gtktextview.h	/^  GTK_TEXT_WINDOW_TEXT,$/;"	e	enum:__anon4
GTK_TEXT_WINDOW_TOP	gtktextview.h	/^  GTK_TEXT_WINDOW_TOP,$/;"	e	enum:__anon4
GTK_TEXT_WINDOW_WIDGET	gtktextview.h	/^  GTK_TEXT_WINDOW_WIDGET,$/;"	e	enum:__anon4
GTK_TIPS_QUERY	gtktipsquery.h	43;"	d
GTK_TIPS_QUERY_CLASS	gtktipsquery.h	44;"	d
GTK_TIPS_QUERY_GET_CLASS	gtktipsquery.h	47;"	d
GTK_TOGGLE_ACTION	gtktoggleaction.h	43;"	d
GTK_TOGGLE_ACTION_CLASS	gtktoggleaction.h	44;"	d
GTK_TOGGLE_ACTION_GET_CLASS	gtktoggleaction.h	47;"	d
GTK_TOGGLE_BUTTON	gtktogglebutton.h	41;"	d
GTK_TOGGLE_BUTTON_CLASS	gtktogglebutton.h	42;"	d
GTK_TOGGLE_BUTTON_GET_CLASS	gtktogglebutton.h	45;"	d
GTK_TOGGLE_GROUP_MOD_MASK	gtkprivate.h	137;"	d
GTK_TOGGLE_GROUP_MOD_MASK	gtkprivate.h	139;"	d
GTK_TOGGLE_TOOL_BUTTON	gtktoggletoolbutton.h	35;"	d
GTK_TOGGLE_TOOL_BUTTON_CLASS	gtktoggletoolbutton.h	36;"	d
GTK_TOGGLE_TOOL_BUTTON_GET_CLASS	gtktoggletoolbutton.h	39;"	d
GTK_TOOLBAR	gtktoolbar.h	55;"	d
GTK_TOOLBAR_BOTH	gtkenums.h	/^  GTK_TOOLBAR_BOTH,$/;"	e	enum:__anon49
GTK_TOOLBAR_BOTH_HORIZ	gtkenums.h	/^  GTK_TOOLBAR_BOTH_HORIZ$/;"	e	enum:__anon49
GTK_TOOLBAR_CHILD_BUTTON	gtktoolbar.h	/^  GTK_TOOLBAR_CHILD_BUTTON,$/;"	e	enum:__anon7
GTK_TOOLBAR_CHILD_RADIOBUTTON	gtktoolbar.h	/^  GTK_TOOLBAR_CHILD_RADIOBUTTON,$/;"	e	enum:__anon7
GTK_TOOLBAR_CHILD_SPACE	gtktoolbar.h	/^  GTK_TOOLBAR_CHILD_SPACE,$/;"	e	enum:__anon7
GTK_TOOLBAR_CHILD_TOGGLEBUTTON	gtktoolbar.h	/^  GTK_TOOLBAR_CHILD_TOGGLEBUTTON,$/;"	e	enum:__anon7
GTK_TOOLBAR_CHILD_WIDGET	gtktoolbar.h	/^  GTK_TOOLBAR_CHILD_WIDGET$/;"	e	enum:__anon7
GTK_TOOLBAR_CLASS	gtktoolbar.h	56;"	d
GTK_TOOLBAR_GET_CLASS	gtktoolbar.h	59;"	d
GTK_TOOLBAR_ICONS	gtkenums.h	/^  GTK_TOOLBAR_ICONS,$/;"	e	enum:__anon49
GTK_TOOLBAR_SPACE_EMPTY	gtktoolbar.h	/^  GTK_TOOLBAR_SPACE_EMPTY,$/;"	e	enum:__anon8
GTK_TOOLBAR_SPACE_LINE	gtktoolbar.h	/^  GTK_TOOLBAR_SPACE_LINE$/;"	e	enum:__anon8
GTK_TOOLBAR_TEXT	gtkenums.h	/^  GTK_TOOLBAR_TEXT,$/;"	e	enum:__anon49
GTK_TOOLTIP	gtktooltip.h	34;"	d
GTK_TOOLTIPS	gtktooltips.h	39;"	d
GTK_TOOLTIPS_CLASS	gtktooltips.h	40;"	d
GTK_TOOLTIPS_GET_CLASS	gtktooltips.h	43;"	d
GTK_TOOL_BUTTON	gtktoolbutton.h	35;"	d
GTK_TOOL_BUTTON_CLASS	gtktoolbutton.h	36;"	d
GTK_TOOL_BUTTON_GET_CLASS	gtktoolbutton.h	39;"	d
GTK_TOOL_ITEM	gtktoolitem.h	38;"	d
GTK_TOOL_ITEM_CLASS	gtktoolitem.h	39;"	d
GTK_TOOL_ITEM_GET_CLASS	gtktoolitem.h	42;"	d
GTK_TOOL_ITEM_GROUP	gtktoolitemgroup.h	35;"	d
GTK_TOOL_ITEM_GROUP_CLASS	gtktoolitemgroup.h	36;"	d
GTK_TOOL_ITEM_GROUP_GET_CLASS	gtktoolitemgroup.h	39;"	d
GTK_TOOL_PALETTE	gtktoolpalette.h	36;"	d
GTK_TOOL_PALETTE_CLASS	gtktoolpalette.h	37;"	d
GTK_TOOL_PALETTE_DRAG_GROUPS	gtktoolpalette.h	/^  GTK_TOOL_PALETTE_DRAG_GROUPS = (1 << 1)$/;"	e	enum:__anon85
GTK_TOOL_PALETTE_DRAG_ITEMS	gtktoolpalette.h	/^  GTK_TOOL_PALETTE_DRAG_ITEMS = (1 << 0),$/;"	e	enum:__anon85
GTK_TOOL_PALETTE_GET_CLASS	gtktoolpalette.h	40;"	d
GTK_TOOL_SHELL	gtktoolshell.h	39;"	d
GTK_TOOL_SHELL_GET_IFACE	gtktoolshell.h	41;"	d
GTK_TOPLEVEL	gtkwidget.h	/^  GTK_TOPLEVEL         = 1 << 4,$/;"	e	enum:__anon77
GTK_TOP_BOTTOM	gtkenums.h	/^  GTK_TOP_BOTTOM,$/;"	e	enum:__anon48
GTK_TREE	gtktree.h	42;"	d
GTK_TREE_CLASS	gtktree.h	43;"	d
GTK_TREE_DRAG_DEST	gtktreednd.h	75;"	d
GTK_TREE_DRAG_DEST_GET_IFACE	gtktreednd.h	77;"	d
GTK_TREE_DRAG_SOURCE	gtktreednd.h	33;"	d
GTK_TREE_DRAG_SOURCE_GET_IFACE	gtktreednd.h	35;"	d
GTK_TREE_GET_CLASS	gtktree.h	46;"	d
GTK_TREE_ITEM	gtktreeitem.h	39;"	d
GTK_TREE_ITEM_CLASS	gtktreeitem.h	40;"	d
GTK_TREE_ITEM_GET_CLASS	gtktreeitem.h	43;"	d
GTK_TREE_ITEM_SUBTREE	gtktreeitem.h	46;"	d
GTK_TREE_MODEL	gtktreemodel.h	35;"	d
GTK_TREE_MODEL_FILTER	gtktreemodelfilter.h	34;"	d
GTK_TREE_MODEL_FILTER_CLASS	gtktreemodelfilter.h	35;"	d
GTK_TREE_MODEL_FILTER_GET_CLASS	gtktreemodelfilter.h	38;"	d
GTK_TREE_MODEL_GET_IFACE	gtktreemodel.h	37;"	d
GTK_TREE_MODEL_ITERS_PERSIST	gtktreemodel.h	/^  GTK_TREE_MODEL_ITERS_PERSIST = 1 << 0,$/;"	e	enum:__anon81
GTK_TREE_MODEL_LIST_ONLY	gtktreemodel.h	/^  GTK_TREE_MODEL_LIST_ONLY = 1 << 1$/;"	e	enum:__anon81
GTK_TREE_MODEL_SORT	gtktreemodelsort.h	34;"	d
GTK_TREE_MODEL_SORT_CLASS	gtktreemodelsort.h	35;"	d
GTK_TREE_MODEL_SORT_GET_CLASS	gtktreemodelsort.h	38;"	d
GTK_TREE_ROOT_TREE	gtktree.h	50;"	d
GTK_TREE_SELECTION	gtktreeselection.h	33;"	d
GTK_TREE_SELECTION_CLASS	gtktreeselection.h	34;"	d
GTK_TREE_SELECTION_GET_CLASS	gtktreeselection.h	37;"	d
GTK_TREE_SELECTION_OLD	gtktree.h	51;"	d
GTK_TREE_SORTABLE	gtktreesortable.h	35;"	d
GTK_TREE_SORTABLE_CLASS	gtktreesortable.h	36;"	d
GTK_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID	gtktreesortable.h	/^  GTK_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID = -1,$/;"	e	enum:__anon129
GTK_TREE_SORTABLE_GET_IFACE	gtktreesortable.h	38;"	d
GTK_TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID	gtktreesortable.h	/^  GTK_TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID = -2$/;"	e	enum:__anon129
GTK_TREE_STORE	gtktreestore.h	37;"	d
GTK_TREE_STORE_CLASS	gtktreestore.h	38;"	d
GTK_TREE_STORE_GET_CLASS	gtktreestore.h	41;"	d
GTK_TREE_VIEW	gtktreeview.h	49;"	d
GTK_TREE_VIEW_CLASS	gtktreeview.h	50;"	d
GTK_TREE_VIEW_COLUMN	gtktreeviewcolumn.h	39;"	d
GTK_TREE_VIEW_COLUMN_AUTOSIZE	gtktreeviewcolumn.h	/^  GTK_TREE_VIEW_COLUMN_AUTOSIZE,$/;"	e	enum:__anon3
GTK_TREE_VIEW_COLUMN_CLASS	gtktreeviewcolumn.h	40;"	d
GTK_TREE_VIEW_COLUMN_FIXED	gtktreeviewcolumn.h	/^  GTK_TREE_VIEW_COLUMN_FIXED$/;"	e	enum:__anon3
GTK_TREE_VIEW_COLUMN_GET_CLASS	gtktreeviewcolumn.h	43;"	d
GTK_TREE_VIEW_COLUMN_GROW_ONLY	gtktreeviewcolumn.h	/^  GTK_TREE_VIEW_COLUMN_GROW_ONLY,$/;"	e	enum:__anon3
GTK_TREE_VIEW_DROP_AFTER	gtktreeview.h	/^  GTK_TREE_VIEW_DROP_AFTER,$/;"	e	enum:__anon115
GTK_TREE_VIEW_DROP_BEFORE	gtktreeview.h	/^  GTK_TREE_VIEW_DROP_BEFORE,$/;"	e	enum:__anon115
GTK_TREE_VIEW_DROP_INTO_OR_AFTER	gtktreeview.h	/^  GTK_TREE_VIEW_DROP_INTO_OR_AFTER$/;"	e	enum:__anon115
GTK_TREE_VIEW_DROP_INTO_OR_BEFORE	gtktreeview.h	/^  GTK_TREE_VIEW_DROP_INTO_OR_BEFORE,$/;"	e	enum:__anon115
GTK_TREE_VIEW_GET_CLASS	gtktreeview.h	53;"	d
GTK_TREE_VIEW_GRID_LINES_BOTH	gtkenums.h	/^  GTK_TREE_VIEW_GRID_LINES_BOTH$/;"	e	enum:__anon66
GTK_TREE_VIEW_GRID_LINES_HORIZONTAL	gtkenums.h	/^  GTK_TREE_VIEW_GRID_LINES_HORIZONTAL,$/;"	e	enum:__anon66
GTK_TREE_VIEW_GRID_LINES_NONE	gtkenums.h	/^  GTK_TREE_VIEW_GRID_LINES_NONE,$/;"	e	enum:__anon66
GTK_TREE_VIEW_GRID_LINES_VERTICAL	gtkenums.h	/^  GTK_TREE_VIEW_GRID_LINES_VERTICAL,$/;"	e	enum:__anon66
GTK_TREE_VIEW_ITEM	gtktree.h	/^  GTK_TREE_VIEW_ITEM$/;"	e	enum:__anon94
GTK_TREE_VIEW_LINE	gtktree.h	/^  GTK_TREE_VIEW_LINE,  \/* default view mode *\/$/;"	e	enum:__anon94
GTK_TYPE_ABOUT_DIALOG	gtkaboutdialog.h	36;"	d
GTK_TYPE_ACCEL_FLAGS	gtktypebuiltins.h	17;"	d
GTK_TYPE_ACCEL_GROUP	gtkaccelgroup.h	42;"	d
GTK_TYPE_ACCEL_LABEL	gtkaccellabel.h	43;"	d
GTK_TYPE_ACCEL_MAP	gtkaccelmap.h	33;"	d
GTK_TYPE_ACCESSIBLE	gtkaccessible.h	32;"	d
GTK_TYPE_ACTION	gtkaction.h	42;"	d
GTK_TYPE_ACTION_GROUP	gtkactiongroup.h	43;"	d
GTK_TYPE_ACTIVATABLE	gtkactivatable.h	32;"	d
GTK_TYPE_ADJUSTMENT	gtkadjustment.h	40;"	d
GTK_TYPE_ALIGNMENT	gtkalignment.h	40;"	d
GTK_TYPE_ANCHOR_TYPE	gtktypebuiltins.h	63;"	d
GTK_TYPE_ARG_FLAGS	gtktypebuiltins.h	213;"	d
GTK_TYPE_ARROW	gtkarrow.h	41;"	d
GTK_TYPE_ARROW_PLACEMENT	gtktypebuiltins.h	65;"	d
GTK_TYPE_ARROW_TYPE	gtktypebuiltins.h	67;"	d
GTK_TYPE_ASPECT_FRAME	gtkaspectframe.h	40;"	d
GTK_TYPE_ASSISTANT	gtkassistant.h	37;"	d
GTK_TYPE_ASSISTANT_PAGE_TYPE	gtktypebuiltins.h	21;"	d
GTK_TYPE_ATTACH_OPTIONS	gtktypebuiltins.h	69;"	d
GTK_TYPE_BIN	gtkbin.h	40;"	d
GTK_TYPE_BOOL	gtktypeutils.h	83;"	d
GTK_TYPE_BORDER	gtkstyle.h	48;"	d
GTK_TYPE_BOX	gtkbox.h	41;"	d
GTK_TYPE_BOXED	gtktypeutils.h	91;"	d
GTK_TYPE_BUILDABLE	gtkbuildable.h	33;"	d
GTK_TYPE_BUILDER	gtkbuilder.h	33;"	d
GTK_TYPE_BUILDER_ERROR	gtktypebuiltins.h	25;"	d
GTK_TYPE_BUTTON	gtkbutton.h	41;"	d
GTK_TYPE_BUTTONS_TYPE	gtktypebuiltins.h	203;"	d
GTK_TYPE_BUTTON_ACTION	gtktypebuiltins.h	319;"	d
GTK_TYPE_BUTTON_BOX	gtkbbox.h	39;"	d
GTK_TYPE_BUTTON_BOX_STYLE	gtktypebuiltins.h	71;"	d
GTK_TYPE_CALENDAR	gtkcalendar.h	45;"	d
GTK_TYPE_CALENDAR_DISPLAY_OPTIONS	gtktypebuiltins.h	29;"	d
GTK_TYPE_CELL_EDITABLE	gtkcelleditable.h	31;"	d
GTK_TYPE_CELL_LAYOUT	gtkcelllayout.h	34;"	d
GTK_TYPE_CELL_RENDERER	gtkcellrenderer.h	48;"	d
GTK_TYPE_CELL_RENDERER_ACCEL	gtkcellrendereraccel.h	31;"	d
GTK_TYPE_CELL_RENDERER_ACCEL_MODE	gtktypebuiltins.h	39;"	d
GTK_TYPE_CELL_RENDERER_COMBO	gtkcellrenderercombo.h	32;"	d
GTK_TYPE_CELL_RENDERER_MODE	gtktypebuiltins.h	35;"	d
GTK_TYPE_CELL_RENDERER_PIXBUF	gtkcellrendererpixbuf.h	33;"	d
GTK_TYPE_CELL_RENDERER_PROGRESS	gtkcellrendererprogress.h	39;"	d
GTK_TYPE_CELL_RENDERER_SPIN	gtkcellrendererspin.h	31;"	d
GTK_TYPE_CELL_RENDERER_SPINNER	gtkcellrendererspinner.h	34;"	d
GTK_TYPE_CELL_RENDERER_STATE	gtktypebuiltins.h	33;"	d
GTK_TYPE_CELL_RENDERER_TEXT	gtkcellrenderertext.h	34;"	d
GTK_TYPE_CELL_RENDERER_TOGGLE	gtkcellrenderertoggle.h	33;"	d
GTK_TYPE_CELL_TYPE	gtktypebuiltins.h	315;"	d
GTK_TYPE_CELL_VIEW	gtkcellview.h	33;"	d
GTK_TYPE_CHAR	gtktypeutils.h	81;"	d
GTK_TYPE_CHECK_BUTTON	gtkcheckbutton.h	40;"	d
GTK_TYPE_CHECK_MENU_ITEM	gtkcheckmenuitem.h	40;"	d
GTK_TYPE_CLIPBOARD	gtkclipboard.h	33;"	d
GTK_TYPE_CLIST	gtkclist.h	86;"	d
GTK_TYPE_CLIST_DRAG_POS	gtktypebuiltins.h	317;"	d
GTK_TYPE_COLOR_BUTTON	gtkcolorbutton.h	51;"	d
GTK_TYPE_COLOR_SELECTION	gtkcolorsel.h	40;"	d
GTK_TYPE_COLOR_SELECTION_DIALOG	gtkcolorseldialog.h	40;"	d
GTK_TYPE_COMBO	gtkcombo.h	37;"	d
GTK_TYPE_COMBO_BOX	gtkcombobox.h	33;"	d
GTK_TYPE_COMBO_BOX_ENTRY	gtkcomboboxentry.h	34;"	d
GTK_TYPE_COMBO_BOX_TEXT	gtkcomboboxtext.h	30;"	d
GTK_TYPE_CONTAINER	gtkcontainer.h	41;"	d
GTK_TYPE_CORNER_TYPE	gtktypebuiltins.h	105;"	d
GTK_TYPE_CTREE	gtkctree.h	40;"	d
GTK_TYPE_CTREE_EXPANDER_STYLE	gtktypebuiltins.h	327;"	d
GTK_TYPE_CTREE_EXPANSION_TYPE	gtktypebuiltins.h	329;"	d
GTK_TYPE_CTREE_LINE_STYLE	gtktypebuiltins.h	325;"	d
GTK_TYPE_CTREE_NODE	gtkctree.h	53;"	d
GTK_TYPE_CTREE_POS	gtktypebuiltins.h	323;"	d
GTK_TYPE_CURVE	gtkcurve.h	38;"	d
GTK_TYPE_CURVE_TYPE	gtktypebuiltins.h	73;"	d
GTK_TYPE_DEBUG_FLAG	gtktypebuiltins.h	43;"	d
GTK_TYPE_DELETE_TYPE	gtktypebuiltins.h	75;"	d
GTK_TYPE_DEST_DEFAULTS	gtktypebuiltins.h	53;"	d
GTK_TYPE_DIALOG	gtkdialog.h	86;"	d
GTK_TYPE_DIALOG_FLAGS	gtktypebuiltins.h	47;"	d
GTK_TYPE_DIRECTION_TYPE	gtktypebuiltins.h	77;"	d
GTK_TYPE_DOUBLE	gtktypeutils.h	89;"	d
GTK_TYPE_DRAG_RESULT	gtktypebuiltins.h	173;"	d
GTK_TYPE_DRAWING_AREA	gtkdrawingarea.h	40;"	d
GTK_TYPE_EDITABLE	gtkeditable.h	40;"	d
GTK_TYPE_ENTRY	gtkentry.h	50;"	d
GTK_TYPE_ENTRY_BUFFER	gtkentrybuffer.h	34;"	d
GTK_TYPE_ENTRY_COMPLETION	gtkentrycompletion.h	34;"	d
GTK_TYPE_ENTRY_ICON_POSITION	gtktypebuiltins.h	59;"	d
GTK_TYPE_ENUM	gtktypeutils.h	77;"	d
GTK_TYPE_EVENT_BOX	gtkeventbox.h	40;"	d
GTK_TYPE_EXPANDER	gtkexpander.h	35;"	d
GTK_TYPE_EXPANDER_STYLE	gtktypebuiltins.h	79;"	d
GTK_TYPE_FILE_CHOOSER	gtkfilechooser.h	33;"	d
GTK_TYPE_FILE_CHOOSER_ACTION	gtktypebuiltins.h	177;"	d
GTK_TYPE_FILE_CHOOSER_BUTTON	gtkfilechooserbutton.h	33;"	d
GTK_TYPE_FILE_CHOOSER_CONFIRMATION	gtktypebuiltins.h	179;"	d
GTK_TYPE_FILE_CHOOSER_DIALOG	gtkfilechooserdialog.h	33;"	d
GTK_TYPE_FILE_CHOOSER_ERROR	gtktypebuiltins.h	181;"	d
GTK_TYPE_FILE_CHOOSER_WIDGET	gtkfilechooserwidget.h	33;"	d
GTK_TYPE_FILE_FILTER	gtkfilefilter.h	32;"	d
GTK_TYPE_FILE_FILTER_FLAGS	gtktypebuiltins.h	185;"	d
GTK_TYPE_FILE_SELECTION	gtkfilesel.h	38;"	d
GTK_TYPE_FIXED	gtkfixed.h	40;"	d
GTK_TYPE_FLAGS	gtktypeutils.h	78;"	d
GTK_TYPE_FLOAT	gtktypeutils.h	88;"	d
GTK_TYPE_FONT_BUTTON	gtkfontbutton.h	42;"	d
GTK_TYPE_FONT_SELECTION	gtkfontsel.h	45;"	d
GTK_TYPE_FONT_SELECTION_DIALOG	gtkfontsel.h	53;"	d
GTK_TYPE_FRAME	gtkframe.h	41;"	d
GTK_TYPE_FUNDAMENTAL_LAST	gtktypeutils.h	104;"	d
GTK_TYPE_FUNDAMENTAL_MAX	gtktypeutils.h	105;"	d
GTK_TYPE_GAMMA_CURVE	gtkgamma.h	38;"	d
GTK_TYPE_HANDLE_BOX	gtkhandlebox.h	45;"	d
GTK_TYPE_HBOX	gtkhbox.h	40;"	d
GTK_TYPE_HBUTTON_BOX	gtkhbbox.h	40;"	d
GTK_TYPE_HPANED	gtkhpaned.h	38;"	d
GTK_TYPE_HRULER	gtkhruler.h	53;"	d
GTK_TYPE_HSCALE	gtkhscale.h	40;"	d
GTK_TYPE_HSCROLLBAR	gtkhscrollbar.h	41;"	d
GTK_TYPE_HSEPARATOR	gtkhseparator.h	40;"	d
GTK_TYPE_HSV	gtkhsv.h	43;"	d
GTK_TYPE_ICON_FACTORY	gtkiconfactory.h	41;"	d
GTK_TYPE_ICON_INFO	gtkicontheme.h	32;"	d
GTK_TYPE_ICON_LOOKUP_FLAGS	gtktypebuiltins.h	189;"	d
GTK_TYPE_ICON_SET	gtkiconfactory.h	47;"	d
GTK_TYPE_ICON_SIZE	gtktypebuiltins.h	81;"	d
GTK_TYPE_ICON_SOURCE	gtkiconfactory.h	48;"	d
GTK_TYPE_ICON_THEME	gtkicontheme.h	34;"	d
GTK_TYPE_ICON_THEME_ERROR	gtktypebuiltins.h	191;"	d
GTK_TYPE_ICON_VIEW	gtkiconview.h	35;"	d
GTK_TYPE_ICON_VIEW_DROP_POSITION	gtktypebuiltins.h	195;"	d
GTK_TYPE_IDENTIFIER	gtktypeutils.h	41;"	d
GTK_TYPE_IMAGE	gtkimage.h	41;"	d
GTK_TYPE_IMAGE_MENU_ITEM	gtkimagemenuitem.h	40;"	d
GTK_TYPE_IMAGE_TYPE	gtktypebuiltins.h	199;"	d
GTK_TYPE_IM_CONTEXT	gtkimcontext.h	34;"	d
GTK_TYPE_IM_CONTEXT_SIMPLE	gtkimcontextsimple.h	33;"	d
GTK_TYPE_IM_MULTICONTEXT	gtkimmulticontext.h	32;"	d
GTK_TYPE_IM_PREEDIT_STYLE	gtktypebuiltins.h	151;"	d
GTK_TYPE_IM_STATUS_STYLE	gtktypebuiltins.h	153;"	d
GTK_TYPE_INFO_BAR	gtkinfobar.h	46;"	d
GTK_TYPE_INPUT_DIALOG	gtkinputdialog.h	48;"	d
GTK_TYPE_INT	gtktypeutils.h	84;"	d
GTK_TYPE_INVALID	gtktypeutils.h	75;"	d
GTK_TYPE_INVISIBLE	gtkinvisible.h	38;"	d
GTK_TYPE_IS_OBJECT	gtktypeutils.h	99;"	d
GTK_TYPE_ITEM	gtkitem.h	40;"	d
GTK_TYPE_ITEM_FACTORY	gtkitemfactory.h	52;"	d
GTK_TYPE_JUSTIFICATION	gtktypebuiltins.h	89;"	d
GTK_TYPE_LABEL	gtklabel.h	41;"	d
GTK_TYPE_LAYOUT	gtklayout.h	45;"	d
GTK_TYPE_LINK_BUTTON	gtklinkbutton.h	36;"	d
GTK_TYPE_LIST	gtklist.h	36;"	d
GTK_TYPE_LIST_ITEM	gtklistitem.h	38;"	d
GTK_TYPE_LIST_STORE	gtkliststore.h	35;"	d
GTK_TYPE_LONG	gtktypeutils.h	86;"	d
GTK_TYPE_MATCH_TYPE	gtktypebuiltins.h	91;"	d
GTK_TYPE_MENU	gtkmenu.h	41;"	d
GTK_TYPE_MENU_BAR	gtkmenubar.h	41;"	d
GTK_TYPE_MENU_DIRECTION_TYPE	gtktypebuiltins.h	93;"	d
GTK_TYPE_MENU_ITEM	gtkmenuitem.h	40;"	d
GTK_TYPE_MENU_SHELL	gtkmenushell.h	40;"	d
GTK_TYPE_MENU_TOOL_BUTTON	gtkmenutoolbutton.h	34;"	d
GTK_TYPE_MESSAGE_DIALOG	gtkmessagedialog.h	40;"	d
GTK_TYPE_MESSAGE_TYPE	gtktypebuiltins.h	95;"	d
GTK_TYPE_METRIC_TYPE	gtktypebuiltins.h	97;"	d
GTK_TYPE_MISC	gtkmisc.h	40;"	d
GTK_TYPE_MOUNT_OPERATION	gtkmountoperation.h	36;"	d
GTK_TYPE_MOVEMENT_STEP	gtktypebuiltins.h	99;"	d
GTK_TYPE_NONE	gtktypeutils.h	76;"	d
GTK_TYPE_NOTEBOOK	gtknotebook.h	41;"	d
GTK_TYPE_NOTEBOOK_TAB	gtktypebuiltins.h	207;"	d
GTK_TYPE_NUMBER_UP_LAYOUT	gtktypebuiltins.h	161;"	d
GTK_TYPE_OBJECT	gtkobject.h	47;"	d
GTK_TYPE_OBJECT_FLAGS	gtktypebuiltins.h	211;"	d
GTK_TYPE_OFFSCREEN_WINDOW	gtkoffscreenwindow.h	32;"	d
GTK_TYPE_OLD_EDITABLE	gtkoldeditable.h	37;"	d
GTK_TYPE_OPTION_MENU	gtkoptionmenu.h	37;"	d
GTK_TYPE_ORIENTABLE	gtkorientable.h	35;"	d
GTK_TYPE_ORIENTATION	gtktypebuiltins.h	103;"	d
GTK_TYPE_PACK_DIRECTION	gtktypebuiltins.h	155;"	d
GTK_TYPE_PACK_TYPE	gtktypebuiltins.h	107;"	d
GTK_TYPE_PAGE_ORIENTATION	gtktypebuiltins.h	163;"	d
GTK_TYPE_PAGE_SET	gtktypebuiltins.h	159;"	d
GTK_TYPE_PAGE_SETUP	gtkpagesetup.h	36;"	d
GTK_TYPE_PANED	gtkpaned.h	38;"	d
GTK_TYPE_PAPER_SIZE	gtkpapersize.h	36;"	d
GTK_TYPE_PATH_PRIORITY_TYPE	gtktypebuiltins.h	109;"	d
GTK_TYPE_PATH_TYPE	gtktypebuiltins.h	111;"	d
GTK_TYPE_PIXMAP	gtkpixmap.h	37;"	d
GTK_TYPE_PLUG	gtkplug.h	40;"	d
GTK_TYPE_POINTER	gtktypeutils.h	92;"	d
GTK_TYPE_POLICY_TYPE	gtktypebuiltins.h	113;"	d
GTK_TYPE_POSITION_TYPE	gtktypebuiltins.h	115;"	d
GTK_TYPE_PREVIEW	gtkpreview.h	37;"	d
GTK_TYPE_PREVIEW_TYPE	gtktypebuiltins.h	117;"	d
GTK_TYPE_PRINT_CONTEXT	gtkprintcontext.h	37;"	d
GTK_TYPE_PRINT_DUPLEX	gtktypebuiltins.h	167;"	d
GTK_TYPE_PRINT_ERROR	gtktypebuiltins.h	223;"	d
GTK_TYPE_PRINT_OPERATION	gtkprintoperation.h	40;"	d
GTK_TYPE_PRINT_OPERATION_ACTION	gtktypebuiltins.h	221;"	d
GTK_TYPE_PRINT_OPERATION_PREVIEW	gtkprintoperationpreview.h	33;"	d
GTK_TYPE_PRINT_OPERATION_RESULT	gtktypebuiltins.h	219;"	d
GTK_TYPE_PRINT_PAGES	gtktypebuiltins.h	157;"	d
GTK_TYPE_PRINT_QUALITY	gtktypebuiltins.h	165;"	d
GTK_TYPE_PRINT_SETTINGS	gtkprintsettings.h	34;"	d
GTK_TYPE_PRINT_STATUS	gtktypebuiltins.h	217;"	d
GTK_TYPE_PRIVATE_FLAGS	gtktypebuiltins.h	227;"	d
GTK_TYPE_PROGRESS	gtkprogress.h	39;"	d
GTK_TYPE_PROGRESS_BAR	gtkprogressbar.h	40;"	d
GTK_TYPE_PROGRESS_BAR_ORIENTATION	gtktypebuiltins.h	233;"	d
GTK_TYPE_PROGRESS_BAR_STYLE	gtktypebuiltins.h	231;"	d
GTK_TYPE_RADIO_ACTION	gtkradioaction.h	42;"	d
GTK_TYPE_RADIO_BUTTON	gtkradiobutton.h	40;"	d
GTK_TYPE_RADIO_MENU_ITEM	gtkradiomenuitem.h	40;"	d
GTK_TYPE_RADIO_TOOL_BUTTON	gtkradiotoolbutton.h	34;"	d
GTK_TYPE_RANGE	gtkrange.h	42;"	d
GTK_TYPE_RC_FLAGS	gtktypebuiltins.h	237;"	d
GTK_TYPE_RC_STYLE	gtkrc.h	45;"	d
GTK_TYPE_RC_TOKEN_TYPE	gtktypebuiltins.h	239;"	d
GTK_TYPE_RECENT_ACTION	gtkrecentaction.h	34;"	d
GTK_TYPE_RECENT_CHOOSER	gtkrecentchooser.h	35;"	d
GTK_TYPE_RECENT_CHOOSER_DIALOG	gtkrecentchooserdialog.h	33;"	d
GTK_TYPE_RECENT_CHOOSER_ERROR	gtktypebuiltins.h	245;"	d
GTK_TYPE_RECENT_CHOOSER_MENU	gtkrecentchoosermenu.h	33;"	d
GTK_TYPE_RECENT_CHOOSER_WIDGET	gtkrecentchooserwidget.h	33;"	d
GTK_TYPE_RECENT_FILTER	gtkrecentfilter.h	32;"	d
GTK_TYPE_RECENT_FILTER_FLAGS	gtktypebuiltins.h	249;"	d
GTK_TYPE_RECENT_INFO	gtkrecentmanager.h	34;"	d
GTK_TYPE_RECENT_MANAGER	gtkrecentmanager.h	36;"	d
GTK_TYPE_RECENT_MANAGER_ERROR	gtktypebuiltins.h	253;"	d
GTK_TYPE_RECENT_SORT_TYPE	gtktypebuiltins.h	243;"	d
GTK_TYPE_RELIEF_STYLE	gtktypebuiltins.h	119;"	d
GTK_TYPE_REQUISITION	gtkwidget.h	474;"	d
GTK_TYPE_RESIZE_MODE	gtktypebuiltins.h	121;"	d
GTK_TYPE_RESPONSE_TYPE	gtktypebuiltins.h	49;"	d
GTK_TYPE_RULER	gtkruler.h	52;"	d
GTK_TYPE_SCALE	gtkscale.h	40;"	d
GTK_TYPE_SCALE_BUTTON	gtkscalebutton.h	47;"	d
GTK_TYPE_SCROLLBAR	gtkscrollbar.h	40;"	d
GTK_TYPE_SCROLLED_WINDOW	gtkscrolledwindow.h	43;"	d
GTK_TYPE_SCROLL_STEP	gtktypebuiltins.h	101;"	d
GTK_TYPE_SCROLL_TYPE	gtktypebuiltins.h	125;"	d
GTK_TYPE_SELECTION_DATA	gtkselection.h	44;"	d
GTK_TYPE_SELECTION_MODE	gtktypebuiltins.h	127;"	d
GTK_TYPE_SENSITIVITY_TYPE	gtktypebuiltins.h	83;"	d
GTK_TYPE_SEPARATOR	gtkseparator.h	40;"	d
GTK_TYPE_SEPARATOR_MENU_ITEM	gtkseparatormenuitem.h	40;"	d
GTK_TYPE_SEPARATOR_TOOL_ITEM	gtkseparatortoolitem.h	33;"	d
GTK_TYPE_SETTINGS	gtksettings.h	32;"	d
GTK_TYPE_SHADOW_TYPE	gtktypebuiltins.h	129;"	d
GTK_TYPE_SIDE_TYPE	gtktypebuiltins.h	85;"	d
GTK_TYPE_SIGNAL_RUN_TYPE	gtktypebuiltins.h	123;"	d
GTK_TYPE_SIZE_GROUP	gtksizegroup.h	32;"	d
GTK_TYPE_SIZE_GROUP_MODE	gtktypebuiltins.h	257;"	d
GTK_TYPE_SOCKET	gtksocket.h	37;"	d
GTK_TYPE_SORT_TYPE	gtktypebuiltins.h	149;"	d
GTK_TYPE_SPINNER	gtkspinner.h	36;"	d
GTK_TYPE_SPIN_BUTTON	gtkspinbutton.h	44;"	d
GTK_TYPE_SPIN_BUTTON_UPDATE_POLICY	gtktypebuiltins.h	261;"	d
GTK_TYPE_SPIN_TYPE	gtktypebuiltins.h	263;"	d
GTK_TYPE_STATE_TYPE	gtktypebuiltins.h	131;"	d
GTK_TYPE_STATUSBAR	gtkstatusbar.h	39;"	d
GTK_TYPE_STATUS_ICON	gtkstatusicon.h	36;"	d
GTK_TYPE_STRING	gtktypeutils.h	90;"	d
GTK_TYPE_STYLE	gtkstyle.h	41;"	d
GTK_TYPE_SUBMENU_DIRECTION	gtktypebuiltins.h	133;"	d
GTK_TYPE_SUBMENU_PLACEMENT	gtktypebuiltins.h	135;"	d
GTK_TYPE_TABLE	gtktable.h	40;"	d
GTK_TYPE_TARGET_FLAGS	gtktypebuiltins.h	55;"	d
GTK_TYPE_TARGET_LIST	gtkselection.h	45;"	d
GTK_TYPE_TEAROFF_MENU_ITEM	gtktearoffmenuitem.h	40;"	d
GTK_TYPE_TEXT	gtktext.h	38;"	d
GTK_TYPE_TEXT_ATTRIBUTES	gtktexttag.h	79;"	d
GTK_TYPE_TEXT_BUFFER	gtktextbuffer.h	65;"	d
GTK_TYPE_TEXT_BUFFER_TARGET_INFO	gtktypebuiltins.h	267;"	d
GTK_TYPE_TEXT_CHILD_ANCHOR	gtktextchild.h	48;"	d
GTK_TYPE_TEXT_DIRECTION	gtktypebuiltins.h	87;"	d
GTK_TYPE_TEXT_ITER	gtktextiter.h	53;"	d
GTK_TYPE_TEXT_LAYOUT	gtktextlayout.h	102;"	d
GTK_TYPE_TEXT_MARK	gtktextmark.h	64;"	d
GTK_TYPE_TEXT_SEARCH_FLAGS	gtktypebuiltins.h	271;"	d
GTK_TYPE_TEXT_TAG	gtktexttag.h	72;"	d
GTK_TYPE_TEXT_TAG_TABLE	gtktexttagtable.h	40;"	d
GTK_TYPE_TEXT_VIEW	gtktextview.h	41;"	d
GTK_TYPE_TEXT_WINDOW_TYPE	gtktypebuiltins.h	275;"	d
GTK_TYPE_TIPS_QUERY	gtktipsquery.h	42;"	d
GTK_TYPE_TOGGLE_ACTION	gtktoggleaction.h	42;"	d
GTK_TYPE_TOGGLE_BUTTON	gtktogglebutton.h	40;"	d
GTK_TYPE_TOGGLE_TOOL_BUTTON	gtktoggletoolbutton.h	34;"	d
GTK_TYPE_TOOLBAR	gtktoolbar.h	54;"	d
GTK_TYPE_TOOLBAR_CHILD_TYPE	gtktypebuiltins.h	279;"	d
GTK_TYPE_TOOLBAR_SPACE_STYLE	gtktypebuiltins.h	281;"	d
GTK_TYPE_TOOLBAR_STYLE	gtktypebuiltins.h	137;"	d
GTK_TYPE_TOOLTIP	gtktooltip.h	33;"	d
GTK_TYPE_TOOLTIPS	gtktooltips.h	38;"	d
GTK_TYPE_TOOL_BUTTON	gtktoolbutton.h	34;"	d
GTK_TYPE_TOOL_ITEM	gtktoolitem.h	37;"	d
GTK_TYPE_TOOL_ITEM_GROUP	gtktoolitemgroup.h	34;"	d
GTK_TYPE_TOOL_PALETTE	gtktoolpalette.h	35;"	d
GTK_TYPE_TOOL_PALETTE_DRAG_TARGETS	gtktypebuiltins.h	285;"	d
GTK_TYPE_TOOL_SHELL	gtktoolshell.h	38;"	d
GTK_TYPE_TREE	gtktree.h	41;"	d
GTK_TYPE_TREE_DRAG_DEST	gtktreednd.h	74;"	d
GTK_TYPE_TREE_DRAG_SOURCE	gtktreednd.h	32;"	d
GTK_TYPE_TREE_ITEM	gtktreeitem.h	38;"	d
GTK_TYPE_TREE_ITER	gtktreemodel.h	39;"	d
GTK_TYPE_TREE_MODEL	gtktreemodel.h	34;"	d
GTK_TYPE_TREE_MODEL_FILTER	gtktreemodelfilter.h	33;"	d
GTK_TYPE_TREE_MODEL_FLAGS	gtktypebuiltins.h	289;"	d
GTK_TYPE_TREE_MODEL_SORT	gtktreemodelsort.h	33;"	d
GTK_TYPE_TREE_PATH	gtktreemodel.h	40;"	d
GTK_TYPE_TREE_ROW_REFERENCE	gtktreemodel.h	41;"	d
GTK_TYPE_TREE_SELECTION	gtktreeselection.h	32;"	d
GTK_TYPE_TREE_SORTABLE	gtktreesortable.h	34;"	d
GTK_TYPE_TREE_STORE	gtktreestore.h	36;"	d
GTK_TYPE_TREE_VIEW	gtktreeview.h	48;"	d
GTK_TYPE_TREE_VIEW_COLUMN	gtktreeviewcolumn.h	38;"	d
GTK_TYPE_TREE_VIEW_COLUMN_SIZING	gtktypebuiltins.h	297;"	d
GTK_TYPE_TREE_VIEW_DROP_POSITION	gtktypebuiltins.h	293;"	d
GTK_TYPE_TREE_VIEW_GRID_LINES	gtktypebuiltins.h	171;"	d
GTK_TYPE_TREE_VIEW_MODE	gtktypebuiltins.h	311;"	d
GTK_TYPE_UCHAR	gtktypeutils.h	82;"	d
GTK_TYPE_UINT	gtktypeutils.h	85;"	d
GTK_TYPE_UI_MANAGER	gtkuimanager.h	45;"	d
GTK_TYPE_UI_MANAGER_ITEM_TYPE	gtktypebuiltins.h	301;"	d
GTK_TYPE_ULONG	gtktypeutils.h	87;"	d
GTK_TYPE_UNIT	gtktypebuiltins.h	169;"	d
GTK_TYPE_UPDATE_TYPE	gtktypebuiltins.h	139;"	d
GTK_TYPE_VBOX	gtkvbox.h	40;"	d
GTK_TYPE_VBUTTON_BOX	gtkvbbox.h	41;"	d
GTK_TYPE_VIEWPORT	gtkviewport.h	42;"	d
GTK_TYPE_VISIBILITY	gtktypebuiltins.h	141;"	d
GTK_TYPE_VOLUME_BUTTON	gtkvolumebutton.h	41;"	d
GTK_TYPE_VPANED	gtkvpaned.h	38;"	d
GTK_TYPE_VRULER	gtkvruler.h	53;"	d
GTK_TYPE_VSCALE	gtkvscale.h	41;"	d
GTK_TYPE_VSCROLLBAR	gtkvscrollbar.h	41;"	d
GTK_TYPE_VSEPARATOR	gtkvseparator.h	41;"	d
GTK_TYPE_WIDGET	gtkwidget.h	136;"	d
GTK_TYPE_WIDGET_FLAGS	gtktypebuiltins.h	305;"	d
GTK_TYPE_WIDGET_HELP_TYPE	gtktypebuiltins.h	307;"	d
GTK_TYPE_WINDOW	gtkwindow.h	41;"	d
GTK_TYPE_WINDOW_GROUP	gtkwindow.h	147;"	d
GTK_TYPE_WINDOW_POSITION	gtktypebuiltins.h	143;"	d
GTK_TYPE_WINDOW_TYPE	gtktypebuiltins.h	145;"	d
GTK_TYPE_WRAP_MODE	gtktypebuiltins.h	147;"	d
GTK_UI_MANAGER	gtkuimanager.h	46;"	d
GTK_UI_MANAGER_ACCELERATOR	gtkuimanager.h	/^  GTK_UI_MANAGER_ACCELERATOR       = 1 << 8,$/;"	e	enum:__anon114
GTK_UI_MANAGER_AUTO	gtkuimanager.h	/^  GTK_UI_MANAGER_AUTO              = 0,$/;"	e	enum:__anon114
GTK_UI_MANAGER_CLASS	gtkuimanager.h	47;"	d
GTK_UI_MANAGER_GET_CLASS	gtkuimanager.h	50;"	d
GTK_UI_MANAGER_MENU	gtkuimanager.h	/^  GTK_UI_MANAGER_MENU              = 1 << 1,$/;"	e	enum:__anon114
GTK_UI_MANAGER_MENUBAR	gtkuimanager.h	/^  GTK_UI_MANAGER_MENUBAR           = 1 << 0,$/;"	e	enum:__anon114
GTK_UI_MANAGER_MENUITEM	gtkuimanager.h	/^  GTK_UI_MANAGER_MENUITEM          = 1 << 5,$/;"	e	enum:__anon114
GTK_UI_MANAGER_PLACEHOLDER	gtkuimanager.h	/^  GTK_UI_MANAGER_PLACEHOLDER       = 1 << 3,$/;"	e	enum:__anon114
GTK_UI_MANAGER_POPUP	gtkuimanager.h	/^  GTK_UI_MANAGER_POPUP             = 1 << 4,$/;"	e	enum:__anon114
GTK_UI_MANAGER_POPUP_WITH_ACCELS	gtkuimanager.h	/^  GTK_UI_MANAGER_POPUP_WITH_ACCELS = 1 << 9$/;"	e	enum:__anon114
GTK_UI_MANAGER_SEPARATOR	gtkuimanager.h	/^  GTK_UI_MANAGER_SEPARATOR         = 1 << 7,$/;"	e	enum:__anon114
GTK_UI_MANAGER_TOOLBAR	gtkuimanager.h	/^  GTK_UI_MANAGER_TOOLBAR           = 1 << 2,$/;"	e	enum:__anon114
GTK_UI_MANAGER_TOOLITEM	gtkuimanager.h	/^  GTK_UI_MANAGER_TOOLITEM          = 1 << 6,$/;"	e	enum:__anon114
GTK_UNIT_INCH	gtkenums.h	/^  GTK_UNIT_INCH,$/;"	e	enum:__anon65
GTK_UNIT_MM	gtkenums.h	/^  GTK_UNIT_MM$/;"	e	enum:__anon65
GTK_UNIT_PIXEL	gtkenums.h	/^  GTK_UNIT_PIXEL,$/;"	e	enum:__anon65
GTK_UNIT_POINTS	gtkenums.h	/^  GTK_UNIT_POINTS,$/;"	e	enum:__anon65
GTK_UPDATE_ALWAYS	gtkspinbutton.h	/^  GTK_UPDATE_ALWAYS,$/;"	e	enum:__anon87
GTK_UPDATE_CONTINUOUS	gtkenums.h	/^  GTK_UPDATE_CONTINUOUS,$/;"	e	enum:__anon50
GTK_UPDATE_DELAYED	gtkenums.h	/^  GTK_UPDATE_DELAYED$/;"	e	enum:__anon50
GTK_UPDATE_DISCONTINUOUS	gtkenums.h	/^  GTK_UPDATE_DISCONTINUOUS,$/;"	e	enum:__anon50
GTK_UPDATE_IF_VALID	gtkspinbutton.h	/^  GTK_UPDATE_IF_VALID$/;"	e	enum:__anon87
GTK_VALUE_BOOL	gtktypeutils.h	178;"	d
GTK_VALUE_BOXED	gtktypeutils.h	188;"	d
GTK_VALUE_CHAR	gtktypeutils.h	176;"	d
GTK_VALUE_DOUBLE	gtktypeutils.h	184;"	d
GTK_VALUE_ENUM	gtktypeutils.h	186;"	d
GTK_VALUE_FLAGS	gtktypeutils.h	187;"	d
GTK_VALUE_FLOAT	gtktypeutils.h	183;"	d
GTK_VALUE_INT	gtktypeutils.h	179;"	d
GTK_VALUE_LONG	gtktypeutils.h	181;"	d
GTK_VALUE_OBJECT	gtktypeutils.h	189;"	d
GTK_VALUE_POINTER	gtktypeutils.h	190;"	d
GTK_VALUE_SIGNAL	gtktypeutils.h	191;"	d
GTK_VALUE_STRING	gtktypeutils.h	185;"	d
GTK_VALUE_UCHAR	gtktypeutils.h	177;"	d
GTK_VALUE_UINT	gtktypeutils.h	180;"	d
GTK_VALUE_ULONG	gtktypeutils.h	182;"	d
GTK_VBOX	gtkvbox.h	41;"	d
GTK_VBOX_CLASS	gtkvbox.h	42;"	d
GTK_VBOX_GET_CLASS	gtkvbox.h	45;"	d
GTK_VBUTTON_BOX	gtkvbbox.h	42;"	d
GTK_VBUTTON_BOX_CLASS	gtkvbbox.h	43;"	d
GTK_VBUTTON_BOX_GET_CLASS	gtkvbbox.h	46;"	d
GTK_VIEWPORT	gtkviewport.h	43;"	d
GTK_VIEWPORT_CLASS	gtkviewport.h	44;"	d
GTK_VIEWPORT_GET_CLASS	gtkviewport.h	47;"	d
GTK_VISIBILITY_FULL	gtkenums.h	/^  GTK_VISIBILITY_FULL$/;"	e	enum:__anon51
GTK_VISIBILITY_NONE	gtkenums.h	/^  GTK_VISIBILITY_NONE,$/;"	e	enum:__anon51
GTK_VISIBILITY_PARTIAL	gtkenums.h	/^  GTK_VISIBILITY_PARTIAL,$/;"	e	enum:__anon51
GTK_VISIBLE	gtkwidget.h	/^  GTK_VISIBLE          = 1 << 8,$/;"	e	enum:__anon77
GTK_VOLUME_BUTTON	gtkvolumebutton.h	42;"	d
GTK_VOLUME_BUTTON_CLASS	gtkvolumebutton.h	43;"	d
GTK_VOLUME_BUTTON_GET_CLASS	gtkvolumebutton.h	46;"	d
GTK_VPANED	gtkvpaned.h	39;"	d
GTK_VPANED_CLASS	gtkvpaned.h	40;"	d
GTK_VPANED_GET_CLASS	gtkvpaned.h	43;"	d
GTK_VRULER	gtkvruler.h	54;"	d
GTK_VRULER_CLASS	gtkvruler.h	55;"	d
GTK_VRULER_GET_CLASS	gtkvruler.h	58;"	d
GTK_VSCALE	gtkvscale.h	42;"	d
GTK_VSCALE_CLASS	gtkvscale.h	43;"	d
GTK_VSCALE_GET_CLASS	gtkvscale.h	46;"	d
GTK_VSCROLLBAR	gtkvscrollbar.h	42;"	d
GTK_VSCROLLBAR_CLASS	gtkvscrollbar.h	43;"	d
GTK_VSCROLLBAR_GET_CLASS	gtkvscrollbar.h	46;"	d
GTK_VSEPARATOR	gtkvseparator.h	42;"	d
GTK_VSEPARATOR_CLASS	gtkvseparator.h	43;"	d
GTK_VSEPARATOR_GET_CLASS	gtkvseparator.h	46;"	d
GTK_WIDGET	gtkwidget.h	137;"	d
GTK_WIDGET_ALLOC_NEEDED	gtkprivate.h	67;"	d
GTK_WIDGET_ANCHORED	gtkprivate.h	64;"	d
GTK_WIDGET_APP_PAINTABLE	gtkwidget.h	413;"	d
GTK_WIDGET_CAN_DEFAULT	gtkwidget.h	351;"	d
GTK_WIDGET_CAN_FOCUS	gtkwidget.h	325;"	d
GTK_WIDGET_CHILD_VISIBLE	gtkprivate.h	65;"	d
GTK_WIDGET_CLASS	gtkwidget.h	138;"	d
GTK_WIDGET_COMPOSITE_CHILD	gtkwidget.h	401;"	d
GTK_WIDGET_DIRECTION_LTR	gtkprivate.h	63;"	d
GTK_WIDGET_DIRECTION_SET	gtkprivate.h	62;"	d
GTK_WIDGET_DOUBLE_BUFFERED	gtkwidget.h	438;"	d
GTK_WIDGET_DRAWABLE	gtkwidget.h	276;"	d
GTK_WIDGET_FLAGS	gtkwidget.h	204;"	d
GTK_WIDGET_GET_CLASS	gtkwidget.h	141;"	d
GTK_WIDGET_HAS_DEFAULT	gtkwidget.h	363;"	d
GTK_WIDGET_HAS_FOCUS	gtkwidget.h	338;"	d
GTK_WIDGET_HAS_GRAB	gtkwidget.h	376;"	d
GTK_WIDGET_HAS_POINTER	gtkprivate.h	58;"	d
GTK_WIDGET_HAS_SHAPE_MASK	gtkprivate.h	60;"	d
GTK_WIDGET_HELP_TOOLTIP	gtkwidget.h	/^  GTK_WIDGET_HELP_TOOLTIP,$/;"	e	enum:__anon78
GTK_WIDGET_HELP_WHATS_THIS	gtkwidget.h	/^  GTK_WIDGET_HELP_WHATS_THIS$/;"	e	enum:__anon78
GTK_WIDGET_IN_REPARENT	gtkprivate.h	61;"	d
GTK_WIDGET_IS_SENSITIVE	gtkwidget.h	312;"	d
GTK_WIDGET_MAPPED	gtkwidget.h	252;"	d
GTK_WIDGET_NO_WINDOW	gtkwidget.h	228;"	d
GTK_WIDGET_PARENT_SENSITIVE	gtkwidget.h	300;"	d
GTK_WIDGET_RC_STYLE	gtkwidget.h	389;"	d
GTK_WIDGET_REALIZED	gtkwidget.h	240;"	d
GTK_WIDGET_RECEIVES_DEFAULT	gtkwidget.h	426;"	d
GTK_WIDGET_REDRAW_ON_ALLOC	gtkprivate.h	66;"	d
GTK_WIDGET_REQUEST_NEEDED	gtkprivate.h	68;"	d
GTK_WIDGET_SAVED_STATE	gtkwidget.h	182;"	d
GTK_WIDGET_SENSITIVE	gtkwidget.h	288;"	d
GTK_WIDGET_SET_FLAGS	gtkwidget.h	459;"	d
GTK_WIDGET_SHADOWED	gtkprivate.h	59;"	d
GTK_WIDGET_STATE	gtkwidget.h	166;"	d
GTK_WIDGET_TOPLEVEL	gtkwidget.h	216;"	d
GTK_WIDGET_TYPE	gtkwidget.h	154;"	d
GTK_WIDGET_UNSET_FLAGS	gtkwidget.h	471;"	d
GTK_WIDGET_USER_STYLE	gtkprivate.h	56;"	d
GTK_WIDGET_VISIBLE	gtkwidget.h	264;"	d
GTK_WINDOW	gtkwindow.h	42;"	d
GTK_WINDOW_CLASS	gtkwindow.h	43;"	d
GTK_WINDOW_GET_CLASS	gtkwindow.h	46;"	d
GTK_WINDOW_GROUP	gtkwindow.h	148;"	d
GTK_WINDOW_GROUP_CLASS	gtkwindow.h	149;"	d
GTK_WINDOW_GROUP_GET_CLASS	gtkwindow.h	152;"	d
GTK_WINDOW_POPUP	gtkenums.h	/^  GTK_WINDOW_POPUP$/;"	e	enum:__anon53
GTK_WINDOW_TOPLEVEL	gtkenums.h	/^  GTK_WINDOW_TOPLEVEL,$/;"	e	enum:__anon53
GTK_WIN_POS_CENTER	gtkenums.h	/^  GTK_WIN_POS_CENTER,$/;"	e	enum:__anon52
GTK_WIN_POS_CENTER_ALWAYS	gtkenums.h	/^  GTK_WIN_POS_CENTER_ALWAYS,$/;"	e	enum:__anon52
GTK_WIN_POS_CENTER_ON_PARENT	gtkenums.h	/^  GTK_WIN_POS_CENTER_ON_PARENT$/;"	e	enum:__anon52
GTK_WIN_POS_MOUSE	gtkenums.h	/^  GTK_WIN_POS_MOUSE,$/;"	e	enum:__anon52
GTK_WIN_POS_NONE	gtkenums.h	/^  GTK_WIN_POS_NONE,$/;"	e	enum:__anon52
GTK_WRAP_CHAR	gtkenums.h	/^  GTK_WRAP_CHAR,$/;"	e	enum:__anon54
GTK_WRAP_NONE	gtkenums.h	/^  GTK_WRAP_NONE,$/;"	e	enum:__anon54
GTK_WRAP_WORD	gtkenums.h	/^  GTK_WRAP_WORD,$/;"	e	enum:__anon54
GTK_WRAP_WORD_CHAR	gtkenums.h	/^  GTK_WRAP_WORD_CHAR$/;"	e	enum:__anon54
GtkAboutDialog	gtkaboutdialog.h	/^typedef struct _GtkAboutDialog        GtkAboutDialog;$/;"	t	typeref:struct:_GtkAboutDialog
GtkAboutDialogActivateLinkFunc	gtkaboutdialog.h	/^typedef void (* GtkAboutDialogActivateLinkFunc) (GtkAboutDialog *about,$/;"	t
GtkAboutDialogClass	gtkaboutdialog.h	/^typedef struct _GtkAboutDialogClass   GtkAboutDialogClass;$/;"	t	typeref:struct:_GtkAboutDialogClass
GtkAccelFlags	gtkaccelgroup.h	/^} GtkAccelFlags;$/;"	t	typeref:enum:__anon100
GtkAccelGroup	gtkaccelgroup.h	/^typedef struct _GtkAccelGroup	   GtkAccelGroup;$/;"	t	typeref:struct:_GtkAccelGroup
GtkAccelGroupActivate	gtkaccelgroup.h	/^typedef gboolean (*GtkAccelGroupActivate) (GtkAccelGroup  *accel_group,$/;"	t
GtkAccelGroupClass	gtkaccelgroup.h	/^typedef struct _GtkAccelGroupClass GtkAccelGroupClass;$/;"	t	typeref:struct:_GtkAccelGroupClass
GtkAccelGroupEntry	gtkaccelgroup.h	/^typedef struct _GtkAccelGroupEntry GtkAccelGroupEntry;$/;"	t	typeref:struct:_GtkAccelGroupEntry
GtkAccelGroupFindFunc	gtkaccelgroup.h	/^typedef gboolean (*GtkAccelGroupFindFunc) (GtkAccelKey    *key,$/;"	t
GtkAccelKey	gtkaccelgroup.h	/^typedef struct _GtkAccelKey        GtkAccelKey;$/;"	t	typeref:struct:_GtkAccelKey
GtkAccelLabel	gtkaccellabel.h	/^typedef struct _GtkAccelLabel	    GtkAccelLabel;$/;"	t	typeref:struct:_GtkAccelLabel
GtkAccelLabelClass	gtkaccellabel.h	/^typedef struct _GtkAccelLabelClass  GtkAccelLabelClass;$/;"	t	typeref:struct:_GtkAccelLabelClass
GtkAccelMap	gtkaccelmap.h	/^typedef struct _GtkAccelMap      GtkAccelMap;$/;"	t	typeref:struct:_GtkAccelMap
GtkAccelMapClass	gtkaccelmap.h	/^typedef struct _GtkAccelMapClass GtkAccelMapClass;$/;"	t	typeref:struct:_GtkAccelMapClass
GtkAccelMapForeach	gtkaccelmap.h	/^typedef void (*GtkAccelMapForeach)		(gpointer	 data,$/;"	t
GtkAccessible	gtkaccessible.h	/^typedef struct _GtkAccessible                GtkAccessible;$/;"	t	typeref:struct:_GtkAccessible
GtkAccessibleClass	gtkaccessible.h	/^typedef struct _GtkAccessibleClass           GtkAccessibleClass;$/;"	t	typeref:struct:_GtkAccessibleClass
GtkAction	gtkaction.h	/^typedef struct _GtkAction      GtkAction;$/;"	t	typeref:struct:_GtkAction
GtkActionClass	gtkaction.h	/^typedef struct _GtkActionClass GtkActionClass;$/;"	t	typeref:struct:_GtkActionClass
GtkActionEntry	gtkactiongroup.h	/^typedef struct _GtkActionEntry        GtkActionEntry;$/;"	t	typeref:struct:_GtkActionEntry
GtkActionGroup	gtkactiongroup.h	/^typedef struct _GtkActionGroup        GtkActionGroup;$/;"	t	typeref:struct:_GtkActionGroup
GtkActionGroupClass	gtkactiongroup.h	/^typedef struct _GtkActionGroupClass   GtkActionGroupClass;$/;"	t	typeref:struct:_GtkActionGroupClass
GtkActionGroupPrivate	gtkactiongroup.h	/^typedef struct _GtkActionGroupPrivate GtkActionGroupPrivate;$/;"	t	typeref:struct:_GtkActionGroupPrivate
GtkActionPrivate	gtkaction.h	/^typedef struct _GtkActionPrivate GtkActionPrivate;$/;"	t	typeref:struct:_GtkActionPrivate
GtkActivatable	gtkactivatable.h	/^typedef struct _GtkActivatable      GtkActivatable; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GtkActivatable
GtkActivatableIface	gtkactivatable.h	/^typedef struct _GtkActivatableIface GtkActivatableIface;$/;"	t	typeref:struct:_GtkActivatableIface
GtkAdjustment	gtkadjustment.h	/^typedef struct _GtkAdjustment	    GtkAdjustment;$/;"	t	typeref:struct:_GtkAdjustment
GtkAdjustmentClass	gtkadjustment.h	/^typedef struct _GtkAdjustmentClass  GtkAdjustmentClass;$/;"	t	typeref:struct:_GtkAdjustmentClass
GtkAlignment	gtkalignment.h	/^typedef struct _GtkAlignment       GtkAlignment;$/;"	t	typeref:struct:_GtkAlignment
GtkAlignmentClass	gtkalignment.h	/^typedef struct _GtkAlignmentClass  GtkAlignmentClass;$/;"	t	typeref:struct:_GtkAlignmentClass
GtkAlignmentPrivate	gtkalignment.h	/^typedef struct _GtkAlignmentPrivate GtkAlignmentPrivate;$/;"	t	typeref:struct:_GtkAlignmentPrivate
GtkAllocation	gtkwidget.h	/^typedef 	GdkRectangle	   GtkAllocation;$/;"	t
GtkAnchorType	gtkenums.h	/^} GtkAnchorType;$/;"	t	typeref:enum:__anon12
GtkArg	gtktypeutils.h	/^typedef struct _GtkArg	       	     GtkArg;$/;"	t	typeref:struct:_GtkArg
GtkArgFlags	gtkobject.h	/^} GtkArgFlags;$/;"	t	typeref:enum:__anon112
GtkArrow	gtkarrow.h	/^typedef struct _GtkArrow       GtkArrow;$/;"	t	typeref:struct:_GtkArrow
GtkArrowClass	gtkarrow.h	/^typedef struct _GtkArrowClass  GtkArrowClass;$/;"	t	typeref:struct:_GtkArrowClass
GtkArrowPlacement	gtkenums.h	/^} GtkArrowPlacement;$/;"	t	typeref:enum:__anon13
GtkArrowType	gtkenums.h	/^} GtkArrowType;$/;"	t	typeref:enum:__anon14
GtkAspectFrame	gtkaspectframe.h	/^typedef struct _GtkAspectFrame       GtkAspectFrame;$/;"	t	typeref:struct:_GtkAspectFrame
GtkAspectFrameClass	gtkaspectframe.h	/^typedef struct _GtkAspectFrameClass  GtkAspectFrameClass;$/;"	t	typeref:struct:_GtkAspectFrameClass
GtkAssistant	gtkassistant.h	/^typedef struct _GtkAssistant        GtkAssistant;$/;"	t	typeref:struct:_GtkAssistant
GtkAssistantClass	gtkassistant.h	/^typedef struct _GtkAssistantClass   GtkAssistantClass;$/;"	t	typeref:struct:_GtkAssistantClass
GtkAssistantPageFunc	gtkassistant.h	/^typedef gint (*GtkAssistantPageFunc) (gint current_page, gpointer data);$/;"	t
GtkAssistantPageType	gtkassistant.h	/^} GtkAssistantPageType;$/;"	t	typeref:enum:__anon6
GtkAssistantPrivate	gtkassistant.h	/^typedef struct _GtkAssistantPrivate GtkAssistantPrivate;$/;"	t	typeref:struct:_GtkAssistantPrivate
GtkAttachOptions	gtkenums.h	/^} GtkAttachOptions;$/;"	t	typeref:enum:__anon15
GtkBin	gtkbin.h	/^typedef struct _GtkBin       GtkBin;$/;"	t	typeref:struct:_GtkBin
GtkBinClass	gtkbin.h	/^typedef struct _GtkBinClass  GtkBinClass;$/;"	t	typeref:struct:_GtkBinClass
GtkBindingArg	gtkbindings.h	/^typedef struct _GtkBindingArg		GtkBindingArg;$/;"	t	typeref:struct:_GtkBindingArg
GtkBindingEntry	gtkbindings.h	/^typedef struct _GtkBindingEntry		GtkBindingEntry;$/;"	t	typeref:struct:_GtkBindingEntry
GtkBindingSet	gtkbindings.h	/^typedef struct _GtkBindingSet		GtkBindingSet;$/;"	t	typeref:struct:_GtkBindingSet
GtkBindingSignal	gtkbindings.h	/^typedef struct _GtkBindingSignal	GtkBindingSignal;$/;"	t	typeref:struct:_GtkBindingSignal
GtkBorder	gtkstyle.h	/^typedef struct _GtkBorder      GtkBorder;$/;"	t	typeref:struct:_GtkBorder
GtkBox	gtkbox.h	/^typedef struct _GtkBox	      GtkBox;$/;"	t	typeref:struct:_GtkBox
GtkBoxChild	gtkbox.h	/^typedef struct _GtkBoxChild   GtkBoxChild;$/;"	t	typeref:struct:_GtkBoxChild
GtkBoxClass	gtkbox.h	/^typedef struct _GtkBoxClass   GtkBoxClass;$/;"	t	typeref:struct:_GtkBoxClass
GtkBuildable	gtkbuildable.h	/^typedef struct _GtkBuildable      GtkBuildable; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GtkBuildable
GtkBuildableIface	gtkbuildable.h	/^typedef struct _GtkBuildableIface GtkBuildableIface;$/;"	t	typeref:struct:_GtkBuildableIface
GtkBuilder	gtkbuilder.h	/^typedef struct _GtkBuilder        GtkBuilder;$/;"	t	typeref:struct:_GtkBuilder
GtkBuilderClass	gtkbuilder.h	/^typedef struct _GtkBuilderClass   GtkBuilderClass;$/;"	t	typeref:struct:_GtkBuilderClass
GtkBuilderConnectFunc	gtkbuilder.h	/^typedef void (*GtkBuilderConnectFunc) (GtkBuilder    *builder,$/;"	t
GtkBuilderError	gtkbuilder.h	/^} GtkBuilderError;$/;"	t	typeref:enum:__anon120
GtkBuilderPrivate	gtkbuilder.h	/^typedef struct _GtkBuilderPrivate GtkBuilderPrivate;$/;"	t	typeref:struct:_GtkBuilderPrivate
GtkButton	gtkbutton.h	/^typedef struct _GtkButton        GtkButton;$/;"	t	typeref:struct:_GtkButton
GtkButtonAction	gtkclist.h	/^} GtkButtonAction;$/;"	t	typeref:enum:__anon104
GtkButtonBox	gtkbbox.h	/^typedef struct _GtkButtonBox       GtkButtonBox;$/;"	t	typeref:struct:_GtkButtonBox
GtkButtonBoxClass	gtkbbox.h	/^typedef struct _GtkButtonBoxClass  GtkButtonBoxClass;$/;"	t	typeref:struct:_GtkButtonBoxClass
GtkButtonBoxStyle	gtkenums.h	/^} GtkButtonBoxStyle;$/;"	t	typeref:enum:__anon16
GtkButtonClass	gtkbutton.h	/^typedef struct _GtkButtonClass   GtkButtonClass;$/;"	t	typeref:struct:_GtkButtonClass
GtkButtonsType	gtkmessagedialog.h	/^} GtkButtonsType;$/;"	t	typeref:enum:__anon70
GtkCList	gtkclist.h	/^typedef struct _GtkCList GtkCList;$/;"	t	typeref:struct:_GtkCList
GtkCListCellInfo	gtkclist.h	/^typedef struct _GtkCListCellInfo GtkCListCellInfo;$/;"	t	typeref:struct:_GtkCListCellInfo
GtkCListClass	gtkclist.h	/^typedef struct _GtkCListClass GtkCListClass;$/;"	t	typeref:struct:_GtkCListClass
GtkCListColumn	gtkclist.h	/^typedef struct _GtkCListColumn GtkCListColumn;$/;"	t	typeref:struct:_GtkCListColumn
GtkCListCompareFunc	gtkclist.h	/^typedef gint (*GtkCListCompareFunc) (GtkCList     *clist,$/;"	t
GtkCListDestInfo	gtkclist.h	/^typedef struct _GtkCListDestInfo GtkCListDestInfo;$/;"	t	typeref:struct:_GtkCListDestInfo
GtkCListDragPos	gtkclist.h	/^} GtkCListDragPos;$/;"	t	typeref:enum:__anon103
GtkCListRow	gtkclist.h	/^typedef struct _GtkCListRow GtkCListRow;$/;"	t	typeref:struct:_GtkCListRow
GtkCTree	gtkctree.h	/^typedef struct _GtkCTree      GtkCTree;$/;"	t	typeref:struct:_GtkCTree
GtkCTreeClass	gtkctree.h	/^typedef struct _GtkCTreeClass GtkCTreeClass;$/;"	t	typeref:struct:_GtkCTreeClass
GtkCTreeCompareDragFunc	gtkctree.h	/^typedef gboolean (*GtkCTreeCompareDragFunc) (GtkCTree     *ctree,$/;"	t
GtkCTreeExpanderStyle	gtkctree.h	/^} GtkCTreeExpanderStyle;$/;"	t	typeref:enum:__anon75
GtkCTreeExpansionType	gtkctree.h	/^} GtkCTreeExpansionType;$/;"	t	typeref:enum:__anon76
GtkCTreeFunc	gtkctree.h	/^typedef void (*GtkCTreeFunc) (GtkCTree     *ctree,$/;"	t
GtkCTreeGNodeFunc	gtkctree.h	/^typedef gboolean (*GtkCTreeGNodeFunc) (GtkCTree     *ctree,$/;"	t
GtkCTreeLineStyle	gtkctree.h	/^} GtkCTreeLineStyle;$/;"	t	typeref:enum:__anon74
GtkCTreeNode	gtkctree.h	/^typedef struct _GtkCTreeNode  GtkCTreeNode;$/;"	t	typeref:struct:_GtkCTreeNode
GtkCTreePos	gtkctree.h	/^} GtkCTreePos;$/;"	t	typeref:enum:__anon73
GtkCTreeRow	gtkctree.h	/^typedef struct _GtkCTreeRow   GtkCTreeRow;$/;"	t	typeref:struct:_GtkCTreeRow
GtkCalendar	gtkcalendar.h	/^typedef struct _GtkCalendar	       GtkCalendar;$/;"	t	typeref:struct:_GtkCalendar
GtkCalendarClass	gtkcalendar.h	/^typedef struct _GtkCalendarClass       GtkCalendarClass;$/;"	t	typeref:struct:_GtkCalendarClass
GtkCalendarDetailFunc	gtkcalendar.h	/^typedef gchar* (*GtkCalendarDetailFunc) (GtkCalendar *calendar,$/;"	t
GtkCalendarDisplayOptions	gtkcalendar.h	/^} GtkCalendarDisplayOptions;$/;"	t	typeref:enum:__anon99
GtkCalendarPrivate	gtkcalendar.h	/^typedef struct _GtkCalendarPrivate     GtkCalendarPrivate;$/;"	t	typeref:struct:_GtkCalendarPrivate
GtkCallback	gtkwidget.h	/^typedef void    (*GtkCallback)     (GtkWidget        *widget,$/;"	t
GtkCallbackMarshal	gtktypeutils.h	/^typedef void (*GtkCallbackMarshal)  (GtkObject    *object,$/;"	t
GtkCell	gtkclist.h	/^typedef struct _GtkCell GtkCell;$/;"	t	typeref:struct:_GtkCell
GtkCellEditable	gtkcelleditable.h	/^typedef struct _GtkCellEditable      GtkCellEditable; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GtkCellEditable
GtkCellEditableIface	gtkcelleditable.h	/^typedef struct _GtkCellEditableIface GtkCellEditableIface;$/;"	t	typeref:struct:_GtkCellEditableIface
GtkCellLayout	gtkcelllayout.h	/^typedef struct _GtkCellLayout           GtkCellLayout; \/* dummy typedef *\/$/;"	t	typeref:struct:_GtkCellLayout
GtkCellLayoutDataFunc	gtkcelllayout.h	/^typedef void (* GtkCellLayoutDataFunc) (GtkCellLayout   *cell_layout,$/;"	t
GtkCellLayoutIface	gtkcelllayout.h	/^typedef struct _GtkCellLayoutIface      GtkCellLayoutIface;$/;"	t	typeref:struct:_GtkCellLayoutIface
GtkCellPixText	gtkclist.h	/^typedef struct _GtkCellPixText GtkCellPixText;$/;"	t	typeref:struct:_GtkCellPixText
GtkCellPixmap	gtkclist.h	/^typedef struct _GtkCellPixmap GtkCellPixmap;$/;"	t	typeref:struct:_GtkCellPixmap
GtkCellRenderer	gtkcellrenderer.h	/^typedef struct _GtkCellRenderer GtkCellRenderer;$/;"	t	typeref:struct:_GtkCellRenderer
GtkCellRendererAccel	gtkcellrendereraccel.h	/^typedef struct _GtkCellRendererAccel      GtkCellRendererAccel;$/;"	t	typeref:struct:_GtkCellRendererAccel
GtkCellRendererAccelClass	gtkcellrendereraccel.h	/^typedef struct _GtkCellRendererAccelClass GtkCellRendererAccelClass;$/;"	t	typeref:struct:_GtkCellRendererAccelClass
GtkCellRendererAccelMode	gtkcellrendereraccel.h	/^} GtkCellRendererAccelMode;$/;"	t	typeref:enum:__anon109
GtkCellRendererClass	gtkcellrenderer.h	/^typedef struct _GtkCellRendererClass GtkCellRendererClass;$/;"	t	typeref:struct:_GtkCellRendererClass
GtkCellRendererCombo	gtkcellrenderercombo.h	/^typedef struct _GtkCellRendererCombo      GtkCellRendererCombo;$/;"	t	typeref:struct:_GtkCellRendererCombo
GtkCellRendererComboClass	gtkcellrenderercombo.h	/^typedef struct _GtkCellRendererComboClass GtkCellRendererComboClass;$/;"	t	typeref:struct:_GtkCellRendererComboClass
GtkCellRendererMode	gtkcellrenderer.h	/^} GtkCellRendererMode;$/;"	t	typeref:enum:__anon72
GtkCellRendererPixbuf	gtkcellrendererpixbuf.h	/^typedef struct _GtkCellRendererPixbuf GtkCellRendererPixbuf;$/;"	t	typeref:struct:_GtkCellRendererPixbuf
GtkCellRendererPixbufClass	gtkcellrendererpixbuf.h	/^typedef struct _GtkCellRendererPixbufClass GtkCellRendererPixbufClass;$/;"	t	typeref:struct:_GtkCellRendererPixbufClass
GtkCellRendererProgress	gtkcellrendererprogress.h	/^typedef struct _GtkCellRendererProgress         GtkCellRendererProgress;$/;"	t	typeref:struct:_GtkCellRendererProgress
GtkCellRendererProgressClass	gtkcellrendererprogress.h	/^typedef struct _GtkCellRendererProgressClass    GtkCellRendererProgressClass;$/;"	t	typeref:struct:_GtkCellRendererProgressClass
GtkCellRendererProgressPrivate	gtkcellrendererprogress.h	/^typedef struct _GtkCellRendererProgressPrivate  GtkCellRendererProgressPrivate;$/;"	t	typeref:struct:_GtkCellRendererProgressPrivate
GtkCellRendererSpin	gtkcellrendererspin.h	/^typedef struct _GtkCellRendererSpin        GtkCellRendererSpin;$/;"	t	typeref:struct:_GtkCellRendererSpin
GtkCellRendererSpinClass	gtkcellrendererspin.h	/^typedef struct _GtkCellRendererSpinClass   GtkCellRendererSpinClass;$/;"	t	typeref:struct:_GtkCellRendererSpinClass
GtkCellRendererSpinPrivate	gtkcellrendererspin.h	/^typedef struct _GtkCellRendererSpinPrivate GtkCellRendererSpinPrivate;$/;"	t	typeref:struct:_GtkCellRendererSpinPrivate
GtkCellRendererSpinner	gtkcellrendererspinner.h	/^typedef struct _GtkCellRendererSpinner        GtkCellRendererSpinner;$/;"	t	typeref:struct:_GtkCellRendererSpinner
GtkCellRendererSpinnerClass	gtkcellrendererspinner.h	/^typedef struct _GtkCellRendererSpinnerClass   GtkCellRendererSpinnerClass;$/;"	t	typeref:struct:_GtkCellRendererSpinnerClass
GtkCellRendererSpinnerPrivate	gtkcellrendererspinner.h	/^typedef struct _GtkCellRendererSpinnerPrivate GtkCellRendererSpinnerPrivate;$/;"	t	typeref:struct:_GtkCellRendererSpinnerPrivate
GtkCellRendererState	gtkcellrenderer.h	/^} GtkCellRendererState;$/;"	t	typeref:enum:__anon71
GtkCellRendererText	gtkcellrenderertext.h	/^typedef struct _GtkCellRendererText      GtkCellRendererText;$/;"	t	typeref:struct:_GtkCellRendererText
GtkCellRendererTextClass	gtkcellrenderertext.h	/^typedef struct _GtkCellRendererTextClass GtkCellRendererTextClass;$/;"	t	typeref:struct:_GtkCellRendererTextClass
GtkCellRendererToggle	gtkcellrenderertoggle.h	/^typedef struct _GtkCellRendererToggle GtkCellRendererToggle;$/;"	t	typeref:struct:_GtkCellRendererToggle
GtkCellRendererToggleClass	gtkcellrenderertoggle.h	/^typedef struct _GtkCellRendererToggleClass GtkCellRendererToggleClass;$/;"	t	typeref:struct:_GtkCellRendererToggleClass
GtkCellText	gtkclist.h	/^typedef struct _GtkCellText GtkCellText;$/;"	t	typeref:struct:_GtkCellText
GtkCellType	gtkclist.h	/^} GtkCellType;$/;"	t	typeref:enum:__anon102
GtkCellView	gtkcellview.h	/^typedef struct _GtkCellView             GtkCellView;$/;"	t	typeref:struct:_GtkCellView
GtkCellViewClass	gtkcellview.h	/^typedef struct _GtkCellViewClass        GtkCellViewClass;$/;"	t	typeref:struct:_GtkCellViewClass
GtkCellViewPrivate	gtkcellview.h	/^typedef struct _GtkCellViewPrivate      GtkCellViewPrivate;$/;"	t	typeref:struct:_GtkCellViewPrivate
GtkCellWidget	gtkclist.h	/^typedef struct _GtkCellWidget GtkCellWidget;$/;"	t	typeref:struct:_GtkCellWidget
GtkCheckButton	gtkcheckbutton.h	/^typedef struct _GtkCheckButton       GtkCheckButton;$/;"	t	typeref:struct:_GtkCheckButton
GtkCheckButtonClass	gtkcheckbutton.h	/^typedef struct _GtkCheckButtonClass  GtkCheckButtonClass;$/;"	t	typeref:struct:_GtkCheckButtonClass
GtkCheckMenuItem	gtkcheckmenuitem.h	/^typedef struct _GtkCheckMenuItem       GtkCheckMenuItem;$/;"	t	typeref:struct:_GtkCheckMenuItem
GtkCheckMenuItemClass	gtkcheckmenuitem.h	/^typedef struct _GtkCheckMenuItemClass  GtkCheckMenuItemClass;$/;"	t	typeref:struct:_GtkCheckMenuItemClass
GtkClassInitFunc	gtktypeutils.h	/^typedef GBaseInitFunc           GtkClassInitFunc;$/;"	t
GtkClipboard	gtkwidget.h	/^typedef struct _GtkClipboard	   GtkClipboard;$/;"	t	typeref:struct:_GtkClipboard
GtkClipboardClearFunc	gtkclipboard.h	/^typedef void (* GtkClipboardClearFunc)        (GtkClipboard     *clipboard,$/;"	t
GtkClipboardGetFunc	gtkclipboard.h	/^typedef void (* GtkClipboardGetFunc)          (GtkClipboard     *clipboard,$/;"	t
GtkClipboardImageReceivedFunc	gtkclipboard.h	/^typedef void (* GtkClipboardImageReceivedFunc)    (GtkClipboard     *clipboard,$/;"	t
GtkClipboardReceivedFunc	gtkclipboard.h	/^typedef void (* GtkClipboardReceivedFunc)         (GtkClipboard     *clipboard,$/;"	t
GtkClipboardRichTextReceivedFunc	gtkclipboard.h	/^typedef void (* GtkClipboardRichTextReceivedFunc) (GtkClipboard     *clipboard,$/;"	t
GtkClipboardTargetsReceivedFunc	gtkclipboard.h	/^typedef void (* GtkClipboardTargetsReceivedFunc)  (GtkClipboard     *clipboard,$/;"	t
GtkClipboardTextReceivedFunc	gtkclipboard.h	/^typedef void (* GtkClipboardTextReceivedFunc)     (GtkClipboard     *clipboard,$/;"	t
GtkClipboardURIReceivedFunc	gtkclipboard.h	/^typedef void (* GtkClipboardURIReceivedFunc)      (GtkClipboard     *clipboard,$/;"	t
GtkColorButton	gtkcolorbutton.h	/^typedef struct _GtkColorButton          GtkColorButton;$/;"	t	typeref:struct:_GtkColorButton
GtkColorButtonClass	gtkcolorbutton.h	/^typedef struct _GtkColorButtonClass     GtkColorButtonClass;$/;"	t	typeref:struct:_GtkColorButtonClass
GtkColorButtonPrivate	gtkcolorbutton.h	/^typedef struct _GtkColorButtonPrivate   GtkColorButtonPrivate;$/;"	t	typeref:struct:_GtkColorButtonPrivate
GtkColorSelection	gtkcolorsel.h	/^typedef struct _GtkColorSelection       GtkColorSelection;$/;"	t	typeref:struct:_GtkColorSelection
GtkColorSelectionChangePaletteFunc	gtkcolorsel.h	/^typedef void (* GtkColorSelectionChangePaletteFunc) (const GdkColor    *colors,$/;"	t
GtkColorSelectionChangePaletteWithScreenFunc	gtkcolorsel.h	/^typedef void (* GtkColorSelectionChangePaletteWithScreenFunc) (GdkScreen         *screen,$/;"	t
GtkColorSelectionClass	gtkcolorsel.h	/^typedef struct _GtkColorSelectionClass  GtkColorSelectionClass;$/;"	t	typeref:struct:_GtkColorSelectionClass
GtkColorSelectionDialog	gtkcolorseldialog.h	/^typedef struct _GtkColorSelectionDialog       GtkColorSelectionDialog;$/;"	t	typeref:struct:_GtkColorSelectionDialog
GtkColorSelectionDialogClass	gtkcolorseldialog.h	/^typedef struct _GtkColorSelectionDialogClass  GtkColorSelectionDialogClass;$/;"	t	typeref:struct:_GtkColorSelectionDialogClass
GtkCombo	gtkcombo.h	/^typedef struct _GtkCombo	GtkCombo;$/;"	t	typeref:struct:_GtkCombo
GtkComboBox	gtkcombobox.h	/^typedef struct _GtkComboBox        GtkComboBox;$/;"	t	typeref:struct:_GtkComboBox
GtkComboBoxClass	gtkcombobox.h	/^typedef struct _GtkComboBoxClass   GtkComboBoxClass;$/;"	t	typeref:struct:_GtkComboBoxClass
GtkComboBoxEntry	gtkcomboboxentry.h	/^typedef struct _GtkComboBoxEntry             GtkComboBoxEntry;$/;"	t	typeref:struct:_GtkComboBoxEntry
GtkComboBoxEntryClass	gtkcomboboxentry.h	/^typedef struct _GtkComboBoxEntryClass        GtkComboBoxEntryClass;$/;"	t	typeref:struct:_GtkComboBoxEntryClass
GtkComboBoxEntryPrivate	gtkcomboboxentry.h	/^typedef struct _GtkComboBoxEntryPrivate      GtkComboBoxEntryPrivate;$/;"	t	typeref:struct:_GtkComboBoxEntryPrivate
GtkComboBoxPrivate	gtkcombobox.h	/^typedef struct _GtkComboBoxPrivate GtkComboBoxPrivate;$/;"	t	typeref:struct:_GtkComboBoxPrivate
GtkComboBoxText	gtkcomboboxtext.h	/^typedef struct _GtkComboBoxText             GtkComboBoxText;$/;"	t	typeref:struct:_GtkComboBoxText
GtkComboBoxTextClass	gtkcomboboxtext.h	/^typedef struct _GtkComboBoxTextClass        GtkComboBoxTextClass;$/;"	t	typeref:struct:_GtkComboBoxTextClass
GtkComboBoxTextPrivate	gtkcomboboxtext.h	/^typedef struct _GtkComboBoxTextPrivate      GtkComboBoxTextPrivate;$/;"	t	typeref:struct:_GtkComboBoxTextPrivate
GtkComboClass	gtkcombo.h	/^typedef struct _GtkComboClass	GtkComboClass;$/;"	t	typeref:struct:_GtkComboClass
GtkContainer	gtkcontainer.h	/^typedef struct _GtkContainer	   GtkContainer;$/;"	t	typeref:struct:_GtkContainer
GtkContainerClass	gtkcontainer.h	/^typedef struct _GtkContainerClass  GtkContainerClass;$/;"	t	typeref:struct:_GtkContainerClass
GtkCornerType	gtkenums.h	/^} GtkCornerType;$/;"	t	typeref:enum:__anon33
GtkCurve	gtkcurve.h	/^typedef struct _GtkCurve	GtkCurve;$/;"	t	typeref:struct:_GtkCurve
GtkCurveClass	gtkcurve.h	/^typedef struct _GtkCurveClass	GtkCurveClass;$/;"	t	typeref:struct:_GtkCurveClass
GtkCurveType	gtkenums.h	/^} GtkCurveType;$/;"	t	typeref:enum:__anon17
GtkDebugFlag	gtkdebug.h	/^} GtkDebugFlag;$/;"	t	typeref:enum:__anon113
GtkDeleteType	gtkenums.h	/^} GtkDeleteType;$/;"	t	typeref:enum:__anon18
GtkDestDefaults	gtkdnd.h	/^} GtkDestDefaults;$/;"	t	typeref:enum:__anon123
GtkDestroyNotify	gtktypeutils.h	/^typedef void (*GtkDestroyNotify)    (gpointer data);$/;"	t
GtkDialog	gtkdialog.h	/^typedef struct _GtkDialog        GtkDialog;$/;"	t	typeref:struct:_GtkDialog
GtkDialogClass	gtkdialog.h	/^typedef struct _GtkDialogClass   GtkDialogClass;$/;"	t	typeref:struct:_GtkDialogClass
GtkDialogFlags	gtkdialog.h	/^} GtkDialogFlags;$/;"	t	typeref:enum:__anon9
GtkDirectionType	gtkenums.h	/^} GtkDirectionType;$/;"	t	typeref:enum:__anon19
GtkDitherInfo	gtkpreview.h	/^typedef union  _GtkDitherInfo    GtkDitherInfo;$/;"	t	typeref:union:_GtkDitherInfo
GtkDragResult	gtkenums.h	/^} GtkDragResult;$/;"	t	typeref:enum:__anon67
GtkDrawingArea	gtkdrawingarea.h	/^typedef struct _GtkDrawingArea       GtkDrawingArea;$/;"	t	typeref:struct:_GtkDrawingArea
GtkDrawingAreaClass	gtkdrawingarea.h	/^typedef struct _GtkDrawingAreaClass  GtkDrawingAreaClass;$/;"	t	typeref:struct:_GtkDrawingAreaClass
GtkEditable	gtkeditable.h	/^typedef struct _GtkEditable       GtkEditable;         \/* Dummy typedef *\/$/;"	t	typeref:struct:_GtkEditable
GtkEditableClass	gtkeditable.h	/^typedef struct _GtkEditableClass  GtkEditableClass;$/;"	t	typeref:struct:_GtkEditableClass
GtkEntry	gtkentry.h	/^typedef struct _GtkEntry       GtkEntry;$/;"	t	typeref:struct:_GtkEntry
GtkEntryBuffer	gtkentrybuffer.h	/^typedef struct _GtkEntryBuffer            GtkEntryBuffer;$/;"	t	typeref:struct:_GtkEntryBuffer
GtkEntryBufferClass	gtkentrybuffer.h	/^typedef struct _GtkEntryBufferClass       GtkEntryBufferClass;$/;"	t	typeref:struct:_GtkEntryBufferClass
GtkEntryBufferPrivate	gtkentrybuffer.h	/^typedef struct _GtkEntryBufferPrivate     GtkEntryBufferPrivate;$/;"	t	typeref:struct:_GtkEntryBufferPrivate
GtkEntryClass	gtkentry.h	/^typedef struct _GtkEntryClass  GtkEntryClass;$/;"	t	typeref:struct:_GtkEntryClass
GtkEntryCompletion	gtkentrycompletion.h	/^typedef struct _GtkEntryCompletion            GtkEntryCompletion;$/;"	t	typeref:struct:_GtkEntryCompletion
GtkEntryCompletionClass	gtkentrycompletion.h	/^typedef struct _GtkEntryCompletionClass       GtkEntryCompletionClass;$/;"	t	typeref:struct:_GtkEntryCompletionClass
GtkEntryCompletionMatchFunc	gtkentrycompletion.h	/^typedef gboolean (* GtkEntryCompletionMatchFunc) (GtkEntryCompletion *completion,$/;"	t
GtkEntryCompletionPrivate	gtkentrycompletion.h	/^typedef struct _GtkEntryCompletionPrivate     GtkEntryCompletionPrivate;$/;"	t	typeref:struct:_GtkEntryCompletionPrivate
GtkEntryIconPosition	gtkentry.h	/^} GtkEntryIconPosition;$/;"	t	typeref:enum:__anon119
GtkEnumValue	gtktypeutils.h	/^typedef GEnumValue  GtkEnumValue;$/;"	t
GtkEventBox	gtkeventbox.h	/^typedef struct _GtkEventBox	  GtkEventBox;$/;"	t	typeref:struct:_GtkEventBox
GtkEventBoxClass	gtkeventbox.h	/^typedef struct _GtkEventBoxClass  GtkEventBoxClass;$/;"	t	typeref:struct:_GtkEventBoxClass
GtkExpander	gtkexpander.h	/^typedef struct _GtkExpander        GtkExpander;$/;"	t	typeref:struct:_GtkExpander
GtkExpanderClass	gtkexpander.h	/^typedef struct _GtkExpanderClass   GtkExpanderClass;$/;"	t	typeref:struct:_GtkExpanderClass
GtkExpanderPrivate	gtkexpander.h	/^typedef struct _GtkExpanderPrivate GtkExpanderPrivate;$/;"	t	typeref:struct:_GtkExpanderPrivate
GtkExpanderStyle	gtkenums.h	/^} GtkExpanderStyle;$/;"	t	typeref:enum:__anon20
GtkFileChooser	gtkfilechooser.h	/^typedef struct _GtkFileChooser      GtkFileChooser;$/;"	t	typeref:struct:_GtkFileChooser
GtkFileChooserAction	gtkfilechooser.h	/^} GtkFileChooserAction;$/;"	t	typeref:enum:__anon91
GtkFileChooserButton	gtkfilechooserbutton.h	/^typedef struct _GtkFileChooserButton        GtkFileChooserButton;$/;"	t	typeref:struct:_GtkFileChooserButton
GtkFileChooserButtonClass	gtkfilechooserbutton.h	/^typedef struct _GtkFileChooserButtonClass   GtkFileChooserButtonClass;$/;"	t	typeref:struct:_GtkFileChooserButtonClass
GtkFileChooserButtonPrivate	gtkfilechooserbutton.h	/^typedef struct _GtkFileChooserButtonPrivate GtkFileChooserButtonPrivate;$/;"	t	typeref:struct:_GtkFileChooserButtonPrivate
GtkFileChooserConfirmation	gtkfilechooser.h	/^} GtkFileChooserConfirmation;$/;"	t	typeref:enum:__anon92
GtkFileChooserDialog	gtkfilechooserdialog.h	/^typedef struct _GtkFileChooserDialog        GtkFileChooserDialog;$/;"	t	typeref:struct:_GtkFileChooserDialog
GtkFileChooserDialogClass	gtkfilechooserdialog.h	/^typedef struct _GtkFileChooserDialogClass   GtkFileChooserDialogClass;$/;"	t	typeref:struct:_GtkFileChooserDialogClass
GtkFileChooserDialogPrivate	gtkfilechooserdialog.h	/^typedef struct _GtkFileChooserDialogPrivate GtkFileChooserDialogPrivate;$/;"	t	typeref:struct:_GtkFileChooserDialogPrivate
GtkFileChooserError	gtkfilechooser.h	/^} GtkFileChooserError;$/;"	t	typeref:enum:__anon93
GtkFileChooserWidget	gtkfilechooserwidget.h	/^typedef struct _GtkFileChooserWidget        GtkFileChooserWidget;$/;"	t	typeref:struct:_GtkFileChooserWidget
GtkFileChooserWidgetClass	gtkfilechooserwidget.h	/^typedef struct _GtkFileChooserWidgetClass   GtkFileChooserWidgetClass;$/;"	t	typeref:struct:_GtkFileChooserWidgetClass
GtkFileChooserWidgetPrivate	gtkfilechooserwidget.h	/^typedef struct _GtkFileChooserWidgetPrivate GtkFileChooserWidgetPrivate;$/;"	t	typeref:struct:_GtkFileChooserWidgetPrivate
GtkFileFilter	gtkfilefilter.h	/^typedef struct _GtkFileFilter     GtkFileFilter;$/;"	t	typeref:struct:_GtkFileFilter
GtkFileFilterFlags	gtkfilefilter.h	/^} GtkFileFilterFlags;$/;"	t	typeref:enum:__anon108
GtkFileFilterFunc	gtkfilefilter.h	/^typedef gboolean (*GtkFileFilterFunc) (const GtkFileFilterInfo *filter_info,$/;"	t
GtkFileFilterInfo	gtkfilefilter.h	/^typedef struct _GtkFileFilterInfo GtkFileFilterInfo;$/;"	t	typeref:struct:_GtkFileFilterInfo
GtkFileSelection	gtkfilesel.h	/^typedef struct _GtkFileSelection       GtkFileSelection;$/;"	t	typeref:struct:_GtkFileSelection
GtkFileSelectionClass	gtkfilesel.h	/^typedef struct _GtkFileSelectionClass  GtkFileSelectionClass;$/;"	t	typeref:struct:_GtkFileSelectionClass
GtkFixed	gtkfixed.h	/^typedef struct _GtkFixed        GtkFixed;$/;"	t	typeref:struct:_GtkFixed
GtkFixedChild	gtkfixed.h	/^typedef struct _GtkFixedChild   GtkFixedChild;$/;"	t	typeref:struct:_GtkFixedChild
GtkFixedClass	gtkfixed.h	/^typedef struct _GtkFixedClass   GtkFixedClass;$/;"	t	typeref:struct:_GtkFixedClass
GtkFlagValue	gtktypeutils.h	/^typedef GFlagsValue GtkFlagValue;$/;"	t
GtkFontButton	gtkfontbutton.h	/^typedef struct _GtkFontButton        GtkFontButton;$/;"	t	typeref:struct:_GtkFontButton
GtkFontButtonClass	gtkfontbutton.h	/^typedef struct _GtkFontButtonClass   GtkFontButtonClass;$/;"	t	typeref:struct:_GtkFontButtonClass
GtkFontButtonPrivate	gtkfontbutton.h	/^typedef struct _GtkFontButtonPrivate GtkFontButtonPrivate;$/;"	t	typeref:struct:_GtkFontButtonPrivate
GtkFontSelection	gtkfontsel.h	/^typedef struct _GtkFontSelection	     GtkFontSelection;$/;"	t	typeref:struct:_GtkFontSelection
GtkFontSelectionClass	gtkfontsel.h	/^typedef struct _GtkFontSelectionClass	     GtkFontSelectionClass;$/;"	t	typeref:struct:_GtkFontSelectionClass
GtkFontSelectionDialog	gtkfontsel.h	/^typedef struct _GtkFontSelectionDialog	     GtkFontSelectionDialog;$/;"	t	typeref:struct:_GtkFontSelectionDialog
GtkFontSelectionDialogClass	gtkfontsel.h	/^typedef struct _GtkFontSelectionDialogClass  GtkFontSelectionDialogClass;$/;"	t	typeref:struct:_GtkFontSelectionDialogClass
GtkFrame	gtkframe.h	/^typedef struct _GtkFrame       GtkFrame;$/;"	t	typeref:struct:_GtkFrame
GtkFrameClass	gtkframe.h	/^typedef struct _GtkFrameClass  GtkFrameClass;$/;"	t	typeref:struct:_GtkFrameClass
GtkFunction	gtktypeutils.h	/^typedef gboolean (*GtkFunction)	    (gpointer      data);$/;"	t
GtkFundamentalType	gtktypeutils.h	/^typedef GType GtkFundamentalType;$/;"	t
GtkGammaCurve	gtkgamma.h	/^typedef struct _GtkGammaCurve		GtkGammaCurve;$/;"	t	typeref:struct:_GtkGammaCurve
GtkGammaCurveClass	gtkgamma.h	/^typedef struct _GtkGammaCurveClass	GtkGammaCurveClass;$/;"	t	typeref:struct:_GtkGammaCurveClass
GtkHBox	gtkhbox.h	/^typedef struct _GtkHBox	      GtkHBox;$/;"	t	typeref:struct:_GtkHBox
GtkHBoxClass	gtkhbox.h	/^typedef struct _GtkHBoxClass  GtkHBoxClass;$/;"	t	typeref:struct:_GtkHBoxClass
GtkHButtonBox	gtkhbbox.h	/^typedef struct _GtkHButtonBox       GtkHButtonBox;$/;"	t	typeref:struct:_GtkHButtonBox
GtkHButtonBoxClass	gtkhbbox.h	/^typedef struct _GtkHButtonBoxClass  GtkHButtonBoxClass;$/;"	t	typeref:struct:_GtkHButtonBoxClass
GtkHPaned	gtkhpaned.h	/^typedef struct _GtkHPaned      GtkHPaned;$/;"	t	typeref:struct:_GtkHPaned
GtkHPanedClass	gtkhpaned.h	/^typedef struct _GtkHPanedClass GtkHPanedClass;$/;"	t	typeref:struct:_GtkHPanedClass
GtkHRuler	gtkhruler.h	/^typedef struct _GtkHRuler       GtkHRuler;$/;"	t	typeref:struct:_GtkHRuler
GtkHRulerClass	gtkhruler.h	/^typedef struct _GtkHRulerClass  GtkHRulerClass;$/;"	t	typeref:struct:_GtkHRulerClass
GtkHSV	gtkhsv.h	/^typedef struct _GtkHSV      GtkHSV;$/;"	t	typeref:struct:_GtkHSV
GtkHSVClass	gtkhsv.h	/^typedef struct _GtkHSVClass GtkHSVClass;$/;"	t	typeref:struct:_GtkHSVClass
GtkHScale	gtkhscale.h	/^typedef struct _GtkHScale       GtkHScale;$/;"	t	typeref:struct:_GtkHScale
GtkHScaleClass	gtkhscale.h	/^typedef struct _GtkHScaleClass  GtkHScaleClass;$/;"	t	typeref:struct:_GtkHScaleClass
GtkHScrollbar	gtkhscrollbar.h	/^typedef struct _GtkHScrollbar       GtkHScrollbar;$/;"	t	typeref:struct:_GtkHScrollbar
GtkHScrollbarClass	gtkhscrollbar.h	/^typedef struct _GtkHScrollbarClass  GtkHScrollbarClass;$/;"	t	typeref:struct:_GtkHScrollbarClass
GtkHSeparator	gtkhseparator.h	/^typedef struct _GtkHSeparator       GtkHSeparator;$/;"	t	typeref:struct:_GtkHSeparator
GtkHSeparatorClass	gtkhseparator.h	/^typedef struct _GtkHSeparatorClass  GtkHSeparatorClass;$/;"	t	typeref:struct:_GtkHSeparatorClass
GtkHandleBox	gtkhandlebox.h	/^typedef struct _GtkHandleBox       GtkHandleBox;$/;"	t	typeref:struct:_GtkHandleBox
GtkHandleBoxClass	gtkhandlebox.h	/^typedef struct _GtkHandleBoxClass  GtkHandleBoxClass;$/;"	t	typeref:struct:_GtkHandleBoxClass
GtkIMContext	gtkimcontext.h	/^typedef struct _GtkIMContext       GtkIMContext;$/;"	t	typeref:struct:_GtkIMContext
GtkIMContextClass	gtkimcontext.h	/^typedef struct _GtkIMContextClass  GtkIMContextClass;$/;"	t	typeref:struct:_GtkIMContextClass
GtkIMContextInfo	gtkimmodule.h	/^typedef struct _GtkIMContextInfo GtkIMContextInfo;$/;"	t	typeref:struct:_GtkIMContextInfo
GtkIMContextSimple	gtkimcontextsimple.h	/^typedef struct _GtkIMContextSimple       GtkIMContextSimple;$/;"	t	typeref:struct:_GtkIMContextSimple
GtkIMContextSimpleClass	gtkimcontextsimple.h	/^typedef struct _GtkIMContextSimpleClass  GtkIMContextSimpleClass;$/;"	t	typeref:struct:_GtkIMContextSimpleClass
GtkIMMulticontext	gtkimmulticontext.h	/^typedef struct _GtkIMMulticontext        GtkIMMulticontext;$/;"	t	typeref:struct:_GtkIMMulticontext
GtkIMMulticontextClass	gtkimmulticontext.h	/^typedef struct _GtkIMMulticontextClass   GtkIMMulticontextClass;$/;"	t	typeref:struct:_GtkIMMulticontextClass
GtkIMMulticontextPrivate	gtkimmulticontext.h	/^typedef struct _GtkIMMulticontextPrivate GtkIMMulticontextPrivate;$/;"	t	typeref:struct:_GtkIMMulticontextPrivate
GtkIMPreeditStyle	gtkenums.h	/^} GtkIMPreeditStyle;$/;"	t	typeref:enum:__anon56
GtkIMStatusStyle	gtkenums.h	/^} GtkIMStatusStyle;$/;"	t	typeref:enum:__anon57
GtkIconFactory	gtkrc.h	/^typedef struct _GtkIconFactory  GtkIconFactory;$/;"	t	typeref:struct:_GtkIconFactory
GtkIconFactoryClass	gtkiconfactory.h	/^typedef struct _GtkIconFactoryClass GtkIconFactoryClass;$/;"	t	typeref:struct:_GtkIconFactoryClass
GtkIconInfo	gtkicontheme.h	/^typedef struct _GtkIconInfo         GtkIconInfo;$/;"	t	typeref:struct:_GtkIconInfo
GtkIconLookupFlags	gtkicontheme.h	/^} GtkIconLookupFlags;$/;"	t	typeref:enum:__anon121
GtkIconSet	gtkstyle.h	/^typedef struct _GtkIconSet     GtkIconSet;$/;"	t	typeref:struct:_GtkIconSet
GtkIconSize	gtkenums.h	/^} GtkIconSize;$/;"	t	typeref:enum:__anon21
GtkIconSource	gtkstyle.h	/^typedef struct _GtkIconSource  GtkIconSource;$/;"	t	typeref:struct:_GtkIconSource
GtkIconTheme	gtkicontheme.h	/^typedef struct _GtkIconTheme        GtkIconTheme;$/;"	t	typeref:struct:_GtkIconTheme
GtkIconThemeClass	gtkicontheme.h	/^typedef struct _GtkIconThemeClass   GtkIconThemeClass;$/;"	t	typeref:struct:_GtkIconThemeClass
GtkIconThemeError	gtkicontheme.h	/^} GtkIconThemeError;$/;"	t	typeref:enum:__anon122
GtkIconThemePrivate	gtkicontheme.h	/^typedef struct _GtkIconThemePrivate GtkIconThemePrivate;$/;"	t	typeref:struct:_GtkIconThemePrivate
GtkIconView	gtkiconview.h	/^typedef struct _GtkIconView           GtkIconView;$/;"	t	typeref:struct:_GtkIconView
GtkIconViewClass	gtkiconview.h	/^typedef struct _GtkIconViewClass      GtkIconViewClass;$/;"	t	typeref:struct:_GtkIconViewClass
GtkIconViewDropPosition	gtkiconview.h	/^} GtkIconViewDropPosition;$/;"	t	typeref:enum:__anon86
GtkIconViewForeachFunc	gtkiconview.h	/^typedef void (* GtkIconViewForeachFunc)     (GtkIconView      *icon_view,$/;"	t
GtkIconViewPrivate	gtkiconview.h	/^typedef struct _GtkIconViewPrivate    GtkIconViewPrivate;$/;"	t	typeref:struct:_GtkIconViewPrivate
GtkImage	gtkimage.h	/^typedef struct _GtkImage       GtkImage;$/;"	t	typeref:struct:_GtkImage
GtkImageAnimationData	gtkimage.h	/^typedef struct _GtkImageAnimationData GtkImageAnimationData;$/;"	t	typeref:struct:_GtkImageAnimationData
GtkImageClass	gtkimage.h	/^typedef struct _GtkImageClass  GtkImageClass;$/;"	t	typeref:struct:_GtkImageClass
GtkImageGIconData	gtkimage.h	/^typedef struct _GtkImageGIconData     GtkImageGIconData;$/;"	t	typeref:struct:_GtkImageGIconData
GtkImageIconNameData	gtkimage.h	/^typedef struct _GtkImageIconNameData  GtkImageIconNameData;$/;"	t	typeref:struct:_GtkImageIconNameData
GtkImageIconSetData	gtkimage.h	/^typedef struct _GtkImageIconSetData GtkImageIconSetData;$/;"	t	typeref:struct:_GtkImageIconSetData
GtkImageImageData	gtkimage.h	/^typedef struct _GtkImageImageData   GtkImageImageData;$/;"	t	typeref:struct:_GtkImageImageData
GtkImageMenuItem	gtkimagemenuitem.h	/^typedef struct _GtkImageMenuItem       GtkImageMenuItem;$/;"	t	typeref:struct:_GtkImageMenuItem
GtkImageMenuItemClass	gtkimagemenuitem.h	/^typedef struct _GtkImageMenuItemClass  GtkImageMenuItemClass;$/;"	t	typeref:struct:_GtkImageMenuItemClass
GtkImagePixbufData	gtkimage.h	/^typedef struct _GtkImagePixbufData  GtkImagePixbufData;$/;"	t	typeref:struct:_GtkImagePixbufData
GtkImagePixmapData	gtkimage.h	/^typedef struct _GtkImagePixmapData  GtkImagePixmapData;$/;"	t	typeref:struct:_GtkImagePixmapData
GtkImageStockData	gtkimage.h	/^typedef struct _GtkImageStockData   GtkImageStockData;$/;"	t	typeref:struct:_GtkImageStockData
GtkImageType	gtkimage.h	/^} GtkImageType;$/;"	t	typeref:enum:__anon83
GtkInfoBar	gtkinfobar.h	/^typedef struct _GtkInfoBar GtkInfoBar;$/;"	t	typeref:struct:_GtkInfoBar
GtkInfoBarClass	gtkinfobar.h	/^typedef struct _GtkInfoBarClass GtkInfoBarClass;$/;"	t	typeref:struct:_GtkInfoBarClass
GtkInfoBarPrivate	gtkinfobar.h	/^typedef struct _GtkInfoBarPrivate GtkInfoBarPrivate;$/;"	t	typeref:struct:_GtkInfoBarPrivate
GtkInputDialog	gtkinputdialog.h	/^typedef struct _GtkInputDialog       GtkInputDialog;$/;"	t	typeref:struct:_GtkInputDialog
GtkInputDialogClass	gtkinputdialog.h	/^typedef struct _GtkInputDialogClass  GtkInputDialogClass;$/;"	t	typeref:struct:_GtkInputDialogClass
GtkInvisible	gtkinvisible.h	/^typedef struct _GtkInvisible	   GtkInvisible;$/;"	t	typeref:struct:_GtkInvisible
GtkInvisibleClass	gtkinvisible.h	/^typedef struct _GtkInvisibleClass  GtkInvisibleClass;$/;"	t	typeref:struct:_GtkInvisibleClass
GtkItem	gtkitem.h	/^typedef struct _GtkItem       GtkItem;$/;"	t	typeref:struct:_GtkItem
GtkItemClass	gtkitem.h	/^typedef struct _GtkItemClass  GtkItemClass;$/;"	t	typeref:struct:_GtkItemClass
GtkItemFactory	gtkitemfactory.h	/^typedef	struct	_GtkItemFactory			GtkItemFactory;$/;"	t	typeref:struct:_GtkItemFactory
GtkItemFactoryCallback	gtkitemfactory.h	/^typedef	void	(*GtkItemFactoryCallback)  ();$/;"	t
GtkItemFactoryCallback1	gtkitemfactory.h	/^typedef	void	(*GtkItemFactoryCallback1) (gpointer		 callback_data,$/;"	t
GtkItemFactoryCallback2	gtkitemfactory.h	/^typedef	void	(*GtkItemFactoryCallback2) (GtkWidget		*widget,$/;"	t
GtkItemFactoryClass	gtkitemfactory.h	/^typedef	struct	_GtkItemFactoryClass		GtkItemFactoryClass;$/;"	t	typeref:struct:_GtkItemFactoryClass
GtkItemFactoryEntry	gtkitemfactory.h	/^typedef	struct	_GtkItemFactoryEntry		GtkItemFactoryEntry;$/;"	t	typeref:struct:_GtkItemFactoryEntry
GtkItemFactoryItem	gtkitemfactory.h	/^typedef	struct	_GtkItemFactoryItem		GtkItemFactoryItem;$/;"	t	typeref:struct:_GtkItemFactoryItem
GtkJustification	gtkenums.h	/^} GtkJustification;$/;"	t	typeref:enum:__anon25
GtkKeySnoopFunc	gtkmain.h	/^typedef gint	(*GtkKeySnoopFunc)	    (GtkWidget	  *grab_widget,$/;"	t
GtkLabel	gtklabel.h	/^typedef struct _GtkLabel       GtkLabel;$/;"	t	typeref:struct:_GtkLabel
GtkLabelClass	gtklabel.h	/^typedef struct _GtkLabelClass  GtkLabelClass;$/;"	t	typeref:struct:_GtkLabelClass
GtkLabelSelectionInfo	gtklabel.h	/^typedef struct _GtkLabelSelectionInfo GtkLabelSelectionInfo;$/;"	t	typeref:struct:_GtkLabelSelectionInfo
GtkLayout	gtklayout.h	/^typedef struct _GtkLayout        GtkLayout;$/;"	t	typeref:struct:_GtkLayout
GtkLayoutClass	gtklayout.h	/^typedef struct _GtkLayoutClass   GtkLayoutClass;$/;"	t	typeref:struct:_GtkLayoutClass
GtkLinkButton	gtklinkbutton.h	/^typedef struct _GtkLinkButton		GtkLinkButton;$/;"	t	typeref:struct:_GtkLinkButton
GtkLinkButtonClass	gtklinkbutton.h	/^typedef struct _GtkLinkButtonClass	GtkLinkButtonClass;$/;"	t	typeref:struct:_GtkLinkButtonClass
GtkLinkButtonPrivate	gtklinkbutton.h	/^typedef struct _GtkLinkButtonPrivate	GtkLinkButtonPrivate;$/;"	t	typeref:struct:_GtkLinkButtonPrivate
GtkLinkButtonUriFunc	gtklinkbutton.h	/^typedef void (*GtkLinkButtonUriFunc) (GtkLinkButton *button,$/;"	t
GtkList	gtklist.h	/^typedef struct _GtkList	      GtkList;$/;"	t	typeref:struct:_GtkList
GtkListClass	gtklist.h	/^typedef struct _GtkListClass  GtkListClass;$/;"	t	typeref:struct:_GtkListClass
GtkListItem	gtklistitem.h	/^typedef struct _GtkListItem       GtkListItem;$/;"	t	typeref:struct:_GtkListItem
GtkListItemClass	gtklistitem.h	/^typedef struct _GtkListItemClass  GtkListItemClass;$/;"	t	typeref:struct:_GtkListItemClass
GtkListStore	gtkliststore.h	/^typedef struct _GtkListStore       GtkListStore;$/;"	t	typeref:struct:_GtkListStore
GtkListStoreClass	gtkliststore.h	/^typedef struct _GtkListStoreClass  GtkListStoreClass;$/;"	t	typeref:struct:_GtkListStoreClass
GtkMatchType	gtkenums.h	/^} GtkMatchType;$/;"	t	typeref:enum:__anon26
GtkMenu	gtkmenu.h	/^typedef struct _GtkMenu	      GtkMenu;$/;"	t	typeref:struct:_GtkMenu
GtkMenuBar	gtkmenubar.h	/^typedef struct _GtkMenuBar       GtkMenuBar;$/;"	t	typeref:struct:_GtkMenuBar
GtkMenuBarClass	gtkmenubar.h	/^typedef struct _GtkMenuBarClass  GtkMenuBarClass;$/;"	t	typeref:struct:_GtkMenuBarClass
GtkMenuCallback	gtkitemfactory.h	/^typedef void (*GtkMenuCallback) (GtkWidget *widget,$/;"	t
GtkMenuClass	gtkmenu.h	/^typedef struct _GtkMenuClass  GtkMenuClass;$/;"	t	typeref:struct:_GtkMenuClass
GtkMenuDetachFunc	gtkmenu.h	/^typedef void (*GtkMenuDetachFunc)   (GtkWidget *attach_widget,$/;"	t
GtkMenuDirectionType	gtkenums.h	/^} GtkMenuDirectionType;$/;"	t	typeref:enum:__anon27
GtkMenuEntry	gtkitemfactory.h	/^} GtkMenuEntry;$/;"	t	typeref:struct:__anon95
GtkMenuItem	gtkmenuitem.h	/^typedef struct _GtkMenuItem	  GtkMenuItem;$/;"	t	typeref:struct:_GtkMenuItem
GtkMenuItemClass	gtkmenuitem.h	/^typedef struct _GtkMenuItemClass  GtkMenuItemClass;$/;"	t	typeref:struct:_GtkMenuItemClass
GtkMenuPositionFunc	gtkmenu.h	/^typedef void (*GtkMenuPositionFunc) (GtkMenu   *menu,$/;"	t
GtkMenuShell	gtkmenushell.h	/^typedef struct _GtkMenuShell	   GtkMenuShell;$/;"	t	typeref:struct:_GtkMenuShell
GtkMenuShellClass	gtkmenushell.h	/^typedef struct _GtkMenuShellClass  GtkMenuShellClass;$/;"	t	typeref:struct:_GtkMenuShellClass
GtkMenuToolButton	gtkmenutoolbutton.h	/^typedef struct _GtkMenuToolButton        GtkMenuToolButton;$/;"	t	typeref:struct:_GtkMenuToolButton
GtkMenuToolButtonClass	gtkmenutoolbutton.h	/^typedef struct _GtkMenuToolButtonClass   GtkMenuToolButtonClass;$/;"	t	typeref:struct:_GtkMenuToolButtonClass
GtkMenuToolButtonPrivate	gtkmenutoolbutton.h	/^typedef struct _GtkMenuToolButtonPrivate GtkMenuToolButtonPrivate;$/;"	t	typeref:struct:_GtkMenuToolButtonPrivate
GtkMessageDialog	gtkmessagedialog.h	/^typedef struct _GtkMessageDialog        GtkMessageDialog;$/;"	t	typeref:struct:_GtkMessageDialog
GtkMessageDialogClass	gtkmessagedialog.h	/^typedef struct _GtkMessageDialogClass   GtkMessageDialogClass;$/;"	t	typeref:struct:_GtkMessageDialogClass
GtkMessageType	gtkenums.h	/^} GtkMessageType;$/;"	t	typeref:enum:__anon28
GtkMetricType	gtkenums.h	/^} GtkMetricType;$/;"	t	typeref:enum:__anon29
GtkMisc	gtkmisc.h	/^typedef struct _GtkMisc	      GtkMisc;$/;"	t	typeref:struct:_GtkMisc
GtkMiscClass	gtkmisc.h	/^typedef struct _GtkMiscClass  GtkMiscClass;$/;"	t	typeref:struct:_GtkMiscClass
GtkModuleDisplayInitFunc	gtkmodules.h	/^typedef void	 (*GtkModuleDisplayInitFunc) (GdkDisplay   *display);$/;"	t
GtkModuleInitFunc	gtkmodules.h	/^typedef void	 (*GtkModuleInitFunc)        (gint	  *argc,$/;"	t
GtkMountOperation	gtkmountoperation.h	/^typedef struct _GtkMountOperation         GtkMountOperation;$/;"	t	typeref:struct:_GtkMountOperation
GtkMountOperationClass	gtkmountoperation.h	/^typedef struct _GtkMountOperationClass    GtkMountOperationClass;$/;"	t	typeref:struct:_GtkMountOperationClass
GtkMountOperationPrivate	gtkmountoperation.h	/^typedef struct _GtkMountOperationPrivate  GtkMountOperationPrivate;$/;"	t	typeref:struct:_GtkMountOperationPrivate
GtkMovementStep	gtkenums.h	/^} GtkMovementStep;$/;"	t	typeref:enum:__anon30
GtkNotebook	gtknotebook.h	/^typedef struct _GtkNotebook       GtkNotebook;$/;"	t	typeref:struct:_GtkNotebook
GtkNotebookClass	gtknotebook.h	/^typedef struct _GtkNotebookClass  GtkNotebookClass;$/;"	t	typeref:struct:_GtkNotebookClass
GtkNotebookPage	gtknotebook.h	/^typedef struct _GtkNotebookPage   GtkNotebookPage;$/;"	t	typeref:struct:_GtkNotebookPage
GtkNotebookTab	gtknotebook.h	/^} GtkNotebookTab;$/;"	t	typeref:enum:__anon116
GtkNotebookWindowCreationFunc	gtknotebook.h	/^typedef GtkNotebook* (*GtkNotebookWindowCreationFunc) (GtkNotebook *source,$/;"	t
GtkNumberUpLayout	gtkenums.h	/^} GtkNumberUpLayout;$/;"	t	typeref:enum:__anon61
GtkObject	gtktypeutils.h	/^typedef struct _GtkObject   	     GtkObject; \/* object forward declaration *\/$/;"	t	typeref:struct:_GtkObject
GtkObjectClass	gtkobject.h	/^typedef struct _GtkObjectClass	GtkObjectClass;$/;"	t	typeref:struct:_GtkObjectClass
GtkObjectFlags	gtkobject.h	/^} GtkObjectFlags;$/;"	t	typeref:enum:__anon111
GtkObjectInitFunc	gtktypeutils.h	/^typedef GInstanceInitFunc       GtkObjectInitFunc;$/;"	t
GtkOffscreenWindow	gtkoffscreenwindow.h	/^typedef struct _GtkOffscreenWindow      GtkOffscreenWindow;$/;"	t	typeref:struct:_GtkOffscreenWindow
GtkOffscreenWindowClass	gtkoffscreenwindow.h	/^typedef struct _GtkOffscreenWindowClass GtkOffscreenWindowClass;$/;"	t	typeref:struct:_GtkOffscreenWindowClass
GtkOldEditable	gtkoldeditable.h	/^typedef struct _GtkOldEditable       GtkOldEditable;$/;"	t	typeref:struct:_GtkOldEditable
GtkOldEditableClass	gtkoldeditable.h	/^typedef struct _GtkOldEditableClass  GtkOldEditableClass;$/;"	t	typeref:struct:_GtkOldEditableClass
GtkOptionMenu	gtkoptionmenu.h	/^typedef struct _GtkOptionMenu       GtkOptionMenu;$/;"	t	typeref:struct:_GtkOptionMenu
GtkOptionMenuClass	gtkoptionmenu.h	/^typedef struct _GtkOptionMenuClass  GtkOptionMenuClass;$/;"	t	typeref:struct:_GtkOptionMenuClass
GtkOrientable	gtkorientable.h	/^typedef struct _GtkOrientable       GtkOrientable;         \/* Dummy typedef *\/$/;"	t	typeref:struct:_GtkOrientable
GtkOrientableIface	gtkorientable.h	/^typedef struct _GtkOrientableIface  GtkOrientableIface;$/;"	t	typeref:struct:_GtkOrientableIface
GtkOrientation	gtkenums.h	/^} GtkOrientation;$/;"	t	typeref:enum:__anon32
GtkPackDirection	gtkenums.h	/^} GtkPackDirection;$/;"	t	typeref:enum:__anon58
GtkPackType	gtkenums.h	/^} GtkPackType;$/;"	t	typeref:enum:__anon34
GtkPageOrientation	gtkenums.h	/^} GtkPageOrientation;$/;"	t	typeref:enum:__anon62
GtkPageRange	gtkprintsettings.h	/^typedef struct _GtkPageRange GtkPageRange;$/;"	t	typeref:struct:_GtkPageRange
GtkPageSet	gtkenums.h	/^} GtkPageSet;$/;"	t	typeref:enum:__anon60
GtkPageSetup	gtkpagesetup.h	/^typedef struct _GtkPageSetup GtkPageSetup;$/;"	t	typeref:struct:_GtkPageSetup
GtkPageSetupDoneFunc	gtkprintoperation.h	/^typedef void  (* GtkPageSetupDoneFunc) (GtkPageSetup *page_setup,$/;"	t
GtkPaned	gtkpaned.h	/^typedef struct _GtkPaned        GtkPaned;$/;"	t	typeref:struct:_GtkPaned
GtkPanedClass	gtkpaned.h	/^typedef struct _GtkPanedClass   GtkPanedClass;$/;"	t	typeref:struct:_GtkPanedClass
GtkPanedPrivate	gtkpaned.h	/^typedef struct _GtkPanedPrivate GtkPanedPrivate;$/;"	t	typeref:struct:_GtkPanedPrivate
GtkPaperSize	gtkpapersize.h	/^typedef struct _GtkPaperSize GtkPaperSize;$/;"	t	typeref:struct:_GtkPaperSize
GtkPathPriorityType	gtkenums.h	/^} GtkPathPriorityType;$/;"	t	typeref:enum:__anon35
GtkPathType	gtkenums.h	/^} GtkPathType;$/;"	t	typeref:enum:__anon36
GtkPixmap	gtkpixmap.h	/^typedef struct _GtkPixmap	GtkPixmap;$/;"	t	typeref:struct:_GtkPixmap
GtkPixmapClass	gtkpixmap.h	/^typedef struct _GtkPixmapClass	GtkPixmapClass;$/;"	t	typeref:struct:_GtkPixmapClass
GtkPlug	gtkplug.h	/^typedef struct _GtkPlug        GtkPlug;$/;"	t	typeref:struct:_GtkPlug
GtkPlugClass	gtkplug.h	/^typedef struct _GtkPlugClass   GtkPlugClass;$/;"	t	typeref:struct:_GtkPlugClass
GtkPolicyType	gtkenums.h	/^} GtkPolicyType;$/;"	t	typeref:enum:__anon37
GtkPositionType	gtkenums.h	/^} GtkPositionType;$/;"	t	typeref:enum:__anon38
GtkPreview	gtkpreview.h	/^typedef struct _GtkPreview       GtkPreview;$/;"	t	typeref:struct:_GtkPreview
GtkPreviewClass	gtkpreview.h	/^typedef struct _GtkPreviewClass  GtkPreviewClass;$/;"	t	typeref:struct:_GtkPreviewClass
GtkPreviewInfo	gtkpreview.h	/^typedef struct _GtkPreviewInfo   GtkPreviewInfo;$/;"	t	typeref:struct:_GtkPreviewInfo
GtkPreviewType	gtkenums.h	/^} GtkPreviewType;$/;"	t	typeref:enum:__anon39
GtkPrintContext	gtkprintcontext.h	/^typedef struct _GtkPrintContext GtkPrintContext;$/;"	t	typeref:struct:_GtkPrintContext
GtkPrintDuplex	gtkenums.h	/^} GtkPrintDuplex;$/;"	t	typeref:enum:__anon64
GtkPrintError	gtkprintoperation.h	/^} GtkPrintError;$/;"	t	typeref:enum:__anon128
GtkPrintFunc	gtkitemfactory.h	/^typedef void	(*GtkPrintFunc)		   (gpointer		 func_data,$/;"	t
GtkPrintOperation	gtkprintoperation.h	/^typedef struct _GtkPrintOperation        GtkPrintOperation;$/;"	t	typeref:struct:_GtkPrintOperation
GtkPrintOperationAction	gtkprintoperation.h	/^} GtkPrintOperationAction;$/;"	t	typeref:enum:__anon127
GtkPrintOperationClass	gtkprintoperation.h	/^typedef struct _GtkPrintOperationClass   GtkPrintOperationClass;$/;"	t	typeref:struct:_GtkPrintOperationClass
GtkPrintOperationPreview	gtkprintoperationpreview.h	/^typedef struct _GtkPrintOperationPreview      GtkPrintOperationPreview;      \/*dummy typedef *\/$/;"	t	typeref:struct:_GtkPrintOperationPreview
GtkPrintOperationPreviewIface	gtkprintoperationpreview.h	/^typedef struct _GtkPrintOperationPreviewIface GtkPrintOperationPreviewIface;$/;"	t	typeref:struct:_GtkPrintOperationPreviewIface
GtkPrintOperationPrivate	gtkprintoperation.h	/^typedef struct _GtkPrintOperationPrivate GtkPrintOperationPrivate;$/;"	t	typeref:struct:_GtkPrintOperationPrivate
GtkPrintOperationResult	gtkprintoperation.h	/^} GtkPrintOperationResult;$/;"	t	typeref:enum:__anon126
GtkPrintPages	gtkenums.h	/^} GtkPrintPages;$/;"	t	typeref:enum:__anon59
GtkPrintQuality	gtkenums.h	/^} GtkPrintQuality;$/;"	t	typeref:enum:__anon63
GtkPrintSettings	gtkprintsettings.h	/^typedef struct _GtkPrintSettings GtkPrintSettings;$/;"	t	typeref:struct:_GtkPrintSettings
GtkPrintSettingsFunc	gtkprintsettings.h	/^typedef void  (*GtkPrintSettingsFunc)  (const gchar *key,$/;"	t
GtkPrintStatus	gtkprintoperation.h	/^} GtkPrintStatus;$/;"	t	typeref:enum:__anon125
GtkPrivateFlags	gtkprivate.h	/^} GtkPrivateFlags;$/;"	t	typeref:enum:__anon118
GtkProgress	gtkprogress.h	/^typedef struct _GtkProgress       GtkProgress;$/;"	t	typeref:struct:_GtkProgress
GtkProgressBar	gtkprogressbar.h	/^typedef struct _GtkProgressBar       GtkProgressBar;$/;"	t	typeref:struct:_GtkProgressBar
GtkProgressBarClass	gtkprogressbar.h	/^typedef struct _GtkProgressBarClass  GtkProgressBarClass;$/;"	t	typeref:struct:_GtkProgressBarClass
GtkProgressBarOrientation	gtkprogressbar.h	/^} GtkProgressBarOrientation;$/;"	t	typeref:enum:__anon80
GtkProgressBarStyle	gtkprogressbar.h	/^} GtkProgressBarStyle;$/;"	t	typeref:enum:__anon79
GtkProgressClass	gtkprogress.h	/^typedef struct _GtkProgressClass  GtkProgressClass;$/;"	t	typeref:struct:_GtkProgressClass
GtkPropertyMark	gtktext.h	/^typedef struct _GtkPropertyMark   GtkPropertyMark;$/;"	t	typeref:struct:_GtkPropertyMark
GtkRadioAction	gtkradioaction.h	/^typedef struct _GtkRadioAction        GtkRadioAction;$/;"	t	typeref:struct:_GtkRadioAction
GtkRadioActionClass	gtkradioaction.h	/^typedef struct _GtkRadioActionClass   GtkRadioActionClass;$/;"	t	typeref:struct:_GtkRadioActionClass
GtkRadioActionEntry	gtkactiongroup.h	/^typedef struct _GtkRadioActionEntry   GtkRadioActionEntry;$/;"	t	typeref:struct:_GtkRadioActionEntry
GtkRadioActionPrivate	gtkradioaction.h	/^typedef struct _GtkRadioActionPrivate GtkRadioActionPrivate;$/;"	t	typeref:struct:_GtkRadioActionPrivate
GtkRadioButton	gtkradiobutton.h	/^typedef struct _GtkRadioButton	     GtkRadioButton;$/;"	t	typeref:struct:_GtkRadioButton
GtkRadioButtonClass	gtkradiobutton.h	/^typedef struct _GtkRadioButtonClass  GtkRadioButtonClass;$/;"	t	typeref:struct:_GtkRadioButtonClass
GtkRadioMenuItem	gtkradiomenuitem.h	/^typedef struct _GtkRadioMenuItem       GtkRadioMenuItem;$/;"	t	typeref:struct:_GtkRadioMenuItem
GtkRadioMenuItemClass	gtkradiomenuitem.h	/^typedef struct _GtkRadioMenuItemClass  GtkRadioMenuItemClass;$/;"	t	typeref:struct:_GtkRadioMenuItemClass
GtkRadioToolButton	gtkradiotoolbutton.h	/^typedef struct _GtkRadioToolButton      GtkRadioToolButton;$/;"	t	typeref:struct:_GtkRadioToolButton
GtkRadioToolButtonClass	gtkradiotoolbutton.h	/^typedef struct _GtkRadioToolButtonClass GtkRadioToolButtonClass;$/;"	t	typeref:struct:_GtkRadioToolButtonClass
GtkRange	gtkrange.h	/^typedef struct _GtkRange        GtkRange;$/;"	t	typeref:struct:_GtkRange
GtkRangeClass	gtkrange.h	/^typedef struct _GtkRangeClass   GtkRangeClass;$/;"	t	typeref:struct:_GtkRangeClass
GtkRangeLayout	gtkrange.h	/^typedef struct _GtkRangeLayout    GtkRangeLayout;$/;"	t	typeref:struct:_GtkRangeLayout
GtkRangeStepTimer	gtkrange.h	/^typedef struct _GtkRangeStepTimer GtkRangeStepTimer;$/;"	t	typeref:struct:_GtkRangeStepTimer
GtkRcContext	gtkrc.h	/^typedef struct _GtkRcContext    GtkRcContext;$/;"	t	typeref:struct:_GtkRcContext
GtkRcFlags	gtkrc.h	/^} GtkRcFlags;$/;"	t	typeref:enum:__anon1
GtkRcProperty	gtkstyle.h	/^typedef struct _GtkRcProperty  GtkRcProperty;$/;"	t	typeref:struct:_GtkRcProperty
GtkRcPropertyParser	gtkstyle.h	/^typedef gboolean (*GtkRcPropertyParser) (const GParamSpec *pspec,$/;"	t
GtkRcStyle	gtkstyle.h	/^typedef struct _GtkRcStyle     GtkRcStyle;$/;"	t	typeref:struct:_GtkRcStyle
GtkRcStyleClass	gtkrc.h	/^typedef struct _GtkRcStyleClass GtkRcStyleClass;$/;"	t	typeref:struct:_GtkRcStyleClass
GtkRcTokenType	gtkrc.h	/^} GtkRcTokenType;$/;"	t	typeref:enum:__anon2
GtkRecentAction	gtkrecentaction.h	/^typedef struct _GtkRecentAction         GtkRecentAction;$/;"	t	typeref:struct:_GtkRecentAction
GtkRecentActionClass	gtkrecentaction.h	/^typedef struct _GtkRecentActionClass    GtkRecentActionClass;$/;"	t	typeref:struct:_GtkRecentActionClass
GtkRecentActionPrivate	gtkrecentaction.h	/^typedef struct _GtkRecentActionPrivate  GtkRecentActionPrivate;$/;"	t	typeref:struct:_GtkRecentActionPrivate
GtkRecentChooser	gtkrecentchooser.h	/^typedef struct _GtkRecentChooser      GtkRecentChooser; \/* dummy *\/$/;"	t	typeref:struct:_GtkRecentChooser
GtkRecentChooserDialog	gtkrecentchooserdialog.h	/^typedef struct _GtkRecentChooserDialog        GtkRecentChooserDialog;$/;"	t	typeref:struct:_GtkRecentChooserDialog
GtkRecentChooserDialogClass	gtkrecentchooserdialog.h	/^typedef struct _GtkRecentChooserDialogClass   GtkRecentChooserDialogClass;$/;"	t	typeref:struct:_GtkRecentChooserDialogClass
GtkRecentChooserDialogPrivate	gtkrecentchooserdialog.h	/^typedef struct _GtkRecentChooserDialogPrivate GtkRecentChooserDialogPrivate;$/;"	t	typeref:struct:_GtkRecentChooserDialogPrivate
GtkRecentChooserError	gtkrecentchooser.h	/^} GtkRecentChooserError;$/;"	t	typeref:enum:__anon90
GtkRecentChooserIface	gtkrecentchooser.h	/^typedef struct _GtkRecentChooserIface GtkRecentChooserIface;$/;"	t	typeref:struct:_GtkRecentChooserIface
GtkRecentChooserMenu	gtkrecentchoosermenu.h	/^typedef struct _GtkRecentChooserMenu		GtkRecentChooserMenu;$/;"	t	typeref:struct:_GtkRecentChooserMenu
GtkRecentChooserMenuClass	gtkrecentchoosermenu.h	/^typedef struct _GtkRecentChooserMenuClass	GtkRecentChooserMenuClass;$/;"	t	typeref:struct:_GtkRecentChooserMenuClass
GtkRecentChooserMenuPrivate	gtkrecentchoosermenu.h	/^typedef struct _GtkRecentChooserMenuPrivate	GtkRecentChooserMenuPrivate;$/;"	t	typeref:struct:_GtkRecentChooserMenuPrivate
GtkRecentChooserWidget	gtkrecentchooserwidget.h	/^typedef struct _GtkRecentChooserWidget        GtkRecentChooserWidget;$/;"	t	typeref:struct:_GtkRecentChooserWidget
GtkRecentChooserWidgetClass	gtkrecentchooserwidget.h	/^typedef struct _GtkRecentChooserWidgetClass   GtkRecentChooserWidgetClass;$/;"	t	typeref:struct:_GtkRecentChooserWidgetClass
GtkRecentChooserWidgetPrivate	gtkrecentchooserwidget.h	/^typedef struct _GtkRecentChooserWidgetPrivate GtkRecentChooserWidgetPrivate;$/;"	t	typeref:struct:_GtkRecentChooserWidgetPrivate
GtkRecentData	gtkrecentmanager.h	/^typedef struct _GtkRecentData		GtkRecentData;$/;"	t	typeref:struct:_GtkRecentData
GtkRecentFilter	gtkrecentfilter.h	/^typedef struct _GtkRecentFilter		GtkRecentFilter;$/;"	t	typeref:struct:_GtkRecentFilter
GtkRecentFilterFlags	gtkrecentfilter.h	/^} GtkRecentFilterFlags;$/;"	t	typeref:enum:__anon11
GtkRecentFilterFunc	gtkrecentfilter.h	/^typedef gboolean (*GtkRecentFilterFunc) (const GtkRecentFilterInfo *filter_info,$/;"	t
GtkRecentFilterInfo	gtkrecentfilter.h	/^typedef struct _GtkRecentFilterInfo	GtkRecentFilterInfo;$/;"	t	typeref:struct:_GtkRecentFilterInfo
GtkRecentInfo	gtkrecentmanager.h	/^typedef struct _GtkRecentInfo		GtkRecentInfo;$/;"	t	typeref:struct:_GtkRecentInfo
GtkRecentManager	gtkrecentmanager.h	/^typedef struct _GtkRecentManager	GtkRecentManager;$/;"	t	typeref:struct:_GtkRecentManager
GtkRecentManagerClass	gtkrecentmanager.h	/^typedef struct _GtkRecentManagerClass	GtkRecentManagerClass;$/;"	t	typeref:struct:_GtkRecentManagerClass
GtkRecentManagerError	gtkrecentmanager.h	/^} GtkRecentManagerError;$/;"	t	typeref:enum:__anon96
GtkRecentManagerPrivate	gtkrecentmanager.h	/^typedef struct _GtkRecentManagerPrivate GtkRecentManagerPrivate;$/;"	t	typeref:struct:_GtkRecentManagerPrivate
GtkRecentSortFunc	gtkrecentchooser.h	/^typedef gint (*GtkRecentSortFunc) (GtkRecentInfo *a,$/;"	t
GtkRecentSortType	gtkrecentchooser.h	/^} GtkRecentSortType;$/;"	t	typeref:enum:__anon89
GtkReliefStyle	gtkenums.h	/^} GtkReliefStyle;$/;"	t	typeref:enum:__anon40
GtkRequisition	gtkwidget.h	/^typedef struct _GtkRequisition	   GtkRequisition;$/;"	t	typeref:struct:_GtkRequisition
GtkResizeMode	gtkenums.h	/^} GtkResizeMode;$/;"	t	typeref:enum:__anon41
GtkResponseType	gtkdialog.h	/^} GtkResponseType;$/;"	t	typeref:enum:__anon10
GtkRuler	gtkruler.h	/^typedef struct _GtkRuler        GtkRuler;$/;"	t	typeref:struct:_GtkRuler
GtkRulerClass	gtkruler.h	/^typedef struct _GtkRulerClass   GtkRulerClass;$/;"	t	typeref:struct:_GtkRulerClass
GtkRulerMetric	gtkruler.h	/^typedef struct _GtkRulerMetric  GtkRulerMetric;$/;"	t	typeref:struct:_GtkRulerMetric
GtkScale	gtkscale.h	/^typedef struct _GtkScale        GtkScale;$/;"	t	typeref:struct:_GtkScale
GtkScaleButton	gtkscalebutton.h	/^typedef struct _GtkScaleButton        GtkScaleButton;$/;"	t	typeref:struct:_GtkScaleButton
GtkScaleButtonClass	gtkscalebutton.h	/^typedef struct _GtkScaleButtonClass   GtkScaleButtonClass;$/;"	t	typeref:struct:_GtkScaleButtonClass
GtkScaleButtonPrivate	gtkscalebutton.h	/^typedef struct _GtkScaleButtonPrivate GtkScaleButtonPrivate;$/;"	t	typeref:struct:_GtkScaleButtonPrivate
GtkScaleClass	gtkscale.h	/^typedef struct _GtkScaleClass   GtkScaleClass;$/;"	t	typeref:struct:_GtkScaleClass
GtkScrollStep	gtkenums.h	/^} GtkScrollStep;$/;"	t	typeref:enum:__anon31
GtkScrollType	gtkenums.h	/^} GtkScrollType;$/;"	t	typeref:enum:__anon43
GtkScrollbar	gtkscrollbar.h	/^typedef struct _GtkScrollbar        GtkScrollbar;$/;"	t	typeref:struct:_GtkScrollbar
GtkScrollbarClass	gtkscrollbar.h	/^typedef struct _GtkScrollbarClass   GtkScrollbarClass;$/;"	t	typeref:struct:_GtkScrollbarClass
GtkScrolledWindow	gtkscrolledwindow.h	/^typedef struct _GtkScrolledWindow       GtkScrolledWindow;$/;"	t	typeref:struct:_GtkScrolledWindow
GtkScrolledWindowClass	gtkscrolledwindow.h	/^typedef struct _GtkScrolledWindowClass  GtkScrolledWindowClass;$/;"	t	typeref:struct:_GtkScrolledWindowClass
GtkSelectionData	gtkwidget.h	/^typedef struct _GtkSelectionData   GtkSelectionData;$/;"	t	typeref:struct:_GtkSelectionData
GtkSelectionMode	gtkenums.h	/^} GtkSelectionMode;$/;"	t	typeref:enum:__anon44
GtkSensitivityType	gtkenums.h	/^} GtkSensitivityType;$/;"	t	typeref:enum:__anon22
GtkSeparator	gtkseparator.h	/^typedef struct _GtkSeparator       GtkSeparator;$/;"	t	typeref:struct:_GtkSeparator
GtkSeparatorClass	gtkseparator.h	/^typedef struct _GtkSeparatorClass  GtkSeparatorClass;$/;"	t	typeref:struct:_GtkSeparatorClass
GtkSeparatorMenuItem	gtkseparatormenuitem.h	/^typedef struct _GtkSeparatorMenuItem       GtkSeparatorMenuItem;$/;"	t	typeref:struct:_GtkSeparatorMenuItem
GtkSeparatorMenuItemClass	gtkseparatormenuitem.h	/^typedef struct _GtkSeparatorMenuItemClass  GtkSeparatorMenuItemClass;$/;"	t	typeref:struct:_GtkSeparatorMenuItemClass
GtkSeparatorToolItem	gtkseparatortoolitem.h	/^typedef struct _GtkSeparatorToolItem        GtkSeparatorToolItem;$/;"	t	typeref:struct:_GtkSeparatorToolItem
GtkSeparatorToolItemClass	gtkseparatortoolitem.h	/^typedef struct _GtkSeparatorToolItemClass   GtkSeparatorToolItemClass;$/;"	t	typeref:struct:_GtkSeparatorToolItemClass
GtkSeparatorToolItemPrivate	gtkseparatortoolitem.h	/^typedef struct _GtkSeparatorToolItemPrivate GtkSeparatorToolItemPrivate;$/;"	t	typeref:struct:_GtkSeparatorToolItemPrivate
GtkSettings	gtkstyle.h	/^typedef struct _GtkSettings    GtkSettings;$/;"	t	typeref:struct:_GtkSettings
GtkSettingsClass	gtksettings.h	/^typedef struct    _GtkSettingsClass GtkSettingsClass;$/;"	t	typeref:struct:_GtkSettingsClass
GtkSettingsPropertyValue	gtksettings.h	/^typedef struct    _GtkSettingsPropertyValue GtkSettingsPropertyValue; \/* Internal *\/$/;"	t	typeref:struct:_GtkSettingsPropertyValue
GtkSettingsValue	gtksettings.h	/^typedef struct    _GtkSettingsValue GtkSettingsValue;$/;"	t	typeref:struct:_GtkSettingsValue
GtkShadowType	gtkenums.h	/^} GtkShadowType;$/;"	t	typeref:enum:__anon45
GtkSideType	gtkenums.h	/^} GtkSideType;$/;"	t	typeref:enum:__anon23
GtkSignalFunc	gtktypeutils.h	/^typedef void (*GtkSignalFunc)       (void);$/;"	t
GtkSignalMarshaller	gtktypeutils.h	/^typedef GSignalCMarshaller      GtkSignalMarshaller;$/;"	t
GtkSignalRunType	gtkenums.h	/^} GtkSignalRunType;$/;"	t	typeref:enum:__anon42
GtkSizeGroup	gtksizegroup.h	/^typedef struct _GtkSizeGroup       GtkSizeGroup;$/;"	t	typeref:struct:_GtkSizeGroup
GtkSizeGroupClass	gtksizegroup.h	/^typedef struct _GtkSizeGroupClass  GtkSizeGroupClass;$/;"	t	typeref:struct:_GtkSizeGroupClass
GtkSizeGroupMode	gtksizegroup.h	/^} GtkSizeGroupMode;$/;"	t	typeref:enum:__anon82
GtkSocket	gtksocket.h	/^typedef struct _GtkSocket        GtkSocket;$/;"	t	typeref:struct:_GtkSocket
GtkSocketClass	gtksocket.h	/^typedef struct _GtkSocketClass   GtkSocketClass;$/;"	t	typeref:struct:_GtkSocketClass
GtkSortType	gtkenums.h	/^} GtkSortType;$/;"	t	typeref:enum:__anon55
GtkSpinButton	gtkspinbutton.h	/^typedef struct _GtkSpinButton	    GtkSpinButton;$/;"	t	typeref:struct:_GtkSpinButton
GtkSpinButtonClass	gtkspinbutton.h	/^typedef struct _GtkSpinButtonClass  GtkSpinButtonClass;$/;"	t	typeref:struct:_GtkSpinButtonClass
GtkSpinButtonUpdatePolicy	gtkspinbutton.h	/^} GtkSpinButtonUpdatePolicy;$/;"	t	typeref:enum:__anon87
GtkSpinType	gtkspinbutton.h	/^} GtkSpinType;$/;"	t	typeref:enum:__anon88
GtkSpinner	gtkspinner.h	/^typedef struct _GtkSpinner      GtkSpinner;$/;"	t	typeref:struct:_GtkSpinner
GtkSpinnerClass	gtkspinner.h	/^typedef struct _GtkSpinnerClass GtkSpinnerClass;$/;"	t	typeref:struct:_GtkSpinnerClass
GtkSpinnerPrivate	gtkspinner.h	/^typedef struct _GtkSpinnerPrivate  GtkSpinnerPrivate;$/;"	t	typeref:struct:_GtkSpinnerPrivate
GtkStateType	gtkenums.h	/^} GtkStateType;$/;"	t	typeref:enum:__anon46
GtkStatusIcon	gtkstatusicon.h	/^typedef struct _GtkStatusIcon	     GtkStatusIcon;$/;"	t	typeref:struct:_GtkStatusIcon
GtkStatusIconClass	gtkstatusicon.h	/^typedef struct _GtkStatusIconClass   GtkStatusIconClass;$/;"	t	typeref:struct:_GtkStatusIconClass
GtkStatusIconPrivate	gtkstatusicon.h	/^typedef struct _GtkStatusIconPrivate GtkStatusIconPrivate;$/;"	t	typeref:struct:_GtkStatusIconPrivate
GtkStatusbar	gtkstatusbar.h	/^typedef struct _GtkStatusbar      GtkStatusbar;$/;"	t	typeref:struct:_GtkStatusbar
GtkStatusbarClass	gtkstatusbar.h	/^typedef struct _GtkStatusbarClass GtkStatusbarClass;$/;"	t	typeref:struct:_GtkStatusbarClass
GtkStockItem	gtkstock.h	/^typedef struct _GtkStockItem GtkStockItem;$/;"	t	typeref:struct:_GtkStockItem
GtkStyle	gtkstyle.h	/^typedef struct _GtkStyle       GtkStyle;$/;"	t	typeref:struct:_GtkStyle
GtkStyleClass	gtkstyle.h	/^typedef struct _GtkStyleClass  GtkStyleClass;$/;"	t	typeref:struct:_GtkStyleClass
GtkSubmenuDirection	gtkenums.h	/^} GtkSubmenuDirection;$/;"	t	typeref:enum:__anon47
GtkSubmenuPlacement	gtkenums.h	/^} GtkSubmenuPlacement;$/;"	t	typeref:enum:__anon48
GtkTable	gtktable.h	/^typedef struct _GtkTable	GtkTable;$/;"	t	typeref:struct:_GtkTable
GtkTableChild	gtktable.h	/^typedef struct _GtkTableChild	GtkTableChild;$/;"	t	typeref:struct:_GtkTableChild
GtkTableClass	gtktable.h	/^typedef struct _GtkTableClass	GtkTableClass;$/;"	t	typeref:struct:_GtkTableClass
GtkTableRowCol	gtktable.h	/^typedef struct _GtkTableRowCol	GtkTableRowCol;$/;"	t	typeref:struct:_GtkTableRowCol
GtkTargetEntry	gtkselection.h	/^typedef struct _GtkTargetEntry   GtkTargetEntry;$/;"	t	typeref:struct:_GtkTargetEntry
GtkTargetFlags	gtkdnd.h	/^} GtkTargetFlags;$/;"	t	typeref:enum:__anon124
GtkTargetList	gtkselection.h	/^typedef struct _GtkTargetList    GtkTargetList;$/;"	t	typeref:struct:_GtkTargetList
GtkTargetPair	gtkselection.h	/^typedef struct _GtkTargetPair GtkTargetPair;$/;"	t	typeref:struct:_GtkTargetPair
GtkTearoffMenuItem	gtktearoffmenuitem.h	/^typedef struct _GtkTearoffMenuItem       GtkTearoffMenuItem;$/;"	t	typeref:struct:_GtkTearoffMenuItem
GtkTearoffMenuItemClass	gtktearoffmenuitem.h	/^typedef struct _GtkTearoffMenuItemClass  GtkTearoffMenuItemClass;$/;"	t	typeref:struct:_GtkTearoffMenuItemClass
GtkText	gtktext.h	/^typedef struct _GtkText           GtkText;$/;"	t	typeref:struct:_GtkText
GtkTextAppearance	gtktexttag.h	/^typedef struct _GtkTextAppearance GtkTextAppearance;$/;"	t	typeref:struct:_GtkTextAppearance
GtkTextAttrAppearance	gtktextlayout.h	/^typedef struct _GtkTextAttrAppearance GtkTextAttrAppearance;$/;"	t	typeref:struct:_GtkTextAttrAppearance
GtkTextAttributes	gtktexttag.h	/^typedef struct _GtkTextAttributes GtkTextAttributes;$/;"	t	typeref:struct:_GtkTextAttributes
GtkTextBTree	gtktextbuffer.h	/^typedef struct _GtkTextBTree GtkTextBTree;$/;"	t	typeref:struct:_GtkTextBTree
GtkTextBuffer	gtktextiter.h	/^typedef struct _GtkTextBuffer GtkTextBuffer;$/;"	t	typeref:struct:_GtkTextBuffer
GtkTextBufferClass	gtktextbuffer.h	/^typedef struct _GtkTextBufferClass GtkTextBufferClass;$/;"	t	typeref:struct:_GtkTextBufferClass
GtkTextBufferDeserializeFunc	gtktextbufferrichtext.h	/^typedef gboolean (* GtkTextBufferDeserializeFunc) (GtkTextBuffer     *register_buffer,$/;"	t
GtkTextBufferSerializeFunc	gtktextbufferrichtext.h	/^typedef guint8 * (* GtkTextBufferSerializeFunc)   (GtkTextBuffer     *register_buffer,$/;"	t
GtkTextBufferTargetInfo	gtktextbuffer.h	/^} GtkTextBufferTargetInfo;$/;"	t	typeref:enum:__anon117
GtkTextCharPredicate	gtktextiter.h	/^typedef gboolean (* GtkTextCharPredicate) (gunichar ch, gpointer user_data);$/;"	t
GtkTextChildAnchor	gtktextchild.h	/^typedef struct _GtkTextChildAnchor      GtkTextChildAnchor;$/;"	t	typeref:struct:_GtkTextChildAnchor
GtkTextChildAnchorClass	gtktextchild.h	/^typedef struct _GtkTextChildAnchorClass GtkTextChildAnchorClass;$/;"	t	typeref:struct:_GtkTextChildAnchorClass
GtkTextClass	gtktext.h	/^typedef struct _GtkTextClass      GtkTextClass;$/;"	t	typeref:struct:_GtkTextClass
GtkTextCursorDisplay	gtktextlayout.h	/^typedef struct _GtkTextCursorDisplay  GtkTextCursorDisplay;$/;"	t	typeref:struct:_GtkTextCursorDisplay
GtkTextDirection	gtkenums.h	/^} GtkTextDirection;$/;"	t	typeref:enum:__anon24
GtkTextFont	gtktext.h	/^typedef struct _GtkTextFont       GtkTextFont;$/;"	t	typeref:struct:_GtkTextFont
GtkTextFunction	gtkoldeditable.h	/^typedef void (*GtkTextFunction) (GtkOldEditable  *editable, guint32 time_);$/;"	t
GtkTextIter	gtktexttag.h	/^typedef struct _GtkTextIter GtkTextIter;$/;"	t	typeref:struct:_GtkTextIter
GtkTextLayout	gtktextlayout.h	/^typedef struct _GtkTextLayout         GtkTextLayout;$/;"	t	typeref:struct:_GtkTextLayout
GtkTextLayoutClass	gtktextlayout.h	/^typedef struct _GtkTextLayoutClass    GtkTextLayoutClass;$/;"	t	typeref:struct:_GtkTextLayoutClass
GtkTextLine	gtktextlayout.h	/^typedef struct _GtkTextLine     GtkTextLine;$/;"	t	typeref:struct:_GtkTextLine
GtkTextLineData	gtktextlayout.h	/^typedef struct _GtkTextLineData GtkTextLineData;$/;"	t	typeref:struct:_GtkTextLineData
GtkTextLineDisplay	gtktextlayout.h	/^typedef struct _GtkTextLineDisplay    GtkTextLineDisplay;$/;"	t	typeref:struct:_GtkTextLineDisplay
GtkTextLogAttrCache	gtktextbuffer.h	/^typedef struct _GtkTextLogAttrCache GtkTextLogAttrCache;$/;"	t	typeref:struct:_GtkTextLogAttrCache
GtkTextMark	gtktextmark.h	/^typedef struct _GtkTextMark      GtkTextMark;$/;"	t	typeref:struct:_GtkTextMark
GtkTextMarkClass	gtktextmark.h	/^typedef struct _GtkTextMarkClass GtkTextMarkClass;$/;"	t	typeref:struct:_GtkTextMarkClass
GtkTextPendingScroll	gtktextview.h	/^typedef struct _GtkTextPendingScroll GtkTextPendingScroll;$/;"	t	typeref:struct:_GtkTextPendingScroll
GtkTextSearchFlags	gtktextiter.h	/^} GtkTextSearchFlags;$/;"	t	typeref:enum:__anon110
GtkTextTag	gtktexttag.h	/^typedef struct _GtkTextTag GtkTextTag;$/;"	t	typeref:struct:_GtkTextTag
GtkTextTagClass	gtktexttag.h	/^typedef struct _GtkTextTagClass GtkTextTagClass;$/;"	t	typeref:struct:_GtkTextTagClass
GtkTextTagTable	gtktexttag.h	/^typedef struct _GtkTextTagTable GtkTextTagTable;$/;"	t	typeref:struct:_GtkTextTagTable
GtkTextTagTableClass	gtktexttagtable.h	/^typedef struct _GtkTextTagTableClass GtkTextTagTableClass;$/;"	t	typeref:struct:_GtkTextTagTableClass
GtkTextTagTableForeach	gtktexttagtable.h	/^typedef void (* GtkTextTagTableForeach) (GtkTextTag *tag, gpointer data);$/;"	t
GtkTextView	gtktextview.h	/^typedef struct _GtkTextView GtkTextView;$/;"	t	typeref:struct:_GtkTextView
GtkTextViewClass	gtktextview.h	/^typedef struct _GtkTextViewClass GtkTextViewClass;$/;"	t	typeref:struct:_GtkTextViewClass
GtkTextWindow	gtktextview.h	/^typedef struct _GtkTextWindow GtkTextWindow;$/;"	t	typeref:struct:_GtkTextWindow
GtkTextWindowType	gtktextview.h	/^} GtkTextWindowType;$/;"	t	typeref:enum:__anon4
GtkThemeEngine	gtkstyle.h	/^typedef struct _GtkThemeEngine GtkThemeEngine;$/;"	t	typeref:struct:_GtkThemeEngine
GtkTipsQuery	gtktipsquery.h	/^typedef	struct	_GtkTipsQuery		GtkTipsQuery;$/;"	t	typeref:struct:_GtkTipsQuery
GtkTipsQueryClass	gtktipsquery.h	/^typedef	struct	_GtkTipsQueryClass	GtkTipsQueryClass;$/;"	t	typeref:struct:_GtkTipsQueryClass
GtkToggleAction	gtktoggleaction.h	/^typedef struct _GtkToggleAction        GtkToggleAction;$/;"	t	typeref:struct:_GtkToggleAction
GtkToggleActionClass	gtktoggleaction.h	/^typedef struct _GtkToggleActionClass   GtkToggleActionClass;$/;"	t	typeref:struct:_GtkToggleActionClass
GtkToggleActionEntry	gtkactiongroup.h	/^typedef struct _GtkToggleActionEntry  GtkToggleActionEntry;$/;"	t	typeref:struct:_GtkToggleActionEntry
GtkToggleActionPrivate	gtktoggleaction.h	/^typedef struct _GtkToggleActionPrivate GtkToggleActionPrivate;$/;"	t	typeref:struct:_GtkToggleActionPrivate
GtkToggleButton	gtktogglebutton.h	/^typedef struct _GtkToggleButton       GtkToggleButton;$/;"	t	typeref:struct:_GtkToggleButton
GtkToggleButtonClass	gtktogglebutton.h	/^typedef struct _GtkToggleButtonClass  GtkToggleButtonClass;$/;"	t	typeref:struct:_GtkToggleButtonClass
GtkToggleToolButton	gtktoggletoolbutton.h	/^typedef struct _GtkToggleToolButton        GtkToggleToolButton;$/;"	t	typeref:struct:_GtkToggleToolButton
GtkToggleToolButtonClass	gtktoggletoolbutton.h	/^typedef struct _GtkToggleToolButtonClass   GtkToggleToolButtonClass;$/;"	t	typeref:struct:_GtkToggleToolButtonClass
GtkToggleToolButtonPrivate	gtktoggletoolbutton.h	/^typedef struct _GtkToggleToolButtonPrivate GtkToggleToolButtonPrivate;$/;"	t	typeref:struct:_GtkToggleToolButtonPrivate
GtkToolButton	gtktoolbutton.h	/^typedef struct _GtkToolButton        GtkToolButton;$/;"	t	typeref:struct:_GtkToolButton
GtkToolButtonClass	gtktoolbutton.h	/^typedef struct _GtkToolButtonClass   GtkToolButtonClass;$/;"	t	typeref:struct:_GtkToolButtonClass
GtkToolButtonPrivate	gtktoolbutton.h	/^typedef struct _GtkToolButtonPrivate GtkToolButtonPrivate;$/;"	t	typeref:struct:_GtkToolButtonPrivate
GtkToolItem	gtktoolitem.h	/^typedef struct _GtkToolItem        GtkToolItem;$/;"	t	typeref:struct:_GtkToolItem
GtkToolItemClass	gtktoolitem.h	/^typedef struct _GtkToolItemClass   GtkToolItemClass;$/;"	t	typeref:struct:_GtkToolItemClass
GtkToolItemGroup	gtktoolitemgroup.h	/^typedef struct _GtkToolItemGroup        GtkToolItemGroup;$/;"	t	typeref:struct:_GtkToolItemGroup
GtkToolItemGroupClass	gtktoolitemgroup.h	/^typedef struct _GtkToolItemGroupClass   GtkToolItemGroupClass;$/;"	t	typeref:struct:_GtkToolItemGroupClass
GtkToolItemGroupPrivate	gtktoolitemgroup.h	/^typedef struct _GtkToolItemGroupPrivate GtkToolItemGroupPrivate;$/;"	t	typeref:struct:_GtkToolItemGroupPrivate
GtkToolItemPrivate	gtktoolitem.h	/^typedef struct _GtkToolItemPrivate GtkToolItemPrivate;$/;"	t	typeref:struct:_GtkToolItemPrivate
GtkToolPalette	gtktoolpalette.h	/^typedef struct _GtkToolPalette           GtkToolPalette;$/;"	t	typeref:struct:_GtkToolPalette
GtkToolPaletteClass	gtktoolpalette.h	/^typedef struct _GtkToolPaletteClass      GtkToolPaletteClass;$/;"	t	typeref:struct:_GtkToolPaletteClass
GtkToolPaletteDragTargets	gtktoolpalette.h	/^GtkToolPaletteDragTargets;$/;"	t	typeref:enum:__anon85
GtkToolPalettePrivate	gtktoolpalette.h	/^typedef struct _GtkToolPalettePrivate    GtkToolPalettePrivate;$/;"	t	typeref:struct:_GtkToolPalettePrivate
GtkToolShell	gtktoolshell.h	/^typedef struct _GtkToolShell           GtkToolShell; \/* dummy typedef *\/$/;"	t	typeref:struct:_GtkToolShell
GtkToolShellIface	gtktoolshell.h	/^typedef struct _GtkToolShellIface      GtkToolShellIface;$/;"	t	typeref:struct:_GtkToolShellIface
GtkToolbar	gtktoolbar.h	/^typedef struct _GtkToolbar           GtkToolbar;$/;"	t	typeref:struct:_GtkToolbar
GtkToolbarChild	gtktoolbar.h	/^typedef struct _GtkToolbarChild	     GtkToolbarChild;$/;"	t	typeref:struct:_GtkToolbarChild
GtkToolbarChildType	gtktoolbar.h	/^} GtkToolbarChildType;$/;"	t	typeref:enum:__anon7
GtkToolbarClass	gtktoolbar.h	/^typedef struct _GtkToolbarClass      GtkToolbarClass;$/;"	t	typeref:struct:_GtkToolbarClass
GtkToolbarPrivate	gtktoolbar.h	/^typedef struct _GtkToolbarPrivate    GtkToolbarPrivate;$/;"	t	typeref:struct:_GtkToolbarPrivate
GtkToolbarSpaceStyle	gtktoolbar.h	/^} GtkToolbarSpaceStyle;$/;"	t	typeref:enum:__anon8
GtkToolbarStyle	gtkenums.h	/^} GtkToolbarStyle;$/;"	t	typeref:enum:__anon49
GtkTooltip	gtkwidget.h	/^typedef struct _GtkTooltip         GtkTooltip;$/;"	t	typeref:struct:_GtkTooltip
GtkTooltips	gtktooltips.h	/^typedef struct _GtkTooltips	 GtkTooltips;$/;"	t	typeref:struct:_GtkTooltips
GtkTooltipsClass	gtktooltips.h	/^typedef struct _GtkTooltipsClass GtkTooltipsClass;$/;"	t	typeref:struct:_GtkTooltipsClass
GtkTooltipsData	gtktooltips.h	/^typedef struct _GtkTooltipsData	 GtkTooltipsData;$/;"	t	typeref:struct:_GtkTooltipsData
GtkTranslateFunc	gtktypeutils.h	/^typedef gchar * (*GtkTranslateFunc) (const gchar  *path,$/;"	t
GtkTree	gtktree.h	/^typedef struct _GtkTree       GtkTree;$/;"	t	typeref:struct:_GtkTree
GtkTreeCellDataFunc	gtktreeviewcolumn.h	/^typedef void (* GtkTreeCellDataFunc) (GtkTreeViewColumn *tree_column,$/;"	t
GtkTreeClass	gtktree.h	/^typedef struct _GtkTreeClass  GtkTreeClass;$/;"	t	typeref:struct:_GtkTreeClass
GtkTreeDestroyCountFunc	gtktreeview.h	/^typedef void (* GtkTreeDestroyCountFunc)  (GtkTreeView             *tree_view,$/;"	t
GtkTreeDragDest	gtktreednd.h	/^typedef struct _GtkTreeDragDest      GtkTreeDragDest; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GtkTreeDragDest
GtkTreeDragDestIface	gtktreednd.h	/^typedef struct _GtkTreeDragDestIface GtkTreeDragDestIface;$/;"	t	typeref:struct:_GtkTreeDragDestIface
GtkTreeDragSource	gtktreednd.h	/^typedef struct _GtkTreeDragSource      GtkTreeDragSource; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GtkTreeDragSource
GtkTreeDragSourceIface	gtktreednd.h	/^typedef struct _GtkTreeDragSourceIface GtkTreeDragSourceIface;$/;"	t	typeref:struct:_GtkTreeDragSourceIface
GtkTreeItem	gtktreeitem.h	/^typedef struct _GtkTreeItem       GtkTreeItem;$/;"	t	typeref:struct:_GtkTreeItem
GtkTreeItemClass	gtktreeitem.h	/^typedef struct _GtkTreeItemClass  GtkTreeItemClass;$/;"	t	typeref:struct:_GtkTreeItemClass
GtkTreeIter	gtktreemodel.h	/^typedef struct _GtkTreeIter         GtkTreeIter;$/;"	t	typeref:struct:_GtkTreeIter
GtkTreeIterCompareFunc	gtktreesortable.h	/^typedef gint (* GtkTreeIterCompareFunc) (GtkTreeModel *model,$/;"	t
GtkTreeModel	gtktreemodel.h	/^typedef struct _GtkTreeModel        GtkTreeModel; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GtkTreeModel
GtkTreeModelFilter	gtktreemodelfilter.h	/^typedef struct _GtkTreeModelFilter          GtkTreeModelFilter;$/;"	t	typeref:struct:_GtkTreeModelFilter
GtkTreeModelFilterClass	gtktreemodelfilter.h	/^typedef struct _GtkTreeModelFilterClass     GtkTreeModelFilterClass;$/;"	t	typeref:struct:_GtkTreeModelFilterClass
GtkTreeModelFilterModifyFunc	gtktreemodelfilter.h	/^typedef void (* GtkTreeModelFilterModifyFunc) (GtkTreeModel *model,$/;"	t
GtkTreeModelFilterPrivate	gtktreemodelfilter.h	/^typedef struct _GtkTreeModelFilterPrivate   GtkTreeModelFilterPrivate;$/;"	t	typeref:struct:_GtkTreeModelFilterPrivate
GtkTreeModelFilterVisibleFunc	gtktreemodelfilter.h	/^typedef gboolean (* GtkTreeModelFilterVisibleFunc) (GtkTreeModel *model,$/;"	t
GtkTreeModelFlags	gtktreemodel.h	/^} GtkTreeModelFlags;$/;"	t	typeref:enum:__anon81
GtkTreeModelForeachFunc	gtktreemodel.h	/^typedef gboolean (* GtkTreeModelForeachFunc) (GtkTreeModel *model, GtkTreePath *path, GtkTreeIter *iter, gpointer data);$/;"	t
GtkTreeModelIface	gtktreemodel.h	/^typedef struct _GtkTreeModelIface   GtkTreeModelIface;$/;"	t	typeref:struct:_GtkTreeModelIface
GtkTreeModelSort	gtktreemodelsort.h	/^typedef struct _GtkTreeModelSort       GtkTreeModelSort;$/;"	t	typeref:struct:_GtkTreeModelSort
GtkTreeModelSortClass	gtktreemodelsort.h	/^typedef struct _GtkTreeModelSortClass  GtkTreeModelSortClass;$/;"	t	typeref:struct:_GtkTreeModelSortClass
GtkTreePath	gtktreemodel.h	/^typedef struct _GtkTreePath         GtkTreePath;$/;"	t	typeref:struct:_GtkTreePath
GtkTreeRowReference	gtktreemodel.h	/^typedef struct _GtkTreeRowReference GtkTreeRowReference;$/;"	t	typeref:struct:_GtkTreeRowReference
GtkTreeSelection	gtktreeview.h	/^typedef struct _GtkTreeSelection      GtkTreeSelection;$/;"	t	typeref:struct:_GtkTreeSelection
GtkTreeSelectionClass	gtktreeview.h	/^typedef struct _GtkTreeSelectionClass GtkTreeSelectionClass;$/;"	t	typeref:struct:_GtkTreeSelectionClass
GtkTreeSelectionForeachFunc	gtktreeselection.h	/^typedef void (* GtkTreeSelectionForeachFunc) (GtkTreeModel      *model,$/;"	t
GtkTreeSelectionFunc	gtktreeselection.h	/^typedef gboolean (* GtkTreeSelectionFunc)    (GtkTreeSelection  *selection,$/;"	t
GtkTreeSortable	gtktreesortable.h	/^typedef struct _GtkTreeSortable      GtkTreeSortable; \/* Dummy typedef *\/$/;"	t	typeref:struct:_GtkTreeSortable
GtkTreeSortableIface	gtktreesortable.h	/^typedef struct _GtkTreeSortableIface GtkTreeSortableIface;$/;"	t	typeref:struct:_GtkTreeSortableIface
GtkTreeStore	gtktreestore.h	/^typedef struct _GtkTreeStore       GtkTreeStore;$/;"	t	typeref:struct:_GtkTreeStore
GtkTreeStoreClass	gtktreestore.h	/^typedef struct _GtkTreeStoreClass  GtkTreeStoreClass;$/;"	t	typeref:struct:_GtkTreeStoreClass
GtkTreeView	gtktreeview.h	/^typedef struct _GtkTreeView           GtkTreeView;$/;"	t	typeref:struct:_GtkTreeView
GtkTreeViewClass	gtktreeview.h	/^typedef struct _GtkTreeViewClass      GtkTreeViewClass;$/;"	t	typeref:struct:_GtkTreeViewClass
GtkTreeViewColumn	gtktreeviewcolumn.h	/^typedef struct _GtkTreeViewColumn      GtkTreeViewColumn;$/;"	t	typeref:struct:_GtkTreeViewColumn
GtkTreeViewColumnClass	gtktreeviewcolumn.h	/^typedef struct _GtkTreeViewColumnClass GtkTreeViewColumnClass;$/;"	t	typeref:struct:_GtkTreeViewColumnClass
GtkTreeViewColumnDropFunc	gtktreeview.h	/^typedef gboolean (* GtkTreeViewColumnDropFunc) (GtkTreeView             *tree_view,$/;"	t
GtkTreeViewColumnSizing	gtktreeviewcolumn.h	/^} GtkTreeViewColumnSizing;$/;"	t	typeref:enum:__anon3
GtkTreeViewDropPosition	gtktreeview.h	/^} GtkTreeViewDropPosition;$/;"	t	typeref:enum:__anon115
GtkTreeViewGridLines	gtkenums.h	/^} GtkTreeViewGridLines;$/;"	t	typeref:enum:__anon66
GtkTreeViewMappingFunc	gtktreeview.h	/^typedef void     (* GtkTreeViewMappingFunc)    (GtkTreeView             *tree_view,$/;"	t
GtkTreeViewMode	gtktree.h	/^} GtkTreeViewMode;$/;"	t	typeref:enum:__anon94
GtkTreeViewPrivate	gtktreeview.h	/^typedef struct _GtkTreeViewPrivate    GtkTreeViewPrivate;$/;"	t	typeref:struct:_GtkTreeViewPrivate
GtkTreeViewRowSeparatorFunc	gtktreeview.h	/^typedef gboolean (*GtkTreeViewRowSeparatorFunc) (GtkTreeModel      *model,$/;"	t
GtkTreeViewSearchEqualFunc	gtktreeview.h	/^typedef gboolean (*GtkTreeViewSearchEqualFunc) (GtkTreeModel            *model,$/;"	t
GtkTreeViewSearchPositionFunc	gtktreeview.h	/^typedef void     (*GtkTreeViewSearchPositionFunc) (GtkTreeView  *tree_view,$/;"	t
GtkType	gtktypeutils.h	/^typedef GType                   GtkType;$/;"	t
GtkTypeClass	gtktypeutils.h	/^typedef GTypeClass              GtkTypeClass;$/;"	t
GtkTypeInfo	gtktypeutils.h	/^typedef struct _GtkTypeInfo GtkTypeInfo;$/;"	t	typeref:struct:_GtkTypeInfo
GtkTypeObject	gtktypeutils.h	/^typedef GTypeInstance           GtkTypeObject;$/;"	t
GtkUIManager	gtkuimanager.h	/^typedef struct _GtkUIManager      GtkUIManager;$/;"	t	typeref:struct:_GtkUIManager
GtkUIManagerClass	gtkuimanager.h	/^typedef struct _GtkUIManagerClass GtkUIManagerClass;$/;"	t	typeref:struct:_GtkUIManagerClass
GtkUIManagerItemType	gtkuimanager.h	/^} GtkUIManagerItemType;$/;"	t	typeref:enum:__anon114
GtkUIManagerPrivate	gtkuimanager.h	/^typedef struct _GtkUIManagerPrivate GtkUIManagerPrivate;$/;"	t	typeref:struct:_GtkUIManagerPrivate
GtkUnit	gtkenums.h	/^} GtkUnit;$/;"	t	typeref:enum:__anon65
GtkUpdateType	gtkenums.h	/^} GtkUpdateType;$/;"	t	typeref:enum:__anon50
GtkVBox	gtkvbox.h	/^typedef struct _GtkVBox	      GtkVBox;$/;"	t	typeref:struct:_GtkVBox
GtkVBoxClass	gtkvbox.h	/^typedef struct _GtkVBoxClass  GtkVBoxClass;$/;"	t	typeref:struct:_GtkVBoxClass
GtkVButtonBox	gtkvbbox.h	/^typedef struct _GtkVButtonBox       GtkVButtonBox;$/;"	t	typeref:struct:_GtkVButtonBox
GtkVButtonBoxClass	gtkvbbox.h	/^typedef struct _GtkVButtonBoxClass  GtkVButtonBoxClass;$/;"	t	typeref:struct:_GtkVButtonBoxClass
GtkVPaned	gtkvpaned.h	/^typedef struct _GtkVPaned      GtkVPaned;$/;"	t	typeref:struct:_GtkVPaned
GtkVPanedClass	gtkvpaned.h	/^typedef struct _GtkVPanedClass GtkVPanedClass;$/;"	t	typeref:struct:_GtkVPanedClass
GtkVRuler	gtkvruler.h	/^typedef struct _GtkVRuler       GtkVRuler;$/;"	t	typeref:struct:_GtkVRuler
GtkVRulerClass	gtkvruler.h	/^typedef struct _GtkVRulerClass  GtkVRulerClass;$/;"	t	typeref:struct:_GtkVRulerClass
GtkVScale	gtkvscale.h	/^typedef struct _GtkVScale       GtkVScale;$/;"	t	typeref:struct:_GtkVScale
GtkVScaleClass	gtkvscale.h	/^typedef struct _GtkVScaleClass  GtkVScaleClass;$/;"	t	typeref:struct:_GtkVScaleClass
GtkVScrollbar	gtkvscrollbar.h	/^typedef struct _GtkVScrollbar       GtkVScrollbar;$/;"	t	typeref:struct:_GtkVScrollbar
GtkVScrollbarClass	gtkvscrollbar.h	/^typedef struct _GtkVScrollbarClass  GtkVScrollbarClass;$/;"	t	typeref:struct:_GtkVScrollbarClass
GtkVSeparator	gtkvseparator.h	/^typedef struct _GtkVSeparator       GtkVSeparator;$/;"	t	typeref:struct:_GtkVSeparator
GtkVSeparatorClass	gtkvseparator.h	/^typedef struct _GtkVSeparatorClass  GtkVSeparatorClass;$/;"	t	typeref:struct:_GtkVSeparatorClass
GtkViewport	gtkviewport.h	/^typedef struct _GtkViewport       GtkViewport;$/;"	t	typeref:struct:_GtkViewport
GtkViewportClass	gtkviewport.h	/^typedef struct _GtkViewportClass  GtkViewportClass;$/;"	t	typeref:struct:_GtkViewportClass
GtkVisibility	gtkenums.h	/^} GtkVisibility;$/;"	t	typeref:enum:__anon51
GtkVolumeButton	gtkvolumebutton.h	/^typedef struct _GtkVolumeButton       GtkVolumeButton;$/;"	t	typeref:struct:_GtkVolumeButton
GtkVolumeButtonClass	gtkvolumebutton.h	/^typedef struct _GtkVolumeButtonClass  GtkVolumeButtonClass;$/;"	t	typeref:struct:_GtkVolumeButtonClass
GtkWidget	gtkstyle.h	/^typedef struct _GtkWidget      GtkWidget;$/;"	t	typeref:struct:_GtkWidget
GtkWidgetAuxInfo	gtkwidget.h	/^typedef struct _GtkWidgetAuxInfo   GtkWidgetAuxInfo;$/;"	t	typeref:struct:_GtkWidgetAuxInfo
GtkWidgetClass	gtkwidget.h	/^typedef struct _GtkWidgetClass	   GtkWidgetClass;$/;"	t	typeref:struct:_GtkWidgetClass
GtkWidgetFlags	gtkwidget.h	/^} GtkWidgetFlags;$/;"	t	typeref:enum:__anon77
GtkWidgetHelpType	gtkwidget.h	/^} GtkWidgetHelpType;$/;"	t	typeref:enum:__anon78
GtkWidgetShapeInfo	gtkwidget.h	/^typedef struct _GtkWidgetShapeInfo GtkWidgetShapeInfo;$/;"	t	typeref:struct:_GtkWidgetShapeInfo
GtkWindow	gtkwidget.h	/^typedef struct _GtkWindow          GtkWindow;$/;"	t	typeref:struct:_GtkWindow
GtkWindowClass	gtkwindow.h	/^typedef struct _GtkWindowClass        GtkWindowClass;$/;"	t	typeref:struct:_GtkWindowClass
GtkWindowGeometryInfo	gtkwindow.h	/^typedef struct _GtkWindowGeometryInfo GtkWindowGeometryInfo;$/;"	t	typeref:struct:_GtkWindowGeometryInfo
GtkWindowGroup	gtkwindow.h	/^typedef struct _GtkWindowGroup        GtkWindowGroup;$/;"	t	typeref:struct:_GtkWindowGroup
GtkWindowGroupClass	gtkwindow.h	/^typedef struct _GtkWindowGroupClass   GtkWindowGroupClass;$/;"	t	typeref:struct:_GtkWindowGroupClass
GtkWindowKeysForeachFunc	gtkwindow.h	/^typedef void (*GtkWindowKeysForeachFunc) (GtkWindow      *window,$/;"	t
GtkWindowPosition	gtkenums.h	/^} GtkWindowPosition;$/;"	t	typeref:enum:__anon52
GtkWindowType	gtkenums.h	/^} GtkWindowType;$/;"	t	typeref:enum:__anon53
GtkWrapMode	gtkenums.h	/^} GtkWrapMode;$/;"	t	typeref:enum:__anon54
PRIVATE_GTK_ALLOC_NEEDED	gtkprivate.h	/^  PRIVATE_GTK_ALLOC_NEEDED      = 1 <<  12,  \/* If we we should allocate even if the allocation is the same *\/$/;"	e	enum:__anon118
PRIVATE_GTK_ANCHORED	gtkprivate.h	/^  PRIVATE_GTK_ANCHORED          = 1 <<  9,   \/* If widget has a GtkWindow ancestor *\/$/;"	e	enum:__anon118
PRIVATE_GTK_CHILD_VISIBLE	gtkprivate.h	/^  PRIVATE_GTK_CHILD_VISIBLE     = 1 <<  10,  \/* If widget should be mapped when parent is mapped *\/$/;"	e	enum:__anon118
PRIVATE_GTK_DIRECTION_LTR	gtkprivate.h	/^  PRIVATE_GTK_DIRECTION_LTR     = 1 <<  8,   \/* If the reading direction is DIR_LTR *\/$/;"	e	enum:__anon118
PRIVATE_GTK_DIRECTION_SET	gtkprivate.h	/^  PRIVATE_GTK_DIRECTION_SET     = 1 <<  7,   \/* If the reading direction is not DIR_NONE *\/$/;"	e	enum:__anon118
PRIVATE_GTK_HAS_POINTER	gtkprivate.h	/^  PRIVATE_GTK_HAS_POINTER	= 1 <<  3,   \/* If the pointer is above a window belonging to the widget *\/$/;"	e	enum:__anon118
PRIVATE_GTK_HAS_SHAPE_MASK	gtkprivate.h	/^  PRIVATE_GTK_HAS_SHAPE_MASK	= 1 <<  5,$/;"	e	enum:__anon118
PRIVATE_GTK_IN_REPARENT	gtkprivate.h	/^  PRIVATE_GTK_IN_REPARENT       = 1 <<  6,$/;"	e	enum:__anon118
PRIVATE_GTK_REDRAW_ON_ALLOC	gtkprivate.h	/^  PRIVATE_GTK_REDRAW_ON_ALLOC   = 1 <<  11,  \/* If we should queue a draw on the entire widget when it is reallocated *\/$/;"	e	enum:__anon118
PRIVATE_GTK_REQUEST_NEEDED	gtkprivate.h	/^  PRIVATE_GTK_REQUEST_NEEDED    = 1 <<  13   \/* Whether we need to call gtk_widget_size_request *\/$/;"	e	enum:__anon118
PRIVATE_GTK_RESIZE_PENDING	gtkprivate.h	/^  PRIVATE_GTK_RESIZE_PENDING	= 1 <<  2,$/;"	e	enum:__anon118
PRIVATE_GTK_SHADOWED	gtkprivate.h	/^  PRIVATE_GTK_SHADOWED		= 1 <<  4,   \/* If there is a grab in effect shadowing the widget *\/$/;"	e	enum:__anon118
PRIVATE_GTK_USER_STYLE	gtkprivate.h	/^  PRIVATE_GTK_USER_STYLE	= 1 <<  0,$/;"	e	enum:__anon118
UBUNTU_IS_MENU_MODULE_PROXY	ubuntumenuproxymodule.h	37;"	d
UBUNTU_IS_MENU_PROXY	ubuntumenuproxy.h	37;"	d
UBUNTU_IS_MENU_PROXY_CLASS	ubuntumenuproxy.h	38;"	d
UBUNTU_IS_MENU_PROXY_MODULE_CLASS	ubuntumenuproxymodule.h	38;"	d
UBUNTU_MENU_PROXY	ubuntumenuproxy.h	35;"	d
UBUNTU_MENU_PROXY_CLASS	ubuntumenuproxy.h	36;"	d
UBUNTU_MENU_PROXY_GET_CLASS	ubuntumenuproxy.h	39;"	d
UBUNTU_MENU_PROXY_MODULE	ubuntumenuproxymodule.h	35;"	d
UBUNTU_MENU_PROXY_MODULE_CLASS	ubuntumenuproxymodule.h	36;"	d
UBUNTU_MENU_PROXY_MODULE_GET_CLASS	ubuntumenuproxymodule.h	39;"	d
UBUNTU_TYPE_MENU_PROXY	ubuntumenuproxy.h	34;"	d
UBUNTU_TYPE_MENU_PROXY_MODULE	ubuntumenuproxymodule.h	34;"	d
UbuntuMenuProxy	ubuntumenuproxy.h	/^typedef struct _UbuntuMenuProxy      UbuntuMenuProxy;$/;"	t	typeref:struct:_UbuntuMenuProxy
UbuntuMenuProxyClass	ubuntumenuproxy.h	/^typedef struct _UbuntuMenuProxyClass UbuntuMenuProxyClass;$/;"	t	typeref:struct:_UbuntuMenuProxyClass
UbuntuMenuProxyModule	ubuntumenuproxymodule.h	/^typedef struct _UbuntuMenuProxyModule        UbuntuMenuProxyModule;$/;"	t	typeref:struct:_UbuntuMenuProxyModule
UbuntuMenuProxyModuleClass	ubuntumenuproxymodule.h	/^typedef struct _UbuntuMenuProxyModuleClass   UbuntuMenuProxyModuleClass;$/;"	t	typeref:struct:_UbuntuMenuProxyModuleClass
UbuntuMenuProxyModulePrivate	ubuntumenuproxymodule.h	/^typedef struct _UbuntuMenuProxyModulePrivate UbuntuMenuProxyModulePrivate;$/;"	t	typeref:struct:_UbuntuMenuProxyModulePrivate
_GtkAboutDialog	gtkaboutdialog.h	/^struct _GtkAboutDialog $/;"	s
_GtkAboutDialogClass	gtkaboutdialog.h	/^struct _GtkAboutDialogClass $/;"	s
_GtkAccelGroup	gtkaccelgroup.h	/^struct _GtkAccelGroup$/;"	s
_GtkAccelGroupClass	gtkaccelgroup.h	/^struct _GtkAccelGroupClass$/;"	s
_GtkAccelGroupEntry	gtkaccelgroup.h	/^struct _GtkAccelGroupEntry$/;"	s
_GtkAccelKey	gtkaccelgroup.h	/^struct _GtkAccelKey$/;"	s
_GtkAccelLabel	gtkaccellabel.h	/^struct _GtkAccelLabel$/;"	s
_GtkAccelLabelClass	gtkaccellabel.h	/^struct _GtkAccelLabelClass$/;"	s
_GtkAccessible	gtkaccessible.h	/^struct _GtkAccessible$/;"	s
_GtkAccessibleClass	gtkaccessible.h	/^struct _GtkAccessibleClass$/;"	s
_GtkAction	gtkaction.h	/^struct _GtkAction$/;"	s
_GtkActionClass	gtkaction.h	/^struct _GtkActionClass$/;"	s
_GtkActionEntry	gtkactiongroup.h	/^struct _GtkActionEntry $/;"	s
_GtkActionGroup	gtkactiongroup.h	/^struct _GtkActionGroup$/;"	s
_GtkActionGroupClass	gtkactiongroup.h	/^struct _GtkActionGroupClass$/;"	s
_GtkActivatableIface	gtkactivatable.h	/^struct _GtkActivatableIface$/;"	s
_GtkAdjustment	gtkadjustment.h	/^struct _GtkAdjustment$/;"	s
_GtkAdjustmentClass	gtkadjustment.h	/^struct _GtkAdjustmentClass$/;"	s
_GtkAlignment	gtkalignment.h	/^struct _GtkAlignment$/;"	s
_GtkAlignmentClass	gtkalignment.h	/^struct _GtkAlignmentClass$/;"	s
_GtkArg	gtktypeutils.h	/^struct _GtkArg$/;"	s
_GtkArrow	gtkarrow.h	/^struct _GtkArrow$/;"	s
_GtkArrowClass	gtkarrow.h	/^struct _GtkArrowClass$/;"	s
_GtkAspectFrame	gtkaspectframe.h	/^struct _GtkAspectFrame$/;"	s
_GtkAspectFrameClass	gtkaspectframe.h	/^struct _GtkAspectFrameClass$/;"	s
_GtkAssistant	gtkassistant.h	/^struct _GtkAssistant$/;"	s
_GtkAssistantClass	gtkassistant.h	/^struct _GtkAssistantClass$/;"	s
_GtkBin	gtkbin.h	/^struct _GtkBin$/;"	s
_GtkBinClass	gtkbin.h	/^struct _GtkBinClass$/;"	s
_GtkBindingArg	gtkbindings.h	/^struct _GtkBindingArg$/;"	s
_GtkBindingEntry	gtkbindings.h	/^struct _GtkBindingEntry$/;"	s
_GtkBindingSet	gtkbindings.h	/^struct _GtkBindingSet$/;"	s
_GtkBindingSignal	gtkbindings.h	/^struct _GtkBindingSignal$/;"	s
_GtkBorder	gtkstyle.h	/^struct _GtkBorder$/;"	s
_GtkBox	gtkbox.h	/^struct _GtkBox$/;"	s
_GtkBoxChild	gtkbox.h	/^struct _GtkBoxChild$/;"	s
_GtkBoxClass	gtkbox.h	/^struct _GtkBoxClass$/;"	s
_GtkBuildableIface	gtkbuildable.h	/^struct _GtkBuildableIface$/;"	s
_GtkBuilder	gtkbuilder.h	/^struct _GtkBuilder$/;"	s
_GtkBuilderClass	gtkbuilder.h	/^struct _GtkBuilderClass$/;"	s
_GtkButton	gtkbutton.h	/^struct _GtkButton$/;"	s
_GtkButtonBox	gtkbbox.h	/^struct _GtkButtonBox$/;"	s
_GtkButtonBoxClass	gtkbbox.h	/^struct _GtkButtonBoxClass$/;"	s
_GtkButtonClass	gtkbutton.h	/^struct _GtkButtonClass$/;"	s
_GtkCList	gtkclist.h	/^struct _GtkCList$/;"	s
_GtkCListCellInfo	gtkclist.h	/^struct _GtkCListCellInfo$/;"	s
_GtkCListClass	gtkclist.h	/^struct _GtkCListClass$/;"	s
_GtkCListColumn	gtkclist.h	/^struct _GtkCListColumn$/;"	s
_GtkCListDestInfo	gtkclist.h	/^struct _GtkCListDestInfo$/;"	s
_GtkCListRow	gtkclist.h	/^struct _GtkCListRow$/;"	s
_GtkCTree	gtkctree.h	/^struct _GtkCTree$/;"	s
_GtkCTreeClass	gtkctree.h	/^struct _GtkCTreeClass$/;"	s
_GtkCTreeNode	gtkctree.h	/^struct _GtkCTreeNode {$/;"	s
_GtkCTreeRow	gtkctree.h	/^struct _GtkCTreeRow$/;"	s
_GtkCalendar	gtkcalendar.h	/^struct _GtkCalendar$/;"	s
_GtkCalendarClass	gtkcalendar.h	/^struct _GtkCalendarClass$/;"	s
_GtkCell	gtkclist.h	/^struct _GtkCell$/;"	s
_GtkCellEditableIface	gtkcelleditable.h	/^struct _GtkCellEditableIface$/;"	s
_GtkCellLayoutIface	gtkcelllayout.h	/^struct _GtkCellLayoutIface$/;"	s
_GtkCellPixText	gtkclist.h	/^struct _GtkCellPixText$/;"	s
_GtkCellPixmap	gtkclist.h	/^struct _GtkCellPixmap$/;"	s
_GtkCellRenderer	gtkcellrenderer.h	/^struct _GtkCellRenderer$/;"	s
_GtkCellRendererAccel	gtkcellrendereraccel.h	/^struct _GtkCellRendererAccel$/;"	s
_GtkCellRendererAccelClass	gtkcellrendereraccel.h	/^struct _GtkCellRendererAccelClass$/;"	s
_GtkCellRendererClass	gtkcellrenderer.h	/^struct _GtkCellRendererClass$/;"	s
_GtkCellRendererCombo	gtkcellrenderercombo.h	/^struct _GtkCellRendererCombo$/;"	s
_GtkCellRendererComboClass	gtkcellrenderercombo.h	/^struct _GtkCellRendererComboClass$/;"	s
_GtkCellRendererPixbuf	gtkcellrendererpixbuf.h	/^struct _GtkCellRendererPixbuf$/;"	s
_GtkCellRendererPixbufClass	gtkcellrendererpixbuf.h	/^struct _GtkCellRendererPixbufClass$/;"	s
_GtkCellRendererProgress	gtkcellrendererprogress.h	/^struct _GtkCellRendererProgress$/;"	s
_GtkCellRendererProgressClass	gtkcellrendererprogress.h	/^struct _GtkCellRendererProgressClass$/;"	s
_GtkCellRendererSpin	gtkcellrendererspin.h	/^struct _GtkCellRendererSpin$/;"	s
_GtkCellRendererSpinClass	gtkcellrendererspin.h	/^struct _GtkCellRendererSpinClass$/;"	s
_GtkCellRendererSpinner	gtkcellrendererspinner.h	/^struct _GtkCellRendererSpinner$/;"	s
_GtkCellRendererSpinnerClass	gtkcellrendererspinner.h	/^struct _GtkCellRendererSpinnerClass$/;"	s
_GtkCellRendererText	gtkcellrenderertext.h	/^struct _GtkCellRendererText$/;"	s
_GtkCellRendererTextClass	gtkcellrenderertext.h	/^struct _GtkCellRendererTextClass$/;"	s
_GtkCellRendererToggle	gtkcellrenderertoggle.h	/^struct _GtkCellRendererToggle$/;"	s
_GtkCellRendererToggleClass	gtkcellrenderertoggle.h	/^struct _GtkCellRendererToggleClass$/;"	s
_GtkCellText	gtkclist.h	/^struct _GtkCellText$/;"	s
_GtkCellView	gtkcellview.h	/^struct _GtkCellView$/;"	s
_GtkCellViewClass	gtkcellview.h	/^struct _GtkCellViewClass$/;"	s
_GtkCellWidget	gtkclist.h	/^struct _GtkCellWidget$/;"	s
_GtkCheckButton	gtkcheckbutton.h	/^struct _GtkCheckButton$/;"	s
_GtkCheckButtonClass	gtkcheckbutton.h	/^struct _GtkCheckButtonClass$/;"	s
_GtkCheckMenuItem	gtkcheckmenuitem.h	/^struct _GtkCheckMenuItem$/;"	s
_GtkCheckMenuItemClass	gtkcheckmenuitem.h	/^struct _GtkCheckMenuItemClass$/;"	s
_GtkColorButton	gtkcolorbutton.h	/^struct _GtkColorButton {$/;"	s
_GtkColorButtonClass	gtkcolorbutton.h	/^struct _GtkColorButtonClass {$/;"	s
_GtkColorSelection	gtkcolorsel.h	/^struct _GtkColorSelection$/;"	s
_GtkColorSelectionClass	gtkcolorsel.h	/^struct _GtkColorSelectionClass$/;"	s
_GtkColorSelectionDialog	gtkcolorseldialog.h	/^struct _GtkColorSelectionDialog$/;"	s
_GtkColorSelectionDialogClass	gtkcolorseldialog.h	/^struct _GtkColorSelectionDialogClass$/;"	s
_GtkCombo	gtkcombo.h	/^struct _GtkCombo {$/;"	s
_GtkComboBox	gtkcombobox.h	/^struct _GtkComboBox$/;"	s
_GtkComboBoxClass	gtkcombobox.h	/^struct _GtkComboBoxClass$/;"	s
_GtkComboBoxEntry	gtkcomboboxentry.h	/^struct _GtkComboBoxEntry$/;"	s
_GtkComboBoxEntryClass	gtkcomboboxentry.h	/^struct _GtkComboBoxEntryClass$/;"	s
_GtkComboBoxText	gtkcomboboxtext.h	/^struct _GtkComboBoxText$/;"	s
_GtkComboBoxTextClass	gtkcomboboxtext.h	/^struct _GtkComboBoxTextClass$/;"	s
_GtkComboClass	gtkcombo.h	/^struct _GtkComboClass {$/;"	s
_GtkContainer	gtkcontainer.h	/^struct _GtkContainer$/;"	s
_GtkContainerClass	gtkcontainer.h	/^struct _GtkContainerClass$/;"	s
_GtkCurve	gtkcurve.h	/^struct _GtkCurve$/;"	s
_GtkCurveClass	gtkcurve.h	/^struct _GtkCurveClass$/;"	s
_GtkDialog	gtkdialog.h	/^struct _GtkDialog$/;"	s
_GtkDialogClass	gtkdialog.h	/^struct _GtkDialogClass$/;"	s
_GtkDitherInfo	gtkpreview.h	/^union _GtkDitherInfo$/;"	u
_GtkDrawingArea	gtkdrawingarea.h	/^struct _GtkDrawingArea$/;"	s
_GtkDrawingAreaClass	gtkdrawingarea.h	/^struct _GtkDrawingAreaClass$/;"	s
_GtkEditableClass	gtkeditable.h	/^struct _GtkEditableClass$/;"	s
_GtkEntry	gtkentry.h	/^struct _GtkEntry$/;"	s
_GtkEntryBuffer	gtkentrybuffer.h	/^struct _GtkEntryBuffer$/;"	s
_GtkEntryBufferClass	gtkentrybuffer.h	/^struct _GtkEntryBufferClass$/;"	s
_GtkEntryClass	gtkentry.h	/^struct _GtkEntryClass$/;"	s
_GtkEntryCompletion	gtkentrycompletion.h	/^struct _GtkEntryCompletion$/;"	s
_GtkEntryCompletionClass	gtkentrycompletion.h	/^struct _GtkEntryCompletionClass$/;"	s
_GtkEventBox	gtkeventbox.h	/^struct _GtkEventBox$/;"	s
_GtkEventBoxClass	gtkeventbox.h	/^struct _GtkEventBoxClass$/;"	s
_GtkExpander	gtkexpander.h	/^struct _GtkExpander$/;"	s
_GtkExpanderClass	gtkexpander.h	/^struct _GtkExpanderClass$/;"	s
_GtkFileChooserButton	gtkfilechooserbutton.h	/^struct _GtkFileChooserButton$/;"	s
_GtkFileChooserButtonClass	gtkfilechooserbutton.h	/^struct _GtkFileChooserButtonClass$/;"	s
_GtkFileChooserDialog	gtkfilechooserdialog.h	/^struct _GtkFileChooserDialog$/;"	s
_GtkFileChooserDialogClass	gtkfilechooserdialog.h	/^struct _GtkFileChooserDialogClass$/;"	s
_GtkFileChooserWidget	gtkfilechooserwidget.h	/^struct _GtkFileChooserWidget$/;"	s
_GtkFileChooserWidgetClass	gtkfilechooserwidget.h	/^struct _GtkFileChooserWidgetClass$/;"	s
_GtkFileFilterInfo	gtkfilefilter.h	/^struct _GtkFileFilterInfo$/;"	s
_GtkFileSelection	gtkfilesel.h	/^struct _GtkFileSelection$/;"	s
_GtkFileSelectionClass	gtkfilesel.h	/^struct _GtkFileSelectionClass$/;"	s
_GtkFixed	gtkfixed.h	/^struct _GtkFixed$/;"	s
_GtkFixedChild	gtkfixed.h	/^struct _GtkFixedChild$/;"	s
_GtkFixedClass	gtkfixed.h	/^struct _GtkFixedClass$/;"	s
_GtkFontButton	gtkfontbutton.h	/^struct _GtkFontButton {$/;"	s
_GtkFontButtonClass	gtkfontbutton.h	/^struct _GtkFontButtonClass {$/;"	s
_GtkFontSelection	gtkfontsel.h	/^struct _GtkFontSelection$/;"	s
_GtkFontSelectionClass	gtkfontsel.h	/^struct _GtkFontSelectionClass$/;"	s
_GtkFontSelectionDialog	gtkfontsel.h	/^struct _GtkFontSelectionDialog$/;"	s
_GtkFontSelectionDialogClass	gtkfontsel.h	/^struct _GtkFontSelectionDialogClass$/;"	s
_GtkFrame	gtkframe.h	/^struct _GtkFrame$/;"	s
_GtkFrameClass	gtkframe.h	/^struct _GtkFrameClass$/;"	s
_GtkGammaCurve	gtkgamma.h	/^struct _GtkGammaCurve$/;"	s
_GtkGammaCurveClass	gtkgamma.h	/^struct _GtkGammaCurveClass$/;"	s
_GtkHBox	gtkhbox.h	/^struct _GtkHBox$/;"	s
_GtkHBoxClass	gtkhbox.h	/^struct _GtkHBoxClass$/;"	s
_GtkHButtonBox	gtkhbbox.h	/^struct _GtkHButtonBox$/;"	s
_GtkHButtonBoxClass	gtkhbbox.h	/^struct _GtkHButtonBoxClass$/;"	s
_GtkHPaned	gtkhpaned.h	/^struct _GtkHPaned$/;"	s
_GtkHPanedClass	gtkhpaned.h	/^struct _GtkHPanedClass$/;"	s
_GtkHRuler	gtkhruler.h	/^struct _GtkHRuler$/;"	s
_GtkHRulerClass	gtkhruler.h	/^struct _GtkHRulerClass$/;"	s
_GtkHSV	gtkhsv.h	/^struct _GtkHSV$/;"	s
_GtkHSVClass	gtkhsv.h	/^struct _GtkHSVClass$/;"	s
_GtkHScale	gtkhscale.h	/^struct _GtkHScale$/;"	s
_GtkHScaleClass	gtkhscale.h	/^struct _GtkHScaleClass$/;"	s
_GtkHScrollbar	gtkhscrollbar.h	/^struct _GtkHScrollbar$/;"	s
_GtkHScrollbarClass	gtkhscrollbar.h	/^struct _GtkHScrollbarClass$/;"	s
_GtkHSeparator	gtkhseparator.h	/^struct _GtkHSeparator$/;"	s
_GtkHSeparatorClass	gtkhseparator.h	/^struct _GtkHSeparatorClass$/;"	s
_GtkHandleBox	gtkhandlebox.h	/^struct _GtkHandleBox$/;"	s
_GtkHandleBoxClass	gtkhandlebox.h	/^struct _GtkHandleBoxClass$/;"	s
_GtkIMContext	gtkimcontext.h	/^struct _GtkIMContext$/;"	s
_GtkIMContextClass	gtkimcontext.h	/^struct _GtkIMContextClass$/;"	s
_GtkIMContextInfo	gtkimmodule.h	/^struct _GtkIMContextInfo$/;"	s
_GtkIMContextSimple	gtkimcontextsimple.h	/^struct _GtkIMContextSimple$/;"	s
_GtkIMContextSimpleClass	gtkimcontextsimple.h	/^struct _GtkIMContextSimpleClass$/;"	s
_GtkIMMulticontext	gtkimmulticontext.h	/^struct _GtkIMMulticontext$/;"	s
_GtkIMMulticontextClass	gtkimmulticontext.h	/^struct _GtkIMMulticontextClass$/;"	s
_GtkIconFactory	gtkiconfactory.h	/^struct _GtkIconFactory$/;"	s
_GtkIconFactoryClass	gtkiconfactory.h	/^struct _GtkIconFactoryClass$/;"	s
_GtkIconTheme	gtkicontheme.h	/^struct _GtkIconTheme$/;"	s
_GtkIconThemeClass	gtkicontheme.h	/^struct _GtkIconThemeClass$/;"	s
_GtkIconView	gtkiconview.h	/^struct _GtkIconView$/;"	s
_GtkIconViewClass	gtkiconview.h	/^struct _GtkIconViewClass$/;"	s
_GtkImage	gtkimage.h	/^struct _GtkImage$/;"	s
_GtkImageAnimationData	gtkimage.h	/^struct _GtkImageAnimationData$/;"	s
_GtkImageClass	gtkimage.h	/^struct _GtkImageClass$/;"	s
_GtkImageGIconData	gtkimage.h	/^struct _GtkImageGIconData$/;"	s
_GtkImageIconNameData	gtkimage.h	/^struct _GtkImageIconNameData$/;"	s
_GtkImageIconSetData	gtkimage.h	/^struct _GtkImageIconSetData$/;"	s
_GtkImageImageData	gtkimage.h	/^struct _GtkImageImageData$/;"	s
_GtkImageMenuItem	gtkimagemenuitem.h	/^struct _GtkImageMenuItem$/;"	s
_GtkImageMenuItemClass	gtkimagemenuitem.h	/^struct _GtkImageMenuItemClass$/;"	s
_GtkImagePixbufData	gtkimage.h	/^struct _GtkImagePixbufData$/;"	s
_GtkImagePixmapData	gtkimage.h	/^struct _GtkImagePixmapData$/;"	s
_GtkImageStockData	gtkimage.h	/^struct _GtkImageStockData$/;"	s
_GtkInfoBar	gtkinfobar.h	/^struct _GtkInfoBar$/;"	s
_GtkInfoBarClass	gtkinfobar.h	/^struct _GtkInfoBarClass$/;"	s
_GtkInputDialog	gtkinputdialog.h	/^struct _GtkInputDialog$/;"	s
_GtkInputDialogClass	gtkinputdialog.h	/^struct _GtkInputDialogClass$/;"	s
_GtkInvisible	gtkinvisible.h	/^struct _GtkInvisible$/;"	s
_GtkInvisibleClass	gtkinvisible.h	/^struct _GtkInvisibleClass$/;"	s
_GtkItem	gtkitem.h	/^struct _GtkItem$/;"	s
_GtkItemClass	gtkitem.h	/^struct _GtkItemClass$/;"	s
_GtkItemFactory	gtkitemfactory.h	/^struct _GtkItemFactory$/;"	s
_GtkItemFactoryClass	gtkitemfactory.h	/^struct _GtkItemFactoryClass$/;"	s
_GtkItemFactoryEntry	gtkitemfactory.h	/^struct _GtkItemFactoryEntry$/;"	s
_GtkItemFactoryItem	gtkitemfactory.h	/^struct _GtkItemFactoryItem$/;"	s
_GtkLabel	gtklabel.h	/^struct _GtkLabel$/;"	s
_GtkLabelClass	gtklabel.h	/^struct _GtkLabelClass$/;"	s
_GtkLayout	gtklayout.h	/^struct _GtkLayout$/;"	s
_GtkLayoutClass	gtklayout.h	/^struct _GtkLayoutClass$/;"	s
_GtkLinkButton	gtklinkbutton.h	/^struct _GtkLinkButton$/;"	s
_GtkLinkButtonClass	gtklinkbutton.h	/^struct _GtkLinkButtonClass$/;"	s
_GtkList	gtklist.h	/^struct _GtkList$/;"	s
_GtkListClass	gtklist.h	/^struct _GtkListClass$/;"	s
_GtkListItem	gtklistitem.h	/^struct _GtkListItem$/;"	s
_GtkListItemClass	gtklistitem.h	/^struct _GtkListItemClass$/;"	s
_GtkListStore	gtkliststore.h	/^struct _GtkListStore$/;"	s
_GtkListStoreClass	gtkliststore.h	/^struct _GtkListStoreClass$/;"	s
_GtkMenu	gtkmenu.h	/^struct _GtkMenu$/;"	s
_GtkMenuBar	gtkmenubar.h	/^struct _GtkMenuBar$/;"	s
_GtkMenuBarClass	gtkmenubar.h	/^struct _GtkMenuBarClass$/;"	s
_GtkMenuClass	gtkmenu.h	/^struct _GtkMenuClass$/;"	s
_GtkMenuItem	gtkmenuitem.h	/^struct _GtkMenuItem$/;"	s
_GtkMenuItemClass	gtkmenuitem.h	/^struct _GtkMenuItemClass$/;"	s
_GtkMenuShell	gtkmenushell.h	/^struct _GtkMenuShell$/;"	s
_GtkMenuShellClass	gtkmenushell.h	/^struct _GtkMenuShellClass$/;"	s
_GtkMenuToolButton	gtkmenutoolbutton.h	/^struct _GtkMenuToolButton$/;"	s
_GtkMenuToolButtonClass	gtkmenutoolbutton.h	/^struct _GtkMenuToolButtonClass$/;"	s
_GtkMessageDialog	gtkmessagedialog.h	/^struct _GtkMessageDialog$/;"	s
_GtkMessageDialogClass	gtkmessagedialog.h	/^struct _GtkMessageDialogClass$/;"	s
_GtkMisc	gtkmisc.h	/^struct _GtkMisc$/;"	s
_GtkMiscClass	gtkmisc.h	/^struct _GtkMiscClass$/;"	s
_GtkMountOperation	gtkmountoperation.h	/^struct _GtkMountOperation$/;"	s
_GtkMountOperationClass	gtkmountoperation.h	/^struct _GtkMountOperationClass$/;"	s
_GtkNotebook	gtknotebook.h	/^struct _GtkNotebook$/;"	s
_GtkNotebookClass	gtknotebook.h	/^struct _GtkNotebookClass$/;"	s
_GtkObject	gtkobject.h	/^struct _GtkObject$/;"	s
_GtkObjectClass	gtkobject.h	/^struct _GtkObjectClass$/;"	s
_GtkOffscreenWindow	gtkoffscreenwindow.h	/^struct _GtkOffscreenWindow$/;"	s
_GtkOffscreenWindowClass	gtkoffscreenwindow.h	/^struct _GtkOffscreenWindowClass$/;"	s
_GtkOldEditable	gtkoldeditable.h	/^struct _GtkOldEditable$/;"	s
_GtkOldEditableClass	gtkoldeditable.h	/^struct _GtkOldEditableClass$/;"	s
_GtkOptionMenu	gtkoptionmenu.h	/^struct _GtkOptionMenu$/;"	s
_GtkOptionMenuClass	gtkoptionmenu.h	/^struct _GtkOptionMenuClass$/;"	s
_GtkOrientableIface	gtkorientable.h	/^struct _GtkOrientableIface$/;"	s
_GtkPageRange	gtkprintsettings.h	/^struct _GtkPageRange$/;"	s
_GtkPaned	gtkpaned.h	/^struct _GtkPaned$/;"	s
_GtkPanedClass	gtkpaned.h	/^struct _GtkPanedClass$/;"	s
_GtkPixmap	gtkpixmap.h	/^struct _GtkPixmap$/;"	s
_GtkPixmapClass	gtkpixmap.h	/^struct _GtkPixmapClass$/;"	s
_GtkPlug	gtkplug.h	/^struct _GtkPlug$/;"	s
_GtkPlugClass	gtkplug.h	/^struct _GtkPlugClass$/;"	s
_GtkPreview	gtkpreview.h	/^struct _GtkPreview$/;"	s
_GtkPreviewClass	gtkpreview.h	/^struct _GtkPreviewClass$/;"	s
_GtkPreviewInfo	gtkpreview.h	/^struct _GtkPreviewInfo$/;"	s
_GtkPrintOperation	gtkprintoperation.h	/^struct _GtkPrintOperation$/;"	s
_GtkPrintOperationClass	gtkprintoperation.h	/^struct _GtkPrintOperationClass$/;"	s
_GtkPrintOperationPreviewIface	gtkprintoperationpreview.h	/^struct _GtkPrintOperationPreviewIface$/;"	s
_GtkProgress	gtkprogress.h	/^struct _GtkProgress$/;"	s
_GtkProgressBar	gtkprogressbar.h	/^struct _GtkProgressBar$/;"	s
_GtkProgressBarClass	gtkprogressbar.h	/^struct _GtkProgressBarClass$/;"	s
_GtkProgressClass	gtkprogress.h	/^struct _GtkProgressClass$/;"	s
_GtkPropertyMark	gtktext.h	/^struct _GtkPropertyMark$/;"	s
_GtkRadioAction	gtkradioaction.h	/^struct _GtkRadioAction$/;"	s
_GtkRadioActionClass	gtkradioaction.h	/^struct _GtkRadioActionClass$/;"	s
_GtkRadioActionEntry	gtkactiongroup.h	/^struct _GtkRadioActionEntry $/;"	s
_GtkRadioButton	gtkradiobutton.h	/^struct _GtkRadioButton$/;"	s
_GtkRadioButtonClass	gtkradiobutton.h	/^struct _GtkRadioButtonClass$/;"	s
_GtkRadioMenuItem	gtkradiomenuitem.h	/^struct _GtkRadioMenuItem$/;"	s
_GtkRadioMenuItemClass	gtkradiomenuitem.h	/^struct _GtkRadioMenuItemClass$/;"	s
_GtkRadioToolButton	gtkradiotoolbutton.h	/^struct _GtkRadioToolButton$/;"	s
_GtkRadioToolButtonClass	gtkradiotoolbutton.h	/^struct _GtkRadioToolButtonClass$/;"	s
_GtkRange	gtkrange.h	/^struct _GtkRange$/;"	s
_GtkRangeClass	gtkrange.h	/^struct _GtkRangeClass$/;"	s
_GtkRcProperty	gtkrc.h	/^struct _GtkRcProperty$/;"	s
_GtkRcStyle	gtkrc.h	/^struct _GtkRcStyle$/;"	s
_GtkRcStyleClass	gtkrc.h	/^struct _GtkRcStyleClass$/;"	s
_GtkRecentAction	gtkrecentaction.h	/^struct _GtkRecentAction$/;"	s
_GtkRecentActionClass	gtkrecentaction.h	/^struct _GtkRecentActionClass$/;"	s
_GtkRecentChooserDialog	gtkrecentchooserdialog.h	/^struct _GtkRecentChooserDialog$/;"	s
_GtkRecentChooserDialogClass	gtkrecentchooserdialog.h	/^struct _GtkRecentChooserDialogClass$/;"	s
_GtkRecentChooserIface	gtkrecentchooser.h	/^struct _GtkRecentChooserIface$/;"	s
_GtkRecentChooserMenu	gtkrecentchoosermenu.h	/^struct _GtkRecentChooserMenu$/;"	s
_GtkRecentChooserMenuClass	gtkrecentchoosermenu.h	/^struct _GtkRecentChooserMenuClass$/;"	s
_GtkRecentChooserWidget	gtkrecentchooserwidget.h	/^struct _GtkRecentChooserWidget$/;"	s
_GtkRecentChooserWidgetClass	gtkrecentchooserwidget.h	/^struct _GtkRecentChooserWidgetClass$/;"	s
_GtkRecentData	gtkrecentmanager.h	/^struct _GtkRecentData$/;"	s
_GtkRecentFilterInfo	gtkrecentfilter.h	/^struct _GtkRecentFilterInfo$/;"	s
_GtkRecentManager	gtkrecentmanager.h	/^struct _GtkRecentManager$/;"	s
_GtkRecentManagerClass	gtkrecentmanager.h	/^struct _GtkRecentManagerClass$/;"	s
_GtkRequisition	gtkwidget.h	/^struct _GtkRequisition$/;"	s
_GtkRuler	gtkruler.h	/^struct _GtkRuler$/;"	s
_GtkRulerClass	gtkruler.h	/^struct _GtkRulerClass$/;"	s
_GtkRulerMetric	gtkruler.h	/^struct _GtkRulerMetric$/;"	s
_GtkScale	gtkscale.h	/^struct _GtkScale$/;"	s
_GtkScaleButton	gtkscalebutton.h	/^struct _GtkScaleButton$/;"	s
_GtkScaleButtonClass	gtkscalebutton.h	/^struct _GtkScaleButtonClass$/;"	s
_GtkScaleClass	gtkscale.h	/^struct _GtkScaleClass$/;"	s
_GtkScrollbar	gtkscrollbar.h	/^struct _GtkScrollbar$/;"	s
_GtkScrollbarClass	gtkscrollbar.h	/^struct _GtkScrollbarClass$/;"	s
_GtkScrolledWindow	gtkscrolledwindow.h	/^struct _GtkScrolledWindow$/;"	s
_GtkScrolledWindowClass	gtkscrolledwindow.h	/^struct _GtkScrolledWindowClass$/;"	s
_GtkSelectionData	gtkselection.h	/^struct _GtkSelectionData$/;"	s
_GtkSeparator	gtkseparator.h	/^struct _GtkSeparator$/;"	s
_GtkSeparatorClass	gtkseparator.h	/^struct _GtkSeparatorClass$/;"	s
_GtkSeparatorMenuItem	gtkseparatormenuitem.h	/^struct _GtkSeparatorMenuItem$/;"	s
_GtkSeparatorMenuItemClass	gtkseparatormenuitem.h	/^struct _GtkSeparatorMenuItemClass$/;"	s
_GtkSeparatorToolItem	gtkseparatortoolitem.h	/^struct _GtkSeparatorToolItem$/;"	s
_GtkSeparatorToolItemClass	gtkseparatortoolitem.h	/^struct _GtkSeparatorToolItemClass$/;"	s
_GtkSettings	gtksettings.h	/^struct _GtkSettings$/;"	s
_GtkSettingsClass	gtksettings.h	/^struct _GtkSettingsClass$/;"	s
_GtkSettingsValue	gtksettings.h	/^struct _GtkSettingsValue$/;"	s
_GtkSizeGroup	gtksizegroup.h	/^struct _GtkSizeGroup$/;"	s
_GtkSizeGroupClass	gtksizegroup.h	/^struct _GtkSizeGroupClass$/;"	s
_GtkSocket	gtksocket.h	/^struct _GtkSocket$/;"	s
_GtkSocketClass	gtksocket.h	/^struct _GtkSocketClass$/;"	s
_GtkSpinButton	gtkspinbutton.h	/^struct _GtkSpinButton$/;"	s
_GtkSpinButtonClass	gtkspinbutton.h	/^struct _GtkSpinButtonClass$/;"	s
_GtkSpinner	gtkspinner.h	/^struct _GtkSpinner$/;"	s
_GtkSpinnerClass	gtkspinner.h	/^struct _GtkSpinnerClass$/;"	s
_GtkStatusIcon	gtkstatusicon.h	/^struct _GtkStatusIcon$/;"	s
_GtkStatusIconClass	gtkstatusicon.h	/^struct _GtkStatusIconClass$/;"	s
_GtkStatusbar	gtkstatusbar.h	/^struct _GtkStatusbar$/;"	s
_GtkStatusbarClass	gtkstatusbar.h	/^struct _GtkStatusbarClass$/;"	s
_GtkStockItem	gtkstock.h	/^struct _GtkStockItem$/;"	s
_GtkStyle	gtkstyle.h	/^struct _GtkStyle$/;"	s
_GtkStyleClass	gtkstyle.h	/^struct _GtkStyleClass$/;"	s
_GtkTable	gtktable.h	/^struct _GtkTable$/;"	s
_GtkTableChild	gtktable.h	/^struct _GtkTableChild$/;"	s
_GtkTableClass	gtktable.h	/^struct _GtkTableClass$/;"	s
_GtkTableRowCol	gtktable.h	/^struct _GtkTableRowCol$/;"	s
_GtkTargetEntry	gtkselection.h	/^struct _GtkTargetEntry {$/;"	s
_GtkTargetList	gtkselection.h	/^struct _GtkTargetList {$/;"	s
_GtkTargetPair	gtkselection.h	/^struct _GtkTargetPair {$/;"	s
_GtkTearoffMenuItem	gtktearoffmenuitem.h	/^struct _GtkTearoffMenuItem$/;"	s
_GtkTearoffMenuItemClass	gtktearoffmenuitem.h	/^struct _GtkTearoffMenuItemClass$/;"	s
_GtkText	gtktext.h	/^struct _GtkText$/;"	s
_GtkTextAppearance	gtktexttag.h	/^struct _GtkTextAppearance$/;"	s
_GtkTextAttrAppearance	gtktextlayout.h	/^struct _GtkTextAttrAppearance$/;"	s
_GtkTextAttributes	gtktexttag.h	/^struct _GtkTextAttributes$/;"	s
_GtkTextBuffer	gtktextbuffer.h	/^struct _GtkTextBuffer$/;"	s
_GtkTextBufferClass	gtktextbuffer.h	/^struct _GtkTextBufferClass$/;"	s
_GtkTextChildAnchor	gtktextchild.h	/^struct _GtkTextChildAnchor$/;"	s
_GtkTextChildAnchorClass	gtktextchild.h	/^struct _GtkTextChildAnchorClass$/;"	s
_GtkTextClass	gtktext.h	/^struct _GtkTextClass$/;"	s
_GtkTextCursorDisplay	gtktextlayout.h	/^struct _GtkTextCursorDisplay$/;"	s
_GtkTextIter	gtktextiter.h	/^struct _GtkTextIter {$/;"	s
_GtkTextLayout	gtktextlayout.h	/^struct _GtkTextLayout$/;"	s
_GtkTextLayoutClass	gtktextlayout.h	/^struct _GtkTextLayoutClass$/;"	s
_GtkTextLineDisplay	gtktextlayout.h	/^struct _GtkTextLineDisplay$/;"	s
_GtkTextMark	gtktextmark.h	/^struct _GtkTextMark$/;"	s
_GtkTextMarkClass	gtktextmark.h	/^struct _GtkTextMarkClass$/;"	s
_GtkTextTag	gtktexttag.h	/^struct _GtkTextTag$/;"	s
_GtkTextTagClass	gtktexttag.h	/^struct _GtkTextTagClass$/;"	s
_GtkTextTagTable	gtktexttagtable.h	/^struct _GtkTextTagTable$/;"	s
_GtkTextTagTableClass	gtktexttagtable.h	/^struct _GtkTextTagTableClass$/;"	s
_GtkTextView	gtktextview.h	/^struct _GtkTextView$/;"	s
_GtkTextViewClass	gtktextview.h	/^struct _GtkTextViewClass$/;"	s
_GtkTipsQuery	gtktipsquery.h	/^struct	_GtkTipsQuery$/;"	s
_GtkTipsQueryClass	gtktipsquery.h	/^struct	_GtkTipsQueryClass$/;"	s
_GtkToggleAction	gtktoggleaction.h	/^struct _GtkToggleAction$/;"	s
_GtkToggleActionClass	gtktoggleaction.h	/^struct _GtkToggleActionClass$/;"	s
_GtkToggleActionEntry	gtkactiongroup.h	/^struct _GtkToggleActionEntry $/;"	s
_GtkToggleButton	gtktogglebutton.h	/^struct _GtkToggleButton$/;"	s
_GtkToggleButtonClass	gtktogglebutton.h	/^struct _GtkToggleButtonClass$/;"	s
_GtkToggleToolButton	gtktoggletoolbutton.h	/^struct _GtkToggleToolButton$/;"	s
_GtkToggleToolButtonClass	gtktoggletoolbutton.h	/^struct _GtkToggleToolButtonClass$/;"	s
_GtkToolButton	gtktoolbutton.h	/^struct _GtkToolButton$/;"	s
_GtkToolButtonClass	gtktoolbutton.h	/^struct _GtkToolButtonClass$/;"	s
_GtkToolItem	gtktoolitem.h	/^struct _GtkToolItem$/;"	s
_GtkToolItemClass	gtktoolitem.h	/^struct _GtkToolItemClass$/;"	s
_GtkToolItemGroup	gtktoolitemgroup.h	/^struct _GtkToolItemGroup$/;"	s
_GtkToolItemGroupClass	gtktoolitemgroup.h	/^struct _GtkToolItemGroupClass$/;"	s
_GtkToolPalette	gtktoolpalette.h	/^struct _GtkToolPalette$/;"	s
_GtkToolPaletteClass	gtktoolpalette.h	/^struct _GtkToolPaletteClass$/;"	s
_GtkToolShellIface	gtktoolshell.h	/^struct _GtkToolShellIface$/;"	s
_GtkToolbar	gtktoolbar.h	/^struct _GtkToolbar$/;"	s
_GtkToolbarChild	gtktoolbar.h	/^struct _GtkToolbarChild$/;"	s
_GtkToolbarClass	gtktoolbar.h	/^struct _GtkToolbarClass$/;"	s
_GtkTooltips	gtktooltips.h	/^struct _GtkTooltips$/;"	s
_GtkTooltipsClass	gtktooltips.h	/^struct _GtkTooltipsClass$/;"	s
_GtkTooltipsData	gtktooltips.h	/^struct _GtkTooltipsData$/;"	s
_GtkTree	gtktree.h	/^struct _GtkTree$/;"	s
_GtkTreeClass	gtktree.h	/^struct _GtkTreeClass$/;"	s
_GtkTreeDragDestIface	gtktreednd.h	/^struct _GtkTreeDragDestIface$/;"	s
_GtkTreeDragSourceIface	gtktreednd.h	/^struct _GtkTreeDragSourceIface$/;"	s
_GtkTreeItem	gtktreeitem.h	/^struct _GtkTreeItem$/;"	s
_GtkTreeItemClass	gtktreeitem.h	/^struct _GtkTreeItemClass$/;"	s
_GtkTreeIter	gtktreemodel.h	/^struct _GtkTreeIter$/;"	s
_GtkTreeModelFilter	gtktreemodelfilter.h	/^struct _GtkTreeModelFilter$/;"	s
_GtkTreeModelFilterClass	gtktreemodelfilter.h	/^struct _GtkTreeModelFilterClass$/;"	s
_GtkTreeModelIface	gtktreemodel.h	/^struct _GtkTreeModelIface$/;"	s
_GtkTreeModelSort	gtktreemodelsort.h	/^struct _GtkTreeModelSort$/;"	s
_GtkTreeModelSortClass	gtktreemodelsort.h	/^struct _GtkTreeModelSortClass$/;"	s
_GtkTreeSelection	gtktreeselection.h	/^struct _GtkTreeSelection$/;"	s
_GtkTreeSelectionClass	gtktreeselection.h	/^struct _GtkTreeSelectionClass$/;"	s
_GtkTreeSortableIface	gtktreesortable.h	/^struct _GtkTreeSortableIface$/;"	s
_GtkTreeStore	gtktreestore.h	/^struct _GtkTreeStore$/;"	s
_GtkTreeStoreClass	gtktreestore.h	/^struct _GtkTreeStoreClass$/;"	s
_GtkTreeView	gtktreeview.h	/^struct _GtkTreeView$/;"	s
_GtkTreeViewClass	gtktreeview.h	/^struct _GtkTreeViewClass$/;"	s
_GtkTreeViewColumn	gtktreeviewcolumn.h	/^struct _GtkTreeViewColumn$/;"	s
_GtkTreeViewColumnClass	gtktreeviewcolumn.h	/^struct _GtkTreeViewColumnClass$/;"	s
_GtkTypeInfo	gtktypeutils.h	/^struct _GtkTypeInfo$/;"	s
_GtkUIManager	gtkuimanager.h	/^struct _GtkUIManager {$/;"	s
_GtkUIManagerClass	gtkuimanager.h	/^struct _GtkUIManagerClass {$/;"	s
_GtkVBox	gtkvbox.h	/^struct _GtkVBox$/;"	s
_GtkVBoxClass	gtkvbox.h	/^struct _GtkVBoxClass$/;"	s
_GtkVButtonBox	gtkvbbox.h	/^struct _GtkVButtonBox$/;"	s
_GtkVButtonBoxClass	gtkvbbox.h	/^struct _GtkVButtonBoxClass$/;"	s
_GtkVPaned	gtkvpaned.h	/^struct _GtkVPaned$/;"	s
_GtkVPanedClass	gtkvpaned.h	/^struct _GtkVPanedClass$/;"	s
_GtkVRuler	gtkvruler.h	/^struct _GtkVRuler$/;"	s
_GtkVRulerClass	gtkvruler.h	/^struct _GtkVRulerClass$/;"	s
_GtkVScale	gtkvscale.h	/^struct _GtkVScale$/;"	s
_GtkVScaleClass	gtkvscale.h	/^struct _GtkVScaleClass$/;"	s
_GtkVScrollbar	gtkvscrollbar.h	/^struct _GtkVScrollbar$/;"	s
_GtkVScrollbarClass	gtkvscrollbar.h	/^struct _GtkVScrollbarClass$/;"	s
_GtkVSeparator	gtkvseparator.h	/^struct _GtkVSeparator$/;"	s
_GtkVSeparatorClass	gtkvseparator.h	/^struct _GtkVSeparatorClass$/;"	s
_GtkViewport	gtkviewport.h	/^struct _GtkViewport$/;"	s
_GtkViewportClass	gtkviewport.h	/^struct _GtkViewportClass$/;"	s
_GtkVolumeButton	gtkvolumebutton.h	/^struct _GtkVolumeButton$/;"	s
_GtkVolumeButtonClass	gtkvolumebutton.h	/^struct _GtkVolumeButtonClass$/;"	s
_GtkWidget	gtkwidget.h	/^struct _GtkWidget$/;"	s
_GtkWidgetAuxInfo	gtkwidget.h	/^struct _GtkWidgetAuxInfo$/;"	s
_GtkWidgetClass	gtkwidget.h	/^struct _GtkWidgetClass$/;"	s
_GtkWidgetShapeInfo	gtkwidget.h	/^struct _GtkWidgetShapeInfo$/;"	s
_GtkWindow	gtkwindow.h	/^struct _GtkWindow$/;"	s
_GtkWindowClass	gtkwindow.h	/^struct _GtkWindowClass$/;"	s
_GtkWindowGroup	gtkwindow.h	/^struct _GtkWindowGroup$/;"	s
_GtkWindowGroupClass	gtkwindow.h	/^struct _GtkWindowGroupClass$/;"	s
_UbuntuMenuProxy	ubuntumenuproxy.h	/^struct _UbuntuMenuProxy$/;"	s
_UbuntuMenuProxyClass	ubuntumenuproxy.h	/^struct _UbuntuMenuProxyClass$/;"	s
_UbuntuMenuProxyModule	ubuntumenuproxymodule.h	/^struct _UbuntuMenuProxyModule$/;"	s
_UbuntuMenuProxyModuleClass	ubuntumenuproxymodule.h	/^struct _UbuntuMenuProxyModuleClass$/;"	s
__GTK_ABOUT_DIALOG_H__	gtkaboutdialog.h	30;"	d
__GTK_ACCEL_GROUP_H__	gtkaccelgroup.h	32;"	d
__GTK_ACCEL_LABEL_H__	gtkaccellabel.h	35;"	d
__GTK_ACCEL_MAP_H__	gtkaccelmap.h	25;"	d
__GTK_ACCESSIBLE_H__	gtkaccessible.h	25;"	d
__GTK_ACTION_GROUP_H__	gtkactiongroup.h	36;"	d
__GTK_ACTION_H__	gtkaction.h	36;"	d
__GTK_ACTIVATABLE_H__	gtkactivatable.h	25;"	d
__GTK_ADJUSTMENT_H__	gtkadjustment.h	32;"	d
__GTK_ALIGNMENT_H__	gtkalignment.h	32;"	d
__GTK_ARROW_H__	gtkarrow.h	32;"	d
__GTK_ASPECT_FRAME_H__	gtkaspectframe.h	32;"	d
__GTK_ASSISTANT_H__	gtkassistant.h	31;"	d
__GTK_BINDINGS_H__	gtkbindings.h	35;"	d
__GTK_BIN_H__	gtkbin.h	32;"	d
__GTK_BOX_H__	gtkbox.h	32;"	d
__GTK_BUILDABLE_H__	gtkbuildable.h	26;"	d
__GTK_BUILDER_H__	gtkbuilder.h	26;"	d
__GTK_BUTTON_BOX_H__	gtkbbox.h	32;"	d
__GTK_BUTTON_H__	gtkbutton.h	32;"	d
__GTK_CALENDAR_H__	gtkcalendar.h	34;"	d
__GTK_CELL_EDITABLE_H__	gtkcelleditable.h	25;"	d
__GTK_CELL_LAYOUT_H__	gtkcelllayout.h	25;"	d
__GTK_CELL_RENDERER_ACCEL_H__	gtkcellrendereraccel.h	25;"	d
__GTK_CELL_RENDERER_COMBO_H__	gtkcellrenderercombo.h	25;"	d
__GTK_CELL_RENDERER_H__	gtkcellrenderer.h	25;"	d
__GTK_CELL_RENDERER_PIXBUF_H__	gtkcellrendererpixbuf.h	25;"	d
__GTK_CELL_RENDERER_PROGRESS_H__	gtkcellrendererprogress.h	33;"	d
__GTK_CELL_RENDERER_SPINNER_H__	gtkcellrendererspinner.h	28;"	d
__GTK_CELL_RENDERER_SPIN_H__	gtkcellrendererspin.h	25;"	d
__GTK_CELL_RENDERER_TEXT_H__	gtkcellrenderertext.h	25;"	d
__GTK_CELL_RENDERER_TOGGLE_H__	gtkcellrenderertoggle.h	25;"	d
__GTK_CELL_VIEW_H__	gtkcellview.h	25;"	d
__GTK_CHECK_BUTTON_H__	gtkcheckbutton.h	32;"	d
__GTK_CHECK_MENU_ITEM_H__	gtkcheckmenuitem.h	32;"	d
__GTK_CLIPBOARD_H__	gtkclipboard.h	27;"	d
__GTK_CLIST_H__	gtkclist.h	31;"	d
__GTK_COLOR_BUTTON_H__	gtkcolorbutton.h	37;"	d
__GTK_COLOR_SELECTION_DIALOG_H__	gtkcolorseldialog.h	32;"	d
__GTK_COLOR_SELECTION_H__	gtkcolorsel.h	33;"	d
__GTK_COMBO_BOX_ENTRY_H__	gtkcomboboxentry.h	25;"	d
__GTK_COMBO_BOX_H__	gtkcombobox.h	25;"	d
__GTK_COMBO_BOX_TEXT_H__	gtkcomboboxtext.h	24;"	d
__GTK_CONTAINER_H__	gtkcontainer.h	32;"	d
__GTK_CTREE_H__	gtkctree.h	34;"	d
__GTK_CURVE_H__	gtkcurve.h	30;"	d
__GTK_DEBUG_H__	gtkdebug.h	32;"	d
__GTK_DIALOG_H__	gtkdialog.h	32;"	d
__GTK_DND_H__	gtkdnd.h	33;"	d
__GTK_DRAWING_AREA_H__	gtkdrawingarea.h	32;"	d
__GTK_EDITABLE_H__	gtkeditable.h	32;"	d
__GTK_ENTRY_BUFFER_H__	gtkentrybuffer.h	25;"	d
__GTK_ENTRY_COMPLETION_H__	gtkentrycompletion.h	25;"	d
__GTK_ENTRY_H__	gtkentry.h	36;"	d
__GTK_ENUMS_H__	gtkenums.h	32;"	d
__GTK_EVENT_BOX_H__	gtkeventbox.h	32;"	d
__GTK_EXPANDER_H__	gtkexpander.h	29;"	d
__GTK_FILESEL_H__	gtkfilesel.h	30;"	d
__GTK_FILE_CHOOSER_BUTTON_H__	gtkfilechooserbutton.h	26;"	d
__GTK_FILE_CHOOSER_DIALOG_H__	gtkfilechooserdialog.h	26;"	d
__GTK_FILE_CHOOSER_H__	gtkfilechooser.h	26;"	d
__GTK_FILE_CHOOSER_WIDGET_H__	gtkfilechooserwidget.h	26;"	d
__GTK_FILE_FILTER_H__	gtkfilefilter.h	26;"	d
__GTK_FIXED_H__	gtkfixed.h	32;"	d
__GTK_FONTSEL_H__	gtkfontsel.h	36;"	d
__GTK_FONT_BUTTON_H__	gtkfontbutton.h	32;"	d
__GTK_FRAME_H__	gtkframe.h	32;"	d
__GTK_GAMMA_CURVE_H__	gtkgamma.h	30;"	d
__GTK_GC_H__	gtkgc.h	32;"	d
__GTK_HANDLE_BOX_H__	gtkhandlebox.h	37;"	d
__GTK_HBOX_H__	gtkhbox.h	32;"	d
__GTK_HBUTTON_BOX_H__	gtkhbbox.h	32;"	d
__GTK_HPANED_H__	gtkhpaned.h	32;"	d
__GTK_HRULER_H__	gtkhruler.h	44;"	d
__GTK_HSCALE_H__	gtkhscale.h	32;"	d
__GTK_HSCROLLBAR_H__	gtkhscrollbar.h	32;"	d
__GTK_HSEPARATOR_H__	gtkhseparator.h	32;"	d
__GTK_HSV_H__	gtkhsv.h	37;"	d
__GTK_H_INSIDE__	gtk.h	248;"	d
__GTK_H_INSIDE__	gtk.h	30;"	d
__GTK_H__	gtk.h	28;"	d
__GTK_ICON_FACTORY_H__	gtkiconfactory.h	32;"	d
__GTK_ICON_THEME_H__	gtkicontheme.h	25;"	d
__GTK_ICON_VIEW_H__	gtkiconview.h	25;"	d
__GTK_IMAGE_H__	gtkimage.h	32;"	d
__GTK_IMAGE_MENU_ITEM_H__	gtkimagemenuitem.h	32;"	d
__GTK_IM_CONTEXT_H__	gtkimcontext.h	25;"	d
__GTK_IM_CONTEXT_SIMPLE_H__	gtkimcontextsimple.h	25;"	d
__GTK_IM_MODULE_H__	gtkimmodule.h	21;"	d
__GTK_IM_MULTICONTEXT_H__	gtkimmulticontext.h	25;"	d
__GTK_INFO_BAR_H__	gtkinfobar.h	36;"	d
__GTK_INPUTDIALOG_H__	gtkinputdialog.h	40;"	d
__GTK_INVISIBLE_H__	gtkinvisible.h	32;"	d
__GTK_ITEM_FACTORY_H__	gtkitemfactory.h	33;"	d
__GTK_ITEM_H__	gtkitem.h	32;"	d
__GTK_LABEL_H__	gtklabel.h	31;"	d
__GTK_LAYOUT_H__	gtklayout.h	36;"	d
__GTK_LINK_BUTTON_H__	gtklinkbutton.h	30;"	d
__GTK_LIST_H__	gtklist.h	30;"	d
__GTK_LIST_ITEM_H__	gtklistitem.h	30;"	d
__GTK_LIST_STORE_H__	gtkliststore.h	25;"	d
__GTK_MAIN_H__	gtkmain.h	32;"	d
__GTK_MENU_BAR_H__	gtkmenubar.h	32;"	d
__GTK_MENU_H__	gtkmenu.h	32;"	d
__GTK_MENU_ITEM_H__	gtkmenuitem.h	32;"	d
__GTK_MENU_SHELL_H__	gtkmenushell.h	32;"	d
__GTK_MENU_TOOL_BUTTON_H__	gtkmenutoolbutton.h	27;"	d
__GTK_MESSAGE_DIALOG_H__	gtkmessagedialog.h	32;"	d
__GTK_MISC_H__	gtkmisc.h	32;"	d
__GTK_MODULES_H__	gtkmodules.h	26;"	d
__GTK_MOUNT_OPERATION_H__	gtkmountoperation.h	32;"	d
__GTK_NOTEBOOK_H__	gtknotebook.h	33;"	d
__GTK_OBJECT_H__	gtkobject.h	32;"	d
__GTK_OFFSCREEN_WINDOW_H__	gtkoffscreenwindow.h	26;"	d
__GTK_OLD_EDITABLE_H__	gtkoldeditable.h	30;"	d
__GTK_OPTION_MENU_H__	gtkoptionmenu.h	30;"	d
__GTK_ORIENTABLE_H__	gtkorientable.h	29;"	d
__GTK_PAGE_SETUP_H__	gtkpagesetup.h	26;"	d
__GTK_PANED_H__	gtkpaned.h	32;"	d
__GTK_PAPER_SIZE_H__	gtkpapersize.h	26;"	d
__GTK_PIXMAP_H__	gtkpixmap.h	30;"	d
__GTK_PLUG_H__	gtkplug.h	31;"	d
__GTK_PREVIEW_H__	gtkpreview.h	30;"	d
__GTK_PRINT_CONTEXT_H__	gtkprintcontext.h	26;"	d
__GTK_PRINT_OPERATION_H__	gtkprintoperation.h	26;"	d
__GTK_PRINT_OPERATION_PREVIEW_H__	gtkprintoperationpreview.h	26;"	d
__GTK_PRINT_SETTINGS_H__	gtkprintsettings.h	26;"	d
__GTK_PRIVATE_H__	gtkprivate.h	28;"	d
__GTK_PROGRESS_BAR_H__	gtkprogressbar.h	32;"	d
__GTK_PROGRESS_H__	gtkprogress.h	28;"	d
__GTK_RADIO_ACTION_H__	gtkradioaction.h	36;"	d
__GTK_RADIO_BUTTON_H__	gtkradiobutton.h	32;"	d
__GTK_RADIO_MENU_ITEM_H__	gtkradiomenuitem.h	32;"	d
__GTK_RADIO_TOOL_BUTTON_H__	gtkradiotoolbutton.h	28;"	d
__GTK_RANGE_H__	gtkrange.h	32;"	d
__GTK_RC_H__	gtkrc.h	32;"	d
__GTK_RECENT_ACTION_H__	gtkrecentaction.h	27;"	d
__GTK_RECENT_CHOOSER_DIALOG_H__	gtkrecentchooserdialog.h	26;"	d
__GTK_RECENT_CHOOSER_H__	gtkrecentchooser.h	27;"	d
__GTK_RECENT_CHOOSER_MENU_H__	gtkrecentchoosermenu.h	26;"	d
__GTK_RECENT_CHOOSER_WIDGET_H__	gtkrecentchooserwidget.h	26;"	d
__GTK_RECENT_FILTER_H__	gtkrecentfilter.h	26;"	d
__GTK_RECENT_MANAGER_H__	gtkrecentmanager.h	26;"	d
__GTK_RULER_H__	gtkruler.h	44;"	d
__GTK_SCALE_BUTTON_H__	gtkscalebutton.h	41;"	d
__GTK_SCALE_H__	gtkscale.h	32;"	d
__GTK_SCROLLBAR_H__	gtkscrollbar.h	32;"	d
__GTK_SCROLLED_WINDOW_H__	gtkscrolledwindow.h	32;"	d
__GTK_SELECTION_H__	gtkselection.h	32;"	d
__GTK_SEPARATOR_H__	gtkseparator.h	32;"	d
__GTK_SEPARATOR_MENU_ITEM_H__	gtkseparatormenuitem.h	32;"	d
__GTK_SEPARATOR_TOOL_ITEM_H__	gtkseparatortoolitem.h	27;"	d
__GTK_SETTINGS_H__	gtksettings.h	24;"	d
__GTK_SHOW_H__	gtkshow.h	28;"	d
__GTK_SIGNAL_H__	gtksignal.h	30;"	d
__GTK_SIZE_GROUP_H__	gtksizegroup.h	26;"	d
__GTK_SMART_COMBO_H__	gtkcombo.h	30;"	d
__GTK_SOCKET_H__	gtksocket.h	31;"	d
__GTK_SPINNER_H__	gtkspinner.h	30;"	d
__GTK_SPIN_BUTTON_H__	gtkspinbutton.h	35;"	d
__GTK_STATUSBAR_H__	gtkstatusbar.h	33;"	d
__GTK_STATUS_ICON_H__	gtkstatusicon.h	29;"	d
__GTK_STOCK_H__	gtkstock.h	32;"	d
__GTK_STYLE_H__	gtkstyle.h	32;"	d
__GTK_TABLE_H__	gtktable.h	32;"	d
__GTK_TEAROFF_MENU_ITEM_H__	gtktearoffmenuitem.h	32;"	d
__GTK_TEST_UTILS_H__	gtktestutils.h	26;"	d
__GTK_TEXT_BUFFER_H__	gtktextbuffer.h	32;"	d
__GTK_TEXT_BUFFER_RICH_TEXT_H__	gtktextbufferrichtext.h	27;"	d
__GTK_TEXT_CHILD_H__	gtktextchild.h	32;"	d
__GTK_TEXT_DISPLAY_H__	gtktextdisplay.h	78;"	d
__GTK_TEXT_H__	gtktext.h	30;"	d
__GTK_TEXT_ITER_H__	gtktextiter.h	32;"	d
__GTK_TEXT_LAYOUT_H__	gtktextlayout.h	80;"	d
__GTK_TEXT_MARK_H__	gtktextmark.h	55;"	d
__GTK_TEXT_TAG_H__	gtktexttag.h	55;"	d
__GTK_TEXT_TAG_TABLE_H__	gtktexttagtable.h	32;"	d
__GTK_TEXT_VIEW_H__	gtktextview.h	32;"	d
__GTK_TIPS_QUERY_H__	gtktipsquery.h	33;"	d
__GTK_TOGGLE_ACTION_H__	gtktoggleaction.h	36;"	d
__GTK_TOGGLE_BUTTON_H__	gtktogglebutton.h	32;"	d
__GTK_TOGGLE_TOOL_BUTTON_H__	gtktoggletoolbutton.h	28;"	d
__GTK_TOOLBAR_H__	gtktoolbar.h	37;"	d
__GTK_TOOLTIPS_H__	gtktooltips.h	30;"	d
__GTK_TOOLTIP_H__	gtktooltip.h	27;"	d
__GTK_TOOL_BUTTON_H__	gtktoolbutton.h	28;"	d
__GTK_TOOL_ITEM_GROUP_H__	gtktoolitemgroup.h	27;"	d
__GTK_TOOL_ITEM_H__	gtktoolitem.h	28;"	d
__GTK_TOOL_PALETTE_H__	gtktoolpalette.h	27;"	d
__GTK_TOOL_SHELL_H__	gtktoolshell.h	28;"	d
__GTK_TREE_DND_H__	gtktreednd.h	25;"	d
__GTK_TREE_H__	gtktree.h	30;"	d
__GTK_TREE_ITEM_H__	gtktreeitem.h	30;"	d
__GTK_TREE_MODEL_FILTER_H__	gtktreemodelfilter.h	26;"	d
__GTK_TREE_MODEL_H__	gtktreemodel.h	25;"	d
__GTK_TREE_MODEL_SORT_H__	gtktreemodelsort.h	25;"	d
__GTK_TREE_SELECTION_H__	gtktreeselection.h	25;"	d
__GTK_TREE_SORTABLE_H__	gtktreesortable.h	25;"	d
__GTK_TREE_STORE_H__	gtktreestore.h	25;"	d
__GTK_TREE_VIEW_COLUMN_H__	gtktreeviewcolumn.h	25;"	d
__GTK_TREE_VIEW_H__	gtktreeview.h	25;"	d
__GTK_TYPE_BUILTINS_H__	gtktypebuiltins.h	9;"	d
__GTK_TYPE_UTILS_H__	gtktypeutils.h	32;"	d
__GTK_UI_MANAGER_H__	gtkuimanager.h	36;"	d
__GTK_VBBOX_H__	gtkvbbox.h	32;"	d
__GTK_VBOX_H__	gtkvbox.h	32;"	d
__GTK_VERSION_H__	gtkversion.h	32;"	d
__GTK_VIEWPORT_H__	gtkviewport.h	32;"	d
__GTK_VOLUME_BUTTON_H__	gtkvolumebutton.h	35;"	d
__GTK_VPANED_H__	gtkvpaned.h	32;"	d
__GTK_VRULER_H__	gtkvruler.h	44;"	d
__GTK_VSCALE_H__	gtkvscale.h	32;"	d
__GTK_VSCROLLBAR_H__	gtkvscrollbar.h	32;"	d
__GTK_VSEPARATOR_H__	gtkvseparator.h	32;"	d
__GTK_WIDGET_H__	gtkwidget.h	32;"	d
__GTK_WINDOW_H__	gtkwindow.h	32;"	d
__UBUNTU_MENU_PROXY_H__	ubuntumenuproxy.h	27;"	d
__UBUNTU_MENU_PROXY_MODULE_H__	ubuntumenuproxymodule.h	27;"	d
__gtk_marshal_MARSHAL_H__	gtkmarshal.h	4;"	d
__gtk_reserved1	gtkfilechooserbutton.h	/^  void (*__gtk_reserved1);$/;"	m	struct:_GtkFileChooserButtonClass
__gtk_reserved1	gtkstatusicon.h	/^  void (*__gtk_reserved1);$/;"	m	struct:_GtkStatusIconClass
__gtk_reserved2	gtkfilechooserbutton.h	/^  void (*__gtk_reserved2);$/;"	m	struct:_GtkFileChooserButtonClass
__gtk_reserved2	gtkstatusicon.h	/^  void (*__gtk_reserved2);$/;"	m	struct:_GtkStatusIconClass
__gtk_reserved3	gtkfilechooserbutton.h	/^  void (*__gtk_reserved3);$/;"	m	struct:_GtkFileChooserButtonClass
__gtk_reserved4	gtkfilechooserbutton.h	/^  void (*__gtk_reserved4);$/;"	m	struct:_GtkFileChooserButtonClass
__gtk_reserved5	gtkfilechooserbutton.h	/^  void (*__gtk_reserved5);$/;"	m	struct:_GtkFileChooserButtonClass
__gtk_reserved6	gtkfilechooserbutton.h	/^  void (*__gtk_reserved6);$/;"	m	struct:_GtkFileChooserButtonClass
__gtk_reserved7	gtkfilechooserbutton.h	/^  void (*__gtk_reserved7);$/;"	m	struct:_GtkFileChooserButtonClass
_gtk_accel_group_attach	gtkaccelgroup.h	/^void		_gtk_accel_group_attach		(GtkAccelGroup	*accel_group,$/;"	p
_gtk_accel_group_detach	gtkaccelgroup.h	/^void		_gtk_accel_group_detach		(GtkAccelGroup	*accel_group,$/;"	p
_gtk_accel_group_reconnect	gtkaccelgroup.h	/^void		     _gtk_accel_group_reconnect (GtkAccelGroup *accel_group,$/;"	p
_gtk_accel_label_class_get_accelerator_label	gtkaccellabel.h	/^gchar *    _gtk_accel_label_class_get_accelerator_label (GtkAccelLabelClass *klass,$/;"	p
_gtk_accel_map_add_group	gtkaccelmap.h	/^void            _gtk_accel_map_add_group	 (const gchar   *accel_path,$/;"	p
_gtk_accel_map_init	gtkaccelmap.h	/^void		_gtk_accel_map_init		(void);$/;"	p
_gtk_accel_map_remove_group	gtkaccelmap.h	/^void            _gtk_accel_map_remove_group 	 (const gchar   *accel_path,$/;"	p
_gtk_accel_path_is_valid	gtkaccelmap.h	/^gboolean	_gtk_accel_path_is_valid	 (const gchar	*accel_path);$/;"	p
_gtk_action_add_to_proxy_list	gtkaction.h	/^void         _gtk_action_add_to_proxy_list     (GtkAction     *action,$/;"	p
_gtk_action_emit_activate	gtkaction.h	/^void         _gtk_action_emit_activate         (GtkAction     *action);$/;"	p
_gtk_action_group_emit_connect_proxy	gtkactiongroup.h	/^void _gtk_action_group_emit_connect_proxy    (GtkActionGroup *action_group,$/;"	p
_gtk_action_group_emit_disconnect_proxy	gtkactiongroup.h	/^void _gtk_action_group_emit_disconnect_proxy (GtkActionGroup *action_group,$/;"	p
_gtk_action_group_emit_post_activate	gtkactiongroup.h	/^void _gtk_action_group_emit_post_activate    (GtkActionGroup *action_group,$/;"	p
_gtk_action_group_emit_pre_activate	gtkactiongroup.h	/^void _gtk_action_group_emit_pre_activate     (GtkActionGroup *action_group,$/;"	p
_gtk_action_remove_from_proxy_list	gtkaction.h	/^void         _gtk_action_remove_from_proxy_list(GtkAction     *action,$/;"	p
_gtk_action_sync_menu_visible	gtkaction.h	/^void         _gtk_action_sync_menu_visible     (GtkAction     *action,$/;"	p
_gtk_binding_entry_add_signall	gtkbindings.h	/^void	 _gtk_binding_entry_add_signall (GtkBindingSet  *binding_set,$/;"	p
_gtk_binding_parse_binding	gtkbindings.h	/^guint	 _gtk_binding_parse_binding     (GScanner       *scanner);$/;"	p
_gtk_binding_reset_parsed	gtkbindings.h	/^void     _gtk_binding_reset_parsed      (void);$/;"	p
_gtk_boolean_handled_accumulator	gtkmain.h	/^gboolean _gtk_boolean_handled_accumulator (GSignalInvocationHint *ihint,$/;"	p
_gtk_box_get_spacing_set	gtkbox.h	/^gboolean    _gtk_box_get_spacing_set    (GtkBox         *box);$/;"	p
_gtk_box_new	gtkbox.h	/^GtkWidget* _gtk_box_new                 (GtkOrientation  orientation,$/;"	p
_gtk_box_set_old_defaults	gtkbox.h	/^void        _gtk_box_set_old_defaults   (GtkBox         *box);$/;"	p
_gtk_box_set_spacing_set	gtkbox.h	/^void        _gtk_box_set_spacing_set    (GtkBox         *box,$/;"	p
_gtk_button_box_child_requisition	gtkbbox.h	/^void _gtk_button_box_child_requisition (GtkWidget *widget,$/;"	p
_gtk_button_event_triggers_context_menu	gtkprivate.h	/^gboolean _gtk_button_event_triggers_context_menu (GdkEventButton *event);$/;"	p
_gtk_button_paint	gtkbutton.h	/^void _gtk_button_paint                     (GtkButton          *button,$/;"	p
_gtk_button_set_depressed	gtkbutton.h	/^void _gtk_button_set_depressed             (GtkButton          *button,$/;"	p
_gtk_cell_layout_buildable_add_child	gtkcelllayout.h	/^void _gtk_cell_layout_buildable_add_child            (GtkBuildable  *buildable,$/;"	p
_gtk_cell_layout_buildable_custom_tag_end	gtkcelllayout.h	/^void _gtk_cell_layout_buildable_custom_tag_end       (GtkBuildable  *buildable,$/;"	p
_gtk_cell_layout_buildable_custom_tag_start	gtkcelllayout.h	/^gboolean _gtk_cell_layout_buildable_custom_tag_start (GtkBuildable  *buildable,$/;"	p
_gtk_check_button_get_props	gtkcheckbutton.h	/^void _gtk_check_button_get_props (GtkCheckButton *check_button,$/;"	p
_gtk_clipboard_handle_event	gtkclipboard.h	/^void     _gtk_clipboard_handle_event    (GdkEventOwnerChange *event);$/;"	p
_gtk_clipboard_store_all	gtkclipboard.h	/^void     _gtk_clipboard_store_all       (void);$/;"	p
_gtk_clist_create_cell_layout	gtkclist.h	/^PangoLayout *_gtk_clist_create_cell_layout (GtkCList       *clist,$/;"	p
_gtk_container_child_composite_name	gtkcontainer.h	/^gchar*	_gtk_container_child_composite_name   (GtkContainer *container,$/;"	p
_gtk_container_clear_resize_widgets	gtkcontainer.h	/^void    _gtk_container_clear_resize_widgets   (GtkContainer *container);$/;"	p
_gtk_container_dequeue_resize_handler	gtkcontainer.h	/^void   _gtk_container_dequeue_resize_handler (GtkContainer *container);$/;"	p
_gtk_container_focus_sort	gtkcontainer.h	/^GList *_gtk_container_focus_sort             (GtkContainer     *container,$/;"	p
_gtk_container_queue_resize	gtkcontainer.h	/^void	_gtk_container_queue_resize	     (GtkContainer *container);$/;"	p
_gtk_dialog_set_ignore_separator	gtkdialog.h	/^void _gtk_dialog_set_ignore_separator (GtkDialog *dialog,$/;"	p
_gtk_drag_dest_handle_event	gtkdnd.h	/^void _gtk_drag_dest_handle_event (GtkWidget *toplevel,$/;"	p
_gtk_drag_source_handle_event	gtkdnd.h	/^void _gtk_drag_source_handle_event (GtkWidget *widget,$/;"	p
_gtk_find_module	gtkmodules.h	/^gchar * _gtk_find_module        (const gchar *name,$/;"	p
_gtk_fnmatch	gtkprivate.h	/^gboolean _gtk_fnmatch (const char *pattern,$/;"	p
_gtk_get_data_prefix	gtkprivate.h	/^const gchar *_gtk_get_data_prefix ();$/;"	p
_gtk_get_datadir	gtkprivate.h	/^const gchar *_gtk_get_datadir ();$/;"	p
_gtk_get_lc_ctype	gtkmain.h	/^gchar *_gtk_get_lc_ctype (void);$/;"	p
_gtk_get_libdir	gtkprivate.h	/^const gchar *_gtk_get_libdir ();$/;"	p
_gtk_get_localedir	gtkprivate.h	/^const gchar *_gtk_get_localedir ();$/;"	p
_gtk_get_module_path	gtkmodules.h	/^gchar **_gtk_get_module_path    (const gchar *type);$/;"	p
_gtk_get_sysconfdir	gtkprivate.h	/^const gchar *_gtk_get_sysconfdir ();$/;"	p
_gtk_hbutton_box_get_layout_default	gtkhbbox.h	/^GtkButtonBoxStyle _gtk_hbutton_box_get_layout_default (void);$/;"	p
_gtk_icon_factory_ensure_default_icons	gtkiconfactory.h	/^void _gtk_icon_factory_ensure_default_icons (void);$/;"	p
_gtk_icon_factory_list_ids	gtkiconfactory.h	/^GList* _gtk_icon_factory_list_ids (void);$/;"	p
_gtk_icon_set_invalidate_caches	gtkiconfactory.h	/^void _gtk_icon_set_invalidate_caches (void);$/;"	p
_gtk_icon_theme_check_reload	gtkicontheme.h	/^void _gtk_icon_theme_check_reload                     (GdkDisplay *display);$/;"	p
_gtk_icon_theme_ensure_builtin_cache	gtkicontheme.h	/^void _gtk_icon_theme_ensure_builtin_cache             (void);$/;"	p
_gtk_im_module_create	gtkimmodule.h	/^GtkIMContext * _gtk_im_module_create                 (const gchar              *context_id);$/;"	p
_gtk_im_module_get_default_context_id	gtkimmodule.h	/^const gchar  * _gtk_im_module_get_default_context_id (GdkWindow                *client_window);$/;"	p
_gtk_im_module_list	gtkimmodule.h	/^void           _gtk_im_module_list                   (const GtkIMContextInfo ***contexts,$/;"	p
_gtk_label_mnemonics_visible_apply_recursively	gtklabel.h	/^void _gtk_label_mnemonics_visible_apply_recursively (GtkWidget *widget,$/;"	p
_gtk_menu_bar_cycle_focus	gtkmenubar.h	/^void _gtk_menu_bar_cycle_focus (GtkMenuBar       *menubar,$/;"	p
_gtk_menu_item_is_selectable	gtkmenuitem.h	/^gboolean  _gtk_menu_item_is_selectable        (GtkWidget           *menu_item);$/;"	p
_gtk_menu_item_popdown_submenu	gtkmenuitem.h	/^void      _gtk_menu_item_popdown_submenu      (GtkWidget           *menu_item);$/;"	p
_gtk_menu_item_popup_submenu	gtkmenuitem.h	/^void      _gtk_menu_item_popup_submenu        (GtkWidget           *menu_item,$/;"	p
_gtk_menu_item_refresh_accel_path	gtkmenuitem.h	/^void	  _gtk_menu_item_refresh_accel_path   (GtkMenuItem	   *menu_item,$/;"	p
_gtk_menu_shell_activate	gtkmenushell.h	/^void  _gtk_menu_shell_activate         (GtkMenuShell *menu_shell);$/;"	p
_gtk_menu_shell_add_mnemonic	gtkmenushell.h	/^void  _gtk_menu_shell_add_mnemonic     (GtkMenuShell *menu_shell,$/;"	p
_gtk_menu_shell_get_keyboard_mode	gtkmenushell.h	/^gboolean _gtk_menu_shell_get_keyboard_mode (GtkMenuShell *menu_shell);$/;"	p
_gtk_menu_shell_get_popup_delay	gtkmenushell.h	/^gint  _gtk_menu_shell_get_popup_delay  (GtkMenuShell *menu_shell);$/;"	p
_gtk_menu_shell_remove_mnemonic	gtkmenushell.h	/^void  _gtk_menu_shell_remove_mnemonic  (GtkMenuShell *menu_shell,$/;"	p
_gtk_menu_shell_select_last	gtkmenushell.h	/^void _gtk_menu_shell_select_last       (GtkMenuShell *menu_shell,$/;"	p
_gtk_menu_shell_set_keyboard_mode	gtkmenushell.h	/^void     _gtk_menu_shell_set_keyboard_mode (GtkMenuShell *menu_shell,$/;"	p
_gtk_menu_shell_update_mnemonics	gtkmenushell.h	/^void     _gtk_menu_shell_update_mnemonics  (GtkMenuShell *menu_shell);$/;"	p
_gtk_module_has_mixed_deps	gtkmain.h	/^gboolean _gtk_module_has_mixed_deps (GModule *module);$/;"	p
_gtk_modules_init	gtkmodules.h	/^void    _gtk_modules_init             (gint         *argc,$/;"	p
_gtk_modules_settings_changed	gtkmodules.h	/^void    _gtk_modules_settings_changed (GtkSettings  *settings,$/;"	p
_gtk_padding1	gtklinkbutton.h	/^  void (*_gtk_padding1) (void);$/;"	m	struct:_GtkLinkButtonClass
_gtk_padding2	gtklinkbutton.h	/^  void (*_gtk_padding2) (void);$/;"	m	struct:_GtkLinkButtonClass
_gtk_padding3	gtklinkbutton.h	/^  void (*_gtk_padding3) (void);$/;"	m	struct:_GtkLinkButtonClass
_gtk_padding4	gtklinkbutton.h	/^  void (*_gtk_padding4) (void);$/;"	m	struct:_GtkLinkButtonClass
_gtk_plug_add_to_socket	gtkplug.h	/^void _gtk_plug_add_to_socket      (GtkPlug   *plug,$/;"	p
_gtk_plug_remove_from_socket	gtkplug.h	/^void _gtk_plug_remove_from_socket (GtkPlug   *plug,$/;"	p
_gtk_range_get_stop_positions	gtkrange.h	/^gint               _gtk_range_get_stop_positions           (GtkRange      *range,$/;"	p
_gtk_range_get_wheel_delta	gtkrange.h	/^gdouble            _gtk_range_get_wheel_delta              (GtkRange      *range,$/;"	p
_gtk_range_set_stop_values	gtkrange.h	/^void               _gtk_range_set_stop_values              (GtkRange      *range,$/;"	p
_gtk_rc_context_destroy	gtkrc.h	/^void         _gtk_rc_context_destroy               (GtkSettings *settings);$/;"	p
_gtk_rc_context_get_default_font_name	gtkrc.h	/^const gchar* _gtk_rc_context_get_default_font_name (GtkSettings *settings);$/;"	p
_gtk_rc_free_widget_class_path	gtkrc.h	/^void      _gtk_rc_free_widget_class_path (GSList       *list);$/;"	p
_gtk_rc_init	gtkrc.h	/^void	  _gtk_rc_init			 (void);$/;"	p
_gtk_rc_match_widget_class	gtkrc.h	/^gboolean  _gtk_rc_match_widget_class     (GSList       *list,$/;"	p
_gtk_rc_parse_widget_class_path	gtkrc.h	/^GSList*   _gtk_rc_parse_widget_class_path (const gchar *pattern);$/;"	p
_gtk_rc_property_parser_from_type	gtksettings.h	/^GtkRcPropertyParser _gtk_rc_property_parser_from_type (GType               type);$/;"	p
_gtk_rc_style_get_color_hashes	gtkrc.h	/^GSList     * _gtk_rc_style_get_color_hashes        (GtkRcStyle *rc_style);$/;"	p
_gtk_rc_style_lookup_rc_property	gtkrc.h	/^const GtkRcProperty* _gtk_rc_style_lookup_rc_property (GtkRcStyle *rc_style,$/;"	p
_gtk_rc_style_set_rc_property	gtkrc.h	/^void	      _gtk_rc_style_set_rc_property	      (GtkRcStyle *rc_style,$/;"	p
_gtk_rc_style_unset_rc_property	gtkrc.h	/^void	      _gtk_rc_style_unset_rc_property	      (GtkRcStyle *rc_style,$/;"	p
_gtk_recent1	gtkrecentmanager.h	/^  void (*_gtk_recent1) (void);$/;"	m	struct:_GtkRecentManagerClass
_gtk_recent2	gtkrecentmanager.h	/^  void (*_gtk_recent2) (void);$/;"	m	struct:_GtkRecentManagerClass
_gtk_recent3	gtkrecentmanager.h	/^  void (*_gtk_recent3) (void);$/;"	m	struct:_GtkRecentManagerClass
_gtk_recent4	gtkrecentmanager.h	/^  void (*_gtk_recent4) (void);$/;"	m	struct:_GtkRecentManagerClass
_gtk_recent_manager_sync	gtkrecentmanager.h	/^void _gtk_recent_manager_sync (void);$/;"	p
_gtk_reserved0	gtkcellrendereraccel.h	/^  void (*_gtk_reserved0) (void);$/;"	m	struct:_GtkCellRendererAccelClass
_gtk_reserved0	gtkcombobox.h	/^  void (*_gtk_reserved0) (void);$/;"	m	struct:_GtkComboBoxClass
_gtk_reserved0	gtkcomboboxentry.h	/^  void (*_gtk_reserved0) (void);$/;"	m	struct:_GtkComboBoxEntryClass
_gtk_reserved0	gtkentrybuffer.h	/^  void (*_gtk_reserved0) (void);$/;"	m	struct:_GtkEntryBufferClass
_gtk_reserved0	gtkentrycompletion.h	/^  void (*_gtk_reserved0) (void);$/;"	m	struct:_GtkEntryCompletionClass
_gtk_reserved0	gtktreemodelfilter.h	/^  void (*_gtk_reserved0) (void);$/;"	m	struct:_GtkTreeModelFilterClass
_gtk_reserved0	gtktreeview.h	/^  void (*_gtk_reserved0) (void);$/;"	m	struct:_GtkTreeViewClass
_gtk_reserved1	gtkaboutdialog.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkAboutDialogClass
_gtk_reserved1	gtkaccelgroup.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkAccelGroupClass
_gtk_reserved1	gtkaccellabel.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkAccelLabelClass
_gtk_reserved1	gtkaccessible.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkAccessibleClass
_gtk_reserved1	gtkactiongroup.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkActionGroupClass
_gtk_reserved1	gtkadjustment.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkAdjustmentClass
_gtk_reserved1	gtkassistant.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkAssistantClass
_gtk_reserved1	gtkbuilder.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkBuilderClass
_gtk_reserved1	gtkbutton.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkButtonClass
_gtk_reserved1	gtkcalendar.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkCalendar
_gtk_reserved1	gtkcellrenderer.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkCellRendererClass
_gtk_reserved1	gtkcellrendereraccel.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkCellRendererAccelClass
_gtk_reserved1	gtkcellrendererpixbuf.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkCellRendererPixbufClass
_gtk_reserved1	gtkcellrendererprogress.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkCellRendererProgressClass
_gtk_reserved1	gtkcellrendererspinner.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkCellRendererSpinnerClass
_gtk_reserved1	gtkcellrenderertext.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkCellRendererTextClass
_gtk_reserved1	gtkcellrenderertoggle.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkCellRendererToggleClass
_gtk_reserved1	gtkcheckbutton.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkCheckButtonClass
_gtk_reserved1	gtkcheckmenuitem.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkCheckMenuItemClass
_gtk_reserved1	gtkcolorbutton.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkColorButtonClass
_gtk_reserved1	gtkcolorsel.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkColorSelectionClass
_gtk_reserved1	gtkcolorseldialog.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkColorSelectionDialogClass
_gtk_reserved1	gtkcombo.h	/^        void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkComboClass
_gtk_reserved1	gtkcombobox.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkComboBoxClass
_gtk_reserved1	gtkcomboboxentry.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkComboBoxEntryClass
_gtk_reserved1	gtkcomboboxtext.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkComboBoxTextClass
_gtk_reserved1	gtkcontainer.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkContainerClass
_gtk_reserved1	gtkcurve.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkCurveClass
_gtk_reserved1	gtkdialog.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkDialogClass
_gtk_reserved1	gtkdrawingarea.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkDrawingAreaClass
_gtk_reserved1	gtkentry.h	/^  void (*_gtk_reserved1)      (void);$/;"	m	struct:_GtkEntryClass
_gtk_reserved1	gtkentrybuffer.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkEntryBufferClass
_gtk_reserved1	gtkentrycompletion.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkEntryCompletionClass
_gtk_reserved1	gtkfilesel.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkFileSelectionClass
_gtk_reserved1	gtkfontbutton.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkFontButtonClass
_gtk_reserved1	gtkfontsel.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkFontSelectionClass
_gtk_reserved1	gtkfontsel.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkFontSelectionDialogClass
_gtk_reserved1	gtkgamma.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkGammaCurveClass
_gtk_reserved1	gtkhandlebox.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkHandleBoxClass
_gtk_reserved1	gtkhsv.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkHSVClass
_gtk_reserved1	gtkiconfactory.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkIconFactoryClass
_gtk_reserved1	gtkimage.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkImageClass
_gtk_reserved1	gtkimcontext.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkIMContextClass
_gtk_reserved1	gtkimmulticontext.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkIMMulticontextClass
_gtk_reserved1	gtkinfobar.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkInfoBarClass
_gtk_reserved1	gtkinputdialog.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkInputDialogClass
_gtk_reserved1	gtkinvisible.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkInvisibleClass
_gtk_reserved1	gtkitem.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkItemClass
_gtk_reserved1	gtkitemfactory.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkItemFactoryClass
_gtk_reserved1	gtklabel.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkLabelClass
_gtk_reserved1	gtklayout.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkLayoutClass
_gtk_reserved1	gtkliststore.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkListStoreClass
_gtk_reserved1	gtkmenu.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkMenuClass
_gtk_reserved1	gtkmenubar.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkMenuBarClass
_gtk_reserved1	gtkmenuitem.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkMenuItemClass
_gtk_reserved1	gtkmenushell.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkMenuShellClass
_gtk_reserved1	gtkmenutoolbutton.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkMenuToolButtonClass
_gtk_reserved1	gtkmessagedialog.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkMessageDialogClass
_gtk_reserved1	gtkmountoperation.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkMountOperationClass
_gtk_reserved1	gtknotebook.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkNotebookClass
_gtk_reserved1	gtkoptionmenu.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkOptionMenuClass
_gtk_reserved1	gtkpaned.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkPanedClass
_gtk_reserved1	gtkplug.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkPlugClass
_gtk_reserved1	gtkprintoperation.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkPrintOperationClass
_gtk_reserved1	gtkprintoperationpreview.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkPrintOperationPreviewIface
_gtk_reserved1	gtkprogress.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkProgressClass
_gtk_reserved1	gtkprogressbar.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkProgressBarClass
_gtk_reserved1	gtkradioaction.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkRadioActionClass
_gtk_reserved1	gtkradiotoolbutton.h	/^  void (* _gtk_reserved1) (void);$/;"	m	struct:_GtkRadioToolButtonClass
_gtk_reserved1	gtkrange.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkRangeClass
_gtk_reserved1	gtkrc.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkRcStyleClass
_gtk_reserved1	gtkruler.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkRulerClass
_gtk_reserved1	gtkscale.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkScaleClass
_gtk_reserved1	gtkscalebutton.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkScaleButtonClass
_gtk_reserved1	gtkscrollbar.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkScrollbarClass
_gtk_reserved1	gtkscrolledwindow.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkScrolledWindowClass
_gtk_reserved1	gtkseparatortoolitem.h	/^  void (* _gtk_reserved1) (void);$/;"	m	struct:_GtkSeparatorToolItemClass
_gtk_reserved1	gtksizegroup.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkSizeGroupClass
_gtk_reserved1	gtksocket.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkSocketClass
_gtk_reserved1	gtkspinbutton.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkSpinButtonClass
_gtk_reserved1	gtkstatusbar.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkStatusbarClass
_gtk_reserved1	gtkstyle.h	/^  void (*_gtk_reserved1)  (void);$/;"	m	struct:_GtkStyleClass
_gtk_reserved1	gtktearoffmenuitem.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTearoffMenuItemClass
_gtk_reserved1	gtktextbuffer.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTextBufferClass
_gtk_reserved1	gtktextchild.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTextChildAnchorClass
_gtk_reserved1	gtktextlayout.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTextLayoutClass
_gtk_reserved1	gtktextmark.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTextMarkClass
_gtk_reserved1	gtktexttag.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTextTagClass
_gtk_reserved1	gtktexttagtable.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTextTagTableClass
_gtk_reserved1	gtktextview.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTextViewClass
_gtk_reserved1	gtktipsquery.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTipsQueryClass
_gtk_reserved1	gtktoggleaction.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkToggleActionClass
_gtk_reserved1	gtktogglebutton.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkToggleButtonClass
_gtk_reserved1	gtktoggletoolbutton.h	/^  void (* _gtk_reserved1) (void);$/;"	m	struct:_GtkToggleToolButtonClass
_gtk_reserved1	gtktoolbar.h	/^  guint            _gtk_reserved1;$/;"	m	struct:_GtkToolbar
_gtk_reserved1	gtktoolbar.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkToolbarClass
_gtk_reserved1	gtktoolbutton.h	/^  void (* _gtk_reserved1) (void);$/;"	m	struct:_GtkToolButtonClass
_gtk_reserved1	gtktoolitem.h	/^  void (* _gtk_reserved1) (void);$/;"	m	struct:_GtkToolItemClass
_gtk_reserved1	gtktoolpalette.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkToolPaletteClass
_gtk_reserved1	gtktooltips.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTooltipsClass
_gtk_reserved1	gtktreemodelfilter.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTreeModelFilterClass
_gtk_reserved1	gtktreemodelsort.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTreeModelSortClass
_gtk_reserved1	gtktreeselection.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTreeSelectionClass
_gtk_reserved1	gtktreestore.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTreeStoreClass
_gtk_reserved1	gtktreeview.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTreeViewClass
_gtk_reserved1	gtktreeviewcolumn.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkTreeViewColumnClass
_gtk_reserved1	gtkuimanager.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkUIManagerClass
_gtk_reserved1	gtkvolumebutton.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkVolumeButtonClass
_gtk_reserved1	gtkwindow.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkWindowClass
_gtk_reserved1	gtkwindow.h	/^  void (*_gtk_reserved1) (void);$/;"	m	struct:_GtkWindowGroupClass
_gtk_reserved10	gtkstyle.h	/^  void (*_gtk_reserved10) (void);$/;"	m	struct:_GtkStyleClass
_gtk_reserved11	gtkstyle.h	/^  void (*_gtk_reserved11) (void);$/;"	m	struct:_GtkStyleClass
_gtk_reserved2	gtkaboutdialog.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkAboutDialogClass
_gtk_reserved2	gtkaccelgroup.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkAccelGroupClass
_gtk_reserved2	gtkaccellabel.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkAccelLabelClass
_gtk_reserved2	gtkaccessible.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkAccessibleClass
_gtk_reserved2	gtkaction.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkActionClass
_gtk_reserved2	gtkactiongroup.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkActionGroupClass
_gtk_reserved2	gtkadjustment.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkAdjustmentClass
_gtk_reserved2	gtkassistant.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkAssistantClass
_gtk_reserved2	gtkbuilder.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkBuilderClass
_gtk_reserved2	gtkbutton.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkButtonClass
_gtk_reserved2	gtkcalendar.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkCalendar
_gtk_reserved2	gtkcellrenderer.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkCellRendererClass
_gtk_reserved2	gtkcellrendereraccel.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkCellRendererAccelClass
_gtk_reserved2	gtkcellrendererpixbuf.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkCellRendererPixbufClass
_gtk_reserved2	gtkcellrendererprogress.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkCellRendererProgressClass
_gtk_reserved2	gtkcellrendererspinner.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkCellRendererSpinnerClass
_gtk_reserved2	gtkcellrenderertext.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkCellRendererTextClass
_gtk_reserved2	gtkcellrenderertoggle.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkCellRendererToggleClass
_gtk_reserved2	gtkcheckbutton.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkCheckButtonClass
_gtk_reserved2	gtkcheckmenuitem.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkCheckMenuItemClass
_gtk_reserved2	gtkcolorbutton.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkColorButtonClass
_gtk_reserved2	gtkcolorsel.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkColorSelectionClass
_gtk_reserved2	gtkcolorseldialog.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkColorSelectionDialogClass
_gtk_reserved2	gtkcombo.h	/^        void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkComboClass
_gtk_reserved2	gtkcombobox.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkComboBoxClass
_gtk_reserved2	gtkcomboboxentry.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkComboBoxEntryClass
_gtk_reserved2	gtkcomboboxtext.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkComboBoxTextClass
_gtk_reserved2	gtkcontainer.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkContainerClass
_gtk_reserved2	gtkcurve.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkCurveClass
_gtk_reserved2	gtkdialog.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkDialogClass
_gtk_reserved2	gtkdrawingarea.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkDrawingAreaClass
_gtk_reserved2	gtkentry.h	/^  void (*_gtk_reserved2)      (void);$/;"	m	struct:_GtkEntryClass
_gtk_reserved2	gtkentrybuffer.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkEntryBufferClass
_gtk_reserved2	gtkfilesel.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkFileSelectionClass
_gtk_reserved2	gtkfontbutton.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkFontButtonClass
_gtk_reserved2	gtkfontsel.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkFontSelectionClass
_gtk_reserved2	gtkfontsel.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkFontSelectionDialogClass
_gtk_reserved2	gtkgamma.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkGammaCurveClass
_gtk_reserved2	gtkhandlebox.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkHandleBoxClass
_gtk_reserved2	gtkhsv.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkHSVClass
_gtk_reserved2	gtkiconfactory.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkIconFactoryClass
_gtk_reserved2	gtkimage.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkImageClass
_gtk_reserved2	gtkimcontext.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkIMContextClass
_gtk_reserved2	gtkimmulticontext.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkIMMulticontextClass
_gtk_reserved2	gtkinfobar.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkInfoBarClass
_gtk_reserved2	gtkinputdialog.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkInputDialogClass
_gtk_reserved2	gtkinvisible.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkInvisibleClass
_gtk_reserved2	gtkitem.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkItemClass
_gtk_reserved2	gtkitemfactory.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkItemFactoryClass
_gtk_reserved2	gtklabel.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkLabelClass
_gtk_reserved2	gtklayout.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkLayoutClass
_gtk_reserved2	gtkliststore.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkListStoreClass
_gtk_reserved2	gtkmenu.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkMenuClass
_gtk_reserved2	gtkmenubar.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkMenuBarClass
_gtk_reserved2	gtkmenuitem.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkMenuItemClass
_gtk_reserved2	gtkmenushell.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkMenuShellClass
_gtk_reserved2	gtkmenutoolbutton.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkMenuToolButtonClass
_gtk_reserved2	gtkmessagedialog.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkMessageDialogClass
_gtk_reserved2	gtkmountoperation.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkMountOperationClass
_gtk_reserved2	gtkoptionmenu.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkOptionMenuClass
_gtk_reserved2	gtkpaned.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkPanedClass
_gtk_reserved2	gtkplug.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkPlugClass
_gtk_reserved2	gtkprintoperation.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkPrintOperationClass
_gtk_reserved2	gtkprintoperationpreview.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkPrintOperationPreviewIface
_gtk_reserved2	gtkprogress.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkProgressClass
_gtk_reserved2	gtkprogressbar.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkProgressBarClass
_gtk_reserved2	gtkradioaction.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkRadioActionClass
_gtk_reserved2	gtkradiobutton.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkRadioButtonClass
_gtk_reserved2	gtkradiomenuitem.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkRadioMenuItemClass
_gtk_reserved2	gtkradiotoolbutton.h	/^  void (* _gtk_reserved2) (void);$/;"	m	struct:_GtkRadioToolButtonClass
_gtk_reserved2	gtkrange.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkRangeClass
_gtk_reserved2	gtkrc.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkRcStyleClass
_gtk_reserved2	gtkruler.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkRulerClass
_gtk_reserved2	gtkscale.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkScaleClass
_gtk_reserved2	gtkscalebutton.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkScaleButtonClass
_gtk_reserved2	gtkscrollbar.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkScrollbarClass
_gtk_reserved2	gtkscrolledwindow.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkScrolledWindowClass
_gtk_reserved2	gtkseparatortoolitem.h	/^  void (* _gtk_reserved2) (void);$/;"	m	struct:_GtkSeparatorToolItemClass
_gtk_reserved2	gtksizegroup.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkSizeGroupClass
_gtk_reserved2	gtksocket.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkSocketClass
_gtk_reserved2	gtkspinbutton.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkSpinButtonClass
_gtk_reserved2	gtkstatusbar.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkStatusbarClass
_gtk_reserved2	gtkstyle.h	/^  void (*_gtk_reserved2)  (void);$/;"	m	struct:_GtkStyleClass
_gtk_reserved2	gtktearoffmenuitem.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTearoffMenuItemClass
_gtk_reserved2	gtktextbuffer.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTextBufferClass
_gtk_reserved2	gtktextchild.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTextChildAnchorClass
_gtk_reserved2	gtktextlayout.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTextLayoutClass
_gtk_reserved2	gtktextmark.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTextMarkClass
_gtk_reserved2	gtktexttag.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTextTagClass
_gtk_reserved2	gtktexttagtable.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTextTagTableClass
_gtk_reserved2	gtktextview.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTextViewClass
_gtk_reserved2	gtktipsquery.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTipsQueryClass
_gtk_reserved2	gtktoggleaction.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkToggleActionClass
_gtk_reserved2	gtktogglebutton.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkToggleButtonClass
_gtk_reserved2	gtktoggletoolbutton.h	/^  void (* _gtk_reserved2) (void);$/;"	m	struct:_GtkToggleToolButtonClass
_gtk_reserved2	gtktoolbar.h	/^  guint            _gtk_reserved2;$/;"	m	struct:_GtkToolbar
_gtk_reserved2	gtktoolbar.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkToolbarClass
_gtk_reserved2	gtktoolbutton.h	/^  void (* _gtk_reserved2) (void);$/;"	m	struct:_GtkToolButtonClass
_gtk_reserved2	gtktoolitem.h	/^  void (* _gtk_reserved2) (void);$/;"	m	struct:_GtkToolItemClass
_gtk_reserved2	gtktoolpalette.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkToolPaletteClass
_gtk_reserved2	gtktooltips.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTooltipsClass
_gtk_reserved2	gtktreemodelfilter.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTreeModelFilterClass
_gtk_reserved2	gtktreemodelsort.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTreeModelSortClass
_gtk_reserved2	gtktreeselection.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTreeSelectionClass
_gtk_reserved2	gtktreestore.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTreeStoreClass
_gtk_reserved2	gtktreeview.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTreeViewClass
_gtk_reserved2	gtktreeviewcolumn.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkTreeViewColumnClass
_gtk_reserved2	gtkuimanager.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkUIManagerClass
_gtk_reserved2	gtkvolumebutton.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkVolumeButtonClass
_gtk_reserved2	gtkwindow.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkWindowClass
_gtk_reserved2	gtkwindow.h	/^  void (*_gtk_reserved2) (void);$/;"	m	struct:_GtkWindowGroupClass
_gtk_reserved3	gtkaboutdialog.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkAboutDialogClass
_gtk_reserved3	gtkaccelgroup.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkAccelGroupClass
_gtk_reserved3	gtkaccellabel.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkAccelLabelClass
_gtk_reserved3	gtkaccessible.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkAccessibleClass
_gtk_reserved3	gtkaction.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkActionClass
_gtk_reserved3	gtkactiongroup.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkActionGroupClass
_gtk_reserved3	gtkadjustment.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkAdjustmentClass
_gtk_reserved3	gtkassistant.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkAssistantClass
_gtk_reserved3	gtkbuilder.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkBuilderClass
_gtk_reserved3	gtkbutton.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkButtonClass
_gtk_reserved3	gtkcalendar.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkCalendar
_gtk_reserved3	gtkcellrendereraccel.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkCellRendererAccelClass
_gtk_reserved3	gtkcellrendererpixbuf.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkCellRendererPixbufClass
_gtk_reserved3	gtkcellrendererprogress.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkCellRendererProgressClass
_gtk_reserved3	gtkcellrendererspinner.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkCellRendererSpinnerClass
_gtk_reserved3	gtkcellrenderertext.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkCellRendererTextClass
_gtk_reserved3	gtkcellrenderertoggle.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkCellRendererToggleClass
_gtk_reserved3	gtkcheckbutton.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkCheckButtonClass
_gtk_reserved3	gtkcheckmenuitem.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkCheckMenuItemClass
_gtk_reserved3	gtkcolorbutton.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkColorButtonClass
_gtk_reserved3	gtkcolorsel.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkColorSelectionClass
_gtk_reserved3	gtkcolorseldialog.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkColorSelectionDialogClass
_gtk_reserved3	gtkcombo.h	/^        void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkComboClass
_gtk_reserved3	gtkcomboboxentry.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkComboBoxEntryClass
_gtk_reserved3	gtkcomboboxtext.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkComboBoxTextClass
_gtk_reserved3	gtkcontainer.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkContainerClass
_gtk_reserved3	gtkcurve.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkCurveClass
_gtk_reserved3	gtkdialog.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkDialogClass
_gtk_reserved3	gtkdrawingarea.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkDrawingAreaClass
_gtk_reserved3	gtkentrybuffer.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkEntryBufferClass
_gtk_reserved3	gtkfilesel.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkFileSelectionClass
_gtk_reserved3	gtkfontbutton.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkFontButtonClass
_gtk_reserved3	gtkfontsel.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkFontSelectionClass
_gtk_reserved3	gtkfontsel.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkFontSelectionDialogClass
_gtk_reserved3	gtkgamma.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkGammaCurveClass
_gtk_reserved3	gtkhandlebox.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkHandleBoxClass
_gtk_reserved3	gtkhsv.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkHSVClass
_gtk_reserved3	gtkiconfactory.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkIconFactoryClass
_gtk_reserved3	gtkimage.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkImageClass
_gtk_reserved3	gtkimcontext.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkIMContextClass
_gtk_reserved3	gtkimmulticontext.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkIMMulticontextClass
_gtk_reserved3	gtkinfobar.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkInfoBarClass
_gtk_reserved3	gtkinputdialog.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkInputDialogClass
_gtk_reserved3	gtkinvisible.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkInvisibleClass
_gtk_reserved3	gtkitem.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkItemClass
_gtk_reserved3	gtkitemfactory.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkItemFactoryClass
_gtk_reserved3	gtklabel.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkLabelClass
_gtk_reserved3	gtklayout.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkLayoutClass
_gtk_reserved3	gtkliststore.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkListStoreClass
_gtk_reserved3	gtkmenu.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkMenuClass
_gtk_reserved3	gtkmenubar.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkMenuBarClass
_gtk_reserved3	gtkmenutoolbutton.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkMenuToolButtonClass
_gtk_reserved3	gtkmessagedialog.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkMessageDialogClass
_gtk_reserved3	gtkmountoperation.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkMountOperationClass
_gtk_reserved3	gtkoptionmenu.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkOptionMenuClass
_gtk_reserved3	gtkpaned.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkPanedClass
_gtk_reserved3	gtkplug.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkPlugClass
_gtk_reserved3	gtkprintoperation.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkPrintOperationClass
_gtk_reserved3	gtkprintoperationpreview.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkPrintOperationPreviewIface
_gtk_reserved3	gtkprogress.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkProgressClass
_gtk_reserved3	gtkprogressbar.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkProgressBarClass
_gtk_reserved3	gtkradioaction.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkRadioActionClass
_gtk_reserved3	gtkradiobutton.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkRadioButtonClass
_gtk_reserved3	gtkradiomenuitem.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkRadioMenuItemClass
_gtk_reserved3	gtkradiotoolbutton.h	/^  void (* _gtk_reserved3) (void);$/;"	m	struct:_GtkRadioToolButtonClass
_gtk_reserved3	gtkrange.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkRangeClass
_gtk_reserved3	gtkrc.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkRcStyleClass
_gtk_reserved3	gtkruler.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkRulerClass
_gtk_reserved3	gtkscale.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkScaleClass
_gtk_reserved3	gtkscalebutton.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkScaleButtonClass
_gtk_reserved3	gtkscrollbar.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkScrollbarClass
_gtk_reserved3	gtkscrolledwindow.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkScrolledWindowClass
_gtk_reserved3	gtkseparatortoolitem.h	/^  void (* _gtk_reserved3) (void);$/;"	m	struct:_GtkSeparatorToolItemClass
_gtk_reserved3	gtksizegroup.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkSizeGroupClass
_gtk_reserved3	gtksocket.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkSocketClass
_gtk_reserved3	gtkspinbutton.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkSpinButtonClass
_gtk_reserved3	gtkstatusbar.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkStatusbarClass
_gtk_reserved3	gtkstyle.h	/^  void (*_gtk_reserved3)  (void);$/;"	m	struct:_GtkStyleClass
_gtk_reserved3	gtktearoffmenuitem.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTearoffMenuItemClass
_gtk_reserved3	gtktextbuffer.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTextBufferClass
_gtk_reserved3	gtktextchild.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTextChildAnchorClass
_gtk_reserved3	gtktextlayout.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTextLayoutClass
_gtk_reserved3	gtktextmark.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTextMarkClass
_gtk_reserved3	gtktexttag.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTextTagClass
_gtk_reserved3	gtktexttagtable.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTextTagTableClass
_gtk_reserved3	gtktextview.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTextViewClass
_gtk_reserved3	gtktipsquery.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTipsQueryClass
_gtk_reserved3	gtktoggleaction.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkToggleActionClass
_gtk_reserved3	gtktogglebutton.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkToggleButtonClass
_gtk_reserved3	gtktoggletoolbutton.h	/^  void (* _gtk_reserved3) (void);$/;"	m	struct:_GtkToggleToolButtonClass
_gtk_reserved3	gtktoolbar.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkToolbarClass
_gtk_reserved3	gtktoolbutton.h	/^  void (* _gtk_reserved3) (void);$/;"	m	struct:_GtkToolButtonClass
_gtk_reserved3	gtktoolitem.h	/^  void (* _gtk_reserved3) (void);$/;"	m	struct:_GtkToolItemClass
_gtk_reserved3	gtktoolpalette.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkToolPaletteClass
_gtk_reserved3	gtktooltips.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTooltipsClass
_gtk_reserved3	gtktreemodelfilter.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTreeModelFilterClass
_gtk_reserved3	gtktreemodelsort.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTreeModelSortClass
_gtk_reserved3	gtktreeselection.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTreeSelectionClass
_gtk_reserved3	gtktreestore.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTreeStoreClass
_gtk_reserved3	gtktreeview.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTreeViewClass
_gtk_reserved3	gtktreeviewcolumn.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkTreeViewColumnClass
_gtk_reserved3	gtkvolumebutton.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkVolumeButtonClass
_gtk_reserved3	gtkwindow.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkWindowClass
_gtk_reserved3	gtkwindow.h	/^  void (*_gtk_reserved3) (void);$/;"	m	struct:_GtkWindowGroupClass
_gtk_reserved4	gtkaccelgroup.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkAccelGroupClass
_gtk_reserved4	gtkaccellabel.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkAccelLabelClass
_gtk_reserved4	gtkaccessible.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkAccessibleClass
_gtk_reserved4	gtkaction.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkActionClass
_gtk_reserved4	gtkactiongroup.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkActionGroupClass
_gtk_reserved4	gtkadjustment.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkAdjustmentClass
_gtk_reserved4	gtkassistant.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkAssistantClass
_gtk_reserved4	gtkbuilder.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkBuilderClass
_gtk_reserved4	gtkbutton.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkButtonClass
_gtk_reserved4	gtkcalendar.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkCalendar
_gtk_reserved4	gtkcellrendereraccel.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkCellRendererAccelClass
_gtk_reserved4	gtkcellrendererpixbuf.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkCellRendererPixbufClass
_gtk_reserved4	gtkcellrendererprogress.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkCellRendererProgressClass
_gtk_reserved4	gtkcellrendererspinner.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkCellRendererSpinnerClass
_gtk_reserved4	gtkcellrenderertext.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkCellRendererTextClass
_gtk_reserved4	gtkcellrenderertoggle.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkCellRendererToggleClass
_gtk_reserved4	gtkcheckbutton.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkCheckButtonClass
_gtk_reserved4	gtkcheckmenuitem.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkCheckMenuItemClass
_gtk_reserved4	gtkcolorbutton.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkColorButtonClass
_gtk_reserved4	gtkcolorsel.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkColorSelectionClass
_gtk_reserved4	gtkcolorseldialog.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkColorSelectionDialogClass
_gtk_reserved4	gtkcombo.h	/^        void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkComboClass
_gtk_reserved4	gtkcomboboxtext.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkComboBoxTextClass
_gtk_reserved4	gtkcontainer.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkContainerClass
_gtk_reserved4	gtkcurve.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkCurveClass
_gtk_reserved4	gtkdialog.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkDialogClass
_gtk_reserved4	gtkdrawingarea.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkDrawingAreaClass
_gtk_reserved4	gtkentrybuffer.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkEntryBufferClass
_gtk_reserved4	gtkfilesel.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkFileSelectionClass
_gtk_reserved4	gtkfontbutton.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkFontButtonClass
_gtk_reserved4	gtkfontsel.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkFontSelectionClass
_gtk_reserved4	gtkfontsel.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkFontSelectionDialogClass
_gtk_reserved4	gtkgamma.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkGammaCurveClass
_gtk_reserved4	gtkhandlebox.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkHandleBoxClass
_gtk_reserved4	gtkhsv.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkHSVClass
_gtk_reserved4	gtkiconfactory.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkIconFactoryClass
_gtk_reserved4	gtkimage.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkImageClass
_gtk_reserved4	gtkimcontext.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkIMContextClass
_gtk_reserved4	gtkimmulticontext.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkIMMulticontextClass
_gtk_reserved4	gtkinfobar.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkInfoBarClass
_gtk_reserved4	gtkinputdialog.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkInputDialogClass
_gtk_reserved4	gtkinvisible.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkInvisibleClass
_gtk_reserved4	gtkitem.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkItemClass
_gtk_reserved4	gtkitemfactory.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkItemFactoryClass
_gtk_reserved4	gtklayout.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkLayoutClass
_gtk_reserved4	gtkliststore.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkListStoreClass
_gtk_reserved4	gtkmenu.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkMenuClass
_gtk_reserved4	gtkmenubar.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkMenuBarClass
_gtk_reserved4	gtkmenutoolbutton.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkMenuToolButtonClass
_gtk_reserved4	gtkmessagedialog.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkMessageDialogClass
_gtk_reserved4	gtkmountoperation.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkMountOperationClass
_gtk_reserved4	gtkoptionmenu.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkOptionMenuClass
_gtk_reserved4	gtkpaned.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkPanedClass
_gtk_reserved4	gtkplug.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkPlugClass
_gtk_reserved4	gtkprintoperation.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkPrintOperationClass
_gtk_reserved4	gtkprintoperationpreview.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkPrintOperationPreviewIface
_gtk_reserved4	gtkprogress.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkProgressClass
_gtk_reserved4	gtkprogressbar.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkProgressBarClass
_gtk_reserved4	gtkradioaction.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkRadioActionClass
_gtk_reserved4	gtkradiobutton.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkRadioButtonClass
_gtk_reserved4	gtkradiomenuitem.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkRadioMenuItemClass
_gtk_reserved4	gtkradiotoolbutton.h	/^  void (* _gtk_reserved4) (void);$/;"	m	struct:_GtkRadioToolButtonClass
_gtk_reserved4	gtkrc.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkRcStyleClass
_gtk_reserved4	gtkruler.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkRulerClass
_gtk_reserved4	gtkscalebutton.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkScaleButtonClass
_gtk_reserved4	gtkscrollbar.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkScrollbarClass
_gtk_reserved4	gtkscrolledwindow.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkScrolledWindowClass
_gtk_reserved4	gtkseparatortoolitem.h	/^  void (* _gtk_reserved4) (void);$/;"	m	struct:_GtkSeparatorToolItemClass
_gtk_reserved4	gtksizegroup.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkSizeGroupClass
_gtk_reserved4	gtksocket.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkSocketClass
_gtk_reserved4	gtkstatusbar.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkStatusbarClass
_gtk_reserved4	gtkstyle.h	/^  void (*_gtk_reserved4)  (void);$/;"	m	struct:_GtkStyleClass
_gtk_reserved4	gtktearoffmenuitem.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkTearoffMenuItemClass
_gtk_reserved4	gtktextbuffer.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkTextBufferClass
_gtk_reserved4	gtktextchild.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkTextChildAnchorClass
_gtk_reserved4	gtktextmark.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkTextMarkClass
_gtk_reserved4	gtktexttag.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkTextTagClass
_gtk_reserved4	gtktexttagtable.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkTextTagTableClass
_gtk_reserved4	gtktextview.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkTextViewClass
_gtk_reserved4	gtktipsquery.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkTipsQueryClass
_gtk_reserved4	gtktoggleaction.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkToggleActionClass
_gtk_reserved4	gtktogglebutton.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkToggleButtonClass
_gtk_reserved4	gtktoggletoolbutton.h	/^  void (* _gtk_reserved4) (void);$/;"	m	struct:_GtkToggleToolButtonClass
_gtk_reserved4	gtktoolbutton.h	/^  void (* _gtk_reserved4) (void);$/;"	m	struct:_GtkToolButtonClass
_gtk_reserved4	gtktoolitem.h	/^  void (* _gtk_reserved4) (void);$/;"	m	struct:_GtkToolItemClass
_gtk_reserved4	gtktoolpalette.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkToolPaletteClass
_gtk_reserved4	gtktooltips.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkTooltipsClass
_gtk_reserved4	gtktreemodelsort.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkTreeModelSortClass
_gtk_reserved4	gtktreeselection.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkTreeSelectionClass
_gtk_reserved4	gtktreestore.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkTreeStoreClass
_gtk_reserved4	gtktreeview.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkTreeViewClass
_gtk_reserved4	gtktreeviewcolumn.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkTreeViewColumnClass
_gtk_reserved4	gtkvolumebutton.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkVolumeButtonClass
_gtk_reserved4	gtkwindow.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkWindowClass
_gtk_reserved4	gtkwindow.h	/^  void (*_gtk_reserved4) (void);$/;"	m	struct:_GtkWindowGroupClass
_gtk_reserved5	gtkassistant.h	/^  void (*_gtk_reserved5) (void);$/;"	m	struct:_GtkAssistantClass
_gtk_reserved5	gtkbuilder.h	/^  void (*_gtk_reserved5) (void);$/;"	m	struct:_GtkBuilderClass
_gtk_reserved5	gtkentrybuffer.h	/^  void (*_gtk_reserved5) (void);$/;"	m	struct:_GtkEntryBufferClass
_gtk_reserved5	gtkimcontext.h	/^  void (*_gtk_reserved5) (void);$/;"	m	struct:_GtkIMContextClass
_gtk_reserved5	gtkinfobar.h	/^  void (*_gtk_reserved5) (void);$/;"	m	struct:_GtkInfoBarClass
_gtk_reserved5	gtkprintoperation.h	/^  void (*_gtk_reserved5) (void);$/;"	m	struct:_GtkPrintOperationClass
_gtk_reserved5	gtkprintoperationpreview.h	/^  void (*_gtk_reserved5) (void);$/;"	m	struct:_GtkPrintOperationPreviewIface
_gtk_reserved5	gtkstyle.h	/^  void (*_gtk_reserved5)  (void);$/;"	m	struct:_GtkStyleClass
_gtk_reserved5	gtktextbuffer.h	/^  void (*_gtk_reserved5) (void);$/;"	m	struct:_GtkTextBufferClass
_gtk_reserved5	gtktextview.h	/^  void (*_gtk_reserved5) (void);$/;"	m	struct:_GtkTextViewClass
_gtk_reserved5	gtktoolpalette.h	/^  void (*_gtk_reserved5) (void);$/;"	m	struct:_GtkToolPaletteClass
_gtk_reserved5	gtkwidget.h	/^  void (*_gtk_reserved5) (void);$/;"	m	struct:_GtkWidgetClass
_gtk_reserved6	gtkbuilder.h	/^  void (*_gtk_reserved6) (void);$/;"	m	struct:_GtkBuilderClass
_gtk_reserved6	gtkimcontext.h	/^  void (*_gtk_reserved6) (void);$/;"	m	struct:_GtkIMContextClass
_gtk_reserved6	gtkinfobar.h	/^  void (*_gtk_reserved6) (void);$/;"	m	struct:_GtkInfoBarClass
_gtk_reserved6	gtkprintoperation.h	/^  void (*_gtk_reserved6) (void);$/;"	m	struct:_GtkPrintOperationClass
_gtk_reserved6	gtkprintoperationpreview.h	/^  void (*_gtk_reserved6) (void);$/;"	m	struct:_GtkPrintOperationPreviewIface
_gtk_reserved6	gtkstyle.h	/^  void (*_gtk_reserved6)  (void);$/;"	m	struct:_GtkStyleClass
_gtk_reserved6	gtktextview.h	/^  void (*_gtk_reserved6) (void);$/;"	m	struct:_GtkTextViewClass
_gtk_reserved6	gtktoolpalette.h	/^  void (*_gtk_reserved6) (void);$/;"	m	struct:_GtkToolPaletteClass
_gtk_reserved6	gtkwidget.h	/^  void (*_gtk_reserved6) (void);$/;"	m	struct:_GtkWidgetClass
_gtk_reserved7	gtkbuilder.h	/^  void (*_gtk_reserved7) (void);$/;"	m	struct:_GtkBuilderClass
_gtk_reserved7	gtkprintoperationpreview.h	/^  void (*_gtk_reserved7) (void);$/;"	m	struct:_GtkPrintOperationPreviewIface
_gtk_reserved7	gtkstyle.h	/^  void (*_gtk_reserved7)  (void);$/;"	m	struct:_GtkStyleClass
_gtk_reserved7	gtktextview.h	/^  void (*_gtk_reserved7) (void);$/;"	m	struct:_GtkTextViewClass
_gtk_reserved7	gtkwidget.h	/^  void (*_gtk_reserved7) (void);$/;"	m	struct:_GtkWidgetClass
_gtk_reserved8	gtkbuilder.h	/^  void (*_gtk_reserved8) (void);$/;"	m	struct:_GtkBuilderClass
_gtk_reserved8	gtkstyle.h	/^  void (*_gtk_reserved8)  (void);$/;"	m	struct:_GtkStyleClass
_gtk_reserved9	gtkstyle.h	/^  void (*_gtk_reserved9)  (void);$/;"	m	struct:_GtkStyleClass
_gtk_scale_clear_layout	gtkscale.h	/^void              _gtk_scale_clear_layout      (GtkScale        *scale);$/;"	p
_gtk_scale_format_value	gtkscale.h	/^gchar           * _gtk_scale_format_value      (GtkScale        *scale,$/;"	p
_gtk_scale_get_value_size	gtkscale.h	/^void              _gtk_scale_get_value_size    (GtkScale        *scale,$/;"	p
_gtk_scrolled_window_get_scrollbar_spacing	gtkscrolledwindow.h	/^gint _gtk_scrolled_window_get_scrollbar_spacing (GtkScrolledWindow *scrolled_window);$/;"	p
_gtk_selection_incr_event	gtkselection.h	/^gboolean _gtk_selection_incr_event	  (GdkWindow         *window,$/;"	p
_gtk_selection_notify	gtkselection.h	/^gboolean _gtk_selection_notify		  (GtkWidget         *widget,$/;"	p
_gtk_selection_property_notify	gtkselection.h	/^gboolean _gtk_selection_property_notify	  (GtkWidget         *widget,$/;"	p
_gtk_selection_request	gtkselection.h	/^gboolean _gtk_selection_request		  (GtkWidget  	     *widget,$/;"	p
_gtk_settings_handle_event	gtksettings.h	/^void                _gtk_settings_handle_event        (GdkEventSetting    *event);$/;"	p
_gtk_settings_parse_convert	gtksettings.h	/^gboolean	    _gtk_settings_parse_convert       (GtkRcPropertyParser parser,$/;"	p
_gtk_settings_reset_rc_values	gtksettings.h	/^void _gtk_settings_reset_rc_values            (GtkSettings            *settings);$/;"	p
_gtk_settings_set_property_value_from_rc	gtksettings.h	/^void _gtk_settings_set_property_value_from_rc (GtkSettings            *settings,$/;"	p
_gtk_size_group_compute_requisition	gtksizegroup.h	/^void _gtk_size_group_compute_requisition   (GtkWidget      *widget,$/;"	p
_gtk_size_group_get_child_requisition	gtksizegroup.h	/^void _gtk_size_group_get_child_requisition (GtkWidget      *widget,$/;"	p
_gtk_size_group_queue_resize	gtksizegroup.h	/^void _gtk_size_group_queue_resize          (GtkWidget      *widget);$/;"	p
_gtk_style_init_for_settings	gtkstyle.h	/^void          _gtk_style_init_for_settings   (GtkStyle           *style,$/;"	p
_gtk_style_peek_property_value	gtkstyle.h	/^const GValue* _gtk_style_peek_property_value (GtkStyle           *style,$/;"	p
_gtk_style_shade	gtkstyle.h	/^void          _gtk_style_shade               (const GdkColor     *a,$/;"	p
_gtk_text_buffer_get_btree	gtktextbuffer.h	/^GtkTextBTree*   _gtk_text_buffer_get_btree             (GtkTextBuffer      *buffer);$/;"	p
_gtk_text_buffer_get_line_log_attrs	gtktextbuffer.h	/^const PangoLogAttr* _gtk_text_buffer_get_line_log_attrs (GtkTextBuffer     *buffer,$/;"	p
_gtk_text_buffer_notify_will_remove_tag	gtktextbuffer.h	/^void _gtk_text_buffer_notify_will_remove_tag (GtkTextBuffer *buffer,$/;"	p
_gtk_text_buffer_spew	gtktextbuffer.h	/^void            _gtk_text_buffer_spew                  (GtkTextBuffer      *buffer);$/;"	p
_gtk_text_layout_get_block_cursor	gtktextlayout.h	/^gboolean _gtk_text_layout_get_block_cursor    (GtkTextLayout     *layout,$/;"	p
_gtk_text_layout_get_line_xrange	gtktextlayout.h	/^void     _gtk_text_layout_get_line_xrange     (GtkTextLayout     *layout,$/;"	p
_gtk_text_tag_table_add_buffer	gtktexttagtable.h	/^void _gtk_text_tag_table_add_buffer    (GtkTextTagTable *table,$/;"	p
_gtk_text_tag_table_remove_buffer	gtktexttagtable.h	/^void _gtk_text_tag_table_remove_buffer (GtkTextTagTable *table,$/;"	p
_gtk_tool_button_get_button	gtktoolbutton.h	/^GtkWidget *_gtk_tool_button_get_button (GtkToolButton *button);$/;"	p
_gtk_tool_item_create_menu_proxy	gtktoolitem.h	/^gboolean       _gtk_tool_item_create_menu_proxy        (GtkToolItem *tool_item);$/;"	p
_gtk_toolbar_elide_underscores	gtktoolbar.h	/^gchar *         _gtk_toolbar_elide_underscores      (const gchar         *original);$/;"	p
_gtk_toolbar_get_default_space_size	gtktoolbar.h	/^gint            _gtk_toolbar_get_default_space_size (void);$/;"	p
_gtk_toolbar_paint_space_line	gtktoolbar.h	/^void            _gtk_toolbar_paint_space_line       (GtkWidget           *widget,$/;"	p
_gtk_tooltip_focus_in	gtktooltip.h	/^void _gtk_tooltip_focus_in               (GtkWidget          *widget);$/;"	p
_gtk_tooltip_focus_out	gtktooltip.h	/^void _gtk_tooltip_focus_out              (GtkWidget          *widget);$/;"	p
_gtk_tooltip_handle_event	gtktooltip.h	/^void _gtk_tooltip_handle_event           (GdkEvent           *event);$/;"	p
_gtk_tooltip_hide	gtktooltip.h	/^void _gtk_tooltip_hide                   (GtkWidget          *widget);$/;"	p
_gtk_tooltip_toggle_keyboard_mode	gtktooltip.h	/^void _gtk_tooltip_toggle_keyboard_mode   (GtkWidget          *widget);$/;"	p
_gtk_translate_keyboard_accel_state	gtkprivate.h	/^gboolean _gtk_translate_keyboard_accel_state     (GdkKeymap       *keymap,$/;"	p
_gtk_vbutton_box_get_layout_default	gtkvbbox.h	/^GtkButtonBoxStyle _gtk_vbutton_box_get_layout_default (void);$/;"	p
_gtk_widget_buildable_finish_accelerator	gtkwidget.h	/^void         _gtk_widget_buildable_finish_accelerator (GtkWidget *widget,$/;"	p
_gtk_widget_find_at_coords	gtktooltip.h	/^GtkWidget * _gtk_widget_find_at_coords   (GdkWindow          *window,$/;"	p
_gtk_widget_get_accel_path	gtkwidget.h	/^const gchar* _gtk_widget_get_accel_path   (GtkWidget           *widget,$/;"	p
_gtk_widget_get_aux_info	gtkwidget.h	/^GtkWidgetAuxInfo *_gtk_widget_get_aux_info                (GtkWidget    *widget,$/;"	p
_gtk_widget_get_cursor_color	gtkstyle.h	/^void   _gtk_widget_get_cursor_color (GtkWidget          *widget,$/;"	p
_gtk_widget_get_cursor_gc	gtkstyle.h	/^GdkGC *_gtk_widget_get_cursor_gc    (GtkWidget          *widget);$/;"	p
_gtk_widget_get_pointer_window	gtkwidget.h	/^GdkWindow *_gtk_widget_get_pointer_window  (GtkWidget      *widget);$/;"	p
_gtk_widget_grab_notify	gtkwidget.h	/^void              _gtk_widget_grab_notify                 (GtkWidget    *widget,$/;"	p
_gtk_widget_is_pointer_widget	gtkwidget.h	/^gboolean   _gtk_widget_is_pointer_widget   (GtkWidget      *widget);$/;"	p
_gtk_widget_peek_colormap	gtkwidget.h	/^GdkColormap* _gtk_widget_peek_colormap (void);$/;"	p
_gtk_widget_propagate_composited_changed	gtkwidget.h	/^void		  _gtk_widget_propagate_composited_changed (GtkWidget    *widget);$/;"	p
_gtk_widget_propagate_hierarchy_changed	gtkwidget.h	/^void              _gtk_widget_propagate_hierarchy_changed (GtkWidget    *widget,$/;"	p
_gtk_widget_propagate_screen_changed	gtkwidget.h	/^void              _gtk_widget_propagate_screen_changed    (GtkWidget    *widget,$/;"	p
_gtk_widget_set_has_default	gtkwidget.h	/^void              _gtk_widget_set_has_default             (GtkWidget    *widget,$/;"	p
_gtk_widget_set_has_grab	gtkwidget.h	/^void              _gtk_widget_set_has_grab                (GtkWidget    *widget,$/;"	p
_gtk_widget_set_is_toplevel	gtkwidget.h	/^void              _gtk_widget_set_is_toplevel             (GtkWidget    *widget,$/;"	p
_gtk_widget_set_pointer_window	gtkwidget.h	/^void	   _gtk_widget_set_pointer_window  (GtkWidget      *widget,$/;"	p
_gtk_widget_synthesize_crossing	gtkwidget.h	/^void       _gtk_widget_synthesize_crossing (GtkWidget      *from,$/;"	p
_gtk_window_constrain_size	gtkwindow.h	/^void            _gtk_window_constrain_size     (GtkWindow *window,$/;"	p
_gtk_window_internal_set_focus	gtkwindow.h	/^void            _gtk_window_internal_set_focus (GtkWindow *window,$/;"	p
_gtk_window_keys_foreach	gtkwindow.h	/^void _gtk_window_keys_foreach (GtkWindow               *window,$/;"	p
_gtk_window_query_nonaccels	gtkwindow.h	/^gboolean	_gtk_window_query_nonaccels	(GtkWindow	*window,$/;"	p
_gtk_window_reposition	gtkwindow.h	/^void            _gtk_window_reposition         (GtkWindow *window,$/;"	p
_gtk_window_set_has_toplevel_focus	gtkwindow.h	/^void            _gtk_window_set_has_toplevel_focus (GtkWindow *window,$/;"	p
_gtk_window_set_is_active	gtkwindow.h	/^void            _gtk_window_set_is_active          (GtkWindow *window,$/;"	p
_gtk_window_set_is_toplevel	gtkwindow.h	/^void            _gtk_window_set_is_toplevel        (GtkWindow *window,$/;"	p
_gtk_window_unset_focus_and_default	gtkwindow.h	/^void            _gtk_window_unset_focus_and_default (GtkWindow *window,$/;"	p
_set_tooltip	gtktoolitem.h	/^  gpointer _set_tooltip;$/;"	m	struct:_GtkToolItemClass
abbrev	gtkruler.h	/^  gchar *abbrev;$/;"	m	struct:_GtkRulerMetric
abort_column_resize	gtkclist.h	/^  void   (*abort_column_resize) (GtkCList       *clist);$/;"	m	struct:_GtkCListClass
accel_changed	gtkaccelgroup.h	/^  void	(*accel_changed)	(GtkAccelGroup	*accel_group,$/;"	m	struct:_GtkAccelGroupClass
accel_cleared	gtkcellrendereraccel.h	/^  void (* accel_cleared) (GtkCellRendererAccel *accel,$/;"	m	struct:_GtkCellRendererAccelClass
accel_edited	gtkcellrendereraccel.h	/^  void (* accel_edited)  (GtkCellRendererAccel *accel,$/;"	m	struct:_GtkCellRendererAccelClass
accel_flags	gtkaccelgroup.h	/^  guint           accel_flags : 16;$/;"	m	struct:_GtkAccelKey
accel_group	gtkitemfactory.h	/^  GtkAccelGroup		*accel_group;$/;"	m	struct:_GtkItemFactory
accel_key	gtkaccelgroup.h	/^  guint           accel_key;$/;"	m	struct:_GtkAccelKey
accel_mods	gtkaccelgroup.h	/^  GdkModifierType accel_mods;$/;"	m	struct:_GtkAccelKey
accel_path_quark	gtkaccelgroup.h	/^  GQuark       accel_path_quark;$/;"	m	struct:_GtkAccelGroupEntry
accel_seperator	gtkaccellabel.h	/^  gchar		*accel_seperator;$/;"	m	struct:_GtkAccelLabelClass
accelerator	gtkactiongroup.h	/^  const gchar     *accelerator;$/;"	m	struct:_GtkActionEntry
accelerator	gtkactiongroup.h	/^  const gchar     *accelerator;$/;"	m	struct:_GtkToggleActionEntry
accelerator	gtkactiongroup.h	/^  const gchar *accelerator;$/;"	m	struct:_GtkRadioActionEntry
accelerator	gtkitemfactory.h	/^  gchar *accelerator;$/;"	m	struct:_GtkItemFactoryEntry
accelerator	gtkitemfactory.h	/^  gchar *accelerator;$/;"	m	struct:__anon95
accept_position	gtkpaned.h	/^  gboolean (* accept_position)     (GtkPaned	  *paned);$/;"	m	struct:_GtkPanedClass
act_mode_enter	gtkprogress.h	/^  void (* act_mode_enter)   (GtkProgress *progress);$/;"	m	struct:_GtkProgressClass
action_activated	gtkentrycompletion.h	/^  void     (* action_activated) (GtkEntryCompletion *completion,$/;"	m	struct:_GtkEntryCompletionClass
action_area	gtkfilesel.h	/^  GtkWidget *action_area;$/;"	m	struct:_GtkFileSelection
actions_changed	gtkuimanager.h	/^  void (* actions_changed)  (GtkUIManager *merge);$/;"	m	struct:_GtkUIManagerClass
activate	gtkaction.h	/^  void       (* activate)           (GtkAction    *action);$/;"	m	struct:_GtkActionClass
activate	gtkbutton.h	/^  void (* activate) (GtkButton *button);$/;"	m	struct:_GtkButtonClass
activate	gtkcellrenderer.h	/^  gboolean         (* activate)      (GtkCellRenderer      *cell,$/;"	m	struct:_GtkCellRendererClass
activate	gtkentry.h	/^  void (* activate)           (GtkEntry             *entry);$/;"	m	struct:_GtkEntryClass
activate	gtkexpander.h	/^  void        (* activate) (GtkExpander *expander);$/;"	m	struct:_GtkExpanderClass
activate	gtkmenuitem.h	/^  void (* activate)             (GtkMenuItem *menu_item);$/;"	m	struct:_GtkMenuItemClass
activate	gtkoldeditable.h	/^  void (* activate)        (GtkOldEditable *editable);$/;"	m	struct:_GtkOldEditableClass
activate	gtkstatusicon.h	/^  void     (* activate)             (GtkStatusIcon  *status_icon);$/;"	m	struct:_GtkStatusIconClass
activate_current	gtkmenushell.h	/^  void (*activate_current) (GtkMenuShell *menu_shell,$/;"	m	struct:_GtkMenuShellClass
activate_cursor_item	gtkiconview.h	/^  gboolean (* activate_cursor_item)  (GtkIconView      *icon_view);$/;"	m	struct:_GtkIconViewClass
activate_default	gtkwindow.h	/^  void     (* activate_default)        (GtkWindow       *window);$/;"	m	struct:_GtkWindowClass
activate_focus	gtkwindow.h	/^  void     (* activate_focus)          (GtkWindow       *window);$/;"	m	struct:_GtkWindowClass
activate_id	gtkcombo.h	/^	guint activate_id;$/;"	m	struct:_GtkCombo
activate_item	gtkmenuitem.h	/^  void (* activate_item)        (GtkMenuItem *menu_item);$/;"	m	struct:_GtkMenuItemClass
activate_link	gtkaboutdialog.h	/^  gboolean (*activate_link) (GtkAboutDialog *dialog,$/;"	m	struct:_GtkAboutDialogClass
activate_link	gtklabel.h	/^  gboolean (*activate_link) (GtkLabel       *label,$/;"	m	struct:_GtkLabelClass
activate_signal	gtkwidget.h	/^  guint activate_signal;$/;"	m	struct:_GtkWidgetClass
active_tips_data	gtktooltips.h	/^  GtkTooltipsData *active_tips_data;$/;"	m	struct:_GtkTooltips
activity_mode	gtkprogress.h	/^  guint          activity_mode : 1;$/;"	m	struct:_GtkProgress
add	gtkcontainer.h	/^  void    (*add)       		(GtkContainer	 *container,$/;"	m	struct:_GtkContainerClass
add_attribute	gtkcelllayout.h	/^  void (* add_attribute)      (GtkCellLayout         *cell_layout,$/;"	m	struct:_GtkCellLayoutIface
add_child	gtkbuildable.h	/^  void          (* add_child)              (GtkBuildable  *buildable,$/;"	m	struct:_GtkBuildableIface
add_filter	gtkrecentchooser.h	/^  void              (* add_filter)         (GtkRecentChooser  *chooser,$/;"	m	struct:_GtkRecentChooserIface
add_mode	gtklist.h	/^  guint add_mode:1;$/;"	m	struct:_GtkList
add_widget	gtkuimanager.h	/^  void (* add_widget)       (GtkUIManager *merge,$/;"	m	struct:_GtkUIManagerClass
adjust_bounds	gtkrange.h	/^  void (* adjust_bounds)    (GtkRange     *range,$/;"	m	struct:_GtkRangeClass
adjustment	gtkprogress.h	/^  GtkAdjustment *adjustment;$/;"	m	struct:_GtkProgress
age	gtkrecentfilter.h	/^  gint age;$/;"	m	struct:_GtkRecentFilterInfo
allocate_child	gtktextlayout.h	/^  void (*allocate_child)        (GtkTextLayout     *layout,$/;"	m	struct:_GtkTextLayoutClass
allocation	gtktable.h	/^  guint16 allocation;$/;"	m	struct:_GtkTableRowCol
anchor	gtkclist.h	/^  gint anchor;$/;"	m	struct:_GtkCList
anchor	gtklist.h	/^  gint anchor;$/;"	m	struct:_GtkList
anchor_state	gtkclist.h	/^  GtkStateType anchor_state;$/;"	m	struct:_GtkCList
anchor_state	gtklist.h	/^  GtkStateType anchor_state;$/;"	m	struct:_GtkList
anim	gtkimage.h	/^    GtkImageAnimationData anim;$/;"	m	union:_GtkImage::__anon84
anim	gtkimage.h	/^  GdkPixbufAnimation *anim;$/;"	m	struct:_GtkImageAnimationData
app_exec	gtkrecentmanager.h	/^  gchar *app_exec;$/;"	m	struct:_GtkRecentData
app_name	gtkrecentmanager.h	/^  gchar *app_name;$/;"	m	struct:_GtkRecentData
appearance	gtktextlayout.h	/^  GtkTextAppearance appearance;$/;"	m	struct:_GtkTextAttrAppearance
appearance	gtktexttag.h	/^  GtkTextAppearance appearance;$/;"	m	struct:_GtkTextAttributes
applications	gtkrecentfilter.h	/^  const gchar **applications;$/;"	m	struct:_GtkRecentFilterInfo
apply	gtkassistant.h	/^  void (* apply)   (GtkAssistant *assistant);$/;"	m	struct:_GtkAssistantClass
apply_tag	gtktextbuffer.h	/^  void (* apply_tag)          (GtkTextBuffer *buffer,$/;"	m	struct:_GtkTextBufferClass
area	gtkclist.h	/^  GdkRectangle area;$/;"	m	struct:_GtkCListColumn
arg_type	gtkbindings.h	/^  GType		 arg_type;$/;"	m	struct:_GtkBindingArg
args	gtkbindings.h	/^  GtkBindingArg		*args;$/;"	m	struct:_GtkBindingSignal
attach_count	gtkstyle.h	/^  gint attach_count;$/;"	m	struct:_GtkStyle
attr	gtktextlayout.h	/^  PangoAttribute attr;$/;"	m	struct:_GtkTextAttrAppearance
auto_resize	gtkclist.h	/^  guint auto_resize    : 1;$/;"	m	struct:_GtkCListColumn
background	gtkclist.h	/^  GdkColor background;$/;"	m	struct:_GtkCListRow
backspace	gtkentry.h	/^  void (* backspace)          (GtkEntry             *entry);$/;"	m	struct:_GtkEntryClass
backspace	gtktextview.h	/^  void (* backspace)             (GtkTextView *text_view);$/;"	m	struct:_GtkTextViewClass
base	gtkrc.h	/^  GdkColor   base[5];$/;"	m	struct:_GtkRcStyle
base	gtkstyle.h	/^  GdkColor base[5];$/;"	m	struct:_GtkStyle
base_class_init_func	gtktypeutils.h	/^  GtkClassInitFunc	 base_class_init_func;$/;"	m	struct:_GtkTypeInfo
base_gc	gtkstyle.h	/^  GdkGC *base_gc[5];$/;"	m	struct:_GtkStyle
base_iface	gtkeditable.h	/^  GTypeInterface		   base_iface;$/;"	m	struct:_GtkEditableClass
base_iface	gtkorientable.h	/^  GTypeInterface base_iface;$/;"	m	struct:_GtkOrientableIface
base_iface	gtkrecentchooser.h	/^  GTypeInterface base_iface;$/;"	m	struct:_GtkRecentChooserIface
begin_print	gtkprintoperation.h	/^  void     (*begin_print)        (GtkPrintOperation *operation,$/;"	m	struct:_GtkPrintOperationClass
begin_user_action	gtktextbuffer.h	/^  void (* begin_user_action)  (GtkTextBuffer *buffer);$/;"	m	struct:_GtkTextBufferClass
bg	gtkrc.h	/^  GdkColor   bg[5];$/;"	m	struct:_GtkRcStyle
bg	gtkstyle.h	/^  GdkColor bg[5];$/;"	m	struct:_GtkStyle
bg_color	gtktexttag.h	/^  GdkColor bg_color;$/;"	m	struct:_GtkTextAppearance
bg_full_height	gtktexttag.h	/^  guint bg_full_height : 1;$/;"	m	struct:_GtkTextAttributes
bg_gc	gtkclist.h	/^  GdkGC *bg_gc;$/;"	m	struct:_GtkCList
bg_gc	gtkstyle.h	/^  GdkGC *bg_gc[5];$/;"	m	struct:_GtkStyle
bg_gc	gtktext.h	/^  GdkGC *bg_gc;			\/* gc for drawing background pixmap *\/$/;"	m	struct:_GtkText
bg_pixmap	gtkstyle.h	/^  GdkPixmap *bg_pixmap[5];$/;"	m	struct:_GtkStyle
bg_pixmap_name	gtkrc.h	/^  gchar *bg_pixmap_name[5];$/;"	m	struct:_GtkRcStyle
bg_set	gtkclist.h	/^  guint bg_set     : 1;$/;"	m	struct:_GtkCListRow
bg_stipple	gtktexttag.h	/^  GdkBitmap *bg_stipple;$/;"	m	struct:_GtkTextAppearance
bin	gtkalignment.h	/^  GtkBin bin;$/;"	m	struct:_GtkAlignment
bin	gtkbutton.h	/^  GtkBin bin;$/;"	m	struct:_GtkButton
bin	gtkeventbox.h	/^  GtkBin bin;$/;"	m	struct:_GtkEventBox
bin	gtkexpander.h	/^  GtkBin              bin;$/;"	m	struct:_GtkExpander
bin	gtkframe.h	/^  GtkBin bin;$/;"	m	struct:_GtkFrame
bin	gtkhandlebox.h	/^  GtkBin bin;$/;"	m	struct:_GtkHandleBox
bin	gtkitem.h	/^  GtkBin bin;$/;"	m	struct:_GtkItem
bin	gtkviewport.h	/^  GtkBin bin;$/;"	m	struct:_GtkViewport
bin	gtkwindow.h	/^  GtkBin bin;$/;"	m	struct:_GtkWindow
binding_set	gtkbindings.h	/^  GtkBindingSet		*binding_set;$/;"	m	struct:_GtkBindingEntry
black	gtkstyle.h	/^  GdkColor black;$/;"	m	struct:_GtkStyle
black_gc	gtkstyle.h	/^  GdkGC *black_gc;$/;"	m	struct:_GtkStyle
block_cursor	gtktextlayout.h	/^  GdkRectangle block_cursor;$/;"	m	struct:_GtkTextLineDisplay
bool_data	gtktypeutils.h	/^    gboolean bool_data;$/;"	m	union:_GtkArg::__anon68
bottom	gtkstyle.h	/^  gint bottom;$/;"	m	struct:_GtkBorder
bottom_attach	gtktable.h	/^  guint16 bottom_attach;$/;"	m	struct:_GtkTableChild
bottom_margin	gtktextlayout.h	/^  gint bottom_margin;$/;"	m	struct:_GtkTextLineDisplay
box	gtkbbox.h	/^  GtkBox box;$/;"	m	struct:_GtkButtonBox
box	gtkhbox.h	/^  GtkBox box;$/;"	m	struct:_GtkHBox
box	gtkvbox.h	/^  GtkBox box;$/;"	m	struct:_GtkVBox
bpp	gtkpreview.h	/^  guint16 bpp;$/;"	m	struct:_GtkPreview
buffer	gtkpreview.h	/^  guchar *buffer;$/;"	m	struct:_GtkPreview
buffer	gtktextlayout.h	/^  GtkTextBuffer *buffer;$/;"	m	struct:_GtkTextLayout
buffer_height	gtkpreview.h	/^  guint16 buffer_height;$/;"	m	struct:_GtkPreview
buffer_width	gtkpreview.h	/^  guint16 buffer_width;$/;"	m	struct:_GtkPreview
build_insensitive	gtkpixmap.h	/^  guint build_insensitive : 1;$/;"	m	struct:_GtkPixmap
button	gtkclist.h	/^  GtkWidget *button;$/;"	m	struct:_GtkCListColumn
button	gtkcolorbutton.h	/^  GtkButton button;$/;"	m	struct:_GtkColorButton
button	gtkcombo.h	/^	GtkWidget *button;$/;"	m	struct:_GtkCombo
button	gtkfontbutton.h	/^  GtkButton button;$/;"	m	struct:_GtkFontButton
button	gtkoptionmenu.h	/^  GtkButton button;$/;"	m	struct:_GtkOptionMenu
button	gtktext.h	/^  guint button;			\/* currently pressed mouse button *\/$/;"	m	struct:_GtkText
button	gtktogglebutton.h	/^  GtkButton button;$/;"	m	struct:_GtkToggleButton
button_actions	gtkclist.h	/^  guint8 button_actions[5];$/;"	m	struct:_GtkCList
button_area	gtkfilesel.h	/^  GtkWidget *button_area;$/;"	m	struct:_GtkFileSelection
button_box	gtkhbbox.h	/^  GtkButtonBox button_box;$/;"	m	struct:_GtkHButtonBox
button_box	gtkvbbox.h	/^  GtkButtonBox button_box;$/;"	m	struct:_GtkVButtonBox
button_passive	gtkclist.h	/^  guint button_passive : 1;$/;"	m	struct:_GtkCListColumn
button_press_event	gtkstatusicon.h	/^  gboolean (* button_press_event)   (GtkStatusIcon  *status_icon,$/;"	m	struct:_GtkStatusIconClass
button_press_event	gtkwidget.h	/^  gboolean (* button_press_event)	(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
button_release_event	gtkstatusicon.h	/^  gboolean (* button_release_event) (GtkStatusIcon  *status_icon,$/;"	m	struct:_GtkStatusIconClass
button_release_event	gtkwidget.h	/^  gboolean (* button_release_event)	(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
button_type	gtktoolbutton.h	/^  GType button_type;$/;"	m	struct:_GtkToolButtonClass
c	gtkpreview.h	/^  guchar c[4];$/;"	m	union:_GtkDitherInfo
callback	gtkactiongroup.h	/^  GCallback  callback;$/;"	m	struct:_GtkActionEntry
callback	gtkactiongroup.h	/^  GCallback  callback;$/;"	m	struct:_GtkToggleActionEntry
callback	gtkitemfactory.h	/^  GtkItemFactoryCallback callback;$/;"	m	struct:_GtkItemFactoryEntry
callback	gtkitemfactory.h	/^  GtkMenuCallback callback;$/;"	m	struct:__anon95
callback_action	gtkitemfactory.h	/^  guint			 callback_action;$/;"	m	struct:_GtkItemFactoryEntry
callback_data	gtkitemfactory.h	/^  gpointer callback_data;$/;"	m	struct:__anon95
caller	gtktipsquery.h	/^  GtkWidget	*caller;$/;"	m	struct:_GtkTipsQuery
can_activate_accel	gtkwidget.h	/^  gboolean     (*can_activate_accel) (GtkWidget *widget,$/;"	m	struct:_GtkWidgetClass
cancel	gtkassistant.h	/^  void (* cancel)  (GtkAssistant *assistant);$/;"	m	struct:_GtkAssistantClass
cancel	gtkmenushell.h	/^  void (*cancel)           (GtkMenuShell *menu_shell);$/;"	m	struct:_GtkMenuShellClass
cancel_button	gtkfilesel.h	/^  GtkWidget *cancel_button;$/;"	m	struct:_GtkFileSelection
cancel_position	gtkpaned.h	/^  gboolean (* cancel_position)     (GtkPaned	  *paned);$/;"	m	struct:_GtkPanedClass
case_sensitive	gtkcombo.h	/^	guint case_sensitive:1;$/;"	m	struct:_GtkCombo
cell	gtkclist.h	/^  GtkCListCellInfo cell;$/;"	m	struct:_GtkCListDestInfo
cell	gtkclist.h	/^  GtkCell *cell;$/;"	m	struct:_GtkCListRow
cell_size_request	gtkclist.h	/^  void   (*cell_size_request)   (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
ch	gtktext.h	/^  union { GdkWChar *wc; guchar  *ch; } text;$/;"	m	union:_GtkText::__anon97
ch	gtktext.h	/^  union { GdkWChar *wc; guchar *ch; } scratch_buffer;$/;"	m	union:_GtkText::__anon98
change_current_page	gtknotebook.h	/^  gboolean (* change_current_page) (GtkNotebook   *notebook,$/;"	m	struct:_GtkNotebookClass
change_focus_row_expansion	gtkctree.h	/^  void (*change_focus_row_expansion) (GtkCTree *ctree,$/;"	m	struct:_GtkCTreeClass
change_value	gtkrange.h	/^  gboolean (* change_value) (GtkRange     *range,$/;"	m	struct:_GtkRangeClass
change_value	gtkspinbutton.h	/^  void (*change_value) (GtkSpinButton *spin_button,$/;"	m	struct:_GtkSpinButtonClass
changed	gtkadjustment.h	/^  void (* changed)	 (GtkAdjustment *adjustment);$/;"	m	struct:_GtkAdjustmentClass
changed	gtkcombobox.h	/^  void     (* changed)          (GtkComboBox *combo_box);$/;"	m	struct:_GtkComboBoxClass
changed	gtkeditable.h	/^  void (* changed)                  (GtkEditable    *editable);$/;"	m	struct:_GtkEditableClass
changed	gtkhsv.h	/^  void (* changed) (GtkHSV          *hsv);$/;"	m	struct:_GtkHSVClass
changed	gtkicontheme.h	/^  void (* changed)  (GtkIconTheme *icon_theme);$/;"	m	struct:_GtkIconThemeClass
changed	gtkoptionmenu.h	/^  void (*changed) (GtkOptionMenu *option_menu);$/;"	m	struct:_GtkOptionMenuClass
changed	gtkradioaction.h	/^  void       (* changed) (GtkRadioAction *action, GtkRadioAction *current);$/;"	m	struct:_GtkRadioActionClass
changed	gtkrecentmanager.h	/^  void (*changed) (GtkRecentManager *manager);$/;"	m	struct:_GtkRecentManagerClass
changed	gtktextbuffer.h	/^  void (* changed)         (GtkTextBuffer *buffer);$/;"	m	struct:_GtkTextBufferClass
changed	gtktextlayout.h	/^  void  (*changed)              (GtkTextLayout     *layout,$/;"	m	struct:_GtkTextLayoutClass
changed	gtktreeselection.h	/^  void (* changed) (GtkTreeSelection *selection);$/;"	m	struct:_GtkTreeSelectionClass
char_data	gtktypeutils.h	/^    gchar char_data;$/;"	m	union:_GtkArg::__anon68
check_button	gtkradiobutton.h	/^  GtkCheckButton check_button;$/;"	m	struct:_GtkRadioButton
check_menu_item	gtkradiomenuitem.h	/^  GtkCheckMenuItem check_menu_item;$/;"	m	struct:_GtkRadioMenuItem
check_resize	gtkcontainer.h	/^  void    (*check_resize)	(GtkContainer	 *container);$/;"	m	struct:_GtkContainerClass
child_attached	gtkhandlebox.h	/^  void	(*child_attached)	(GtkHandleBox	*handle_box,$/;"	m	struct:_GtkHandleBoxClass
child_detached	gtkhandlebox.h	/^  void	(*child_detached)	(GtkHandleBox	*handle_box,$/;"	m	struct:_GtkHandleBoxClass
child_notify	gtkwidget.h	/^  void (* child_notify)        (GtkWidget	 *widget,$/;"	m	struct:_GtkWidgetClass
child_type	gtkcontainer.h	/^  GType   (*child_type)		(GtkContainer	 *container);$/;"	m	struct:_GtkContainerClass
children	gtkctree.h	/^  GtkCTreeNode *children;$/;"	m	struct:_GtkCTreeRow
children	gtklist.h	/^  GList *children;$/;"	m	struct:_GtkList
children	gtktree.h	/^  GList *children;$/;"	m	struct:_GtkTree
class_branch_pspecs	gtkbindings.h	/^  GSList		*class_branch_pspecs;$/;"	m	struct:_GtkBindingSet
class_init_func	gtktypeutils.h	/^  GtkClassInitFunc	 class_init_func;$/;"	m	struct:_GtkTypeInfo
class_size	gtktypeutils.h	/^  guint			 class_size;$/;"	m	struct:_GtkTypeInfo
clear	gtkcelllayout.h	/^  void (* clear)              (GtkCellLayout         *cell_layout);$/;"	m	struct:_GtkCellLayoutIface
clear	gtkclist.h	/^  void   (*clear)               (GtkCList       *clist);$/;"	m	struct:_GtkCListClass
clear_attributes	gtkcelllayout.h	/^  void (* clear_attributes)   (GtkCellLayout         *cell_layout,$/;"	m	struct:_GtkCellLayoutIface
click_cell	gtkclist.h	/^  GtkCListCellInfo click_cell;$/;"	m	struct:_GtkCList
click_column	gtkclist.h	/^  void   (*click_column)        (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
clicked	gtkbutton.h	/^  void (* clicked)  (GtkButton *button);$/;"	m	struct:_GtkButtonClass
clicked	gtktoolbutton.h	/^  void       (* clicked)             (GtkToolButton    *tool_item);$/;"	m	struct:_GtkToolButtonClass
clicked	gtktreeviewcolumn.h	/^  void (*clicked) (GtkTreeViewColumn *tree_column);$/;"	m	struct:_GtkTreeViewColumnClass
client_event	gtkwidget.h	/^  gboolean (* client_event)		(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
clipboard_text	gtkoldeditable.h	/^  gchar *clipboard_text;$/;"	m	struct:_GtkOldEditable
clist	gtkctree.h	/^  GtkCList clist;$/;"	m	struct:_GtkCTree
clist_window	gtkclist.h	/^  GdkWindow *clist_window;$/;"	m	struct:_GtkCList
clist_window_height	gtkclist.h	/^  gint clist_window_height;$/;"	m	struct:_GtkCList
clist_window_width	gtkclist.h	/^  gint clist_window_width;$/;"	m	struct:_GtkCList
clone	gtkstyle.h	/^  GtkStyle *(*clone)             (GtkStyle               *style);$/;"	m	struct:_GtkStyleClass
close	gtkassistant.h	/^  void (* close)   (GtkAssistant *assistant);$/;"	m	struct:_GtkAssistantClass
close	gtkdialog.h	/^  void (* close)    (GtkDialog *dialog);$/;"	m	struct:_GtkDialogClass
close	gtkinfobar.h	/^  void (* close)    (GtkInfoBar *info_bar);$/;"	m	struct:_GtkInfoBarClass
closure	gtkaccelgroup.h	/^  GClosure    *closure;$/;"	m	struct:_GtkAccelGroupEntry
cmpl_state	gtkfilesel.h	/^  gpointer   cmpl_state;$/;"	m	struct:_GtkFileSelection
collapse	gtktreeitem.h	/^  void (* collapse) (GtkTreeItem *tree_item);$/;"	m	struct:_GtkTreeItemClass
color_changed	gtkcolorsel.h	/^  void (*color_changed)	(GtkColorSelection *color_selection);$/;"	m	struct:_GtkColorSelectionClass
color_flags	gtkrc.h	/^  GtkRcFlags color_flags[5];$/;"	m	struct:_GtkRcStyle
color_set	gtkcolorbutton.h	/^  void (* color_set) (GtkColorButton *cp);$/;"	m	struct:_GtkColorButtonClass
colormap	gtkstyle.h	/^  GdkColormap *colormap;$/;"	m	struct:_GtkStyle
column	gtkclist.h	/^  GtkCListColumn *column;$/;"	m	struct:_GtkCList
column	gtkclist.h	/^  gint column;$/;"	m	struct:_GtkCListCellInfo
column_title_area	gtkclist.h	/^  GdkRectangle column_title_area;$/;"	m	struct:_GtkCList
columns	gtkclist.h	/^  gint columns;$/;"	m	struct:_GtkCList
columns_changed	gtktreeview.h	/^  void     (* columns_changed)            (GtkTreeView       *tree_view);$/;"	m	struct:_GtkTreeViewClass
commit	gtkimcontext.h	/^  void     (*commit)               (GtkIMContext *context, const gchar *str);$/;"	m	struct:_GtkIMContextClass
compare	gtkclist.h	/^  GtkCListCompareFunc compare;$/;"	m	struct:_GtkCList
composite_name	gtkcontainer.h	/^  gchar*  (*composite_name)	(GtkContainer	 *container,$/;"	m	struct:_GtkContainerClass
composited_changed	gtkwidget.h	/^  void         (* composited_changed) (GtkWidget *widget);$/;"	m	struct:_GtkWidgetClass
compute_child_allocation	gtkframe.h	/^  void (*compute_child_allocation) (GtkFrame *frame, GtkAllocation *allocation);$/;"	m	struct:_GtkFrameClass
configure_event	gtkwidget.h	/^  gboolean (* configure_event)		(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
connect_proxy	gtkaction.h	/^  void       (* connect_proxy)      (GtkAction *action,$/;"	m	struct:_GtkActionClass
connect_proxy	gtkuimanager.h	/^  void (* connect_proxy)    (GtkUIManager *merge,$/;"	m	struct:_GtkUIManagerClass
connect_widget_destroyed	gtkaccessible.h	/^  void (*connect_widget_destroyed)              (GtkAccessible     *accessible);$/;"	m	struct:_GtkAccessibleClass
construct_child	gtkbuildable.h	/^  GObject *     (* construct_child)        (GtkBuildable  *buildable,$/;"	m	struct:_GtkBuildableIface
container	gtkbin.h	/^  GtkContainer container;$/;"	m	struct:_GtkBin
container	gtkbox.h	/^  GtkContainer container;$/;"	m	struct:_GtkBox
container	gtkclist.h	/^  GtkContainer container;$/;"	m	struct:_GtkCList
container	gtkfixed.h	/^  GtkContainer container;$/;"	m	struct:_GtkFixed
container	gtklist.h	/^  GtkContainer container;$/;"	m	struct:_GtkList
container	gtkmenushell.h	/^  GtkContainer container;$/;"	m	struct:_GtkMenuShell
container	gtknotebook.h	/^  GtkContainer container;$/;"	m	struct:_GtkNotebook
container	gtkpaned.h	/^  GtkContainer container;$/;"	m	struct:_GtkPaned
container	gtkscrolledwindow.h	/^  GtkBin container;$/;"	m	struct:_GtkScrolledWindow
container	gtksocket.h	/^  GtkContainer container;$/;"	m	struct:_GtkSocket
container	gtktable.h	/^  GtkContainer container;$/;"	m	struct:_GtkTable
container	gtktoolbar.h	/^  GtkContainer container;$/;"	m	struct:_GtkToolbar
container	gtktree.h	/^  GtkContainer container;$/;"	m	struct:_GtkTree
contains	gtkfilefilter.h	/^  GtkFileFilterFlags contains;$/;"	m	struct:_GtkFileFilterInfo
contains	gtkrecentfilter.h	/^  GtkRecentFilterFlags contains;$/;"	m	struct:_GtkRecentFilterInfo
context_id	gtkimmodule.h	/^  const gchar *context_id;$/;"	m	struct:_GtkIMContextInfo
context_name	gtkimmodule.h	/^  const gchar *context_name;$/;"	m	struct:_GtkIMContextInfo
copy	gtkstyle.h	/^  void (*copy)                  (GtkStyle               *style,$/;"	m	struct:_GtkStyleClass
copy_clipboard	gtkentry.h	/^  void (* copy_clipboard)     (GtkEntry             *entry);$/;"	m	struct:_GtkEntryClass
copy_clipboard	gtklabel.h	/^  void (* copy_clipboard)  (GtkLabel       *label);$/;"	m	struct:_GtkLabelClass
copy_clipboard	gtkoldeditable.h	/^  void (* copy_clipboard)  (GtkOldEditable *editable);$/;"	m	struct:_GtkOldEditableClass
copy_clipboard	gtktextview.h	/^  void (* copy_clipboard)  (GtkTextView *text_view);$/;"	m	struct:_GtkTextViewClass
create_custom_widget	gtkprintoperation.h	/^  GtkWidget *(*create_custom_widget) (GtkPrintOperation *operation);$/;"	m	struct:_GtkPrintOperationClass
create_menu	gtkaction.h	/^  GtkWidget *(* create_menu)        (GtkAction *action);$/;"	m	struct:_GtkActionClass
create_menu_item	gtkaction.h	/^  GtkWidget *(* create_menu_item)   (GtkAction *action);$/;"	m	struct:_GtkActionClass
create_menu_proxy	gtktoolitem.h	/^  gboolean   (* create_menu_proxy)    (GtkToolItem *tool_item);$/;"	m	struct:_GtkToolItemClass
create_rc_style	gtkrc.h	/^  GtkRcStyle * (*create_rc_style) (GtkRcStyle *rc_style);$/;"	m	struct:_GtkRcStyleClass
create_style	gtkrc.h	/^  GtkStyle * (*create_style) (GtkRcStyle *rc_style);$/;"	m	struct:_GtkRcStyleClass
create_tool_item	gtkaction.h	/^  GtkWidget *(* create_tool_item)   (GtkAction *action);$/;"	m	struct:_GtkActionClass
create_window	gtknotebook.h	/^  GtkNotebook * (* create_window) (GtkNotebook       *notebook,$/;"	m	struct:_GtkNotebookClass
ctlpoint	gtkcurve.h	/^  gfloat (*ctlpoint)[2];        \/* array of control points *\/$/;"	m	struct:_GtkCurve
current	gtkbindings.h	/^  GtkBindingEntry	*current;$/;"	m	struct:_GtkBindingSet
current_button	gtkcombo.h	/^        guint16 current_button;$/;"	m	struct:_GtkCombo
current_font	gtktext.h	/^  GtkTextFont *current_font;	\/* Text font for current style *\/$/;"	m	struct:_GtkText
current_indent	gtktree.h	/^  guint current_indent;$/;"	m	struct:_GtkTree
current_line	gtktext.h	/^  GList *current_line;$/;"	m	struct:_GtkText
current_pos	gtkoldeditable.h	/^  guint      current_pos;$/;"	m	struct:_GtkOldEditable
cursor_at_line_end	gtktextlayout.h	/^  guint cursor_at_line_end : 1;$/;"	m	struct:_GtkTextLineDisplay
cursor_changed	gtktreeview.h	/^  void     (* cursor_changed)             (GtkTreeView       *tree_view);$/;"	m	struct:_GtkTreeViewClass
cursor_char	gtktext.h	/^  GdkWChar        cursor_char;        \/* Character to redraw. *\/$/;"	m	struct:_GtkText
cursor_char_offset	gtktext.h	/^  gchar           cursor_char_offset; \/* Distance from baseline of the font. *\/$/;"	m	struct:_GtkText
cursor_direction	gtktextlayout.h	/^  guint cursor_direction : 2;$/;"	m	struct:_GtkTextLayout
cursor_drag	gtkclist.h	/^  GdkCursor *cursor_drag;$/;"	m	struct:_GtkCList
cursor_drawn_level	gtktext.h	/^  gint            cursor_drawn_level; \/* How many people have undrawn. *\/$/;"	m	struct:_GtkText
cursor_mark	gtktext.h	/^  GtkPropertyMark cursor_mark;        \/* Where it is in the buffer. *\/$/;"	m	struct:_GtkText
cursor_on_match	gtkentrycompletion.h	/^  gboolean (* cursor_on_match)  (GtkEntryCompletion *completion,$/;"	m	struct:_GtkEntryCompletionClass
cursor_pos_x	gtktext.h	/^  gint            cursor_pos_x;       \/* Position of cursor. *\/$/;"	m	struct:_GtkText
cursor_pos_y	gtktext.h	/^  gint            cursor_pos_y;       \/* Baseline of line cursor is drawn on. *\/$/;"	m	struct:_GtkText
cursor_type	gtkcurve.h	/^  gint cursor_type;$/;"	m	struct:_GtkCurve
cursor_virtual_x	gtktext.h	/^  gint            cursor_virtual_x;   \/* Where it would be if it could be. *\/$/;"	m	struct:_GtkText
cursor_visible	gtktextlayout.h	/^  guint cursor_visible : 1;$/;"	m	struct:_GtkTextLayout
cursors	gtktextlayout.h	/^  GSList *cursors;$/;"	m	struct:_GtkTextLineDisplay
cursors_invalid	gtktextlayout.h	/^  guint cursors_invalid : 1;$/;"	m	struct:_GtkTextLineDisplay
curve_type	gtkcurve.h	/^  GtkCurveType curve_type;$/;"	m	struct:_GtkCurve
curve_type_changed	gtkcurve.h	/^  void (* curve_type_changed) (GtkCurve *curve);$/;"	m	struct:_GtkCurveClass
custom_finished	gtkbuildable.h	/^  void          (* custom_finished)        (GtkBuildable  *buildable,$/;"	m	struct:_GtkBuildableIface
custom_tag_end	gtkbuildable.h	/^  void          (* custom_tag_end)         (GtkBuildable  *buildable,$/;"	m	struct:_GtkBuildableIface
custom_tag_start	gtkbuildable.h	/^  gboolean      (* custom_tag_start)       (GtkBuildable  *buildable,$/;"	m	struct:_GtkBuildableIface
custom_widget_apply	gtkprintoperation.h	/^  void       (*custom_widget_apply)  (GtkPrintOperation *operation,$/;"	m	struct:_GtkPrintOperationClass
cut_clipboard	gtkentry.h	/^  void (* cut_clipboard)      (GtkEntry             *entry);$/;"	m	struct:_GtkEntryClass
cut_clipboard	gtkoldeditable.h	/^  void (* cut_clipboard)   (GtkOldEditable *editable);$/;"	m	struct:_GtkOldEditableClass
cut_clipboard	gtktextview.h	/^  void (* cut_clipboard)   (GtkTextView *text_view);$/;"	m	struct:_GtkTextViewClass
cycle_child_focus	gtkpaned.h	/^  gboolean (* cycle_child_focus)   (GtkPaned      *paned,$/;"	m	struct:_GtkPanedClass
cycle_handle_focus	gtkpaned.h	/^  gboolean (* cycle_handle_focus)  (GtkPaned      *paned,$/;"	m	struct:_GtkPanedClass
d	gtkbindings.h	/^  } d;$/;"	m	struct:_GtkBindingArg	typeref:union:_GtkBindingArg::__anon5
d	gtktypeutils.h	/^      gpointer d;$/;"	m	struct:_GtkArg::__anon68::__anon69
d	gtktypeutils.h	/^  } d;$/;"	m	struct:_GtkArg	typeref:union:_GtkArg::__anon68
dark	gtkstyle.h	/^  GdkColor dark[5];$/;"	m	struct:_GtkStyle
dark_gc	gtkstyle.h	/^  GdkGC *dark_gc[5];$/;"	m	struct:_GtkStyle
data	gtkclist.h	/^  gpointer data;$/;"	m	struct:_GtkCListRow
day_selected	gtkcalendar.h	/^  void (* day_selected)			(GtkCalendar *calendar);$/;"	m	struct:_GtkCalendarClass
day_selected_double_click	gtkcalendar.h	/^  void (* day_selected_double_click)	(GtkCalendar *calendar);$/;"	m	struct:_GtkCalendarClass
deactivate	gtkmenushell.h	/^  void (*deactivate)     (GtkMenuShell *menu_shell);$/;"	m	struct:_GtkMenuShellClass
default_locales	gtkimmodule.h	/^  const gchar *default_locales;$/;"	m	struct:_GtkIMContextInfo
default_style	gtktextlayout.h	/^  GtkTextAttributes *default_style;$/;"	m	struct:_GtkTextLayout
default_tab_width	gtktext.h	/^  gint default_tab_width;$/;"	m	struct:_GtkText
delay	gtktooltips.h	/^  guint   delay : 30;$/;"	m	struct:_GtkTooltips
delete_event	gtkwidget.h	/^  gboolean (* delete_event)		(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
delete_from_cursor	gtkentry.h	/^  void (* delete_from_cursor) (GtkEntry             *entry,$/;"	m	struct:_GtkEntryClass
delete_from_cursor	gtktextview.h	/^  void (* delete_from_cursor)    (GtkTextView  *text_view,$/;"	m	struct:_GtkTextViewClass
delete_range	gtktextbuffer.h	/^  void (* delete_range)     (GtkTextBuffer *buffer,$/;"	m	struct:_GtkTextBufferClass
delete_surrounding	gtkimcontext.h	/^  gboolean (*delete_surrounding)   (GtkIMContext *context,$/;"	m	struct:_GtkIMContextClass
delete_text	gtkeditable.h	/^  void (* delete_text)              (GtkEditable    *editable,$/;"	m	struct:_GtkEditableClass
delete_text	gtkentrybuffer.h	/^  guint        (*delete_text)            (GtkEntryBuffer *buffer,$/;"	m	struct:_GtkEntryBufferClass
deleted_text	gtkentrybuffer.h	/^  void         (*deleted_text)           (GtkEntryBuffer *buffer,$/;"	m	struct:_GtkEntryBufferClass
depth	gtkstyle.h	/^  gint depth;$/;"	m	struct:_GtkStyle
description	gtkrecentmanager.h	/^  gchar *description;$/;"	m	struct:_GtkRecentData
deselect	gtkitem.h	/^  void (* deselect) (GtkItem *item);$/;"	m	struct:_GtkItemClass
destroy	gtkclist.h	/^  GDestroyNotify destroy;$/;"	m	struct:_GtkCListRow
destroy	gtkobject.h	/^  void (*destroy)  (GtkObject *object);$/;"	m	struct:_GtkObjectClass
destroy_event	gtkwidget.h	/^  gboolean (* destroy_event)		(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
destroyed	gtkbindings.h	/^  guint			destroyed : 1;$/;"	m	struct:_GtkBindingEntry
dialog	gtkinputdialog.h	/^  GtkDialog dialog;$/;"	m	struct:_GtkInputDialog
dir_list	gtkfilesel.h	/^  GtkWidget *dir_list;$/;"	m	struct:_GtkFileSelection
direction	gtktextlayout.h	/^  GtkTextDirection direction;$/;"	m	struct:_GtkTextLineDisplay
direction	gtktexttag.h	/^  GtkTextDirection direction;$/;"	m	struct:_GtkTextAttributes
direction_changed	gtkwidget.h	/^  void (* direction_changed)   (GtkWidget        *widget,$/;"	m	struct:_GtkWidgetClass
disable_device	gtkinputdialog.h	/^  void (* disable_device)              (GtkInputDialog    *inputd,$/;"	m	struct:_GtkInputDialogClass
disconnect_proxy	gtkaction.h	/^  void       (* disconnect_proxy)   (GtkAction *action,$/;"	m	struct:_GtkActionClass
disconnect_proxy	gtkuimanager.h	/^  void (* disconnect_proxy) (GtkUIManager *merge,$/;"	m	struct:_GtkUIManagerClass
dispatch_child_properties_changed	gtkwidget.h	/^  void (*dispatch_child_properties_changed) (GtkWidget   *widget,$/;"	m	struct:_GtkWidgetClass
display_name	gtkfilefilter.h	/^  const gchar *display_name;$/;"	m	struct:_GtkFileFilterInfo
display_name	gtkrecentfilter.h	/^  const gchar *display_name;$/;"	m	struct:_GtkRecentFilterInfo
display_name	gtkrecentmanager.h	/^  gchar *display_name;$/;"	m	struct:_GtkRecentData
dither	gtkpreview.h	/^  GdkRgbDither dither;$/;"	m	struct:_GtkPreview
do_delete_text	gtkeditable.h	/^  void (* do_delete_text)           (GtkEditable    *editable,$/;"	m	struct:_GtkEditableClass
do_insert_text	gtkeditable.h	/^  void (* do_insert_text)           (GtkEditable    *editable,$/;"	m	struct:_GtkEditableClass
domain	gtkimmodule.h	/^  const gchar *domain;$/;"	m	struct:_GtkIMContextInfo
domain_dirname	gtkimmodule.h	/^  const gchar *domain_dirname;$/;"	m	struct:_GtkIMContextInfo
done	gtkprintoperation.h	/^  void     (*done)               (GtkPrintOperation *operation,$/;"	m	struct:_GtkPrintOperationClass
double_data	gtkbindings.h	/^    gdouble	 double_data;$/;"	m	union:_GtkBindingArg::__anon5
double_data	gtktypeutils.h	/^    gdouble double_data;$/;"	m	union:_GtkArg::__anon68
drag_begin	gtkwidget.h	/^  void (* drag_begin)	           (GtkWidget	       *widget,$/;"	m	struct:_GtkWidgetClass
drag_button	gtkclist.h	/^  guint8 drag_button;$/;"	m	struct:_GtkCList
drag_compare	gtkctree.h	/^  GtkCTreeCompareDragFunc drag_compare;$/;"	m	struct:_GtkCTree
drag_data_delete	gtktreednd.h	/^  gboolean     (* drag_data_delete)     (GtkTreeDragSource *drag_source,$/;"	m	struct:_GtkTreeDragSourceIface
drag_data_delete	gtkwidget.h	/^  void (* drag_data_delete)        (GtkWidget	       *widget,$/;"	m	struct:_GtkWidgetClass
drag_data_get	gtktreednd.h	/^  gboolean     (* drag_data_get)        (GtkTreeDragSource   *drag_source,$/;"	m	struct:_GtkTreeDragSourceIface
drag_data_get	gtkwidget.h	/^  void (* drag_data_get)           (GtkWidget          *widget,$/;"	m	struct:_GtkWidgetClass
drag_data_received	gtktreednd.h	/^  gboolean     (* drag_data_received) (GtkTreeDragDest   *drag_dest,$/;"	m	struct:_GtkTreeDragDestIface
drag_data_received	gtkwidget.h	/^  void (* drag_data_received)      (GtkWidget          *widget,$/;"	m	struct:_GtkWidgetClass
drag_drop	gtkwidget.h	/^  gboolean (* drag_drop)           (GtkWidget	       *widget,$/;"	m	struct:_GtkWidgetClass
drag_end	gtkwidget.h	/^  void (* drag_end)	           (GtkWidget	       *widget,$/;"	m	struct:_GtkWidgetClass
drag_highlight_pos	gtkclist.h	/^  GtkCListDragPos drag_highlight_pos;$/;"	m	struct:_GtkCList
drag_highlight_row	gtkclist.h	/^  gint drag_highlight_row;$/;"	m	struct:_GtkCList
drag_leave	gtkwidget.h	/^  void (* drag_leave)	           (GtkWidget	       *widget,$/;"	m	struct:_GtkWidgetClass
drag_motion	gtkwidget.h	/^  gboolean (* drag_motion)         (GtkWidget	       *widget,$/;"	m	struct:_GtkWidgetClass
drag_pos	gtkclist.h	/^  gint drag_pos;$/;"	m	struct:_GtkCList
drag_pos	gtklist.h	/^  gint drag_pos;$/;"	m	struct:_GtkList
drag_selection	gtklist.h	/^  guint drag_selection:1;$/;"	m	struct:_GtkList
draw_arrow	gtkstyle.h	/^  void (*draw_arrow)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_bg	gtktexttag.h	/^  guint draw_bg : 1;$/;"	m	struct:_GtkTextAppearance
draw_box	gtkstyle.h	/^  void (*draw_box)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_box_gap	gtkstyle.h	/^  void (*draw_box_gap)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_check	gtkstyle.h	/^  void (*draw_check)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_diamond	gtkstyle.h	/^  void (*draw_diamond)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_drag_highlight	gtkclist.h	/^  void   (*draw_drag_highlight) (GtkCList        *clist,$/;"	m	struct:_GtkCListClass
draw_expander	gtkstyle.h	/^  void (*draw_expander)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_extension	gtkstyle.h	/^  void (*draw_extension)	(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_flat_box	gtkstyle.h	/^  void (*draw_flat_box)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_focus	gtkstyle.h	/^  void (*draw_focus)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_handle	gtkstyle.h	/^  void (*draw_handle)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_hline	gtkstyle.h	/^  void (*draw_hline)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_indicator	gtkcheckbutton.h	/^  void (* draw_indicator) (GtkCheckButton *check_button,$/;"	m	struct:_GtkCheckButtonClass
draw_indicator	gtkcheckmenuitem.h	/^  void (* draw_indicator) (GtkCheckMenuItem *check_menu_item,$/;"	m	struct:_GtkCheckMenuItemClass
draw_layout	gtkstyle.h	/^  void (*draw_layout)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_option	gtkstyle.h	/^  void (*draw_option)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_page	gtkprintoperation.h	/^  void     (*draw_page)          (GtkPrintOperation *operation,$/;"	m	struct:_GtkPrintOperationClass
draw_polygon	gtkstyle.h	/^  void (*draw_polygon)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_pos	gtkruler.h	/^  void (* draw_pos)   (GtkRuler *ruler);$/;"	m	struct:_GtkRulerClass
draw_resize_grip	gtkstyle.h	/^  void (*draw_resize_grip)      (GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_row	gtkclist.h	/^  void   (*draw_row)            (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
draw_shadow	gtkstyle.h	/^  void (*draw_shadow)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_shadow_gap	gtkstyle.h	/^  void (*draw_shadow_gap)	(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_slider	gtkstyle.h	/^  void (*draw_slider)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_spinner	gtkstyle.h	/^  void (*draw_spinner)          (GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_string	gtkstyle.h	/^  void (*draw_string)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_tab	gtkstyle.h	/^  void (*draw_tab)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
draw_ticks	gtkruler.h	/^  void (* draw_ticks) (GtkRuler *ruler);$/;"	m	struct:_GtkRulerClass
draw_value	gtkscale.h	/^  void (* draw_value) (GtkScale *scale);$/;"	m	struct:_GtkScaleClass
draw_vline	gtkstyle.h	/^  void (*draw_vline)		(GtkStyle		*style,$/;"	m	struct:_GtkStyleClass
dummy1	gtktextiter.h	/^  gpointer dummy1;$/;"	m	struct:_GtkTextIter
dummy10	gtktextiter.h	/^  gpointer dummy10;$/;"	m	struct:_GtkTextIter
dummy11	gtktextiter.h	/^  gint dummy11;$/;"	m	struct:_GtkTextIter
dummy12	gtktextiter.h	/^  gint dummy12;$/;"	m	struct:_GtkTextIter
dummy13	gtktextiter.h	/^  gint dummy13;$/;"	m	struct:_GtkTextIter
dummy14	gtktextiter.h	/^  gpointer dummy14;$/;"	m	struct:_GtkTextIter
dummy2	gtktextiter.h	/^  gpointer dummy2;$/;"	m	struct:_GtkTextIter
dummy3	gtktextiter.h	/^  gint dummy3;$/;"	m	struct:_GtkTextIter
dummy4	gtktextiter.h	/^  gint dummy4;$/;"	m	struct:_GtkTextIter
dummy5	gtktextiter.h	/^  gint dummy5;$/;"	m	struct:_GtkTextIter
dummy6	gtktextiter.h	/^  gint dummy6;$/;"	m	struct:_GtkTextIter
dummy7	gtktextiter.h	/^  gint dummy7;$/;"	m	struct:_GtkTextIter
dummy8	gtktextiter.h	/^  gint dummy8;$/;"	m	struct:_GtkTextIter
dummy9	gtktextiter.h	/^  gpointer dummy9;$/;"	m	struct:_GtkTextIter
editable	gtkoldeditable.h	/^  guint      editable : 1;$/;"	m	struct:_GtkOldEditable
editable	gtktexttag.h	/^  guint editable : 1;$/;"	m	struct:_GtkTextAttributes
edited	gtkcellrenderertext.h	/^  void (* edited) (GtkCellRendererText *cell_renderer_text,$/;"	m	struct:_GtkCellRendererTextClass
editing_canceled	gtkcellrenderer.h	/^  void (* editing_canceled) (GtkCellRenderer *cell);$/;"	m	struct:_GtkCellRendererClass
editing_done	gtkcelleditable.h	/^  void (* editing_done)  (GtkCellEditable *cell_editable);$/;"	m	struct:_GtkCellEditableIface
editing_started	gtkcellrenderer.h	/^  void (* editing_started)  (GtkCellRenderer *cell,$/;"	m	struct:_GtkCellRendererClass
embedded	gtkplug.h	/^  void (*embedded) (GtkPlug *plug);$/;"	m	struct:_GtkPlugClass
emit_always	gtktipsquery.h	/^  guint		emit_always : 1;$/;"	m	struct:_GtkTipsQuery
empty	gtktable.h	/^  guint empty : 1;$/;"	m	struct:_GtkTableRowCol
enable_device	gtkinputdialog.h	/^  void (* enable_device)               (GtkInputDialog    *inputd,$/;"	m	struct:_GtkInputDialogClass
enabled	gtktooltips.h	/^  guint	  enabled : 1;$/;"	m	struct:_GtkTooltips
end	gtkprintsettings.h	/^  gint end;$/;"	m	struct:_GtkPageRange
end_preview	gtkprintoperationpreview.h	/^  void              (*end_preview)    (GtkPrintOperationPreview *preview);$/;"	m	struct:_GtkPrintOperationPreviewIface
end_print	gtkprintoperation.h	/^  void     (*end_print)          (GtkPrintOperation *operation,$/;"	m	struct:_GtkPrintOperationClass
end_selection	gtkclist.h	/^  void   (*end_selection)       (GtkCList       *clist);$/;"	m	struct:_GtkCListClass
end_selection	gtklistitem.h	/^  void (*end_selection)     (GtkListItem   *list_item);$/;"	m	struct:_GtkListItemClass
end_user_action	gtktextbuffer.h	/^  void (* end_user_action)    (GtkTextBuffer *buffer);$/;"	m	struct:_GtkTextBufferClass
engine_specified	gtkrc.h	/^  guint engine_specified : 1;	\/* The RC file specified the engine *\/$/;"	m	struct:_GtkRcStyle
enter	gtkbutton.h	/^  void (* enter)    (GtkButton *button);$/;"	m	struct:_GtkButtonClass
enter_notify_event	gtkwidget.h	/^  gboolean (* enter_notify_event)	(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
entries	gtkbindings.h	/^  GtkBindingEntry	*entries;$/;"	m	struct:_GtkBindingSet
entry	gtkcombo.h	/^	GtkWidget *entry;$/;"	m	struct:_GtkCombo
entry	gtkspinbutton.h	/^  GtkEntry entry;$/;"	m	struct:_GtkSpinButton
entry_change_id	gtkcombo.h	/^	guint entry_change_id;$/;"	m	struct:_GtkCombo
event	gtktexttag.h	/^  gboolean (* event) (GtkTextTag        *tag,$/;"	m	struct:_GtkTextTagClass
event	gtkwidget.h	/^  gboolean (* event)			(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
expand	gtkbox.h	/^  guint expand : 1;$/;"	m	struct:_GtkBoxChild
expand	gtkpreview.h	/^  guint expand : 1;$/;"	m	struct:_GtkPreview
expand	gtktable.h	/^  guint expand : 1;$/;"	m	struct:_GtkTableRowCol
expand	gtktreeitem.h	/^  void (* expand)   (GtkTreeItem *tree_item);$/;"	m	struct:_GtkTreeItemClass
expand_collapse_cursor_row	gtktreeview.h	/^  gboolean (* expand_collapse_cursor_row) (GtkTreeView       *tree_view,$/;"	m	struct:_GtkTreeViewClass
expanded	gtkctree.h	/^  guint expanded : 1;$/;"	m	struct:_GtkCTreeRow
expanded	gtktreeitem.h	/^  guint expanded : 1;$/;"	m	struct:_GtkTreeItem
expander_style	gtkctree.h	/^  guint expander_style : 2;$/;"	m	struct:_GtkCTree
expose_event	gtkwidget.h	/^  gboolean (* expose_event)		(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
extend_selection	gtkclist.h	/^  void   (*extend_selection)    (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
extend_selection	gtklistitem.h	/^  void (*extend_selection)  (GtkListItem   *list_item,$/;"	m	struct:_GtkListItemClass
extra_data	gtkitemfactory.h	/^  gconstpointer extra_data;$/;"	m	struct:_GtkItemFactoryEntry
f	gtktypeutils.h	/^      GCallback f;$/;"	m	struct:_GtkArg::__anon68::__anon69
fake_unselect_all	gtkclist.h	/^  void   (*fake_unselect_all)   (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
fg	gtkrc.h	/^  GdkColor   fg[5];$/;"	m	struct:_GtkRcStyle
fg	gtkstyle.h	/^  GdkColor fg[5];$/;"	m	struct:_GtkStyle
fg_color	gtktexttag.h	/^  GdkColor fg_color;$/;"	m	struct:_GtkTextAppearance
fg_gc	gtkclist.h	/^  GdkGC *fg_gc;$/;"	m	struct:_GtkCList
fg_gc	gtkstyle.h	/^  GdkGC *fg_gc[5];$/;"	m	struct:_GtkStyle
fg_set	gtkclist.h	/^  guint fg_set     : 1;$/;"	m	struct:_GtkCListRow
fg_stipple	gtktexttag.h	/^  GdkBitmap *fg_stipple;$/;"	m	struct:_GtkTextAppearance
file_list	gtkfilesel.h	/^  GtkWidget *file_list;$/;"	m	struct:_GtkFileSelection
file_set	gtkfilechooserbutton.h	/^  void (* file_set) (GtkFileChooserButton *fc);$/;"	m	struct:_GtkFileChooserButtonClass
filename	gtkfilefilter.h	/^  const gchar *filename;$/;"	m	struct:_GtkFileFilterInfo
fileop_c_dir	gtkfilesel.h	/^  GtkWidget *fileop_c_dir;$/;"	m	struct:_GtkFileSelection
fileop_del_file	gtkfilesel.h	/^  GtkWidget *fileop_del_file;$/;"	m	struct:_GtkFileSelection
fileop_dialog	gtkfilesel.h	/^  GtkWidget *fileop_dialog;$/;"	m	struct:_GtkFileSelection
fileop_entry	gtkfilesel.h	/^  GtkWidget *fileop_entry;$/;"	m	struct:_GtkFileSelection
fileop_file	gtkfilesel.h	/^  gchar     *fileop_file;$/;"	m	struct:_GtkFileSelection
fileop_ren_file	gtkfilesel.h	/^  GtkWidget *fileop_ren_file;$/;"	m	struct:_GtkFileSelection
fill	gtkbox.h	/^  guint fill : 1;$/;"	m	struct:_GtkBoxChild
filter_keypress	gtkimcontext.h	/^  gboolean (*filter_keypress)     (GtkIMContext   *context,$/;"	m	struct:_GtkIMContextClass
first_cut_pixels	gtktext.h	/^  guint first_cut_pixels;$/;"	m	struct:_GtkText
first_line_start_index	gtktext.h	/^  guint first_line_start_index;$/;"	m	struct:_GtkText
first_onscreen_hor_pixel	gtktext.h	/^  guint first_onscreen_hor_pixel;$/;"	m	struct:_GtkText
first_onscreen_ver_pixel	gtktext.h	/^  guint first_onscreen_ver_pixel;$/;"	m	struct:_GtkText
flags	gtkclist.h	/^  guint16 flags;$/;"	m	struct:_GtkCList
flags	gtkselection.h	/^  guint     flags;$/;"	m	struct:_GtkTargetPair
flags	gtkselection.h	/^  guint  flags;$/;"	m	struct:_GtkTargetEntry
float_data	gtktypeutils.h	/^    gfloat float_data;$/;"	m	union:_GtkArg::__anon68
focus	gtkwidget.h	/^  gboolean (* focus)           (GtkWidget        *widget,$/;"	m	struct:_GtkWidgetClass
focus_header_column	gtkclist.h	/^  gint focus_header_column;$/;"	m	struct:_GtkCList
focus_in	gtkimcontext.h	/^  void     (*focus_in)            (GtkIMContext   *context);$/;"	m	struct:_GtkIMContextClass
focus_in_event	gtkwidget.h	/^  gboolean (* focus_in_event)		(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
focus_out	gtkimcontext.h	/^  void     (*focus_out)           (GtkIMContext   *context);$/;"	m	struct:_GtkIMContextClass
focus_out_event	gtkwidget.h	/^  gboolean (* focus_out_event)		(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
focus_row	gtkclist.h	/^  gint focus_row;$/;"	m	struct:_GtkCList
focus_tab	gtknotebook.h	/^  gboolean (* focus_tab)       (GtkNotebook       *notebook,$/;"	m	struct:_GtkNotebookClass
font	gtktexttag.h	/^  PangoFontDescription *font;$/;"	m	struct:_GtkTextAttributes
font_desc	gtkrc.h	/^  PangoFontDescription *font_desc;$/;"	m	struct:_GtkRcStyle
font_desc	gtkstyle.h	/^  PangoFontDescription *font_desc;$/;"	m	struct:_GtkStyle
font_scale	gtktexttag.h	/^  gdouble font_scale;$/;"	m	struct:_GtkTextAttributes
font_set	gtkfontbutton.h	/^  void (* font_set) (GtkFontButton *gfp);$/;"	m	struct:_GtkFontButtonClass
forall	gtkcontainer.h	/^  void    (*forall)    		(GtkContainer	 *container,$/;"	m	struct:_GtkContainerClass
foreground	gtkclist.h	/^  GdkColor foreground;$/;"	m	struct:_GtkCListRow
format	gtkprogress.h	/^  gchar         *format;$/;"	m	struct:_GtkProgress
format_value	gtkscale.h	/^  gchar* (* format_value) (GtkScale *scale,$/;"	m	struct:_GtkScaleClass
frame	gtkaspectframe.h	/^  GtkFrame frame;$/;"	m	struct:_GtkAspectFrame
frame_event	gtkwindow.h	/^  gboolean (* frame_event) (GtkWindow *window,$/;"	m	struct:_GtkWindowClass
frame_timeout	gtkimage.h	/^  guint frame_timeout;$/;"	m	struct:_GtkImageAnimationData
free_line_data	gtktextlayout.h	/^  void  (*free_line_data)       (GtkTextLayout     *layout,$/;"	m	struct:_GtkTextLayoutClass
freeze_count	gtkclist.h	/^  guint freeze_count;$/;"	m	struct:_GtkCList
freeze_count	gtktext.h	/^  guint freeze_count;$/;"	m	struct:_GtkText
g_iface	gtkactivatable.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GtkActivatableIface
g_iface	gtkbuildable.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GtkBuildableIface
g_iface	gtkcelleditable.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GtkCellEditableIface
g_iface	gtkcelllayout.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GtkCellLayoutIface
g_iface	gtkprintoperationpreview.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GtkPrintOperationPreviewIface
g_iface	gtktoolshell.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GtkToolShellIface
g_iface	gtktreednd.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GtkTreeDragDestIface
g_iface	gtktreednd.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GtkTreeDragSourceIface
g_iface	gtktreemodel.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GtkTreeModelIface
g_iface	gtktreesortable.h	/^  GTypeInterface g_iface;$/;"	m	struct:_GtkTreeSortableIface
gamma	gtkpreview.h	/^  gdouble gamma;$/;"	m	struct:_GtkPreviewInfo
gap_position	gtktext.h	/^  guint gap_position;$/;"	m	struct:_GtkText
gap_size	gtktext.h	/^  guint gap_size;$/;"	m	struct:_GtkText
gc	gtktext.h	/^  GdkGC *gc;$/;"	m	struct:_GtkText
get_accessible	gtkwidget.h	/^  AtkObject*   (*get_accessible)     (GtkWidget *widget);$/;"	m	struct:_GtkWidgetClass
get_action	gtkactiongroup.h	/^  GtkAction *(* get_action) (GtkActionGroup *action_group,$/;"	m	struct:_GtkActionGroupClass
get_action	gtkuimanager.h	/^  GtkAction * (* get_action) (GtkUIManager *manager,$/;"	m	struct:_GtkUIManagerClass
get_active_text	gtkcombobox.h	/^  gchar *  (* get_active_text)  (GtkComboBox *combo_box);$/;"	m	struct:_GtkComboBoxClass
get_arg	gtkobject.h	/^  void (*get_arg) (GtkObject *object,$/;"	m	struct:_GtkObjectClass
get_cells	gtkcelllayout.h	/^  GList* (* get_cells)        (GtkCellLayout         *cell_layout);$/;"	m	struct:_GtkCellLayoutIface
get_chars	gtkeditable.h	/^  gchar* (* get_chars)              (GtkEditable    *editable,$/;"	m	struct:_GtkEditableClass
get_chars	gtkoldeditable.h	/^  gchar* (* get_chars)  (GtkOldEditable  *editable,$/;"	m	struct:_GtkOldEditableClass
get_child_property	gtkcontainer.h	/^  void    (*get_child_property) (GtkContainer    *container,$/;"	m	struct:_GtkContainerClass
get_column_type	gtktreemodel.h	/^  GType        (* get_column_type) (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
get_current_uri	gtkrecentchooser.h	/^  gchar *           (* get_current_uri)    (GtkRecentChooser  *chooser);$/;"	m	struct:_GtkRecentChooserIface
get_ellipsize_mode	gtktoolshell.h	/^  PangoEllipsizeMode (*get_ellipsize_mode)   (GtkToolShell *shell);$/;"	m	struct:_GtkToolShellIface
get_flags	gtktreemodel.h	/^  GtkTreeModelFlags (* get_flags)  (GtkTreeModel *tree_model);$/;"	m	struct:_GtkTreeModelIface
get_icon_size	gtktoolshell.h	/^  GtkIconSize        (*get_icon_size)        (GtkToolShell *shell);$/;"	m	struct:_GtkToolShellIface
get_internal_child	gtkbuildable.h	/^  GObject *     (* get_internal_child)     (GtkBuildable  *buildable,$/;"	m	struct:_GtkBuildableIface
get_items	gtkrecentchooser.h	/^  GList *           (* get_items)          (GtkRecentChooser  *chooser);$/;"	m	struct:_GtkRecentChooserIface
get_iter	gtktreemodel.h	/^  gboolean     (* get_iter)        (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
get_label	gtkmenuitem.h	/^  const gchar *(* get_label) (GtkMenuItem *menu_item);$/;"	m	struct:_GtkMenuItemClass
get_layout_offsets	gtkscale.h	/^  void (* get_layout_offsets) (GtkScale *scale,$/;"	m	struct:_GtkScaleClass
get_length	gtkentrybuffer.h	/^  guint        (*get_length)             (GtkEntryBuffer *buffer);$/;"	m	struct:_GtkEntryBufferClass
get_log_attrs	gtktextlayout.h	/^  void  (*get_log_attrs)        (GtkTextLayout     *layout,$/;"	m	struct:_GtkTextLayoutClass
get_n_columns	gtktreemodel.h	/^  gint         (* get_n_columns)   (GtkTreeModel *tree_model);$/;"	m	struct:_GtkTreeModelIface
get_name	gtkbuildable.h	/^  const gchar * (* get_name)               (GtkBuildable  *buildable);$/;"	m	struct:_GtkBuildableIface
get_orientation	gtktoolshell.h	/^  GtkOrientation     (*get_orientation)      (GtkToolShell *shell);$/;"	m	struct:_GtkToolShellIface
get_path	gtktreemodel.h	/^  GtkTreePath *(* get_path)        (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
get_popup_delay	gtkmenushell.h	/^  gint (*get_popup_delay)  (GtkMenuShell *menu_shell);$/;"	m	struct:_GtkMenuShellClass
get_position	gtkeditable.h	/^  gint (* get_position)             (GtkEditable    *editable);$/;"	m	struct:_GtkEditableClass
get_preedit_string	gtkimcontext.h	/^  void     (*get_preedit_string)  (GtkIMContext   *context,$/;"	m	struct:_GtkIMContextClass
get_range_border	gtkrange.h	/^  void (* get_range_border) (GtkRange     *range,$/;"	m	struct:_GtkRangeClass
get_recent_manager	gtkrecentchooser.h	/^  GtkRecentManager *(* get_recent_manager) (GtkRecentChooser  *chooser);$/;"	m	struct:_GtkRecentChooserIface
get_relief_style	gtktoolshell.h	/^  GtkReliefStyle     (*get_relief_style)     (GtkToolShell *shell);$/;"	m	struct:_GtkToolShellIface
get_selection_bounds	gtkeditable.h	/^  gboolean (* get_selection_bounds) (GtkEditable    *editable,$/;"	m	struct:_GtkEditableClass
get_size	gtkcellrenderer.h	/^  void             (* get_size)      (GtkCellRenderer      *cell,$/;"	m	struct:_GtkCellRendererClass
get_sort_column_id	gtktreesortable.h	/^  gboolean (* get_sort_column_id)    (GtkTreeSortable        *sortable,$/;"	m	struct:_GtkTreeSortableIface
get_style	gtktoolshell.h	/^  GtkToolbarStyle    (*get_style)            (GtkToolShell *shell);$/;"	m	struct:_GtkToolShellIface
get_surrounding	gtkimcontext.h	/^  gboolean (*get_surrounding)     (GtkIMContext   *context,$/;"	m	struct:_GtkIMContextClass
get_text	gtkentrybuffer.h	/^  const gchar* (*get_text)               (GtkEntryBuffer *buffer,$/;"	m	struct:_GtkEntryBufferClass
get_text_alignment	gtktoolshell.h	/^  gfloat             (*get_text_alignment)   (GtkToolShell *shell);$/;"	m	struct:_GtkToolShellIface
get_text_area_size	gtkentry.h	/^  void (* get_text_area_size) (GtkEntry       *entry,$/;"	m	struct:_GtkEntryClass
get_text_orientation	gtktoolshell.h	/^  GtkOrientation     (*get_text_orientation) (GtkToolShell *shell);$/;"	m	struct:_GtkToolShellIface
get_text_size_group	gtktoolshell.h	/^  GtkSizeGroup *     (*get_text_size_group)  (GtkToolShell *shell);$/;"	m	struct:_GtkToolShellIface
get_type_from_name	gtkbuilder.h	/^  GType (* get_type_from_name) (GtkBuilder *builder,$/;"	m	struct:_GtkBuilderClass
get_value	gtktreemodel.h	/^  void         (* get_value)       (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
get_widget	gtkuimanager.h	/^  GtkWidget * (* get_widget) (GtkUIManager *manager,$/;"	m	struct:_GtkUIManagerClass
gicon	gtkimage.h	/^    GtkImageGIconData gicon;$/;"	m	union:_GtkImage::__anon84
got_page_size	gtkprintoperationpreview.h	/^  void              (*got_page_size)  (GtkPrintOperationPreview *preview,$/;"	m	struct:_GtkPrintOperationPreviewIface
grab_broken_event	gtkwidget.h	/^  gboolean (*grab_broken_event) (GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
grab_focus	gtkwidget.h	/^  void     (* grab_focus)      (GtkWidget        *widget);$/;"	m	struct:_GtkWidgetClass
grab_notify	gtkwidget.h	/^  void (* grab_notify)         (GtkWidget        *widget,$/;"	m	struct:_GtkWidgetClass
grab_point	gtkcurve.h	/^  gint grab_point;              \/* point currently grabbed *\/$/;"	m	struct:_GtkCurve
graph	gtkcurve.h	/^  GtkDrawingArea graph;$/;"	m	struct:_GtkCurve
group_changed	gtkradiobutton.h	/^  void (*group_changed) (GtkRadioButton *radio_button);$/;"	m	struct:_GtkRadioButtonClass
group_changed	gtkradiomenuitem.h	/^  void (*group_changed) (GtkRadioMenuItem *radio_menu_item);$/;"	m	struct:_GtkRadioMenuItemClass
groups	gtkrecentfilter.h	/^  const gchar **groups;$/;"	m	struct:_GtkRecentFilterInfo
groups	gtkrecentmanager.h	/^  gchar **groups;$/;"	m	struct:_GtkRecentData
gtk_about_dialog_get_artists	gtkaboutdialog.h	/^const gchar* const *   gtk_about_dialog_get_artists            (GtkAboutDialog  *about);$/;"	p
gtk_about_dialog_get_authors	gtkaboutdialog.h	/^const gchar* const *   gtk_about_dialog_get_authors            (GtkAboutDialog  *about);$/;"	p
gtk_about_dialog_get_comments	gtkaboutdialog.h	/^const gchar *          gtk_about_dialog_get_comments           (GtkAboutDialog  *about);$/;"	p
gtk_about_dialog_get_copyright	gtkaboutdialog.h	/^const gchar *          gtk_about_dialog_get_copyright          (GtkAboutDialog  *about);$/;"	p
gtk_about_dialog_get_documenters	gtkaboutdialog.h	/^const gchar* const *   gtk_about_dialog_get_documenters        (GtkAboutDialog  *about);$/;"	p
gtk_about_dialog_get_license	gtkaboutdialog.h	/^const gchar *          gtk_about_dialog_get_license            (GtkAboutDialog  *about);$/;"	p
gtk_about_dialog_get_logo	gtkaboutdialog.h	/^GdkPixbuf             *gtk_about_dialog_get_logo               (GtkAboutDialog  *about);$/;"	p
gtk_about_dialog_get_logo_icon_name	gtkaboutdialog.h	/^const gchar *          gtk_about_dialog_get_logo_icon_name     (GtkAboutDialog  *about);$/;"	p
gtk_about_dialog_get_name	gtkaboutdialog.h	/^const gchar *          gtk_about_dialog_get_name               (GtkAboutDialog  *about);$/;"	p
gtk_about_dialog_get_program_name	gtkaboutdialog.h	/^const gchar *          gtk_about_dialog_get_program_name       (GtkAboutDialog  *about);$/;"	p
gtk_about_dialog_get_translator_credits	gtkaboutdialog.h	/^const gchar *          gtk_about_dialog_get_translator_credits (GtkAboutDialog  *about);$/;"	p
gtk_about_dialog_get_version	gtkaboutdialog.h	/^const gchar *          gtk_about_dialog_get_version            (GtkAboutDialog  *about);$/;"	p
gtk_about_dialog_get_website	gtkaboutdialog.h	/^const gchar *          gtk_about_dialog_get_website            (GtkAboutDialog  *about);$/;"	p
gtk_about_dialog_get_website_label	gtkaboutdialog.h	/^const gchar *          gtk_about_dialog_get_website_label      (GtkAboutDialog  *about);$/;"	p
gtk_about_dialog_get_wrap_license	gtkaboutdialog.h	/^gboolean               gtk_about_dialog_get_wrap_license       (GtkAboutDialog  *about);$/;"	p
gtk_about_dialog_new	gtkaboutdialog.h	/^GtkWidget             *gtk_about_dialog_new                    (void);$/;"	p
gtk_about_dialog_set_artists	gtkaboutdialog.h	/^void                   gtk_about_dialog_set_artists            (GtkAboutDialog  *about,$/;"	p
gtk_about_dialog_set_authors	gtkaboutdialog.h	/^void                   gtk_about_dialog_set_authors            (GtkAboutDialog  *about,$/;"	p
gtk_about_dialog_set_comments	gtkaboutdialog.h	/^void                   gtk_about_dialog_set_comments           (GtkAboutDialog  *about,$/;"	p
gtk_about_dialog_set_copyright	gtkaboutdialog.h	/^void                   gtk_about_dialog_set_copyright          (GtkAboutDialog  *about,$/;"	p
gtk_about_dialog_set_documenters	gtkaboutdialog.h	/^void                   gtk_about_dialog_set_documenters        (GtkAboutDialog  *about,$/;"	p
gtk_about_dialog_set_email_hook	gtkaboutdialog.h	/^GtkAboutDialogActivateLinkFunc gtk_about_dialog_set_email_hook (GtkAboutDialogActivateLinkFunc func,$/;"	p
gtk_about_dialog_set_license	gtkaboutdialog.h	/^void                   gtk_about_dialog_set_license            (GtkAboutDialog  *about,$/;"	p
gtk_about_dialog_set_logo	gtkaboutdialog.h	/^void                   gtk_about_dialog_set_logo               (GtkAboutDialog  *about,$/;"	p
gtk_about_dialog_set_logo_icon_name	gtkaboutdialog.h	/^void                   gtk_about_dialog_set_logo_icon_name     (GtkAboutDialog  *about,$/;"	p
gtk_about_dialog_set_name	gtkaboutdialog.h	/^void                   gtk_about_dialog_set_name               (GtkAboutDialog  *about,$/;"	p
gtk_about_dialog_set_program_name	gtkaboutdialog.h	/^void                   gtk_about_dialog_set_program_name       (GtkAboutDialog  *about,$/;"	p
gtk_about_dialog_set_translator_credits	gtkaboutdialog.h	/^void                   gtk_about_dialog_set_translator_credits (GtkAboutDialog  *about,$/;"	p
gtk_about_dialog_set_url_hook	gtkaboutdialog.h	/^GtkAboutDialogActivateLinkFunc gtk_about_dialog_set_url_hook   (GtkAboutDialogActivateLinkFunc func,$/;"	p
gtk_about_dialog_set_version	gtkaboutdialog.h	/^void                   gtk_about_dialog_set_version            (GtkAboutDialog  *about,$/;"	p
gtk_about_dialog_set_website	gtkaboutdialog.h	/^void                   gtk_about_dialog_set_website            (GtkAboutDialog  *about,$/;"	p
gtk_about_dialog_set_website_label	gtkaboutdialog.h	/^void                   gtk_about_dialog_set_website_label      (GtkAboutDialog  *about,$/;"	p
gtk_about_dialog_set_wrap_license	gtkaboutdialog.h	/^void                   gtk_about_dialog_set_wrap_license       (GtkAboutDialog  *about,$/;"	p
gtk_accel_group_activate	gtkaccelgroup.h	/^gboolean       gtk_accel_group_activate           (GtkAccelGroup   *accel_group,$/;"	p
gtk_accel_group_connect	gtkaccelgroup.h	/^void	       gtk_accel_group_connect		  (GtkAccelGroup  *accel_group,$/;"	p
gtk_accel_group_connect_by_path	gtkaccelgroup.h	/^void           gtk_accel_group_connect_by_path    (GtkAccelGroup  *accel_group,$/;"	p
gtk_accel_group_disconnect	gtkaccelgroup.h	/^gboolean       gtk_accel_group_disconnect	  (GtkAccelGroup  *accel_group,$/;"	p
gtk_accel_group_disconnect_key	gtkaccelgroup.h	/^gboolean       gtk_accel_group_disconnect_key	  (GtkAccelGroup  *accel_group,$/;"	p
gtk_accel_group_find	gtkaccelgroup.h	/^GtkAccelKey*	gtk_accel_group_find		(GtkAccelGroup	      *accel_group,$/;"	p
gtk_accel_group_from_accel_closure	gtkaccelgroup.h	/^GtkAccelGroup*	gtk_accel_group_from_accel_closure (GClosure    *closure);$/;"	p
gtk_accel_group_get_is_locked	gtkaccelgroup.h	/^gboolean       gtk_accel_group_get_is_locked      (GtkAccelGroup  *accel_group);$/;"	p
gtk_accel_group_get_modifier_mask	gtkaccelgroup.h	/^               gtk_accel_group_get_modifier_mask  (GtkAccelGroup  *accel_group);$/;"	p
gtk_accel_group_lock	gtkaccelgroup.h	/^void	       gtk_accel_group_lock		  (GtkAccelGroup  *accel_group);$/;"	p
gtk_accel_group_new	gtkaccelgroup.h	/^GtkAccelGroup* gtk_accel_group_new	      	  (void);$/;"	p
gtk_accel_group_query	gtkaccelgroup.h	/^GtkAccelGroupEntry*	gtk_accel_group_query	(GtkAccelGroup	*accel_group,$/;"	p
gtk_accel_group_ref	gtkaccelgroup.h	203;"	d
gtk_accel_group_unlock	gtkaccelgroup.h	/^void	       gtk_accel_group_unlock		  (GtkAccelGroup  *accel_group);$/;"	p
gtk_accel_group_unref	gtkaccelgroup.h	210;"	d
gtk_accel_groups_activate	gtkaccelgroup.h	/^gboolean        gtk_accel_groups_activate      	(GObject	*object,$/;"	p
gtk_accel_groups_from_object	gtkaccelgroup.h	/^GSList*	        gtk_accel_groups_from_object    (GObject	*object);$/;"	p
gtk_accel_label_accelerator_width	gtkaccellabel.h	94;"	d
gtk_accel_label_get_accel_widget	gtkaccellabel.h	/^GtkWidget* gtk_accel_label_get_accel_widget  (GtkAccelLabel *accel_label);$/;"	p
gtk_accel_label_get_accel_width	gtkaccellabel.h	/^guint	   gtk_accel_label_get_accel_width   (GtkAccelLabel *accel_label);$/;"	p
gtk_accel_label_new	gtkaccellabel.h	/^GtkWidget* gtk_accel_label_new		     (const gchar   *string);$/;"	p
gtk_accel_label_refetch	gtkaccellabel.h	/^gboolean   gtk_accel_label_refetch           (GtkAccelLabel *accel_label);$/;"	p
gtk_accel_label_set_accel_closure	gtkaccellabel.h	/^void	   gtk_accel_label_set_accel_closure (GtkAccelLabel *accel_label,$/;"	p
gtk_accel_label_set_accel_widget	gtkaccellabel.h	/^void	   gtk_accel_label_set_accel_widget  (GtkAccelLabel *accel_label,$/;"	p
gtk_accel_map_add_entry	gtkaccelmap.h	/^void	   gtk_accel_map_add_entry	(const gchar		*accel_path,$/;"	p
gtk_accel_map_add_filter	gtkaccelmap.h	/^void	gtk_accel_map_add_filter	 (const gchar		*filter_pattern);$/;"	p
gtk_accel_map_change_entry	gtkaccelmap.h	/^gboolean   gtk_accel_map_change_entry	(const gchar		*accel_path,$/;"	p
gtk_accel_map_foreach	gtkaccelmap.h	/^void	   gtk_accel_map_foreach	(gpointer		 data,$/;"	p
gtk_accel_map_foreach_unfiltered	gtkaccelmap.h	/^void	gtk_accel_map_foreach_unfiltered (gpointer		 data,$/;"	p
gtk_accel_map_get	gtkaccelmap.h	/^GtkAccelMap *gtk_accel_map_get      (void);$/;"	p
gtk_accel_map_load	gtkaccelmap.h	/^void	   gtk_accel_map_load		(const gchar		*file_name);$/;"	p
gtk_accel_map_load	gtkaccelmap.h	55;"	d
gtk_accel_map_load_fd	gtkaccelmap.h	/^void	   gtk_accel_map_load_fd	(gint			 fd);$/;"	p
gtk_accel_map_load_scanner	gtkaccelmap.h	/^void	   gtk_accel_map_load_scanner	(GScanner		*scanner);$/;"	p
gtk_accel_map_lock_path	gtkaccelmap.h	/^void       gtk_accel_map_lock_path      (const gchar            *accel_path);$/;"	p
gtk_accel_map_lookup_entry	gtkaccelmap.h	/^gboolean   gtk_accel_map_lookup_entry	(const gchar		*accel_path,$/;"	p
gtk_accel_map_save	gtkaccelmap.h	/^void	   gtk_accel_map_save		(const gchar		*file_name);$/;"	p
gtk_accel_map_save	gtkaccelmap.h	56;"	d
gtk_accel_map_save_fd	gtkaccelmap.h	/^void	   gtk_accel_map_save_fd	(gint			 fd);$/;"	p
gtk_accel_map_unlock_path	gtkaccelmap.h	/^void       gtk_accel_map_unlock_path    (const gchar            *accel_path);$/;"	p
gtk_accelerator_get_default_mod_mask	gtkaccelgroup.h	/^guint	 gtk_accelerator_get_default_mod_mask (void);$/;"	p
gtk_accelerator_get_label	gtkaccelgroup.h	/^gchar*   gtk_accelerator_get_label            (guint           accelerator_key,$/;"	p
gtk_accelerator_name	gtkaccelgroup.h	/^gchar*	 gtk_accelerator_name		      (guint	        accelerator_key,$/;"	p
gtk_accelerator_parse	gtkaccelgroup.h	/^void	 gtk_accelerator_parse		      (const gchar     *accelerator,$/;"	p
gtk_accelerator_set_default_mod_mask	gtkaccelgroup.h	/^void	 gtk_accelerator_set_default_mod_mask (GdkModifierType  default_mod_mask);$/;"	p
gtk_accessible_connect_widget_destroyed	gtkaccessible.h	/^void        gtk_accessible_connect_widget_destroyed    (GtkAccessible     *accessible);$/;"	p
gtk_accessible_get_widget	gtkaccessible.h	/^GtkWidget*  gtk_accessible_get_widget                  (GtkAccessible     *accessible);$/;"	p
gtk_accessible_set_widget	gtkaccessible.h	/^void        gtk_accessible_set_widget                  (GtkAccessible     *accessible,$/;"	p
gtk_action_activate	gtkaction.h	/^void         gtk_action_activate               (GtkAction     *action);$/;"	p
gtk_action_block_activate	gtkaction.h	/^void         gtk_action_block_activate         (GtkAction     *action);$/;"	p
gtk_action_block_activate_from	gtkaction.h	/^void         gtk_action_block_activate_from    (GtkAction     *action,$/;"	p
gtk_action_connect_accelerator	gtkaction.h	/^void         gtk_action_connect_accelerator    (GtkAction     *action);$/;"	p
gtk_action_connect_proxy	gtkaction.h	/^void         gtk_action_connect_proxy          (GtkAction     *action,$/;"	p
gtk_action_create_icon	gtkaction.h	/^GtkWidget *  gtk_action_create_icon            (GtkAction     *action,$/;"	p
gtk_action_create_menu	gtkaction.h	/^GtkWidget *  gtk_action_create_menu            (GtkAction     *action);$/;"	p
gtk_action_create_menu_item	gtkaction.h	/^GtkWidget *  gtk_action_create_menu_item       (GtkAction     *action);$/;"	p
gtk_action_create_tool_item	gtkaction.h	/^GtkWidget *  gtk_action_create_tool_item       (GtkAction     *action);$/;"	p
gtk_action_disconnect_accelerator	gtkaction.h	/^void         gtk_action_disconnect_accelerator (GtkAction     *action);$/;"	p
gtk_action_disconnect_proxy	gtkaction.h	/^void         gtk_action_disconnect_proxy       (GtkAction     *action,$/;"	p
gtk_action_get_accel_closure	gtkaction.h	/^GClosure    *gtk_action_get_accel_closure      (GtkAction     *action);$/;"	p
gtk_action_get_accel_path	gtkaction.h	/^const gchar *gtk_action_get_accel_path         (GtkAction     *action);$/;"	p
gtk_action_get_always_show_image	gtkaction.h	/^gboolean              gtk_action_get_always_show_image  (GtkAction   *action);$/;"	p
gtk_action_get_gicon	gtkaction.h	/^GIcon                *gtk_action_get_gicon              (GtkAction   *action);$/;"	p
gtk_action_get_icon_name	gtkaction.h	/^const gchar *         gtk_action_get_icon_name          (GtkAction   *action);$/;"	p
gtk_action_get_is_important	gtkaction.h	/^gboolean              gtk_action_get_is_important       (GtkAction   *action);$/;"	p
gtk_action_get_label	gtkaction.h	/^const gchar *         gtk_action_get_label              (GtkAction   *action);$/;"	p
gtk_action_get_name	gtkaction.h	/^const gchar* gtk_action_get_name               (GtkAction     *action);$/;"	p
gtk_action_get_proxies	gtkaction.h	/^GSList *     gtk_action_get_proxies            (GtkAction     *action);$/;"	p
gtk_action_get_sensitive	gtkaction.h	/^gboolean     gtk_action_get_sensitive          (GtkAction     *action);$/;"	p
gtk_action_get_short_label	gtkaction.h	/^const gchar *         gtk_action_get_short_label        (GtkAction   *action);$/;"	p
gtk_action_get_stock_id	gtkaction.h	/^const gchar *         gtk_action_get_stock_id           (GtkAction   *action);$/;"	p
gtk_action_get_tooltip	gtkaction.h	/^const gchar *         gtk_action_get_tooltip            (GtkAction   *action);$/;"	p
gtk_action_get_visible	gtkaction.h	/^gboolean     gtk_action_get_visible            (GtkAction     *action);$/;"	p
gtk_action_get_visible_horizontal	gtkaction.h	/^gboolean              gtk_action_get_visible_horizontal (GtkAction   *action);$/;"	p
gtk_action_get_visible_vertical	gtkaction.h	/^gboolean              gtk_action_get_visible_vertical   (GtkAction   *action);$/;"	p
gtk_action_group_add_action	gtkactiongroup.h	/^void            gtk_action_group_add_action              (GtkActionGroup             *action_group,$/;"	p
gtk_action_group_add_action_with_accel	gtkactiongroup.h	/^void            gtk_action_group_add_action_with_accel   (GtkActionGroup             *action_group,$/;"	p
gtk_action_group_add_actions	gtkactiongroup.h	/^void            gtk_action_group_add_actions             (GtkActionGroup             *action_group,$/;"	p
gtk_action_group_add_actions_full	gtkactiongroup.h	/^void            gtk_action_group_add_actions_full        (GtkActionGroup             *action_group,$/;"	p
gtk_action_group_add_radio_actions	gtkactiongroup.h	/^void            gtk_action_group_add_radio_actions       (GtkActionGroup             *action_group,$/;"	p
gtk_action_group_add_radio_actions_full	gtkactiongroup.h	/^void            gtk_action_group_add_radio_actions_full  (GtkActionGroup             *action_group,$/;"	p
gtk_action_group_add_toggle_actions	gtkactiongroup.h	/^void            gtk_action_group_add_toggle_actions      (GtkActionGroup             *action_group,$/;"	p
gtk_action_group_add_toggle_actions_full	gtkactiongroup.h	/^void            gtk_action_group_add_toggle_actions_full (GtkActionGroup             *action_group,$/;"	p
gtk_action_group_get_action	gtkactiongroup.h	/^GtkAction      *gtk_action_group_get_action              (GtkActionGroup             *action_group,$/;"	p
gtk_action_group_get_name	gtkactiongroup.h	/^const gchar *gtk_action_group_get_name          (GtkActionGroup             *action_group);$/;"	p
gtk_action_group_get_sensitive	gtkactiongroup.h	/^gboolean        gtk_action_group_get_sensitive           (GtkActionGroup             *action_group);$/;"	p
gtk_action_group_get_visible	gtkactiongroup.h	/^gboolean        gtk_action_group_get_visible             (GtkActionGroup             *action_group);$/;"	p
gtk_action_group_list_actions	gtkactiongroup.h	/^GList          *gtk_action_group_list_actions            (GtkActionGroup             *action_group);$/;"	p
gtk_action_group_new	gtkactiongroup.h	/^GtkActionGroup *gtk_action_group_new                     (const gchar                *name);$/;"	p
gtk_action_group_remove_action	gtkactiongroup.h	/^void            gtk_action_group_remove_action           (GtkActionGroup             *action_group,$/;"	p
gtk_action_group_set_sensitive	gtkactiongroup.h	/^void            gtk_action_group_set_sensitive           (GtkActionGroup             *action_group,$/;"	p
gtk_action_group_set_translate_func	gtkactiongroup.h	/^void            gtk_action_group_set_translate_func      (GtkActionGroup             *action_group,$/;"	p
gtk_action_group_set_translation_domain	gtkactiongroup.h	/^void            gtk_action_group_set_translation_domain  (GtkActionGroup             *action_group,$/;"	p
gtk_action_group_set_visible	gtkactiongroup.h	/^void            gtk_action_group_set_visible             (GtkActionGroup             *action_group,$/;"	p
gtk_action_group_translate_string	gtkactiongroup.h	/^const gchar *gtk_action_group_translate_string  (GtkActionGroup             *action_group,$/;"	p
gtk_action_is_sensitive	gtkaction.h	/^gboolean     gtk_action_is_sensitive           (GtkAction     *action);$/;"	p
gtk_action_is_visible	gtkaction.h	/^gboolean     gtk_action_is_visible             (GtkAction     *action);$/;"	p
gtk_action_new	gtkaction.h	/^GtkAction   *gtk_action_new                    (const gchar *name,$/;"	p
gtk_action_set_accel_group	gtkaction.h	/^void         gtk_action_set_accel_group        (GtkAction     *action,$/;"	p
gtk_action_set_accel_path	gtkaction.h	/^void         gtk_action_set_accel_path         (GtkAction     *action,$/;"	p
gtk_action_set_always_show_image	gtkaction.h	/^void                  gtk_action_set_always_show_image  (GtkAction   *action,$/;"	p
gtk_action_set_gicon	gtkaction.h	/^void                  gtk_action_set_gicon              (GtkAction   *action,$/;"	p
gtk_action_set_icon_name	gtkaction.h	/^void                  gtk_action_set_icon_name          (GtkAction   *action,$/;"	p
gtk_action_set_is_important	gtkaction.h	/^void                  gtk_action_set_is_important       (GtkAction   *action,$/;"	p
gtk_action_set_label	gtkaction.h	/^void                  gtk_action_set_label              (GtkAction   *action,$/;"	p
gtk_action_set_sensitive	gtkaction.h	/^void         gtk_action_set_sensitive          (GtkAction     *action,$/;"	p
gtk_action_set_short_label	gtkaction.h	/^void                  gtk_action_set_short_label        (GtkAction   *action,$/;"	p
gtk_action_set_stock_id	gtkaction.h	/^void                  gtk_action_set_stock_id           (GtkAction   *action,$/;"	p
gtk_action_set_tooltip	gtkaction.h	/^void                  gtk_action_set_tooltip            (GtkAction   *action,$/;"	p
gtk_action_set_visible	gtkaction.h	/^void         gtk_action_set_visible            (GtkAction     *action,$/;"	p
gtk_action_set_visible_horizontal	gtkaction.h	/^void                  gtk_action_set_visible_horizontal (GtkAction   *action,$/;"	p
gtk_action_set_visible_vertical	gtkaction.h	/^void                  gtk_action_set_visible_vertical   (GtkAction   *action,$/;"	p
gtk_action_unblock_activate	gtkaction.h	/^void         gtk_action_unblock_activate       (GtkAction     *action);$/;"	p
gtk_action_unblock_activate_from	gtkaction.h	/^void         gtk_action_unblock_activate_from  (GtkAction     *action,$/;"	p
gtk_activatable_do_set_related_action	gtkactivatable.h	/^void       gtk_activatable_do_set_related_action      (GtkActivatable *activatable,$/;"	p
gtk_activatable_get_related_action	gtkactivatable.h	/^GtkAction *gtk_activatable_get_related_action         (GtkActivatable *activatable);$/;"	p
gtk_activatable_get_use_action_appearance	gtkactivatable.h	/^gboolean   gtk_activatable_get_use_action_appearance  (GtkActivatable *activatable);$/;"	p
gtk_activatable_set_related_action	gtkactivatable.h	/^void       gtk_activatable_set_related_action         (GtkActivatable *activatable,$/;"	p
gtk_activatable_set_use_action_appearance	gtkactivatable.h	/^void       gtk_activatable_set_use_action_appearance  (GtkActivatable *activatable,$/;"	p
gtk_activatable_sync_action_properties	gtkactivatable.h	/^void       gtk_activatable_sync_action_properties     (GtkActivatable *activatable,$/;"	p
gtk_adjustment_changed	gtkadjustment.h	/^void	   gtk_adjustment_changed		(GtkAdjustment	 *adjustment);$/;"	p
gtk_adjustment_clamp_page	gtkadjustment.h	/^void	   gtk_adjustment_clamp_page		(GtkAdjustment	 *adjustment,$/;"	p
gtk_adjustment_configure	gtkadjustment.h	/^void       gtk_adjustment_configure             (GtkAdjustment   *adjustment,$/;"	p
gtk_adjustment_get_lower	gtkadjustment.h	/^gdouble    gtk_adjustment_get_lower             (GtkAdjustment   *adjustment);$/;"	p
gtk_adjustment_get_page_increment	gtkadjustment.h	/^gdouble    gtk_adjustment_get_page_increment    (GtkAdjustment   *adjustment);$/;"	p
gtk_adjustment_get_page_size	gtkadjustment.h	/^gdouble    gtk_adjustment_get_page_size         (GtkAdjustment   *adjustment);$/;"	p
gtk_adjustment_get_step_increment	gtkadjustment.h	/^gdouble    gtk_adjustment_get_step_increment    (GtkAdjustment   *adjustment);$/;"	p
gtk_adjustment_get_upper	gtkadjustment.h	/^gdouble    gtk_adjustment_get_upper             (GtkAdjustment   *adjustment);$/;"	p
gtk_adjustment_get_value	gtkadjustment.h	/^gdouble	   gtk_adjustment_get_value		(GtkAdjustment   *adjustment);$/;"	p
gtk_adjustment_new	gtkadjustment.h	/^GtkObject* gtk_adjustment_new			(gdouble	  value,$/;"	p
gtk_adjustment_set_lower	gtkadjustment.h	/^void       gtk_adjustment_set_lower             (GtkAdjustment   *adjustment,$/;"	p
gtk_adjustment_set_page_increment	gtkadjustment.h	/^void       gtk_adjustment_set_page_increment    (GtkAdjustment   *adjustment,$/;"	p
gtk_adjustment_set_page_size	gtkadjustment.h	/^void       gtk_adjustment_set_page_size         (GtkAdjustment   *adjustment,$/;"	p
gtk_adjustment_set_step_increment	gtkadjustment.h	/^void       gtk_adjustment_set_step_increment    (GtkAdjustment   *adjustment,$/;"	p
gtk_adjustment_set_upper	gtkadjustment.h	/^void       gtk_adjustment_set_upper             (GtkAdjustment   *adjustment,$/;"	p
gtk_adjustment_set_value	gtkadjustment.h	/^void	   gtk_adjustment_set_value		(GtkAdjustment	 *adjustment,$/;"	p
gtk_adjustment_value_changed	gtkadjustment.h	/^void	   gtk_adjustment_value_changed		(GtkAdjustment	 *adjustment);$/;"	p
gtk_alignment_get_padding	gtkalignment.h	/^void       gtk_alignment_get_padding (GtkAlignment      *alignment,$/;"	p
gtk_alignment_new	gtkalignment.h	/^GtkWidget* gtk_alignment_new        (gfloat             xalign,$/;"	p
gtk_alignment_set	gtkalignment.h	/^void       gtk_alignment_set        (GtkAlignment      *alignment,$/;"	p
gtk_alignment_set_padding	gtkalignment.h	/^void       gtk_alignment_set_padding (GtkAlignment      *alignment,$/;"	p
gtk_alternative_dialog_button_order	gtkdialog.h	/^gboolean gtk_alternative_dialog_button_order (GdkScreen *screen);$/;"	p
gtk_arrow_new	gtkarrow.h	/^GtkWidget* gtk_arrow_new        (GtkArrowType   arrow_type,$/;"	p
gtk_arrow_set	gtkarrow.h	/^void       gtk_arrow_set        (GtkArrow      *arrow,$/;"	p
gtk_aspect_frame_new	gtkaspectframe.h	/^GtkWidget* gtk_aspect_frame_new        (const gchar     *label,$/;"	p
gtk_aspect_frame_set	gtkaspectframe.h	/^void       gtk_aspect_frame_set        (GtkAspectFrame  *aspect_frame,$/;"	p
gtk_assistant_add_action_widget	gtkassistant.h	/^void                  gtk_assistant_add_action_widget     (GtkAssistant         *assistant,$/;"	p
gtk_assistant_append_page	gtkassistant.h	/^gint                  gtk_assistant_append_page           (GtkAssistant         *assistant,$/;"	p
gtk_assistant_commit	gtkassistant.h	/^void                  gtk_assistant_commit                (GtkAssistant *assistant);$/;"	p
gtk_assistant_get_current_page	gtkassistant.h	/^gint                  gtk_assistant_get_current_page      (GtkAssistant         *assistant);$/;"	p
gtk_assistant_get_n_pages	gtkassistant.h	/^gint                  gtk_assistant_get_n_pages           (GtkAssistant         *assistant);$/;"	p
gtk_assistant_get_nth_page	gtkassistant.h	/^GtkWidget            *gtk_assistant_get_nth_page          (GtkAssistant         *assistant,$/;"	p
gtk_assistant_get_page_complete	gtkassistant.h	/^gboolean              gtk_assistant_get_page_complete     (GtkAssistant         *assistant,$/;"	p
gtk_assistant_get_page_header_image	gtkassistant.h	/^GdkPixbuf            *gtk_assistant_get_page_header_image (GtkAssistant         *assistant,$/;"	p
gtk_assistant_get_page_side_image	gtkassistant.h	/^GdkPixbuf            *gtk_assistant_get_page_side_image   (GtkAssistant         *assistant,$/;"	p
gtk_assistant_get_page_title	gtkassistant.h	/^const gchar *         gtk_assistant_get_page_title        (GtkAssistant         *assistant,$/;"	p
gtk_assistant_get_page_type	gtkassistant.h	/^GtkAssistantPageType  gtk_assistant_get_page_type         (GtkAssistant         *assistant,$/;"	p
gtk_assistant_insert_page	gtkassistant.h	/^gint                  gtk_assistant_insert_page           (GtkAssistant         *assistant,$/;"	p
gtk_assistant_new	gtkassistant.h	/^GtkWidget            *gtk_assistant_new                   (void);$/;"	p
gtk_assistant_prepend_page	gtkassistant.h	/^gint                  gtk_assistant_prepend_page          (GtkAssistant         *assistant,$/;"	p
gtk_assistant_remove_action_widget	gtkassistant.h	/^void                  gtk_assistant_remove_action_widget  (GtkAssistant         *assistant,$/;"	p
gtk_assistant_set_current_page	gtkassistant.h	/^void                  gtk_assistant_set_current_page      (GtkAssistant         *assistant,$/;"	p
gtk_assistant_set_forward_page_func	gtkassistant.h	/^void                  gtk_assistant_set_forward_page_func (GtkAssistant         *assistant,$/;"	p
gtk_assistant_set_page_complete	gtkassistant.h	/^void                  gtk_assistant_set_page_complete     (GtkAssistant         *assistant,$/;"	p
gtk_assistant_set_page_header_image	gtkassistant.h	/^void                  gtk_assistant_set_page_header_image (GtkAssistant         *assistant,$/;"	p
gtk_assistant_set_page_side_image	gtkassistant.h	/^void                  gtk_assistant_set_page_side_image   (GtkAssistant         *assistant,$/;"	p
gtk_assistant_set_page_title	gtkassistant.h	/^void                  gtk_assistant_set_page_title        (GtkAssistant         *assistant,$/;"	p
gtk_assistant_set_page_type	gtkassistant.h	/^void                  gtk_assistant_set_page_type         (GtkAssistant         *assistant,$/;"	p
gtk_assistant_update_buttons_state	gtkassistant.h	/^void                  gtk_assistant_update_buttons_state  (GtkAssistant *assistant);$/;"	p
gtk_bin_get_child	gtkbin.h	/^GtkWidget *gtk_bin_get_child (GtkBin *bin);$/;"	p
gtk_binary_age	gtkmain.h	/^GTKMAIN_C_VAR const guint gtk_binary_age;$/;"	v
gtk_binding_entry_add	gtkbindings.h	115;"	d
gtk_binding_entry_add_signal	gtkbindings.h	/^void	 gtk_binding_entry_add_signal   (GtkBindingSet  *binding_set,$/;"	p
gtk_binding_entry_add_signall	gtkbindings.h	/^void	 gtk_binding_entry_add_signall	(GtkBindingSet	*binding_set,$/;"	p
gtk_binding_entry_clear	gtkbindings.h	/^void	 gtk_binding_entry_clear	(GtkBindingSet	*binding_set,$/;"	p
gtk_binding_entry_remove	gtkbindings.h	/^void	 gtk_binding_entry_remove	(GtkBindingSet	*binding_set,$/;"	p
gtk_binding_entry_skip	gtkbindings.h	/^void	 gtk_binding_entry_skip         (GtkBindingSet  *binding_set,$/;"	p
gtk_binding_parse_binding	gtkbindings.h	/^guint	 gtk_binding_parse_binding      (GScanner       *scanner);$/;"	p
gtk_binding_set_activate	gtkbindings.h	/^gboolean gtk_binding_set_activate	(GtkBindingSet	*binding_set,$/;"	p
gtk_binding_set_add_path	gtkbindings.h	/^void	 gtk_binding_set_add_path	(GtkBindingSet	*binding_set,$/;"	p
gtk_binding_set_by_class	gtkbindings.h	/^GtkBindingSet*	gtk_binding_set_by_class(gpointer	 object_class);$/;"	p
gtk_binding_set_find	gtkbindings.h	/^GtkBindingSet*	gtk_binding_set_find	(const gchar	*set_name);$/;"	p
gtk_binding_set_new	gtkbindings.h	/^GtkBindingSet*	gtk_binding_set_new	(const gchar	*set_name);$/;"	p
gtk_bindings_activate	gtkbindings.h	/^gboolean gtk_bindings_activate		(GtkObject	*object,$/;"	p
gtk_bindings_activate_event	gtkbindings.h	/^gboolean gtk_bindings_activate_event    (GtkObject      *object,$/;"	p
gtk_border_copy	gtkstyle.h	/^GtkBorder *gtk_border_copy     (const GtkBorder *border_);$/;"	p
gtk_border_free	gtkstyle.h	/^void       gtk_border_free     (GtkBorder       *border_);$/;"	p
gtk_box_get_homogeneous	gtkbox.h	/^gboolean    gtk_box_get_homogeneous     (GtkBox         *box);$/;"	p
gtk_box_get_spacing	gtkbox.h	/^gint        gtk_box_get_spacing         (GtkBox         *box);$/;"	p
gtk_box_pack_end	gtkbox.h	/^void        gtk_box_pack_end            (GtkBox         *box,$/;"	p
gtk_box_pack_end_defaults	gtkbox.h	/^void        gtk_box_pack_end_defaults   (GtkBox         *box,$/;"	p
gtk_box_pack_start	gtkbox.h	/^void        gtk_box_pack_start          (GtkBox         *box,$/;"	p
gtk_box_pack_start_defaults	gtkbox.h	/^void        gtk_box_pack_start_defaults (GtkBox         *box,$/;"	p
gtk_box_query_child_packing	gtkbox.h	/^void        gtk_box_query_child_packing (GtkBox         *box,$/;"	p
gtk_box_reorder_child	gtkbox.h	/^void        gtk_box_reorder_child       (GtkBox         *box,$/;"	p
gtk_box_set_child_packing	gtkbox.h	/^void        gtk_box_set_child_packing   (GtkBox         *box,$/;"	p
gtk_box_set_homogeneous	gtkbox.h	/^void        gtk_box_set_homogeneous     (GtkBox         *box,$/;"	p
gtk_box_set_spacing	gtkbox.h	/^void        gtk_box_set_spacing         (GtkBox         *box,$/;"	p
gtk_buildable_add_child	gtkbuildable.h	/^void      gtk_buildable_add_child              (GtkBuildable        *buildable,$/;"	p
gtk_buildable_construct_child	gtkbuildable.h	/^GObject * gtk_buildable_construct_child        (GtkBuildable        *buildable,$/;"	p
gtk_buildable_custom_finished	gtkbuildable.h	/^void      gtk_buildable_custom_finished        (GtkBuildable        *buildable,$/;"	p
gtk_buildable_custom_tag_end	gtkbuildable.h	/^void      gtk_buildable_custom_tag_end         (GtkBuildable        *buildable,$/;"	p
gtk_buildable_custom_tag_start	gtkbuildable.h	/^gboolean  gtk_buildable_custom_tag_start       (GtkBuildable        *buildable,$/;"	p
gtk_buildable_get_internal_child	gtkbuildable.h	/^GObject * gtk_buildable_get_internal_child     (GtkBuildable        *buildable,$/;"	p
gtk_buildable_get_name	gtkbuildable.h	/^const gchar * gtk_buildable_get_name           (GtkBuildable        *buildable);$/;"	p
gtk_buildable_parser_finished	gtkbuildable.h	/^void      gtk_buildable_parser_finished        (GtkBuildable        *buildable,$/;"	p
gtk_buildable_set_buildable_property	gtkbuildable.h	/^void      gtk_buildable_set_buildable_property (GtkBuildable        *buildable,$/;"	p
gtk_buildable_set_name	gtkbuildable.h	/^void      gtk_buildable_set_name               (GtkBuildable        *buildable,$/;"	p
gtk_builder_add_from_file	gtkbuilder.h	/^guint        gtk_builder_add_from_file           (GtkBuilder    *builder,$/;"	p
gtk_builder_add_from_string	gtkbuilder.h	/^guint        gtk_builder_add_from_string         (GtkBuilder    *builder,$/;"	p
gtk_builder_add_objects_from_file	gtkbuilder.h	/^guint        gtk_builder_add_objects_from_file   (GtkBuilder    *builder,$/;"	p
gtk_builder_add_objects_from_string	gtkbuilder.h	/^guint        gtk_builder_add_objects_from_string (GtkBuilder    *builder,$/;"	p
gtk_builder_connect_signals	gtkbuilder.h	/^void         gtk_builder_connect_signals         (GtkBuilder    *builder,$/;"	p
gtk_builder_connect_signals_full	gtkbuilder.h	/^void         gtk_builder_connect_signals_full    (GtkBuilder    *builder,$/;"	p
gtk_builder_error_quark	gtkbuilder.h	/^GQuark gtk_builder_error_quark (void);$/;"	p
gtk_builder_get_object	gtkbuilder.h	/^GObject*     gtk_builder_get_object              (GtkBuilder    *builder,$/;"	p
gtk_builder_get_objects	gtkbuilder.h	/^GSList*      gtk_builder_get_objects             (GtkBuilder    *builder);$/;"	p
gtk_builder_get_translation_domain	gtkbuilder.h	/^const gchar* gtk_builder_get_translation_domain  (GtkBuilder   	*builder);$/;"	p
gtk_builder_get_type_from_name	gtkbuilder.h	/^GType        gtk_builder_get_type_from_name      (GtkBuilder   	*builder,$/;"	p
gtk_builder_new	gtkbuilder.h	/^GtkBuilder*  gtk_builder_new                     (void);$/;"	p
gtk_builder_set_translation_domain	gtkbuilder.h	/^void         gtk_builder_set_translation_domain  (GtkBuilder   	*builder,$/;"	p
gtk_builder_value_from_string	gtkbuilder.h	/^gboolean     gtk_builder_value_from_string       (GtkBuilder    *builder,$/;"	p
gtk_builder_value_from_string_type	gtkbuilder.h	/^gboolean     gtk_builder_value_from_string_type  (GtkBuilder    *builder,$/;"	p
gtk_button_box_get_child_ipadding	gtkbbox.h	/^void gtk_button_box_get_child_ipadding (GtkButtonBox *widget,$/;"	p
gtk_button_box_get_child_secondary	gtkbbox.h	/^gboolean          gtk_button_box_get_child_secondary (GtkButtonBox      *widget,$/;"	p
gtk_button_box_get_child_size	gtkbbox.h	/^void gtk_button_box_get_child_size     (GtkButtonBox *widget,$/;"	p
gtk_button_box_get_layout	gtkbbox.h	/^GtkButtonBoxStyle gtk_button_box_get_layout          (GtkButtonBox      *widget);$/;"	p
gtk_button_box_get_spacing	gtkbbox.h	81;"	d
gtk_button_box_set_child_ipadding	gtkbbox.h	/^void gtk_button_box_set_child_ipadding (GtkButtonBox *widget,$/;"	p
gtk_button_box_set_child_secondary	gtkbbox.h	/^void              gtk_button_box_set_child_secondary (GtkButtonBox      *widget,$/;"	p
gtk_button_box_set_child_size	gtkbbox.h	/^void gtk_button_box_set_child_size     (GtkButtonBox *widget,$/;"	p
gtk_button_box_set_layout	gtkbbox.h	/^void              gtk_button_box_set_layout          (GtkButtonBox      *widget,$/;"	p
gtk_button_box_set_spacing	gtkbbox.h	80;"	d
gtk_button_clicked	gtkbutton.h	/^void           gtk_button_clicked           (GtkButton      *button);$/;"	p
gtk_button_enter	gtkbutton.h	/^void           gtk_button_enter             (GtkButton      *button);$/;"	p
gtk_button_get_alignment	gtkbutton.h	/^void                  gtk_button_get_alignment      (GtkButton      *button,$/;"	p
gtk_button_get_event_window	gtkbutton.h	/^GdkWindow*            gtk_button_get_event_window   (GtkButton      *button);$/;"	p
gtk_button_get_focus_on_click	gtkbutton.h	/^gboolean              gtk_button_get_focus_on_click (GtkButton      *button);$/;"	p
gtk_button_get_image	gtkbutton.h	/^GtkWidget*            gtk_button_get_image          (GtkButton      *button);$/;"	p
gtk_button_get_image_position	gtkbutton.h	/^GtkPositionType       gtk_button_get_image_position (GtkButton      *button);$/;"	p
gtk_button_get_label	gtkbutton.h	/^const gchar *         gtk_button_get_label          (GtkButton      *button);$/;"	p
gtk_button_get_relief	gtkbutton.h	/^GtkReliefStyle        gtk_button_get_relief         (GtkButton      *button);$/;"	p
gtk_button_get_use_stock	gtkbutton.h	/^gboolean              gtk_button_get_use_stock      (GtkButton      *button);$/;"	p
gtk_button_get_use_underline	gtkbutton.h	/^gboolean              gtk_button_get_use_underline  (GtkButton      *button);$/;"	p
gtk_button_leave	gtkbutton.h	/^void           gtk_button_leave             (GtkButton      *button);$/;"	p
gtk_button_new	gtkbutton.h	/^GtkWidget*     gtk_button_new               (void);$/;"	p
gtk_button_new_from_stock	gtkbutton.h	/^GtkWidget*     gtk_button_new_from_stock    (const gchar    *stock_id);$/;"	p
gtk_button_new_with_label	gtkbutton.h	/^GtkWidget*     gtk_button_new_with_label    (const gchar    *label);$/;"	p
gtk_button_new_with_mnemonic	gtkbutton.h	/^GtkWidget*     gtk_button_new_with_mnemonic (const gchar    *label);$/;"	p
gtk_button_pressed	gtkbutton.h	/^void           gtk_button_pressed           (GtkButton      *button);$/;"	p
gtk_button_released	gtkbutton.h	/^void           gtk_button_released          (GtkButton      *button);$/;"	p
gtk_button_set_alignment	gtkbutton.h	/^void                  gtk_button_set_alignment      (GtkButton      *button,$/;"	p
gtk_button_set_focus_on_click	gtkbutton.h	/^void                  gtk_button_set_focus_on_click (GtkButton      *button,$/;"	p
gtk_button_set_image	gtkbutton.h	/^void                  gtk_button_set_image          (GtkButton      *button,$/;"	p
gtk_button_set_image_position	gtkbutton.h	/^void                  gtk_button_set_image_position (GtkButton      *button,$/;"	p
gtk_button_set_label	gtkbutton.h	/^void                  gtk_button_set_label          (GtkButton      *button,$/;"	p
gtk_button_set_relief	gtkbutton.h	/^void                  gtk_button_set_relief         (GtkButton      *button,$/;"	p
gtk_button_set_use_stock	gtkbutton.h	/^void                  gtk_button_set_use_stock      (GtkButton      *button,$/;"	p
gtk_button_set_use_underline	gtkbutton.h	/^void                  gtk_button_set_use_underline  (GtkButton      *button,$/;"	p
gtk_calendar_clear_marks	gtkcalendar.h	/^void	   gtk_calendar_clear_marks	(GtkCalendar *calendar);$/;"	p
gtk_calendar_display_options	gtkcalendar.h	/^void	   gtk_calendar_display_options (GtkCalendar		  *calendar,$/;"	p
gtk_calendar_freeze	gtkcalendar.h	/^void	   gtk_calendar_freeze		(GtkCalendar *calendar);$/;"	p
gtk_calendar_get_date	gtkcalendar.h	/^void	   gtk_calendar_get_date	(GtkCalendar *calendar, $/;"	p
gtk_calendar_get_detail_height_rows	gtkcalendar.h	/^gint       gtk_calendar_get_detail_height_rows (GtkCalendar    *calendar);$/;"	p
gtk_calendar_get_detail_width_chars	gtkcalendar.h	/^gint       gtk_calendar_get_detail_width_chars (GtkCalendar    *calendar);$/;"	p
gtk_calendar_get_display_options	gtkcalendar.h	/^           gtk_calendar_get_display_options (GtkCalendar   	      *calendar);$/;"	p
gtk_calendar_mark_day	gtkcalendar.h	/^gboolean   gtk_calendar_mark_day	(GtkCalendar *calendar,$/;"	p
gtk_calendar_new	gtkcalendar.h	/^GtkWidget* gtk_calendar_new		(void);$/;"	p
gtk_calendar_select_day	gtkcalendar.h	/^void	   gtk_calendar_select_day	(GtkCalendar *calendar,$/;"	p
gtk_calendar_select_month	gtkcalendar.h	/^gboolean   gtk_calendar_select_month	(GtkCalendar *calendar,$/;"	p
gtk_calendar_set_detail_func	gtkcalendar.h	/^void       gtk_calendar_set_detail_func (GtkCalendar           *calendar,$/;"	p
gtk_calendar_set_detail_height_rows	gtkcalendar.h	/^void       gtk_calendar_set_detail_height_rows (GtkCalendar    *calendar,$/;"	p
gtk_calendar_set_detail_width_chars	gtkcalendar.h	/^void       gtk_calendar_set_detail_width_chars (GtkCalendar    *calendar,$/;"	p
gtk_calendar_set_display_options	gtkcalendar.h	/^void	   gtk_calendar_set_display_options (GtkCalendar    	      *calendar,$/;"	p
gtk_calendar_thaw	gtkcalendar.h	/^void	   gtk_calendar_thaw		(GtkCalendar *calendar);$/;"	p
gtk_calendar_unmark_day	gtkcalendar.h	/^gboolean   gtk_calendar_unmark_day	(GtkCalendar *calendar,$/;"	p
gtk_cell_editable_editing_done	gtkcelleditable.h	/^void  gtk_cell_editable_editing_done  (GtkCellEditable *cell_editable);$/;"	p
gtk_cell_editable_remove_widget	gtkcelleditable.h	/^void  gtk_cell_editable_remove_widget (GtkCellEditable *cell_editable);$/;"	p
gtk_cell_editable_start_editing	gtkcelleditable.h	/^void  gtk_cell_editable_start_editing (GtkCellEditable *cell_editable,$/;"	p
gtk_cell_layout_add_attribute	gtkcelllayout.h	/^void  gtk_cell_layout_add_attribute      (GtkCellLayout         *cell_layout,$/;"	p
gtk_cell_layout_clear	gtkcelllayout.h	/^void  gtk_cell_layout_clear              (GtkCellLayout         *cell_layout);$/;"	p
gtk_cell_layout_clear_attributes	gtkcelllayout.h	/^void  gtk_cell_layout_clear_attributes   (GtkCellLayout         *cell_layout,$/;"	p
gtk_cell_layout_get_cells	gtkcelllayout.h	/^GList *gtk_cell_layout_get_cells         (GtkCellLayout         *cell_layout);$/;"	p
gtk_cell_layout_pack_end	gtkcelllayout.h	/^void  gtk_cell_layout_pack_end           (GtkCellLayout         *cell_layout,$/;"	p
gtk_cell_layout_pack_start	gtkcelllayout.h	/^void  gtk_cell_layout_pack_start         (GtkCellLayout         *cell_layout,$/;"	p
gtk_cell_layout_reorder	gtkcelllayout.h	/^void  gtk_cell_layout_reorder            (GtkCellLayout         *cell_layout,$/;"	p
gtk_cell_layout_set_cell_data_func	gtkcelllayout.h	/^void  gtk_cell_layout_set_cell_data_func (GtkCellLayout         *cell_layout,$/;"	p
gtk_cell_renderer_accel_new	gtkcellrendereraccel.h	/^GtkCellRenderer *gtk_cell_renderer_accel_new             (void);$/;"	p
gtk_cell_renderer_activate	gtkcellrenderer.h	/^gboolean         gtk_cell_renderer_activate       (GtkCellRenderer      *cell,$/;"	p
gtk_cell_renderer_combo_new	gtkcellrenderercombo.h	/^GtkCellRenderer *gtk_cell_renderer_combo_new      (void);$/;"	p
gtk_cell_renderer_editing_canceled	gtkcellrenderer.h	/^void gtk_cell_renderer_editing_canceled (GtkCellRenderer *cell);$/;"	p
gtk_cell_renderer_get_alignment	gtkcellrenderer.h	/^void             gtk_cell_renderer_get_alignment  (GtkCellRenderer      *cell,$/;"	p
gtk_cell_renderer_get_fixed_size	gtkcellrenderer.h	/^void             gtk_cell_renderer_get_fixed_size (GtkCellRenderer      *cell,$/;"	p
gtk_cell_renderer_get_padding	gtkcellrenderer.h	/^void             gtk_cell_renderer_get_padding    (GtkCellRenderer      *cell,$/;"	p
gtk_cell_renderer_get_sensitive	gtkcellrenderer.h	/^gboolean         gtk_cell_renderer_get_sensitive  (GtkCellRenderer      *cell);$/;"	p
gtk_cell_renderer_get_size	gtkcellrenderer.h	/^void             gtk_cell_renderer_get_size       (GtkCellRenderer      *cell,$/;"	p
gtk_cell_renderer_get_visible	gtkcellrenderer.h	/^gboolean         gtk_cell_renderer_get_visible    (GtkCellRenderer      *cell);$/;"	p
gtk_cell_renderer_pixbuf_new	gtkcellrendererpixbuf.h	/^GtkCellRenderer *gtk_cell_renderer_pixbuf_new      (void);$/;"	p
gtk_cell_renderer_progress_new	gtkcellrendererprogress.h	/^GtkCellRenderer* gtk_cell_renderer_progress_new      (void);$/;"	p
gtk_cell_renderer_render	gtkcellrenderer.h	/^void             gtk_cell_renderer_render         (GtkCellRenderer      *cell,$/;"	p
gtk_cell_renderer_set_alignment	gtkcellrenderer.h	/^void             gtk_cell_renderer_set_alignment  (GtkCellRenderer      *cell,$/;"	p
gtk_cell_renderer_set_fixed_size	gtkcellrenderer.h	/^void             gtk_cell_renderer_set_fixed_size (GtkCellRenderer      *cell,$/;"	p
gtk_cell_renderer_set_padding	gtkcellrenderer.h	/^void             gtk_cell_renderer_set_padding    (GtkCellRenderer      *cell,$/;"	p
gtk_cell_renderer_set_sensitive	gtkcellrenderer.h	/^void             gtk_cell_renderer_set_sensitive  (GtkCellRenderer      *cell,$/;"	p
gtk_cell_renderer_set_visible	gtkcellrenderer.h	/^void             gtk_cell_renderer_set_visible    (GtkCellRenderer      *cell,$/;"	p
gtk_cell_renderer_spin_get_type	gtkcellrendererspin.h	/^GType            gtk_cell_renderer_spin_get_type (void);$/;"	p
gtk_cell_renderer_spin_new	gtkcellrendererspin.h	/^GtkCellRenderer *gtk_cell_renderer_spin_new      (void);$/;"	p
gtk_cell_renderer_spinner_new	gtkcellrendererspinner.h	/^GtkCellRenderer *gtk_cell_renderer_spinner_new      (void);$/;"	p
gtk_cell_renderer_start_editing	gtkcellrenderer.h	/^GtkCellEditable *gtk_cell_renderer_start_editing  (GtkCellRenderer      *cell,$/;"	p
gtk_cell_renderer_stop_editing	gtkcellrenderer.h	/^void gtk_cell_renderer_stop_editing     (GtkCellRenderer *cell,$/;"	p
gtk_cell_renderer_text_new	gtkcellrenderertext.h	/^GtkCellRenderer *gtk_cell_renderer_text_new      (void);$/;"	p
gtk_cell_renderer_text_set_fixed_height_from_font	gtkcellrenderertext.h	/^void             gtk_cell_renderer_text_set_fixed_height_from_font (GtkCellRendererText *renderer,$/;"	p
gtk_cell_renderer_toggle_get_activatable	gtkcellrenderertoggle.h	/^gboolean        gtk_cell_renderer_toggle_get_activatable (GtkCellRendererToggle *toggle);$/;"	p
gtk_cell_renderer_toggle_get_active	gtkcellrenderertoggle.h	/^gboolean        gtk_cell_renderer_toggle_get_active      (GtkCellRendererToggle *toggle);$/;"	p
gtk_cell_renderer_toggle_get_radio	gtkcellrenderertoggle.h	/^gboolean         gtk_cell_renderer_toggle_get_radio      (GtkCellRendererToggle *toggle);$/;"	p
gtk_cell_renderer_toggle_new	gtkcellrenderertoggle.h	/^GtkCellRenderer *gtk_cell_renderer_toggle_new            (void);$/;"	p
gtk_cell_renderer_toggle_set_activatable	gtkcellrenderertoggle.h	/^void            gtk_cell_renderer_toggle_set_activatable (GtkCellRendererToggle *toggle,$/;"	p
gtk_cell_renderer_toggle_set_active	gtkcellrenderertoggle.h	/^void            gtk_cell_renderer_toggle_set_active      (GtkCellRendererToggle *toggle,$/;"	p
gtk_cell_renderer_toggle_set_radio	gtkcellrenderertoggle.h	/^void             gtk_cell_renderer_toggle_set_radio      (GtkCellRendererToggle *toggle,$/;"	p
gtk_cell_view_get_cell_renderers	gtkcellview.h	/^GList            *gtk_cell_view_get_cell_renderers      (GtkCellView     *cell_view);$/;"	p
gtk_cell_view_get_displayed_row	gtkcellview.h	/^GtkTreePath      *gtk_cell_view_get_displayed_row       (GtkCellView     *cell_view);$/;"	p
gtk_cell_view_get_model	gtkcellview.h	/^GtkTreeModel     *gtk_cell_view_get_model               (GtkCellView     *cell_view);$/;"	p
gtk_cell_view_get_size_of_row	gtkcellview.h	/^gboolean          gtk_cell_view_get_size_of_row         (GtkCellView     *cell_view,$/;"	p
gtk_cell_view_new	gtkcellview.h	/^GtkWidget        *gtk_cell_view_new                    (void);$/;"	p
gtk_cell_view_new_with_markup	gtkcellview.h	/^GtkWidget        *gtk_cell_view_new_with_markup        (const gchar     *markup);$/;"	p
gtk_cell_view_new_with_pixbuf	gtkcellview.h	/^GtkWidget        *gtk_cell_view_new_with_pixbuf        (GdkPixbuf       *pixbuf);$/;"	p
gtk_cell_view_new_with_text	gtkcellview.h	/^GtkWidget        *gtk_cell_view_new_with_text          (const gchar     *text);$/;"	p
gtk_cell_view_set_background_color	gtkcellview.h	/^void              gtk_cell_view_set_background_color    (GtkCellView     *cell_view,$/;"	p
gtk_cell_view_set_displayed_row	gtkcellview.h	/^void              gtk_cell_view_set_displayed_row       (GtkCellView     *cell_view,$/;"	p
gtk_cell_view_set_model	gtkcellview.h	/^void              gtk_cell_view_set_model               (GtkCellView     *cell_view,$/;"	p
gtk_check_button_new	gtkcheckbutton.h	/^GtkWidget* gtk_check_button_new               (void);$/;"	p
gtk_check_button_new_with_label	gtkcheckbutton.h	/^GtkWidget* gtk_check_button_new_with_label    (const gchar *label);$/;"	p
gtk_check_button_new_with_mnemonic	gtkcheckbutton.h	/^GtkWidget* gtk_check_button_new_with_mnemonic (const gchar *label);$/;"	p
gtk_check_menu_item_get_active	gtkcheckmenuitem.h	/^gboolean   gtk_check_menu_item_get_active        (GtkCheckMenuItem *check_menu_item);$/;"	p
gtk_check_menu_item_get_draw_as_radio	gtkcheckmenuitem.h	/^gboolean   gtk_check_menu_item_get_draw_as_radio (GtkCheckMenuItem *check_menu_item);$/;"	p
gtk_check_menu_item_get_inconsistent	gtkcheckmenuitem.h	/^gboolean   gtk_check_menu_item_get_inconsistent  (GtkCheckMenuItem *check_menu_item);$/;"	p
gtk_check_menu_item_new	gtkcheckmenuitem.h	/^GtkWidget* gtk_check_menu_item_new               (void);$/;"	p
gtk_check_menu_item_new_with_label	gtkcheckmenuitem.h	/^GtkWidget* gtk_check_menu_item_new_with_label    (const gchar      *label);$/;"	p
gtk_check_menu_item_new_with_mnemonic	gtkcheckmenuitem.h	/^GtkWidget* gtk_check_menu_item_new_with_mnemonic (const gchar      *label);$/;"	p
gtk_check_menu_item_set_active	gtkcheckmenuitem.h	/^void       gtk_check_menu_item_set_active        (GtkCheckMenuItem *check_menu_item,$/;"	p
gtk_check_menu_item_set_draw_as_radio	gtkcheckmenuitem.h	/^void       gtk_check_menu_item_set_draw_as_radio (GtkCheckMenuItem *check_menu_item,$/;"	p
gtk_check_menu_item_set_inconsistent	gtkcheckmenuitem.h	/^void       gtk_check_menu_item_set_inconsistent  (GtkCheckMenuItem *check_menu_item,$/;"	p
gtk_check_menu_item_set_show_toggle	gtkcheckmenuitem.h	/^void	   gtk_check_menu_item_set_show_toggle (GtkCheckMenuItem *menu_item,$/;"	p
gtk_check_menu_item_set_state	gtkcheckmenuitem.h	97;"	d
gtk_check_menu_item_toggled	gtkcheckmenuitem.h	/^void       gtk_check_menu_item_toggled           (GtkCheckMenuItem *check_menu_item);$/;"	p
gtk_check_version	gtkmain.h	/^const gchar* gtk_check_version (guint	required_major,$/;"	p
gtk_clipboard_clear	gtkclipboard.h	/^void     gtk_clipboard_clear          (GtkClipboard          *clipboard);$/;"	p
gtk_clipboard_get	gtkclipboard.h	/^GtkClipboard *gtk_clipboard_get             (GdkAtom       selection);$/;"	p
gtk_clipboard_get_display	gtkclipboard.h	/^GdkDisplay   *gtk_clipboard_get_display     (GtkClipboard *clipboard);$/;"	p
gtk_clipboard_get_for_display	gtkclipboard.h	/^GtkClipboard *gtk_clipboard_get_for_display (GdkDisplay   *display,$/;"	p
gtk_clipboard_get_owner	gtkclipboard.h	/^GObject *gtk_clipboard_get_owner      (GtkClipboard          *clipboard);$/;"	p
gtk_clipboard_request_contents	gtkclipboard.h	/^void gtk_clipboard_request_contents  (GtkClipboard                     *clipboard,$/;"	p
gtk_clipboard_request_image	gtkclipboard.h	/^void gtk_clipboard_request_image     (GtkClipboard                     *clipboard,$/;"	p
gtk_clipboard_request_rich_text	gtkclipboard.h	/^void gtk_clipboard_request_rich_text (GtkClipboard                     *clipboard,$/;"	p
gtk_clipboard_request_targets	gtkclipboard.h	/^void gtk_clipboard_request_targets   (GtkClipboard                     *clipboard,$/;"	p
gtk_clipboard_request_text	gtkclipboard.h	/^void gtk_clipboard_request_text      (GtkClipboard                     *clipboard,$/;"	p
gtk_clipboard_request_uris	gtkclipboard.h	/^void gtk_clipboard_request_uris      (GtkClipboard                     *clipboard,$/;"	p
gtk_clipboard_set_can_store	gtkclipboard.h	/^void gtk_clipboard_set_can_store (GtkClipboard         *clipboard,$/;"	p
gtk_clipboard_set_image	gtkclipboard.h	/^void     gtk_clipboard_set_image      (GtkClipboard          *clipboard,$/;"	p
gtk_clipboard_set_text	gtkclipboard.h	/^void     gtk_clipboard_set_text       (GtkClipboard          *clipboard,$/;"	p
gtk_clipboard_set_with_data	gtkclipboard.h	/^gboolean gtk_clipboard_set_with_data  (GtkClipboard          *clipboard,$/;"	p
gtk_clipboard_set_with_owner	gtkclipboard.h	/^gboolean gtk_clipboard_set_with_owner (GtkClipboard          *clipboard,$/;"	p
gtk_clipboard_store	gtkclipboard.h	/^void gtk_clipboard_store         (GtkClipboard   *clipboard);$/;"	p
gtk_clipboard_wait_for_contents	gtkclipboard.h	/^GtkSelectionData *gtk_clipboard_wait_for_contents  (GtkClipboard  *clipboard,$/;"	p
gtk_clipboard_wait_for_image	gtkclipboard.h	/^GdkPixbuf *       gtk_clipboard_wait_for_image     (GtkClipboard  *clipboard);$/;"	p
gtk_clipboard_wait_for_rich_text	gtkclipboard.h	/^guint8 *          gtk_clipboard_wait_for_rich_text (GtkClipboard  *clipboard,$/;"	p
gtk_clipboard_wait_for_targets	gtkclipboard.h	/^gboolean          gtk_clipboard_wait_for_targets   (GtkClipboard  *clipboard,$/;"	p
gtk_clipboard_wait_for_text	gtkclipboard.h	/^gchar *           gtk_clipboard_wait_for_text      (GtkClipboard  *clipboard);$/;"	p
gtk_clipboard_wait_for_uris	gtkclipboard.h	/^gchar **          gtk_clipboard_wait_for_uris      (GtkClipboard  *clipboard);$/;"	p
gtk_clipboard_wait_is_image_available	gtkclipboard.h	/^gboolean gtk_clipboard_wait_is_image_available     (GtkClipboard  *clipboard);$/;"	p
gtk_clipboard_wait_is_rich_text_available	gtkclipboard.h	/^gboolean gtk_clipboard_wait_is_rich_text_available (GtkClipboard  *clipboard,$/;"	p
gtk_clipboard_wait_is_target_available	gtkclipboard.h	/^gboolean gtk_clipboard_wait_is_target_available    (GtkClipboard  *clipboard,$/;"	p
gtk_clipboard_wait_is_text_available	gtkclipboard.h	/^gboolean gtk_clipboard_wait_is_text_available      (GtkClipboard  *clipboard);$/;"	p
gtk_clipboard_wait_is_uris_available	gtkclipboard.h	/^gboolean gtk_clipboard_wait_is_uris_available      (GtkClipboard  *clipboard);$/;"	p
gtk_clist_append	gtkclist.h	/^gint gtk_clist_append  (GtkCList    *clist,$/;"	p
gtk_clist_clear	gtkclist.h	/^void gtk_clist_clear (GtkCList *clist);$/;"	p
gtk_clist_column_title_active	gtkclist.h	/^void gtk_clist_column_title_active   (GtkCList *clist,$/;"	p
gtk_clist_column_title_passive	gtkclist.h	/^void gtk_clist_column_title_passive  (GtkCList *clist,$/;"	p
gtk_clist_column_titles_active	gtkclist.h	/^void gtk_clist_column_titles_active  (GtkCList *clist);$/;"	p
gtk_clist_column_titles_hide	gtkclist.h	/^void gtk_clist_column_titles_hide (GtkCList *clist);$/;"	p
gtk_clist_column_titles_passive	gtkclist.h	/^void gtk_clist_column_titles_passive (GtkCList *clist);$/;"	p
gtk_clist_column_titles_show	gtkclist.h	/^void gtk_clist_column_titles_show (GtkCList *clist);$/;"	p
gtk_clist_columns_autosize	gtkclist.h	/^gint gtk_clist_columns_autosize (GtkCList *clist);$/;"	p
gtk_clist_find_row_from_data	gtkclist.h	/^gint gtk_clist_find_row_from_data (GtkCList *clist,$/;"	p
gtk_clist_freeze	gtkclist.h	/^void gtk_clist_freeze (GtkCList *clist);$/;"	p
gtk_clist_get_cell_style	gtkclist.h	/^GtkStyle *gtk_clist_get_cell_style (GtkCList *clist,$/;"	p
gtk_clist_get_cell_type	gtkclist.h	/^GtkCellType gtk_clist_get_cell_type (GtkCList *clist,$/;"	p
gtk_clist_get_column_title	gtkclist.h	/^gchar * gtk_clist_get_column_title (GtkCList *clist,$/;"	p
gtk_clist_get_column_widget	gtkclist.h	/^GtkWidget * gtk_clist_get_column_widget (GtkCList *clist,$/;"	p
gtk_clist_get_hadjustment	gtkclist.h	/^GtkAdjustment* gtk_clist_get_hadjustment (GtkCList *clist);$/;"	p
gtk_clist_get_pixmap	gtkclist.h	/^gint gtk_clist_get_pixmap (GtkCList   *clist,$/;"	p
gtk_clist_get_pixtext	gtkclist.h	/^gint gtk_clist_get_pixtext (GtkCList   *clist,$/;"	p
gtk_clist_get_row_data	gtkclist.h	/^gpointer gtk_clist_get_row_data (GtkCList *clist,$/;"	p
gtk_clist_get_row_style	gtkclist.h	/^GtkStyle *gtk_clist_get_row_style (GtkCList *clist,$/;"	p
gtk_clist_get_selectable	gtkclist.h	/^gboolean gtk_clist_get_selectable (GtkCList *clist,$/;"	p
gtk_clist_get_selection_info	gtkclist.h	/^gint gtk_clist_get_selection_info (GtkCList *clist,$/;"	p
gtk_clist_get_text	gtkclist.h	/^gint gtk_clist_get_text (GtkCList  *clist,$/;"	p
gtk_clist_get_vadjustment	gtkclist.h	/^GtkAdjustment* gtk_clist_get_vadjustment (GtkCList *clist);$/;"	p
gtk_clist_insert	gtkclist.h	/^gint gtk_clist_insert (GtkCList    *clist,$/;"	p
gtk_clist_moveto	gtkclist.h	/^void gtk_clist_moveto (GtkCList *clist,$/;"	p
gtk_clist_new	gtkclist.h	/^GtkWidget* gtk_clist_new             (gint   columns);$/;"	p
gtk_clist_new_with_titles	gtkclist.h	/^GtkWidget* gtk_clist_new_with_titles (gint   columns,$/;"	p
gtk_clist_optimal_column_width	gtkclist.h	/^gint gtk_clist_optimal_column_width (GtkCList *clist,$/;"	p
gtk_clist_prepend	gtkclist.h	/^gint gtk_clist_prepend (GtkCList    *clist,$/;"	p
gtk_clist_remove	gtkclist.h	/^void gtk_clist_remove (GtkCList *clist,$/;"	p
gtk_clist_row_is_visible	gtkclist.h	/^GtkVisibility gtk_clist_row_is_visible (GtkCList *clist,$/;"	p
gtk_clist_row_move	gtkclist.h	/^void gtk_clist_row_move (GtkCList *clist,$/;"	p
gtk_clist_select_all	gtkclist.h	/^void gtk_clist_select_all (GtkCList *clist);$/;"	p
gtk_clist_select_row	gtkclist.h	/^void gtk_clist_select_row (GtkCList *clist,$/;"	p
gtk_clist_set_auto_sort	gtkclist.h	/^void gtk_clist_set_auto_sort (GtkCList *clist,$/;"	p
gtk_clist_set_background	gtkclist.h	/^void gtk_clist_set_background (GtkCList       *clist,$/;"	p
gtk_clist_set_button_actions	gtkclist.h	/^void gtk_clist_set_button_actions (GtkCList *clist,$/;"	p
gtk_clist_set_cell_style	gtkclist.h	/^void gtk_clist_set_cell_style (GtkCList *clist,$/;"	p
gtk_clist_set_column_auto_resize	gtkclist.h	/^void gtk_clist_set_column_auto_resize (GtkCList *clist,$/;"	p
gtk_clist_set_column_justification	gtkclist.h	/^void gtk_clist_set_column_justification (GtkCList         *clist,$/;"	p
gtk_clist_set_column_max_width	gtkclist.h	/^void gtk_clist_set_column_max_width (GtkCList *clist,$/;"	p
gtk_clist_set_column_min_width	gtkclist.h	/^void gtk_clist_set_column_min_width (GtkCList *clist,$/;"	p
gtk_clist_set_column_resizeable	gtkclist.h	/^void gtk_clist_set_column_resizeable (GtkCList *clist,$/;"	p
gtk_clist_set_column_title	gtkclist.h	/^void gtk_clist_set_column_title (GtkCList    *clist,$/;"	p
gtk_clist_set_column_visibility	gtkclist.h	/^void gtk_clist_set_column_visibility (GtkCList *clist,$/;"	p
gtk_clist_set_column_widget	gtkclist.h	/^void gtk_clist_set_column_widget (GtkCList  *clist,$/;"	p
gtk_clist_set_column_width	gtkclist.h	/^void gtk_clist_set_column_width (GtkCList *clist,$/;"	p
gtk_clist_set_compare_func	gtkclist.h	/^void gtk_clist_set_compare_func (GtkCList            *clist,$/;"	p
gtk_clist_set_foreground	gtkclist.h	/^void gtk_clist_set_foreground (GtkCList       *clist,$/;"	p
gtk_clist_set_hadjustment	gtkclist.h	/^void gtk_clist_set_hadjustment (GtkCList      *clist,$/;"	p
gtk_clist_set_pixmap	gtkclist.h	/^void gtk_clist_set_pixmap (GtkCList  *clist,$/;"	p
gtk_clist_set_pixtext	gtkclist.h	/^void gtk_clist_set_pixtext (GtkCList    *clist,$/;"	p
gtk_clist_set_reorderable	gtkclist.h	/^void gtk_clist_set_reorderable (GtkCList *clist,$/;"	p
gtk_clist_set_row_data	gtkclist.h	/^void gtk_clist_set_row_data (GtkCList *clist,$/;"	p
gtk_clist_set_row_data_full	gtkclist.h	/^void gtk_clist_set_row_data_full (GtkCList       *clist,$/;"	p
gtk_clist_set_row_height	gtkclist.h	/^void gtk_clist_set_row_height (GtkCList *clist,$/;"	p
gtk_clist_set_row_style	gtkclist.h	/^void gtk_clist_set_row_style (GtkCList *clist,$/;"	p
gtk_clist_set_selectable	gtkclist.h	/^void gtk_clist_set_selectable (GtkCList *clist,$/;"	p
gtk_clist_set_selection_mode	gtkclist.h	/^void gtk_clist_set_selection_mode (GtkCList         *clist,$/;"	p
gtk_clist_set_shadow_type	gtkclist.h	/^void gtk_clist_set_shadow_type (GtkCList      *clist,$/;"	p
gtk_clist_set_shift	gtkclist.h	/^void gtk_clist_set_shift (GtkCList *clist,$/;"	p
gtk_clist_set_sort_column	gtkclist.h	/^void gtk_clist_set_sort_column (GtkCList *clist,$/;"	p
gtk_clist_set_sort_type	gtkclist.h	/^void gtk_clist_set_sort_type (GtkCList    *clist,$/;"	p
gtk_clist_set_text	gtkclist.h	/^void gtk_clist_set_text (GtkCList    *clist,$/;"	p
gtk_clist_set_use_drag_icons	gtkclist.h	/^void gtk_clist_set_use_drag_icons (GtkCList *clist,$/;"	p
gtk_clist_set_vadjustment	gtkclist.h	/^void gtk_clist_set_vadjustment (GtkCList      *clist,$/;"	p
gtk_clist_sort	gtkclist.h	/^void gtk_clist_sort (GtkCList *clist);$/;"	p
gtk_clist_swap_rows	gtkclist.h	/^void gtk_clist_swap_rows (GtkCList *clist,$/;"	p
gtk_clist_thaw	gtkclist.h	/^void gtk_clist_thaw   (GtkCList *clist);$/;"	p
gtk_clist_undo_selection	gtkclist.h	/^void gtk_clist_undo_selection (GtkCList *clist);$/;"	p
gtk_clist_unselect_all	gtkclist.h	/^void gtk_clist_unselect_all (GtkCList *clist);$/;"	p
gtk_clist_unselect_row	gtkclist.h	/^void gtk_clist_unselect_row (GtkCList *clist,$/;"	p
gtk_color_button_get_alpha	gtkcolorbutton.h	/^guint16    gtk_color_button_get_alpha      (GtkColorButton *color_button);$/;"	p
gtk_color_button_get_color	gtkcolorbutton.h	/^void       gtk_color_button_get_color      (GtkColorButton *color_button,$/;"	p
gtk_color_button_get_title	gtkcolorbutton.h	/^const gchar *gtk_color_button_get_title (GtkColorButton *color_button);$/;"	p
gtk_color_button_get_use_alpha	gtkcolorbutton.h	/^gboolean   gtk_color_button_get_use_alpha  (GtkColorButton *color_button);$/;"	p
gtk_color_button_new	gtkcolorbutton.h	/^GtkWidget *gtk_color_button_new            (void);$/;"	p
gtk_color_button_new_with_color	gtkcolorbutton.h	/^GtkWidget *gtk_color_button_new_with_color (const GdkColor *color);$/;"	p
gtk_color_button_set_alpha	gtkcolorbutton.h	/^void       gtk_color_button_set_alpha      (GtkColorButton *color_button,$/;"	p
gtk_color_button_set_color	gtkcolorbutton.h	/^void       gtk_color_button_set_color      (GtkColorButton *color_button,$/;"	p
gtk_color_button_set_title	gtkcolorbutton.h	/^void       gtk_color_button_set_title      (GtkColorButton *color_button,$/;"	p
gtk_color_button_set_use_alpha	gtkcolorbutton.h	/^void       gtk_color_button_set_use_alpha  (GtkColorButton *color_button,$/;"	p
gtk_color_selection_dialog_get_color_selection	gtkcolorseldialog.h	/^GtkWidget* gtk_color_selection_dialog_get_color_selection (GtkColorSelectionDialog *colorsel);$/;"	p
gtk_color_selection_dialog_new	gtkcolorseldialog.h	/^GtkWidget* gtk_color_selection_dialog_new                 (const gchar *title);$/;"	p
gtk_color_selection_get_color	gtkcolorsel.h	/^void gtk_color_selection_get_color         (GtkColorSelection *colorsel,$/;"	p
gtk_color_selection_get_current_alpha	gtkcolorsel.h	/^guint16  gtk_color_selection_get_current_alpha   (GtkColorSelection *colorsel);$/;"	p
gtk_color_selection_get_current_color	gtkcolorsel.h	/^void     gtk_color_selection_get_current_color   (GtkColorSelection *colorsel,$/;"	p
gtk_color_selection_get_has_opacity_control	gtkcolorsel.h	/^gboolean   gtk_color_selection_get_has_opacity_control (GtkColorSelection *colorsel);$/;"	p
gtk_color_selection_get_has_palette	gtkcolorsel.h	/^gboolean   gtk_color_selection_get_has_palette         (GtkColorSelection *colorsel);$/;"	p
gtk_color_selection_get_previous_alpha	gtkcolorsel.h	/^guint16  gtk_color_selection_get_previous_alpha  (GtkColorSelection *colorsel);$/;"	p
gtk_color_selection_get_previous_color	gtkcolorsel.h	/^void     gtk_color_selection_get_previous_color  (GtkColorSelection *colorsel,$/;"	p
gtk_color_selection_is_adjusting	gtkcolorsel.h	/^gboolean gtk_color_selection_is_adjusting        (GtkColorSelection *colorsel);$/;"	p
gtk_color_selection_new	gtkcolorsel.h	/^GtkWidget *gtk_color_selection_new                     (void);$/;"	p
gtk_color_selection_palette_from_string	gtkcolorsel.h	/^gboolean gtk_color_selection_palette_from_string (const gchar       *str,$/;"	p
gtk_color_selection_palette_to_string	gtkcolorsel.h	/^gchar*   gtk_color_selection_palette_to_string   (const GdkColor    *colors,$/;"	p
gtk_color_selection_set_change_palette_hook	gtkcolorsel.h	/^GtkColorSelectionChangePaletteFunc           gtk_color_selection_set_change_palette_hook             (GtkColorSelectionChangePaletteFunc           func);$/;"	p
gtk_color_selection_set_change_palette_with_screen_hook	gtkcolorsel.h	/^GtkColorSelectionChangePaletteWithScreenFunc gtk_color_selection_set_change_palette_with_screen_hook (GtkColorSelectionChangePaletteWithScreenFunc func);$/;"	p
gtk_color_selection_set_color	gtkcolorsel.h	/^void gtk_color_selection_set_color         (GtkColorSelection *colorsel,$/;"	p
gtk_color_selection_set_current_alpha	gtkcolorsel.h	/^void     gtk_color_selection_set_current_alpha   (GtkColorSelection *colorsel,$/;"	p
gtk_color_selection_set_current_color	gtkcolorsel.h	/^void     gtk_color_selection_set_current_color   (GtkColorSelection *colorsel,$/;"	p
gtk_color_selection_set_has_opacity_control	gtkcolorsel.h	/^void       gtk_color_selection_set_has_opacity_control (GtkColorSelection *colorsel,$/;"	p
gtk_color_selection_set_has_palette	gtkcolorsel.h	/^void       gtk_color_selection_set_has_palette         (GtkColorSelection *colorsel,$/;"	p
gtk_color_selection_set_previous_alpha	gtkcolorsel.h	/^void     gtk_color_selection_set_previous_alpha  (GtkColorSelection *colorsel,$/;"	p
gtk_color_selection_set_previous_color	gtkcolorsel.h	/^void     gtk_color_selection_set_previous_color  (GtkColorSelection *colorsel,$/;"	p
gtk_color_selection_set_update_policy	gtkcolorsel.h	/^void gtk_color_selection_set_update_policy (GtkColorSelection *colorsel,$/;"	p
gtk_combo_box_append_text	gtkcombobox.h	/^void          gtk_combo_box_append_text      (GtkComboBox     *combo_box,$/;"	p
gtk_combo_box_entry_get_text_column	gtkcomboboxentry.h	/^gint        gtk_combo_box_entry_get_text_column (GtkComboBoxEntry *entry_box);$/;"	p
gtk_combo_box_entry_new	gtkcomboboxentry.h	/^GtkWidget  *gtk_combo_box_entry_new             (void);$/;"	p
gtk_combo_box_entry_new_text	gtkcomboboxentry.h	/^GtkWidget  *gtk_combo_box_entry_new_text        (void);$/;"	p
gtk_combo_box_entry_new_with_model	gtkcomboboxentry.h	/^GtkWidget  *gtk_combo_box_entry_new_with_model  (GtkTreeModel     *model,$/;"	p
gtk_combo_box_entry_set_text_column	gtkcomboboxentry.h	/^void        gtk_combo_box_entry_set_text_column (GtkComboBoxEntry *entry_box,$/;"	p
gtk_combo_box_get_active	gtkcombobox.h	/^gint          gtk_combo_box_get_active       (GtkComboBox     *combo_box);$/;"	p
gtk_combo_box_get_active_iter	gtkcombobox.h	/^gboolean      gtk_combo_box_get_active_iter  (GtkComboBox     *combo_box,$/;"	p
gtk_combo_box_get_active_text	gtkcombobox.h	/^gchar        *gtk_combo_box_get_active_text  (GtkComboBox     *combo_box);$/;"	p
gtk_combo_box_get_add_tearoffs	gtkcombobox.h	/^gboolean      gtk_combo_box_get_add_tearoffs       (GtkComboBox *combo_box);$/;"	p
gtk_combo_box_get_button_sensitivity	gtkcombobox.h	/^GtkSensitivityType gtk_combo_box_get_button_sensitivity (GtkComboBox        *combo_box);$/;"	p
gtk_combo_box_get_column_span_column	gtkcombobox.h	/^gint          gtk_combo_box_get_column_span_column (GtkComboBox *combo_box);$/;"	p
gtk_combo_box_get_entry_text_column	gtkcombobox.h	/^gint               gtk_combo_box_get_entry_text_column  (GtkComboBox        *combo_box);$/;"	p
gtk_combo_box_get_focus_on_click	gtkcombobox.h	/^gboolean      gtk_combo_box_get_focus_on_click     (GtkComboBox *combo);$/;"	p
gtk_combo_box_get_has_entry	gtkcombobox.h	/^gboolean           gtk_combo_box_get_has_entry          (GtkComboBox        *combo_box);$/;"	p
gtk_combo_box_get_model	gtkcombobox.h	/^GtkTreeModel *gtk_combo_box_get_model        (GtkComboBox     *combo_box);$/;"	p
gtk_combo_box_get_popup_accessible	gtkcombobox.h	/^AtkObject*    gtk_combo_box_get_popup_accessible (GtkComboBox *combo_box);$/;"	p
gtk_combo_box_get_row_separator_func	gtkcombobox.h	/^GtkTreeViewRowSeparatorFunc gtk_combo_box_get_row_separator_func (GtkComboBox                *combo_box);$/;"	p
gtk_combo_box_get_row_span_column	gtkcombobox.h	/^gint          gtk_combo_box_get_row_span_column    (GtkComboBox *combo_box);$/;"	p
gtk_combo_box_get_title	gtkcombobox.h	/^const gchar * gtk_combo_box_get_title              (GtkComboBox *combo_box);$/;"	p
gtk_combo_box_get_wrap_width	gtkcombobox.h	/^gint          gtk_combo_box_get_wrap_width         (GtkComboBox *combo_box);$/;"	p
gtk_combo_box_insert_text	gtkcombobox.h	/^void          gtk_combo_box_insert_text      (GtkComboBox     *combo_box,$/;"	p
gtk_combo_box_new	gtkcombobox.h	/^GtkWidget    *gtk_combo_box_new                      (void);$/;"	p
gtk_combo_box_new_text	gtkcombobox.h	/^GtkWidget    *gtk_combo_box_new_text         (void);$/;"	p
gtk_combo_box_new_with_entry	gtkcombobox.h	/^GtkWidget    *gtk_combo_box_new_with_entry           (void);$/;"	p
gtk_combo_box_new_with_model	gtkcombobox.h	/^GtkWidget    *gtk_combo_box_new_with_model           (GtkTreeModel *model);$/;"	p
gtk_combo_box_new_with_model_and_entry	gtkcombobox.h	/^GtkWidget    *gtk_combo_box_new_with_model_and_entry (GtkTreeModel *model);$/;"	p
gtk_combo_box_popdown	gtkcombobox.h	/^void          gtk_combo_box_popdown          (GtkComboBox     *combo_box);$/;"	p
gtk_combo_box_popup	gtkcombobox.h	/^void          gtk_combo_box_popup            (GtkComboBox     *combo_box);$/;"	p
gtk_combo_box_prepend_text	gtkcombobox.h	/^void          gtk_combo_box_prepend_text     (GtkComboBox     *combo_box,$/;"	p
gtk_combo_box_remove_text	gtkcombobox.h	/^void          gtk_combo_box_remove_text      (GtkComboBox     *combo_box,$/;"	p
gtk_combo_box_set_active	gtkcombobox.h	/^void          gtk_combo_box_set_active       (GtkComboBox     *combo_box,$/;"	p
gtk_combo_box_set_active_iter	gtkcombobox.h	/^void          gtk_combo_box_set_active_iter  (GtkComboBox     *combo_box,$/;"	p
gtk_combo_box_set_add_tearoffs	gtkcombobox.h	/^void          gtk_combo_box_set_add_tearoffs       (GtkComboBox *combo_box,$/;"	p
gtk_combo_box_set_button_sensitivity	gtkcombobox.h	/^void               gtk_combo_box_set_button_sensitivity (GtkComboBox        *combo_box,$/;"	p
gtk_combo_box_set_column_span_column	gtkcombobox.h	/^void          gtk_combo_box_set_column_span_column (GtkComboBox *combo_box,$/;"	p
gtk_combo_box_set_entry_text_column	gtkcombobox.h	/^void               gtk_combo_box_set_entry_text_column  (GtkComboBox        *combo_box,$/;"	p
gtk_combo_box_set_focus_on_click	gtkcombobox.h	/^void          gtk_combo_box_set_focus_on_click     (GtkComboBox *combo,$/;"	p
gtk_combo_box_set_model	gtkcombobox.h	/^void          gtk_combo_box_set_model        (GtkComboBox     *combo_box,$/;"	p
gtk_combo_box_set_row_separator_func	gtkcombobox.h	/^void                        gtk_combo_box_set_row_separator_func (GtkComboBox                *combo_box,$/;"	p
gtk_combo_box_set_row_span_column	gtkcombobox.h	/^void          gtk_combo_box_set_row_span_column    (GtkComboBox *combo_box,$/;"	p
gtk_combo_box_set_title	gtkcombobox.h	/^void                  gtk_combo_box_set_title      (GtkComboBox *combo_box,$/;"	p
gtk_combo_box_set_wrap_width	gtkcombobox.h	/^void          gtk_combo_box_set_wrap_width         (GtkComboBox *combo_box,$/;"	p
gtk_combo_box_text_append_text	gtkcomboboxtext.h	/^void          gtk_combo_box_text_append_text     (GtkComboBoxText     *combo_box,$/;"	p
gtk_combo_box_text_get_active_text	gtkcomboboxtext.h	/^gchar        *gtk_combo_box_text_get_active_text (GtkComboBoxText     *combo_box);$/;"	p
gtk_combo_box_text_insert_text	gtkcomboboxtext.h	/^void          gtk_combo_box_text_insert_text     (GtkComboBoxText     *combo_box,$/;"	p
gtk_combo_box_text_new	gtkcomboboxtext.h	/^GtkWidget*    gtk_combo_box_text_new             (void);$/;"	p
gtk_combo_box_text_new_with_entry	gtkcomboboxtext.h	/^GtkWidget*    gtk_combo_box_text_new_with_entry  (void);$/;"	p
gtk_combo_box_text_prepend_text	gtkcomboboxtext.h	/^void          gtk_combo_box_text_prepend_text    (GtkComboBoxText     *combo_box,$/;"	p
gtk_combo_box_text_remove	gtkcomboboxtext.h	/^void          gtk_combo_box_text_remove          (GtkComboBoxText     *combo_box,$/;"	p
gtk_combo_disable_activate	gtkcombo.h	/^void       gtk_combo_disable_activate      (GtkCombo*    combo);$/;"	p
gtk_combo_new	gtkcombo.h	/^GtkWidget* gtk_combo_new                   (void);$/;"	p
gtk_combo_set_case_sensitive	gtkcombo.h	/^void       gtk_combo_set_case_sensitive    (GtkCombo*    combo, $/;"	p
gtk_combo_set_item_string	gtkcombo.h	/^void       gtk_combo_set_item_string       (GtkCombo*    combo,$/;"	p
gtk_combo_set_popdown_strings	gtkcombo.h	/^void       gtk_combo_set_popdown_strings   (GtkCombo*    combo, $/;"	p
gtk_combo_set_use_arrows	gtkcombo.h	/^void       gtk_combo_set_use_arrows        (GtkCombo*    combo, $/;"	p
gtk_combo_set_use_arrows_always	gtkcombo.h	/^void       gtk_combo_set_use_arrows_always (GtkCombo*    combo, $/;"	p
gtk_combo_set_value_in_list	gtkcombo.h	/^void       gtk_combo_set_value_in_list     (GtkCombo*    combo, $/;"	p
gtk_container_add	gtkcontainer.h	/^void    gtk_container_add		 (GtkContainer	   *container,$/;"	p
gtk_container_border_width	gtkcontainer.h	224;"	d
gtk_container_check_resize	gtkcontainer.h	/^void    gtk_container_check_resize       (GtkContainer     *container);$/;"	p
gtk_container_child_get_property	gtkcontainer.h	/^void	     gtk_container_child_get_property		(GtkContainer	   *container,$/;"	p
gtk_container_child_get_valist	gtkcontainer.h	/^void         gtk_container_child_get_valist		(GtkContainer	   *container,$/;"	p
gtk_container_child_set_property	gtkcontainer.h	/^void	     gtk_container_child_set_property		(GtkContainer	   *container,$/;"	p
gtk_container_child_set_valist	gtkcontainer.h	/^void         gtk_container_child_set_valist		(GtkContainer	   *container,$/;"	p
gtk_container_child_type	gtkcontainer.h	/^GType   gtk_container_child_type	   (GtkContainer     *container);$/;"	p
gtk_container_children	gtkcontainer.h	135;"	d
gtk_container_class_find_child_property	gtkcontainer.h	/^GParamSpec*  gtk_container_class_find_child_property	(GObjectClass	   *cclass,$/;"	p
gtk_container_class_install_child_property	gtkcontainer.h	/^void         gtk_container_class_install_child_property (GtkContainerClass *cclass,$/;"	p
gtk_container_class_list_child_properties	gtkcontainer.h	/^GParamSpec** gtk_container_class_list_child_properties	(GObjectClass	   *cclass,$/;"	p
gtk_container_forall	gtkcontainer.h	/^void    gtk_container_forall		     (GtkContainer *container,$/;"	p
gtk_container_foreach	gtkcontainer.h	/^void     gtk_container_foreach      (GtkContainer       *container,$/;"	p
gtk_container_foreach_full	gtkcontainer.h	/^void     gtk_container_foreach_full (GtkContainer       *container,$/;"	p
gtk_container_get_border_width	gtkcontainer.h	/^guint   gtk_container_get_border_width   (GtkContainer     *container);$/;"	p
gtk_container_get_children	gtkcontainer.h	/^GList*   gtk_container_get_children     (GtkContainer       *container);$/;"	p
gtk_container_get_focus_chain	gtkcontainer.h	/^gboolean gtk_container_get_focus_chain  (GtkContainer   *container,$/;"	p
gtk_container_get_focus_child	gtkcontainer.h	/^       gtk_container_get_focus_child	   (GtkContainer     *container);$/;"	p
gtk_container_get_focus_hadjustment	gtkcontainer.h	/^GtkAdjustment *gtk_container_get_focus_hadjustment (GtkContainer *container);$/;"	p
gtk_container_get_focus_vadjustment	gtkcontainer.h	/^GtkAdjustment *gtk_container_get_focus_vadjustment (GtkContainer *container);$/;"	p
gtk_container_get_resize_mode	gtkcontainer.h	/^GtkResizeMode gtk_container_get_resize_mode (GtkContainer     *container);$/;"	p
gtk_container_propagate_expose	gtkcontainer.h	/^void     gtk_container_propagate_expose (GtkContainer   *container,$/;"	p
gtk_container_remove	gtkcontainer.h	/^void    gtk_container_remove		 (GtkContainer	   *container,$/;"	p
gtk_container_resize_children	gtkcontainer.h	/^void    gtk_container_resize_children      (GtkContainer     *container);$/;"	p
gtk_container_set_border_width	gtkcontainer.h	/^void    gtk_container_set_border_width	 (GtkContainer	   *container,$/;"	p
gtk_container_set_focus_chain	gtkcontainer.h	/^void     gtk_container_set_focus_chain  (GtkContainer   *container,$/;"	p
gtk_container_set_focus_child	gtkcontainer.h	/^void   gtk_container_set_focus_child	   (GtkContainer     *container,$/;"	p
gtk_container_set_focus_hadjustment	gtkcontainer.h	/^void   gtk_container_set_focus_hadjustment (GtkContainer     *container,$/;"	p
gtk_container_set_focus_vadjustment	gtkcontainer.h	/^void   gtk_container_set_focus_vadjustment (GtkContainer     *container,$/;"	p
gtk_container_set_reallocate_redraws	gtkcontainer.h	/^void   gtk_container_set_reallocate_redraws (GtkContainer    *container,$/;"	p
gtk_container_set_resize_mode	gtkcontainer.h	/^void    gtk_container_set_resize_mode    (GtkContainer     *container,$/;"	p
gtk_container_unset_focus_chain	gtkcontainer.h	/^void     gtk_container_unset_focus_chain (GtkContainer  *container);$/;"	p
gtk_ctree_collapse	gtkctree.h	/^void gtk_ctree_collapse                          (GtkCTree     *ctree,$/;"	p
gtk_ctree_collapse_recursive	gtkctree.h	/^void gtk_ctree_collapse_recursive                (GtkCTree     *ctree,$/;"	p
gtk_ctree_collapse_to_depth	gtkctree.h	/^void gtk_ctree_collapse_to_depth                 (GtkCTree     *ctree,$/;"	p
gtk_ctree_expand	gtkctree.h	/^void gtk_ctree_expand                            (GtkCTree     *ctree,$/;"	p
gtk_ctree_expand_recursive	gtkctree.h	/^void gtk_ctree_expand_recursive                  (GtkCTree     *ctree,$/;"	p
gtk_ctree_expand_to_depth	gtkctree.h	/^void gtk_ctree_expand_to_depth                   (GtkCTree     *ctree,$/;"	p
gtk_ctree_export_to_gnode	gtkctree.h	/^GNode * gtk_ctree_export_to_gnode                (GtkCTree          *ctree,$/;"	p
gtk_ctree_find	gtkctree.h	/^gboolean gtk_ctree_find                          (GtkCTree     *ctree,$/;"	p
gtk_ctree_find_all_by_row_data	gtkctree.h	/^GList * gtk_ctree_find_all_by_row_data           (GtkCTree     *ctree,$/;"	p
gtk_ctree_find_all_by_row_data_custom	gtkctree.h	/^GList * gtk_ctree_find_all_by_row_data_custom    (GtkCTree     *ctree,$/;"	p
gtk_ctree_find_by_row_data	gtkctree.h	/^GtkCTreeNode * gtk_ctree_find_by_row_data        (GtkCTree     *ctree,$/;"	p
gtk_ctree_find_by_row_data_custom	gtkctree.h	/^GtkCTreeNode * gtk_ctree_find_by_row_data_custom (GtkCTree     *ctree,$/;"	p
gtk_ctree_find_node_ptr	gtkctree.h	/^GtkCTreeNode * gtk_ctree_find_node_ptr           (GtkCTree     *ctree,$/;"	p
gtk_ctree_get_node_info	gtkctree.h	/^gboolean gtk_ctree_get_node_info                 (GtkCTree     *ctree,$/;"	p
gtk_ctree_insert_gnode	gtkctree.h	/^GtkCTreeNode * gtk_ctree_insert_gnode            (GtkCTree          *ctree,$/;"	p
gtk_ctree_insert_node	gtkctree.h	/^GtkCTreeNode * gtk_ctree_insert_node             (GtkCTree     *ctree,$/;"	p
gtk_ctree_is_ancestor	gtkctree.h	/^gboolean gtk_ctree_is_ancestor                   (GtkCTree     *ctree,$/;"	p
gtk_ctree_is_hot_spot	gtkctree.h	/^gboolean gtk_ctree_is_hot_spot                   (GtkCTree     *ctree,$/;"	p
gtk_ctree_is_viewable	gtkctree.h	/^gboolean gtk_ctree_is_viewable                   (GtkCTree     *ctree, $/;"	p
gtk_ctree_last	gtkctree.h	/^GtkCTreeNode * gtk_ctree_last                    (GtkCTree     *ctree,$/;"	p
gtk_ctree_move	gtkctree.h	/^void gtk_ctree_move                              (GtkCTree     *ctree,$/;"	p
gtk_ctree_new	gtkctree.h	/^GtkWidget * gtk_ctree_new                        (gint          columns, $/;"	p
gtk_ctree_new_with_titles	gtkctree.h	/^GtkWidget * gtk_ctree_new_with_titles            (gint          columns, $/;"	p
gtk_ctree_node_get_cell_style	gtkctree.h	/^GtkStyle * gtk_ctree_node_get_cell_style         (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_get_cell_type	gtkctree.h	/^GtkCellType gtk_ctree_node_get_cell_type         (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_get_pixmap	gtkctree.h	/^gboolean gtk_ctree_node_get_pixmap               (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_get_pixtext	gtkctree.h	/^gboolean gtk_ctree_node_get_pixtext              (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_get_row_data	gtkctree.h	/^gpointer gtk_ctree_node_get_row_data             (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_get_row_style	gtkctree.h	/^GtkStyle * gtk_ctree_node_get_row_style          (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_get_selectable	gtkctree.h	/^gboolean gtk_ctree_node_get_selectable           (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_get_text	gtkctree.h	/^gboolean gtk_ctree_node_get_text                 (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_is_visible	gtkctree.h	/^GtkVisibility gtk_ctree_node_is_visible          (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_moveto	gtkctree.h	/^void gtk_ctree_node_moveto                       (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_nth	gtkctree.h	/^GtkCTreeNode * gtk_ctree_node_nth                (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_set_background	gtkctree.h	/^void gtk_ctree_node_set_background               (GtkCTree       *ctree,$/;"	p
gtk_ctree_node_set_cell_style	gtkctree.h	/^void gtk_ctree_node_set_cell_style               (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_set_foreground	gtkctree.h	/^void gtk_ctree_node_set_foreground               (GtkCTree       *ctree,$/;"	p
gtk_ctree_node_set_pixmap	gtkctree.h	/^void gtk_ctree_node_set_pixmap                   (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_set_pixtext	gtkctree.h	/^void gtk_ctree_node_set_pixtext                  (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_set_row_data	gtkctree.h	/^void gtk_ctree_node_set_row_data                 (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_set_row_data_full	gtkctree.h	/^void gtk_ctree_node_set_row_data_full            (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_set_row_style	gtkctree.h	/^void gtk_ctree_node_set_row_style                (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_set_selectable	gtkctree.h	/^void gtk_ctree_node_set_selectable               (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_set_shift	gtkctree.h	/^void gtk_ctree_node_set_shift                    (GtkCTree     *ctree,$/;"	p
gtk_ctree_node_set_text	gtkctree.h	/^void gtk_ctree_node_set_text                     (GtkCTree     *ctree,$/;"	p
gtk_ctree_post_recursive	gtkctree.h	/^void gtk_ctree_post_recursive                    (GtkCTree     *ctree, $/;"	p
gtk_ctree_post_recursive_to_depth	gtkctree.h	/^void gtk_ctree_post_recursive_to_depth           (GtkCTree     *ctree, $/;"	p
gtk_ctree_pre_recursive	gtkctree.h	/^void gtk_ctree_pre_recursive                     (GtkCTree     *ctree, $/;"	p
gtk_ctree_pre_recursive_to_depth	gtkctree.h	/^void gtk_ctree_pre_recursive_to_depth            (GtkCTree     *ctree, $/;"	p
gtk_ctree_real_select_recursive	gtkctree.h	/^void gtk_ctree_real_select_recursive             (GtkCTree     *ctree, $/;"	p
gtk_ctree_remove_node	gtkctree.h	/^void gtk_ctree_remove_node                       (GtkCTree     *ctree, $/;"	p
gtk_ctree_select	gtkctree.h	/^void gtk_ctree_select                            (GtkCTree     *ctree, $/;"	p
gtk_ctree_select_recursive	gtkctree.h	/^void gtk_ctree_select_recursive                  (GtkCTree     *ctree, $/;"	p
gtk_ctree_set_drag_compare_func	gtkctree.h	/^void gtk_ctree_set_drag_compare_func (GtkCTree     	      *ctree,$/;"	p
gtk_ctree_set_expander_style	gtkctree.h	/^void gtk_ctree_set_expander_style    (GtkCTree                *ctree, $/;"	p
gtk_ctree_set_indent	gtkctree.h	/^void gtk_ctree_set_indent            (GtkCTree                *ctree, $/;"	p
gtk_ctree_set_line_style	gtkctree.h	/^void gtk_ctree_set_line_style        (GtkCTree                *ctree, $/;"	p
gtk_ctree_set_node_info	gtkctree.h	/^void gtk_ctree_set_node_info                     (GtkCTree     *ctree,$/;"	p
gtk_ctree_set_reorderable	gtkctree.h	433;"	d
gtk_ctree_set_show_stub	gtkctree.h	/^void gtk_ctree_set_show_stub         (GtkCTree                *ctree, $/;"	p
gtk_ctree_set_spacing	gtkctree.h	/^void gtk_ctree_set_spacing           (GtkCTree                *ctree, $/;"	p
gtk_ctree_sort_node	gtkctree.h	/^void gtk_ctree_sort_node                         (GtkCTree     *ctree, $/;"	p
gtk_ctree_sort_recursive	gtkctree.h	/^void gtk_ctree_sort_recursive                    (GtkCTree     *ctree, $/;"	p
gtk_ctree_toggle_expansion	gtkctree.h	/^void gtk_ctree_toggle_expansion                  (GtkCTree     *ctree,$/;"	p
gtk_ctree_toggle_expansion_recursive	gtkctree.h	/^void gtk_ctree_toggle_expansion_recursive        (GtkCTree     *ctree,$/;"	p
gtk_ctree_unselect	gtkctree.h	/^void gtk_ctree_unselect                          (GtkCTree     *ctree, $/;"	p
gtk_ctree_unselect_recursive	gtkctree.h	/^void gtk_ctree_unselect_recursive                (GtkCTree     *ctree, $/;"	p
gtk_curve_get_vector	gtkcurve.h	/^void		gtk_curve_get_vector	(GtkCurve *curve,$/;"	p
gtk_curve_new	gtkcurve.h	/^GtkWidget*	gtk_curve_new		(void);$/;"	p
gtk_curve_reset	gtkcurve.h	/^void		gtk_curve_reset		(GtkCurve *curve);$/;"	p
gtk_curve_set_curve_type	gtkcurve.h	/^void		gtk_curve_set_curve_type (GtkCurve *curve, GtkCurveType type);$/;"	p
gtk_curve_set_gamma	gtkcurve.h	/^void		gtk_curve_set_gamma	(GtkCurve *curve, gfloat gamma_);$/;"	p
gtk_curve_set_range	gtkcurve.h	/^void		gtk_curve_set_range	(GtkCurve *curve,$/;"	p
gtk_curve_set_vector	gtkcurve.h	/^void		gtk_curve_set_vector	(GtkCurve *curve,$/;"	p
gtk_debug_flags	gtkdebug.h	/^GTKVAR guint gtk_debug_flags;$/;"	v
gtk_dialog_add_action_widget	gtkdialog.h	/^void       gtk_dialog_add_action_widget (GtkDialog   *dialog,$/;"	p
gtk_dialog_add_button	gtkdialog.h	/^GtkWidget* gtk_dialog_add_button        (GtkDialog   *dialog,$/;"	p
gtk_dialog_get_action_area	gtkdialog.h	/^GtkWidget * gtk_dialog_get_action_area  (GtkDialog *dialog);$/;"	p
gtk_dialog_get_content_area	gtkdialog.h	/^GtkWidget * gtk_dialog_get_content_area (GtkDialog *dialog);$/;"	p
gtk_dialog_get_has_separator	gtkdialog.h	/^gboolean gtk_dialog_get_has_separator (GtkDialog *dialog);$/;"	p
gtk_dialog_get_response_for_widget	gtkdialog.h	/^gint gtk_dialog_get_response_for_widget (GtkDialog *dialog,$/;"	p
gtk_dialog_get_widget_for_response	gtkdialog.h	/^GtkWidget* gtk_dialog_get_widget_for_response (GtkDialog *dialog,$/;"	p
gtk_dialog_new	gtkdialog.h	/^GtkWidget* gtk_dialog_new      (void);$/;"	p
gtk_dialog_new_with_buttons	gtkdialog.h	/^GtkWidget* gtk_dialog_new_with_buttons (const gchar     *title,$/;"	p
gtk_dialog_response	gtkdialog.h	/^void gtk_dialog_response           (GtkDialog *dialog,$/;"	p
gtk_dialog_run	gtkdialog.h	/^gint gtk_dialog_run                (GtkDialog *dialog);$/;"	p
gtk_dialog_set_alternative_button_order	gtkdialog.h	/^void     gtk_dialog_set_alternative_button_order (GtkDialog *dialog,$/;"	p
gtk_dialog_set_alternative_button_order_from_array	gtkdialog.h	/^void     gtk_dialog_set_alternative_button_order_from_array (GtkDialog *dialog,$/;"	p
gtk_dialog_set_default_response	gtkdialog.h	/^void gtk_dialog_set_default_response   (GtkDialog *dialog,$/;"	p
gtk_dialog_set_has_separator	gtkdialog.h	/^void     gtk_dialog_set_has_separator (GtkDialog *dialog,$/;"	p
gtk_dialog_set_response_sensitive	gtkdialog.h	/^void gtk_dialog_set_response_sensitive (GtkDialog *dialog,$/;"	p
gtk_disable_setlocale	gtkmain.h	/^void           gtk_disable_setlocale    (void);$/;"	p
gtk_drag_begin	gtkdnd.h	/^GdkDragContext *gtk_drag_begin (GtkWidget         *widget,$/;"	p
gtk_drag_check_threshold	gtkdnd.h	/^gboolean gtk_drag_check_threshold (GtkWidget *widget,$/;"	p
gtk_drag_dest_add_image_targets	gtkdnd.h	/^void           gtk_drag_dest_add_image_targets (GtkWidget    *widget);$/;"	p
gtk_drag_dest_add_text_targets	gtkdnd.h	/^void           gtk_drag_dest_add_text_targets  (GtkWidget    *widget);$/;"	p
gtk_drag_dest_add_uri_targets	gtkdnd.h	/^void           gtk_drag_dest_add_uri_targets   (GtkWidget    *widget);$/;"	p
gtk_drag_dest_find_target	gtkdnd.h	/^GdkAtom        gtk_drag_dest_find_target     (GtkWidget      *widget,$/;"	p
gtk_drag_dest_get_target_list	gtkdnd.h	/^GtkTargetList* gtk_drag_dest_get_target_list (GtkWidget      *widget);$/;"	p
gtk_drag_dest_get_track_motion	gtkdnd.h	/^gboolean       gtk_drag_dest_get_track_motion  (GtkWidget *widget);$/;"	p
gtk_drag_dest_set	gtkdnd.h	/^void gtk_drag_dest_set   (GtkWidget            *widget,$/;"	p
gtk_drag_dest_set_proxy	gtkdnd.h	/^void gtk_drag_dest_set_proxy (GtkWidget      *widget,$/;"	p
gtk_drag_dest_set_target_list	gtkdnd.h	/^void           gtk_drag_dest_set_target_list (GtkWidget      *widget,$/;"	p
gtk_drag_dest_set_track_motion	gtkdnd.h	/^void           gtk_drag_dest_set_track_motion  (GtkWidget *widget,$/;"	p
gtk_drag_dest_unset	gtkdnd.h	/^void gtk_drag_dest_unset (GtkWidget          *widget);$/;"	p
gtk_drag_finish	gtkdnd.h	/^void gtk_drag_finish   (GdkDragContext *context,$/;"	p
gtk_drag_get_data	gtkdnd.h	/^void gtk_drag_get_data (GtkWidget      *widget,$/;"	p
gtk_drag_get_source_widget	gtkdnd.h	/^GtkWidget *gtk_drag_get_source_widget (GdkDragContext *context);$/;"	p
gtk_drag_highlight	gtkdnd.h	/^void gtk_drag_highlight   (GtkWidget  *widget);$/;"	p
gtk_drag_set_default_icon	gtkdnd.h	/^void gtk_drag_set_default_icon (GdkColormap   *colormap,$/;"	p
gtk_drag_set_icon_default	gtkdnd.h	/^void gtk_drag_set_icon_default (GdkDragContext    *context);$/;"	p
gtk_drag_set_icon_name	gtkdnd.h	/^void gtk_drag_set_icon_name   (GdkDragContext *context,$/;"	p
gtk_drag_set_icon_pixbuf	gtkdnd.h	/^void gtk_drag_set_icon_pixbuf (GdkDragContext *context,$/;"	p
gtk_drag_set_icon_pixmap	gtkdnd.h	/^void gtk_drag_set_icon_pixmap (GdkDragContext *context,$/;"	p
gtk_drag_set_icon_stock	gtkdnd.h	/^void gtk_drag_set_icon_stock  (GdkDragContext *context,$/;"	p
gtk_drag_set_icon_widget	gtkdnd.h	/^void gtk_drag_set_icon_widget (GdkDragContext *context,$/;"	p
gtk_drag_source_add_image_targets	gtkdnd.h	/^void           gtk_drag_source_add_image_targets (GtkWidget    *widget);$/;"	p
gtk_drag_source_add_text_targets	gtkdnd.h	/^void           gtk_drag_source_add_text_targets  (GtkWidget     *widget);$/;"	p
gtk_drag_source_add_uri_targets	gtkdnd.h	/^void           gtk_drag_source_add_uri_targets   (GtkWidget    *widget);$/;"	p
gtk_drag_source_get_target_list	gtkdnd.h	/^GtkTargetList* gtk_drag_source_get_target_list (GtkWidget     *widget);$/;"	p
gtk_drag_source_set	gtkdnd.h	/^void gtk_drag_source_set  (GtkWidget            *widget,$/;"	p
gtk_drag_source_set_icon	gtkdnd.h	/^void gtk_drag_source_set_icon        (GtkWidget   *widget,$/;"	p
gtk_drag_source_set_icon_name	gtkdnd.h	/^void gtk_drag_source_set_icon_name   (GtkWidget   *widget,$/;"	p
gtk_drag_source_set_icon_pixbuf	gtkdnd.h	/^void gtk_drag_source_set_icon_pixbuf (GtkWidget   *widget,$/;"	p
gtk_drag_source_set_icon_stock	gtkdnd.h	/^void gtk_drag_source_set_icon_stock  (GtkWidget   *widget,$/;"	p
gtk_drag_source_set_target_list	gtkdnd.h	/^void           gtk_drag_source_set_target_list (GtkWidget     *widget,$/;"	p
gtk_drag_source_unset	gtkdnd.h	/^void gtk_drag_source_unset (GtkWidget        *widget);$/;"	p
gtk_drag_unhighlight	gtkdnd.h	/^void gtk_drag_unhighlight (GtkWidget  *widget);$/;"	p
gtk_draw_arrow	gtkstyle.h	/^void gtk_draw_arrow      (GtkStyle        *style,$/;"	p
gtk_draw_box	gtkstyle.h	/^void gtk_draw_box        (GtkStyle        *style,$/;"	p
gtk_draw_box_gap	gtkstyle.h	/^void gtk_draw_box_gap    (GtkStyle        *style,$/;"	p
gtk_draw_check	gtkstyle.h	/^void gtk_draw_check      (GtkStyle        *style,$/;"	p
gtk_draw_diamond	gtkstyle.h	/^void gtk_draw_diamond    (GtkStyle        *style,$/;"	p
gtk_draw_expander	gtkstyle.h	/^void gtk_draw_expander   (GtkStyle        *style,$/;"	p
gtk_draw_extension	gtkstyle.h	/^void gtk_draw_extension  (GtkStyle        *style,$/;"	p
gtk_draw_flat_box	gtkstyle.h	/^void gtk_draw_flat_box   (GtkStyle        *style,$/;"	p
gtk_draw_focus	gtkstyle.h	/^void gtk_draw_focus      (GtkStyle        *style,$/;"	p
gtk_draw_handle	gtkstyle.h	/^void gtk_draw_handle     (GtkStyle        *style,$/;"	p
gtk_draw_hline	gtkstyle.h	/^void gtk_draw_hline      (GtkStyle        *style,$/;"	p
gtk_draw_insertion_cursor	gtkstyle.h	/^void   gtk_draw_insertion_cursor    (GtkWidget          *widget,$/;"	p
gtk_draw_layout	gtkstyle.h	/^void gtk_draw_layout     (GtkStyle        *style,$/;"	p
gtk_draw_option	gtkstyle.h	/^void gtk_draw_option     (GtkStyle        *style,$/;"	p
gtk_draw_polygon	gtkstyle.h	/^void gtk_draw_polygon    (GtkStyle        *style,$/;"	p
gtk_draw_resize_grip	gtkstyle.h	/^void gtk_draw_resize_grip (GtkStyle       *style,$/;"	p
gtk_draw_shadow	gtkstyle.h	/^void gtk_draw_shadow     (GtkStyle        *style,$/;"	p
gtk_draw_shadow_gap	gtkstyle.h	/^void gtk_draw_shadow_gap (GtkStyle        *style,$/;"	p
gtk_draw_slider	gtkstyle.h	/^void gtk_draw_slider     (GtkStyle        *style,$/;"	p
gtk_draw_string	gtkstyle.h	/^void gtk_draw_string      (GtkStyle           *style,$/;"	p
gtk_draw_tab	gtkstyle.h	/^void gtk_draw_tab        (GtkStyle        *style,$/;"	p
gtk_draw_vline	gtkstyle.h	/^void gtk_draw_vline      (GtkStyle        *style,$/;"	p
gtk_drawing_area_new	gtkdrawingarea.h	/^GtkWidget* gtk_drawing_area_new        (void);$/;"	p
gtk_drawing_area_size	gtkdrawingarea.h	/^void       gtk_drawing_area_size       (GtkDrawingArea      *darea,$/;"	p
gtk_editable_copy_clipboard	gtkeditable.h	/^void     gtk_editable_copy_clipboard       (GtkEditable *editable);$/;"	p
gtk_editable_cut_clipboard	gtkeditable.h	/^void     gtk_editable_cut_clipboard        (GtkEditable *editable);$/;"	p
gtk_editable_delete_selection	gtkeditable.h	/^void     gtk_editable_delete_selection     (GtkEditable *editable);$/;"	p
gtk_editable_delete_text	gtkeditable.h	/^void     gtk_editable_delete_text          (GtkEditable *editable,$/;"	p
gtk_editable_get_chars	gtkeditable.h	/^gchar*   gtk_editable_get_chars            (GtkEditable *editable,$/;"	p
gtk_editable_get_editable	gtkeditable.h	/^gboolean gtk_editable_get_editable         (GtkEditable *editable);$/;"	p
gtk_editable_get_position	gtkeditable.h	/^gint     gtk_editable_get_position         (GtkEditable *editable);$/;"	p
gtk_editable_get_selection_bounds	gtkeditable.h	/^gboolean gtk_editable_get_selection_bounds (GtkEditable *editable,$/;"	p
gtk_editable_insert_text	gtkeditable.h	/^void     gtk_editable_insert_text          (GtkEditable *editable,$/;"	p
gtk_editable_paste_clipboard	gtkeditable.h	/^void     gtk_editable_paste_clipboard      (GtkEditable *editable);$/;"	p
gtk_editable_select_region	gtkeditable.h	/^void     gtk_editable_select_region        (GtkEditable *editable,$/;"	p
gtk_editable_set_editable	gtkeditable.h	/^void     gtk_editable_set_editable         (GtkEditable *editable,$/;"	p
gtk_editable_set_position	gtkeditable.h	/^void     gtk_editable_set_position         (GtkEditable *editable,$/;"	p
gtk_entry_append_text	gtkentry.h	/^void       gtk_entry_append_text    		(GtkEntry      *entry,$/;"	p
gtk_entry_buffer_delete_text	gtkentrybuffer.h	/^guint                     gtk_entry_buffer_delete_text            (GtkEntryBuffer  *buffer,$/;"	p
gtk_entry_buffer_emit_deleted_text	gtkentrybuffer.h	/^void                      gtk_entry_buffer_emit_deleted_text      (GtkEntryBuffer  *buffer,$/;"	p
gtk_entry_buffer_emit_inserted_text	gtkentrybuffer.h	/^void                      gtk_entry_buffer_emit_inserted_text     (GtkEntryBuffer  *buffer,$/;"	p
gtk_entry_buffer_get_bytes	gtkentrybuffer.h	/^gsize                     gtk_entry_buffer_get_bytes              (GtkEntryBuffer  *buffer);$/;"	p
gtk_entry_buffer_get_length	gtkentrybuffer.h	/^guint                     gtk_entry_buffer_get_length             (GtkEntryBuffer  *buffer);$/;"	p
gtk_entry_buffer_get_max_length	gtkentrybuffer.h	/^gint                      gtk_entry_buffer_get_max_length         (GtkEntryBuffer  *buffer);$/;"	p
gtk_entry_buffer_get_text	gtkentrybuffer.h	/^const gchar*              gtk_entry_buffer_get_text               (GtkEntryBuffer  *buffer);$/;"	p
gtk_entry_buffer_insert_text	gtkentrybuffer.h	/^guint                     gtk_entry_buffer_insert_text            (GtkEntryBuffer  *buffer,$/;"	p
gtk_entry_buffer_new	gtkentrybuffer.h	/^GtkEntryBuffer*           gtk_entry_buffer_new                    (const gchar     *initial_chars,$/;"	p
gtk_entry_buffer_set_max_length	gtkentrybuffer.h	/^void                      gtk_entry_buffer_set_max_length         (GtkEntryBuffer  *buffer,$/;"	p
gtk_entry_buffer_set_text	gtkentrybuffer.h	/^void                      gtk_entry_buffer_set_text               (GtkEntryBuffer  *buffer,$/;"	p
gtk_entry_completion_complete	gtkentrycompletion.h	/^void                gtk_entry_completion_complete               (GtkEntryCompletion          *completion);$/;"	p
gtk_entry_completion_delete_action	gtkentrycompletion.h	/^void                gtk_entry_completion_delete_action          (GtkEntryCompletion          *completion,$/;"	p
gtk_entry_completion_get_completion_prefix	gtkentrycompletion.h	/^const gchar         *gtk_entry_completion_get_completion_prefix (GtkEntryCompletion *completion);$/;"	p
gtk_entry_completion_get_entry	gtkentrycompletion.h	/^GtkWidget          *gtk_entry_completion_get_entry              (GtkEntryCompletion          *completion);$/;"	p
gtk_entry_completion_get_inline_completion	gtkentrycompletion.h	/^gboolean            gtk_entry_completion_get_inline_completion  (GtkEntryCompletion          *completion);$/;"	p
gtk_entry_completion_get_inline_selection	gtkentrycompletion.h	/^gboolean            gtk_entry_completion_get_inline_selection  (GtkEntryCompletion          *completion);$/;"	p
gtk_entry_completion_get_minimum_key_length	gtkentrycompletion.h	/^gint                gtk_entry_completion_get_minimum_key_length (GtkEntryCompletion          *completion);$/;"	p
gtk_entry_completion_get_model	gtkentrycompletion.h	/^GtkTreeModel       *gtk_entry_completion_get_model              (GtkEntryCompletion          *completion);$/;"	p
gtk_entry_completion_get_popup_completion	gtkentrycompletion.h	/^gboolean            gtk_entry_completion_get_popup_completion   (GtkEntryCompletion          *completion);$/;"	p
gtk_entry_completion_get_popup_set_width	gtkentrycompletion.h	/^gboolean            gtk_entry_completion_get_popup_set_width    (GtkEntryCompletion          *completion);$/;"	p
gtk_entry_completion_get_popup_single_match	gtkentrycompletion.h	/^gboolean            gtk_entry_completion_get_popup_single_match (GtkEntryCompletion          *completion);$/;"	p
gtk_entry_completion_get_text_column	gtkentrycompletion.h	/^gint                gtk_entry_completion_get_text_column        (GtkEntryCompletion          *completion);$/;"	p
gtk_entry_completion_insert_action_markup	gtkentrycompletion.h	/^void                gtk_entry_completion_insert_action_markup   (GtkEntryCompletion          *completion,$/;"	p
gtk_entry_completion_insert_action_text	gtkentrycompletion.h	/^void                gtk_entry_completion_insert_action_text     (GtkEntryCompletion          *completion,$/;"	p
gtk_entry_completion_insert_prefix	gtkentrycompletion.h	/^void                gtk_entry_completion_insert_prefix          (GtkEntryCompletion          *completion);$/;"	p
gtk_entry_completion_new	gtkentrycompletion.h	/^GtkEntryCompletion *gtk_entry_completion_new                    (void);$/;"	p
gtk_entry_completion_set_inline_completion	gtkentrycompletion.h	/^void                gtk_entry_completion_set_inline_completion  (GtkEntryCompletion          *completion,$/;"	p
gtk_entry_completion_set_inline_selection	gtkentrycompletion.h	/^void                gtk_entry_completion_set_inline_selection  (GtkEntryCompletion          *completion,$/;"	p
gtk_entry_completion_set_match_func	gtkentrycompletion.h	/^void                gtk_entry_completion_set_match_func         (GtkEntryCompletion          *completion,$/;"	p
gtk_entry_completion_set_minimum_key_length	gtkentrycompletion.h	/^void                gtk_entry_completion_set_minimum_key_length (GtkEntryCompletion          *completion,$/;"	p
gtk_entry_completion_set_model	gtkentrycompletion.h	/^void                gtk_entry_completion_set_model              (GtkEntryCompletion          *completion,$/;"	p
gtk_entry_completion_set_popup_completion	gtkentrycompletion.h	/^void                gtk_entry_completion_set_popup_completion   (GtkEntryCompletion          *completion,$/;"	p
gtk_entry_completion_set_popup_set_width	gtkentrycompletion.h	/^void                gtk_entry_completion_set_popup_set_width    (GtkEntryCompletion          *completion,$/;"	p
gtk_entry_completion_set_popup_single_match	gtkentrycompletion.h	/^void                gtk_entry_completion_set_popup_single_match (GtkEntryCompletion          *completion,$/;"	p
gtk_entry_completion_set_text_column	gtkentrycompletion.h	/^void                gtk_entry_completion_set_text_column        (GtkEntryCompletion          *completion,$/;"	p
gtk_entry_get_activates_default	gtkentry.h	/^gboolean   gtk_entry_get_activates_default      (GtkEntry      *entry);$/;"	p
gtk_entry_get_alignment	gtkentry.h	/^gfloat     gtk_entry_get_alignment              (GtkEntry      *entry);$/;"	p
gtk_entry_get_buffer	gtkentry.h	/^GtkEntryBuffer* gtk_entry_get_buffer            (GtkEntry       *entry);$/;"	p
gtk_entry_get_completion	gtkentry.h	/^GtkEntryCompletion *gtk_entry_get_completion (GtkEntry           *entry);$/;"	p
gtk_entry_get_current_icon_drag_source	gtkentry.h	/^gint         gtk_entry_get_current_icon_drag_source      (GtkEntry             *entry);$/;"	p
gtk_entry_get_cursor_hadjustment	gtkentry.h	/^GtkAdjustment* gtk_entry_get_cursor_hadjustment (GtkEntry      *entry);$/;"	p
gtk_entry_get_has_frame	gtkentry.h	/^gboolean   gtk_entry_get_has_frame              (GtkEntry      *entry);$/;"	p
gtk_entry_get_icon_activatable	gtkentry.h	/^gboolean     gtk_entry_get_icon_activatable              (GtkEntry             *entry,$/;"	p
gtk_entry_get_icon_at_pos	gtkentry.h	/^gint         gtk_entry_get_icon_at_pos                   (GtkEntry             *entry,$/;"	p
gtk_entry_get_icon_gicon	gtkentry.h	/^GIcon*       gtk_entry_get_icon_gicon                    (GtkEntry             *entry,$/;"	p
gtk_entry_get_icon_name	gtkentry.h	/^const gchar* gtk_entry_get_icon_name                     (GtkEntry             *entry,$/;"	p
gtk_entry_get_icon_pixbuf	gtkentry.h	/^GdkPixbuf*   gtk_entry_get_icon_pixbuf                   (GtkEntry             *entry,$/;"	p
gtk_entry_get_icon_sensitive	gtkentry.h	/^gboolean     gtk_entry_get_icon_sensitive                (GtkEntry             *entry,$/;"	p
gtk_entry_get_icon_stock	gtkentry.h	/^const gchar* gtk_entry_get_icon_stock                    (GtkEntry             *entry,$/;"	p
gtk_entry_get_icon_storage_type	gtkentry.h	/^GtkImageType gtk_entry_get_icon_storage_type             (GtkEntry             *entry,$/;"	p
gtk_entry_get_icon_tooltip_markup	gtkentry.h	/^gchar *      gtk_entry_get_icon_tooltip_markup           (GtkEntry             *entry,$/;"	p
gtk_entry_get_icon_tooltip_text	gtkentry.h	/^gchar *      gtk_entry_get_icon_tooltip_text             (GtkEntry             *entry,$/;"	p
gtk_entry_get_icon_window	gtkentry.h	/^GdkWindow  * gtk_entry_get_icon_window                   (GtkEntry             *entry,$/;"	p
gtk_entry_get_inner_border	gtkentry.h	/^const GtkBorder* gtk_entry_get_inner_border          (GtkEntry        *entry);$/;"	p
gtk_entry_get_invisible_char	gtkentry.h	/^gunichar   gtk_entry_get_invisible_char         (GtkEntry      *entry);$/;"	p
gtk_entry_get_layout	gtkentry.h	/^PangoLayout* gtk_entry_get_layout               (GtkEntry      *entry);$/;"	p
gtk_entry_get_layout_offsets	gtkentry.h	/^void         gtk_entry_get_layout_offsets       (GtkEntry      *entry,$/;"	p
gtk_entry_get_max_length	gtkentry.h	/^gint       gtk_entry_get_max_length             (GtkEntry      *entry);$/;"	p
gtk_entry_get_overwrite_mode	gtkentry.h	/^gboolean   gtk_entry_get_overwrite_mode         (GtkEntry      *entry);$/;"	p
gtk_entry_get_progress_fraction	gtkentry.h	/^gdouble        gtk_entry_get_progress_fraction   (GtkEntry     *entry);$/;"	p
gtk_entry_get_progress_pulse_step	gtkentry.h	/^gdouble        gtk_entry_get_progress_pulse_step (GtkEntry     *entry);$/;"	p
gtk_entry_get_text	gtkentry.h	/^const gchar* gtk_entry_get_text                 (GtkEntry      *entry);$/;"	p
gtk_entry_get_text_length	gtkentry.h	/^guint16    gtk_entry_get_text_length            (GtkEntry      *entry);$/;"	p
gtk_entry_get_text_window	gtkentry.h	/^GdkWindow *gtk_entry_get_text_window            (GtkEntry      *entry);$/;"	p
gtk_entry_get_visibility	gtkentry.h	/^gboolean   gtk_entry_get_visibility             (GtkEntry      *entry);$/;"	p
gtk_entry_get_width_chars	gtkentry.h	/^gint       gtk_entry_get_width_chars            (GtkEntry      *entry);$/;"	p
gtk_entry_im_context_filter_keypress	gtkentry.h	/^gboolean    gtk_entry_im_context_filter_keypress         (GtkEntry             *entry,$/;"	p
gtk_entry_layout_index_to_text_index	gtkentry.h	/^gint       gtk_entry_layout_index_to_text_index (GtkEntry      *entry,$/;"	p
gtk_entry_new	gtkentry.h	/^GtkWidget* gtk_entry_new            		(void);$/;"	p
gtk_entry_new_with_buffer	gtkentry.h	/^GtkWidget* gtk_entry_new_with_buffer            (GtkEntryBuffer *buffer);$/;"	p
gtk_entry_new_with_max_length	gtkentry.h	/^GtkWidget* gtk_entry_new_with_max_length	(gint           max);$/;"	p
gtk_entry_prepend_text	gtkentry.h	/^void       gtk_entry_prepend_text   		(GtkEntry      *entry,$/;"	p
gtk_entry_progress_pulse	gtkentry.h	/^void           gtk_entry_progress_pulse          (GtkEntry     *entry);$/;"	p
gtk_entry_reset_im_context	gtkentry.h	/^void        gtk_entry_reset_im_context                   (GtkEntry             *entry);$/;"	p
gtk_entry_select_region	gtkentry.h	/^void       gtk_entry_select_region  		(GtkEntry      *entry,$/;"	p
gtk_entry_set_activates_default	gtkentry.h	/^void       gtk_entry_set_activates_default      (GtkEntry      *entry,$/;"	p
gtk_entry_set_alignment	gtkentry.h	/^void       gtk_entry_set_alignment              (GtkEntry      *entry,$/;"	p
gtk_entry_set_buffer	gtkentry.h	/^void       gtk_entry_set_buffer                 (GtkEntry       *entry,$/;"	p
gtk_entry_set_completion	gtkentry.h	/^void                gtk_entry_set_completion (GtkEntry           *entry,$/;"	p
gtk_entry_set_cursor_hadjustment	gtkentry.h	/^void           gtk_entry_set_cursor_hadjustment (GtkEntry      *entry,$/;"	p
gtk_entry_set_editable	gtkentry.h	/^void       gtk_entry_set_editable   		(GtkEntry      *entry,$/;"	p
gtk_entry_set_has_frame	gtkentry.h	/^void       gtk_entry_set_has_frame              (GtkEntry      *entry,$/;"	p
gtk_entry_set_icon_activatable	gtkentry.h	/^void         gtk_entry_set_icon_activatable              (GtkEntry             *entry,$/;"	p
gtk_entry_set_icon_drag_source	gtkentry.h	/^void         gtk_entry_set_icon_drag_source              (GtkEntry             *entry,$/;"	p
gtk_entry_set_icon_from_gicon	gtkentry.h	/^void           gtk_entry_set_icon_from_gicon             (GtkEntry             *entry,$/;"	p
gtk_entry_set_icon_from_icon_name	gtkentry.h	/^void           gtk_entry_set_icon_from_icon_name         (GtkEntry             *entry,$/;"	p
gtk_entry_set_icon_from_pixbuf	gtkentry.h	/^void           gtk_entry_set_icon_from_pixbuf            (GtkEntry             *entry,$/;"	p
gtk_entry_set_icon_from_stock	gtkentry.h	/^void           gtk_entry_set_icon_from_stock             (GtkEntry             *entry,$/;"	p
gtk_entry_set_icon_sensitive	gtkentry.h	/^void         gtk_entry_set_icon_sensitive                (GtkEntry             *entry,$/;"	p
gtk_entry_set_icon_tooltip_markup	gtkentry.h	/^void         gtk_entry_set_icon_tooltip_markup           (GtkEntry             *entry,$/;"	p
gtk_entry_set_icon_tooltip_text	gtkentry.h	/^void         gtk_entry_set_icon_tooltip_text             (GtkEntry             *entry,$/;"	p
gtk_entry_set_inner_border	gtkentry.h	/^void       gtk_entry_set_inner_border                (GtkEntry        *entry,$/;"	p
gtk_entry_set_invisible_char	gtkentry.h	/^void       gtk_entry_set_invisible_char         (GtkEntry      *entry,$/;"	p
gtk_entry_set_max_length	gtkentry.h	/^void       gtk_entry_set_max_length 		(GtkEntry      *entry,$/;"	p
gtk_entry_set_overwrite_mode	gtkentry.h	/^void       gtk_entry_set_overwrite_mode         (GtkEntry      *entry,$/;"	p
gtk_entry_set_position	gtkentry.h	/^void       gtk_entry_set_position   		(GtkEntry      *entry,$/;"	p
gtk_entry_set_progress_fraction	gtkentry.h	/^void           gtk_entry_set_progress_fraction   (GtkEntry     *entry,$/;"	p
gtk_entry_set_progress_pulse_step	gtkentry.h	/^void           gtk_entry_set_progress_pulse_step (GtkEntry     *entry,$/;"	p
gtk_entry_set_text	gtkentry.h	/^void       gtk_entry_set_text                   (GtkEntry      *entry,$/;"	p
gtk_entry_set_visibility	gtkentry.h	/^void       gtk_entry_set_visibility 		(GtkEntry      *entry,$/;"	p
gtk_entry_set_width_chars	gtkentry.h	/^void       gtk_entry_set_width_chars            (GtkEntry      *entry,$/;"	p
gtk_entry_text_index_to_layout_index	gtkentry.h	/^gint       gtk_entry_text_index_to_layout_index (GtkEntry      *entry,$/;"	p
gtk_entry_unset_invisible_char	gtkentry.h	/^void       gtk_entry_unset_invisible_char       (GtkEntry      *entry);$/;"	p
gtk_event_box_get_above_child	gtkeventbox.h	/^gboolean   gtk_event_box_get_above_child    (GtkEventBox *event_box);$/;"	p
gtk_event_box_get_visible_window	gtkeventbox.h	/^gboolean   gtk_event_box_get_visible_window (GtkEventBox *event_box);$/;"	p
gtk_event_box_new	gtkeventbox.h	/^GtkWidget* gtk_event_box_new                (void);$/;"	p
gtk_event_box_set_above_child	gtkeventbox.h	/^void       gtk_event_box_set_above_child    (GtkEventBox *event_box,$/;"	p
gtk_event_box_set_visible_window	gtkeventbox.h	/^void       gtk_event_box_set_visible_window (GtkEventBox *event_box,$/;"	p
gtk_events_pending	gtkmain.h	/^gboolean       gtk_events_pending       (void);$/;"	p
gtk_exit	gtkmain.h	/^void     gtk_exit                 (gint    error_code);$/;"	p
gtk_expander_get_expanded	gtkexpander.h	/^gboolean              gtk_expander_get_expanded      (GtkExpander *expander);$/;"	p
gtk_expander_get_label	gtkexpander.h	/^const gchar *         gtk_expander_get_label         (GtkExpander *expander);$/;"	p
gtk_expander_get_label_fill	gtkexpander.h	/^gboolean              gtk_expander_get_label_fill    (GtkExpander *expander);$/;"	p
gtk_expander_get_label_widget	gtkexpander.h	/^GtkWidget            *gtk_expander_get_label_widget  (GtkExpander *expander);$/;"	p
gtk_expander_get_spacing	gtkexpander.h	/^gint                  gtk_expander_get_spacing       (GtkExpander *expander);$/;"	p
gtk_expander_get_use_markup	gtkexpander.h	/^gboolean              gtk_expander_get_use_markup    (GtkExpander *expander);$/;"	p
gtk_expander_get_use_underline	gtkexpander.h	/^gboolean              gtk_expander_get_use_underline (GtkExpander *expander);$/;"	p
gtk_expander_new	gtkexpander.h	/^GtkWidget            *gtk_expander_new               (const gchar *label);$/;"	p
gtk_expander_new_with_mnemonic	gtkexpander.h	/^GtkWidget            *gtk_expander_new_with_mnemonic (const gchar *label);$/;"	p
gtk_expander_set_expanded	gtkexpander.h	/^void                  gtk_expander_set_expanded      (GtkExpander *expander,$/;"	p
gtk_expander_set_label	gtkexpander.h	/^void                  gtk_expander_set_label         (GtkExpander *expander,$/;"	p
gtk_expander_set_label_fill	gtkexpander.h	/^void                  gtk_expander_set_label_fill    (GtkExpander *expander,$/;"	p
gtk_expander_set_label_widget	gtkexpander.h	/^void                  gtk_expander_set_label_widget  (GtkExpander *expander,$/;"	p
gtk_expander_set_spacing	gtkexpander.h	/^void                  gtk_expander_set_spacing       (GtkExpander *expander,$/;"	p
gtk_expander_set_use_markup	gtkexpander.h	/^void                  gtk_expander_set_use_markup    (GtkExpander *expander,$/;"	p
gtk_expander_set_use_underline	gtkexpander.h	/^void                  gtk_expander_set_use_underline (GtkExpander *expander,$/;"	p
gtk_file_chooser_add_filter	gtkfilechooser.h	/^void    gtk_file_chooser_add_filter    (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_add_shortcut_folder	gtkfilechooser.h	/^gboolean gtk_file_chooser_add_shortcut_folder    (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_add_shortcut_folder	gtkfilechooser.h	158;"	d
gtk_file_chooser_add_shortcut_folder_uri	gtkfilechooser.h	/^gboolean gtk_file_chooser_add_shortcut_folder_uri    (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_button_get_focus_on_click	gtkfilechooserbutton.h	/^gboolean              gtk_file_chooser_button_get_focus_on_click (GtkFileChooserButton *button);$/;"	p
gtk_file_chooser_button_get_title	gtkfilechooserbutton.h	/^const gchar *         gtk_file_chooser_button_get_title        (GtkFileChooserButton *button);$/;"	p
gtk_file_chooser_button_get_width_chars	gtkfilechooserbutton.h	/^gint                  gtk_file_chooser_button_get_width_chars  (GtkFileChooserButton *button);$/;"	p
gtk_file_chooser_button_new	gtkfilechooserbutton.h	/^GtkWidget *           gtk_file_chooser_button_new              (const gchar          *title,$/;"	p
gtk_file_chooser_button_new_with_backend	gtkfilechooserbutton.h	/^GtkWidget *           gtk_file_chooser_button_new_with_backend (const gchar          *title,$/;"	p
gtk_file_chooser_button_new_with_dialog	gtkfilechooserbutton.h	/^GtkWidget *           gtk_file_chooser_button_new_with_dialog  (GtkWidget            *dialog);$/;"	p
gtk_file_chooser_button_set_focus_on_click	gtkfilechooserbutton.h	/^void                  gtk_file_chooser_button_set_focus_on_click (GtkFileChooserButton *button,$/;"	p
gtk_file_chooser_button_set_title	gtkfilechooserbutton.h	/^void                  gtk_file_chooser_button_set_title        (GtkFileChooserButton *button,$/;"	p
gtk_file_chooser_button_set_width_chars	gtkfilechooserbutton.h	/^void                  gtk_file_chooser_button_set_width_chars  (GtkFileChooserButton *button,$/;"	p
gtk_file_chooser_error_quark	gtkfilechooser.h	/^GQuark gtk_file_chooser_error_quark (void);$/;"	p
gtk_file_chooser_get_action	gtkfilechooser.h	/^GtkFileChooserAction gtk_file_chooser_get_action          (GtkFileChooser       *chooser);$/;"	p
gtk_file_chooser_get_create_folders	gtkfilechooser.h	/^gboolean             gtk_file_chooser_get_create_folders (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_get_current_folder	gtkfilechooser.h	/^gchar *  gtk_file_chooser_get_current_folder (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_get_current_folder	gtkfilechooser.h	156;"	d
gtk_file_chooser_get_current_folder_file	gtkfilechooser.h	/^GFile *  gtk_file_chooser_get_current_folder_file (GtkFileChooser  *chooser);$/;"	p
gtk_file_chooser_get_current_folder_uri	gtkfilechooser.h	/^gchar *  gtk_file_chooser_get_current_folder_uri (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_get_do_overwrite_confirmation	gtkfilechooser.h	/^gboolean             gtk_file_chooser_get_do_overwrite_confirmation (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_get_extra_widget	gtkfilechooser.h	/^GtkWidget *gtk_file_chooser_get_extra_widget (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_get_file	gtkfilechooser.h	/^GFile *  gtk_file_chooser_get_file                (GtkFileChooser  *chooser);$/;"	p
gtk_file_chooser_get_filename	gtkfilechooser.h	/^gchar *  gtk_file_chooser_get_filename       (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_get_filename	gtkfilechooser.h	150;"	d
gtk_file_chooser_get_filenames	gtkfilechooser.h	/^GSList * gtk_file_chooser_get_filenames      (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_get_filenames	gtkfilechooser.h	154;"	d
gtk_file_chooser_get_files	gtkfilechooser.h	/^GSList * gtk_file_chooser_get_files               (GtkFileChooser  *chooser);$/;"	p
gtk_file_chooser_get_filter	gtkfilechooser.h	/^GtkFileFilter *gtk_file_chooser_get_filter (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_get_local_only	gtkfilechooser.h	/^gboolean             gtk_file_chooser_get_local_only      (GtkFileChooser       *chooser);$/;"	p
gtk_file_chooser_get_preview_file	gtkfilechooser.h	/^GFile *gtk_file_chooser_get_preview_file     (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_get_preview_filename	gtkfilechooser.h	/^char  *gtk_file_chooser_get_preview_filename (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_get_preview_filename	gtkfilechooser.h	157;"	d
gtk_file_chooser_get_preview_uri	gtkfilechooser.h	/^char  *gtk_file_chooser_get_preview_uri      (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_get_preview_widget	gtkfilechooser.h	/^GtkWidget *gtk_file_chooser_get_preview_widget        (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_get_preview_widget_active	gtkfilechooser.h	/^gboolean   gtk_file_chooser_get_preview_widget_active (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_get_select_multiple	gtkfilechooser.h	/^gboolean             gtk_file_chooser_get_select_multiple (GtkFileChooser       *chooser);$/;"	p
gtk_file_chooser_get_show_hidden	gtkfilechooser.h	/^gboolean             gtk_file_chooser_get_show_hidden     (GtkFileChooser       *chooser);$/;"	p
gtk_file_chooser_get_uri	gtkfilechooser.h	/^gchar *  gtk_file_chooser_get_uri                (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_get_uris	gtkfilechooser.h	/^GSList * gtk_file_chooser_get_uris               (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_get_use_preview_label	gtkfilechooser.h	/^gboolean   gtk_file_chooser_get_use_preview_label     (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_list_filters	gtkfilechooser.h	/^GSList *gtk_file_chooser_list_filters  (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_list_shortcut_folder_uris	gtkfilechooser.h	/^GSList *gtk_file_chooser_list_shortcut_folder_uris   (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_list_shortcut_folders	gtkfilechooser.h	/^GSList *gtk_file_chooser_list_shortcut_folders   (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_list_shortcut_folders	gtkfilechooser.h	160;"	d
gtk_file_chooser_remove_filter	gtkfilechooser.h	/^void    gtk_file_chooser_remove_filter (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_remove_shortcut_folder	gtkfilechooser.h	/^gboolean gtk_file_chooser_remove_shortcut_folder (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_remove_shortcut_folder	gtkfilechooser.h	159;"	d
gtk_file_chooser_remove_shortcut_folder_uri	gtkfilechooser.h	/^gboolean gtk_file_chooser_remove_shortcut_folder_uri (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_select_all	gtkfilechooser.h	/^void     gtk_file_chooser_select_all         (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_select_file	gtkfilechooser.h	/^gboolean gtk_file_chooser_select_file             (GtkFileChooser  *chooser,$/;"	p
gtk_file_chooser_select_filename	gtkfilechooser.h	/^gboolean gtk_file_chooser_select_filename    (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_select_filename	gtkfilechooser.h	152;"	d
gtk_file_chooser_select_uri	gtkfilechooser.h	/^gboolean gtk_file_chooser_select_uri             (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_set_action	gtkfilechooser.h	/^void                 gtk_file_chooser_set_action          (GtkFileChooser       *chooser,$/;"	p
gtk_file_chooser_set_create_folders	gtkfilechooser.h	/^void                 gtk_file_chooser_set_create_folders  (GtkFileChooser       *chooser,$/;"	p
gtk_file_chooser_set_current_folder	gtkfilechooser.h	/^gboolean gtk_file_chooser_set_current_folder (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_set_current_folder	gtkfilechooser.h	155;"	d
gtk_file_chooser_set_current_folder_file	gtkfilechooser.h	/^gboolean gtk_file_chooser_set_current_folder_file (GtkFileChooser  *chooser,$/;"	p
gtk_file_chooser_set_current_folder_uri	gtkfilechooser.h	/^gboolean gtk_file_chooser_set_current_folder_uri (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_set_current_name	gtkfilechooser.h	/^void     gtk_file_chooser_set_current_name   (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_set_do_overwrite_confirmation	gtkfilechooser.h	/^void                 gtk_file_chooser_set_do_overwrite_confirmation (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_set_extra_widget	gtkfilechooser.h	/^void       gtk_file_chooser_set_extra_widget (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_set_file	gtkfilechooser.h	/^gboolean gtk_file_chooser_set_file                (GtkFileChooser  *chooser,$/;"	p
gtk_file_chooser_set_filename	gtkfilechooser.h	/^gboolean gtk_file_chooser_set_filename       (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_set_filename	gtkfilechooser.h	151;"	d
gtk_file_chooser_set_filter	gtkfilechooser.h	/^void           gtk_file_chooser_set_filter (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_set_local_only	gtkfilechooser.h	/^void                 gtk_file_chooser_set_local_only      (GtkFileChooser       *chooser,$/;"	p
gtk_file_chooser_set_preview_widget	gtkfilechooser.h	/^void       gtk_file_chooser_set_preview_widget        (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_set_preview_widget_active	gtkfilechooser.h	/^void       gtk_file_chooser_set_preview_widget_active (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_set_select_multiple	gtkfilechooser.h	/^void                 gtk_file_chooser_set_select_multiple (GtkFileChooser       *chooser,$/;"	p
gtk_file_chooser_set_show_hidden	gtkfilechooser.h	/^void                 gtk_file_chooser_set_show_hidden     (GtkFileChooser       *chooser,$/;"	p
gtk_file_chooser_set_uri	gtkfilechooser.h	/^gboolean gtk_file_chooser_set_uri                (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_set_use_preview_label	gtkfilechooser.h	/^void       gtk_file_chooser_set_use_preview_label     (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_unselect_all	gtkfilechooser.h	/^void     gtk_file_chooser_unselect_all       (GtkFileChooser *chooser);$/;"	p
gtk_file_chooser_unselect_file	gtkfilechooser.h	/^void     gtk_file_chooser_unselect_file           (GtkFileChooser  *chooser,$/;"	p
gtk_file_chooser_unselect_filename	gtkfilechooser.h	/^void     gtk_file_chooser_unselect_filename  (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_unselect_filename	gtkfilechooser.h	153;"	d
gtk_file_chooser_unselect_uri	gtkfilechooser.h	/^void     gtk_file_chooser_unselect_uri           (GtkFileChooser *chooser,$/;"	p
gtk_file_chooser_widget_new	gtkfilechooserwidget.h	/^GtkWidget *gtk_file_chooser_widget_new              (GtkFileChooserAction  action);$/;"	p
gtk_file_chooser_widget_new_with_backend	gtkfilechooserwidget.h	/^GtkWidget *gtk_file_chooser_widget_new_with_backend (GtkFileChooserAction  action,$/;"	p
gtk_file_filter_add_custom	gtkfilefilter.h	/^void gtk_file_filter_add_custom         (GtkFileFilter      *filter,$/;"	p
gtk_file_filter_add_mime_type	gtkfilefilter.h	/^void gtk_file_filter_add_mime_type      (GtkFileFilter      *filter,$/;"	p
gtk_file_filter_add_pattern	gtkfilefilter.h	/^void gtk_file_filter_add_pattern        (GtkFileFilter      *filter,$/;"	p
gtk_file_filter_add_pixbuf_formats	gtkfilefilter.h	/^void gtk_file_filter_add_pixbuf_formats (GtkFileFilter      *filter);$/;"	p
gtk_file_filter_filter	gtkfilefilter.h	/^gboolean           gtk_file_filter_filter     (GtkFileFilter           *filter,$/;"	p
gtk_file_filter_get_name	gtkfilefilter.h	/^const gchar *         gtk_file_filter_get_name (GtkFileFilter *filter);$/;"	p
gtk_file_filter_get_needed	gtkfilefilter.h	/^GtkFileFilterFlags gtk_file_filter_get_needed (GtkFileFilter           *filter);$/;"	p
gtk_file_filter_new	gtkfilefilter.h	/^GtkFileFilter *       gtk_file_filter_new      (void);$/;"	p
gtk_file_filter_set_name	gtkfilefilter.h	/^void                  gtk_file_filter_set_name (GtkFileFilter *filter,$/;"	p
gtk_file_selection_complete	gtkfilesel.h	/^void	   gtk_file_selection_complete		  (GtkFileSelection *filesel,$/;"	p
gtk_file_selection_get_filename	gtkfilesel.h	/^const gchar* gtk_file_selection_get_filename      (GtkFileSelection *filesel);$/;"	p
gtk_file_selection_get_filename	gtkfilesel.h	97;"	d
gtk_file_selection_get_select_multiple	gtkfilesel.h	/^gboolean   gtk_file_selection_get_select_multiple (GtkFileSelection *filesel);$/;"	p
gtk_file_selection_get_selections	gtkfilesel.h	/^gchar**    gtk_file_selection_get_selections      (GtkFileSelection *filesel);$/;"	p
gtk_file_selection_get_selections	gtkfilesel.h	99;"	d
gtk_file_selection_hide_fileop_buttons	gtkfilesel.h	/^void       gtk_file_selection_hide_fileop_buttons (GtkFileSelection *filesel);$/;"	p
gtk_file_selection_new	gtkfilesel.h	/^GtkWidget* gtk_file_selection_new                 (const gchar      *title);$/;"	p
gtk_file_selection_set_filename	gtkfilesel.h	/^void       gtk_file_selection_set_filename        (GtkFileSelection *filesel,$/;"	p
gtk_file_selection_set_filename	gtkfilesel.h	98;"	d
gtk_file_selection_set_select_multiple	gtkfilesel.h	/^void       gtk_file_selection_set_select_multiple (GtkFileSelection *filesel,$/;"	p
gtk_file_selection_show_fileop_buttons	gtkfilesel.h	/^void       gtk_file_selection_show_fileop_buttons (GtkFileSelection *filesel);$/;"	p
gtk_fixed_get_has_window	gtkfixed.h	/^gboolean   gtk_fixed_get_has_window    (GtkFixed       *fixed);$/;"	p
gtk_fixed_move	gtkfixed.h	/^void       gtk_fixed_move              (GtkFixed       *fixed,$/;"	p
gtk_fixed_new	gtkfixed.h	/^GtkWidget* gtk_fixed_new               (void);$/;"	p
gtk_fixed_put	gtkfixed.h	/^void       gtk_fixed_put               (GtkFixed       *fixed,$/;"	p
gtk_fixed_set_has_window	gtkfixed.h	/^void       gtk_fixed_set_has_window    (GtkFixed       *fixed,$/;"	p
gtk_font_button_get_font_name	gtkfontbutton.h	/^const gchar *         gtk_font_button_get_font_name  (GtkFontButton *font_button);$/;"	p
gtk_font_button_get_show_size	gtkfontbutton.h	/^gboolean              gtk_font_button_get_show_size  (GtkFontButton *font_button);$/;"	p
gtk_font_button_get_show_style	gtkfontbutton.h	/^gboolean              gtk_font_button_get_show_style (GtkFontButton *font_button);$/;"	p
gtk_font_button_get_title	gtkfontbutton.h	/^const gchar *         gtk_font_button_get_title      (GtkFontButton *font_button);$/;"	p
gtk_font_button_get_use_font	gtkfontbutton.h	/^gboolean              gtk_font_button_get_use_font   (GtkFontButton *font_button);$/;"	p
gtk_font_button_get_use_size	gtkfontbutton.h	/^gboolean              gtk_font_button_get_use_size   (GtkFontButton *font_button);$/;"	p
gtk_font_button_new	gtkfontbutton.h	/^GtkWidget            *gtk_font_button_new            (void);$/;"	p
gtk_font_button_new_with_font	gtkfontbutton.h	/^GtkWidget            *gtk_font_button_new_with_font  (const gchar   *fontname);$/;"	p
gtk_font_button_set_font_name	gtkfontbutton.h	/^gboolean              gtk_font_button_set_font_name  (GtkFontButton *font_button,$/;"	p
gtk_font_button_set_show_size	gtkfontbutton.h	/^void                  gtk_font_button_set_show_size  (GtkFontButton *font_button,$/;"	p
gtk_font_button_set_show_style	gtkfontbutton.h	/^void                  gtk_font_button_set_show_style (GtkFontButton *font_button,$/;"	p
gtk_font_button_set_title	gtkfontbutton.h	/^void                  gtk_font_button_set_title      (GtkFontButton *font_button,$/;"	p
gtk_font_button_set_use_font	gtkfontbutton.h	/^void                  gtk_font_button_set_use_font   (GtkFontButton *font_button,$/;"	p
gtk_font_button_set_use_size	gtkfontbutton.h	/^void                  gtk_font_button_set_use_size   (GtkFontButton *font_button,$/;"	p
gtk_font_selection_dialog_get_apply_button	gtkfontsel.h	/^GtkWidget *gtk_font_selection_dialog_get_apply_button  (GtkFontSelectionDialog *fsd);$/;"	p
gtk_font_selection_dialog_get_cancel_button	gtkfontsel.h	/^GtkWidget *gtk_font_selection_dialog_get_cancel_button (GtkFontSelectionDialog *fsd);$/;"	p
gtk_font_selection_dialog_get_font	gtkfontsel.h	/^GdkFont*   gtk_font_selection_dialog_get_font	       (GtkFontSelectionDialog *fsd);$/;"	p
gtk_font_selection_dialog_get_font_name	gtkfontsel.h	/^gchar*	   gtk_font_selection_dialog_get_font_name     (GtkFontSelectionDialog *fsd);$/;"	p
gtk_font_selection_dialog_get_font_selection	gtkfontsel.h	/^GtkWidget *gtk_font_selection_dialog_get_font_selection (GtkFontSelectionDialog *fsd);$/;"	p
gtk_font_selection_dialog_get_ok_button	gtkfontsel.h	/^GtkWidget *gtk_font_selection_dialog_get_ok_button     (GtkFontSelectionDialog *fsd);$/;"	p
gtk_font_selection_dialog_get_preview_text	gtkfontsel.h	/^          gtk_font_selection_dialog_get_preview_text   (GtkFontSelectionDialog *fsd);$/;"	p
gtk_font_selection_dialog_new	gtkfontsel.h	/^GtkWidget *gtk_font_selection_dialog_new	       (const gchar            *title);$/;"	p
gtk_font_selection_dialog_set_font_name	gtkfontsel.h	/^gboolean   gtk_font_selection_dialog_set_font_name     (GtkFontSelectionDialog *fsd,$/;"	p
gtk_font_selection_dialog_set_preview_text	gtkfontsel.h	/^void	  gtk_font_selection_dialog_set_preview_text   (GtkFontSelectionDialog *fsd,$/;"	p
gtk_font_selection_get_face	gtkfontsel.h	/^             gtk_font_selection_get_face          (GtkFontSelection *fontsel);$/;"	p
gtk_font_selection_get_face_list	gtkfontsel.h	/^GtkWidget *  gtk_font_selection_get_face_list     (GtkFontSelection *fontsel);$/;"	p
gtk_font_selection_get_family	gtkfontsel.h	/^             gtk_font_selection_get_family        (GtkFontSelection *fontsel);$/;"	p
gtk_font_selection_get_family_list	gtkfontsel.h	/^GtkWidget *  gtk_font_selection_get_family_list   (GtkFontSelection *fontsel);$/;"	p
gtk_font_selection_get_font	gtkfontsel.h	/^GdkFont*     gtk_font_selection_get_font          (GtkFontSelection *fontsel);$/;"	p
gtk_font_selection_get_font_name	gtkfontsel.h	/^gchar*       gtk_font_selection_get_font_name     (GtkFontSelection *fontsel);$/;"	p
gtk_font_selection_get_preview_entry	gtkfontsel.h	/^GtkWidget *  gtk_font_selection_get_preview_entry (GtkFontSelection *fontsel);$/;"	p
gtk_font_selection_get_preview_text	gtkfontsel.h	/^const gchar* gtk_font_selection_get_preview_text  (GtkFontSelection *fontsel);$/;"	p
gtk_font_selection_get_size	gtkfontsel.h	/^gint         gtk_font_selection_get_size          (GtkFontSelection *fontsel);$/;"	p
gtk_font_selection_get_size_entry	gtkfontsel.h	/^GtkWidget *  gtk_font_selection_get_size_entry    (GtkFontSelection *fontsel);$/;"	p
gtk_font_selection_get_size_list	gtkfontsel.h	/^GtkWidget *  gtk_font_selection_get_size_list     (GtkFontSelection *fontsel);$/;"	p
gtk_font_selection_new	gtkfontsel.h	/^GtkWidget *  gtk_font_selection_new               (void);$/;"	p
gtk_font_selection_set_font_name	gtkfontsel.h	/^gboolean     gtk_font_selection_set_font_name     (GtkFontSelection *fontsel,$/;"	p
gtk_font_selection_set_preview_text	gtkfontsel.h	/^void         gtk_font_selection_set_preview_text  (GtkFontSelection *fontsel,$/;"	p
gtk_frame_get_label	gtkframe.h	/^const gchar *gtk_frame_get_label      (GtkFrame    *frame);$/;"	p
gtk_frame_get_label_align	gtkframe.h	/^void       gtk_frame_get_label_align  (GtkFrame      *frame,$/;"	p
gtk_frame_get_label_widget	gtkframe.h	/^GtkWidget *gtk_frame_get_label_widget (GtkFrame      *frame);$/;"	p
gtk_frame_get_shadow_type	gtkframe.h	/^GtkShadowType gtk_frame_get_shadow_type (GtkFrame    *frame);$/;"	p
gtk_frame_new	gtkframe.h	/^GtkWidget* gtk_frame_new              (const gchar   *label);$/;"	p
gtk_frame_set_label	gtkframe.h	/^void                  gtk_frame_set_label (GtkFrame    *frame,$/;"	p
gtk_frame_set_label_align	gtkframe.h	/^void       gtk_frame_set_label_align  (GtkFrame      *frame,$/;"	p
gtk_frame_set_label_widget	gtkframe.h	/^void       gtk_frame_set_label_widget (GtkFrame      *frame,$/;"	p
gtk_frame_set_shadow_type	gtkframe.h	/^void       gtk_frame_set_shadow_type  (GtkFrame      *frame,$/;"	p
gtk_gamma_curve_new	gtkgamma.h	/^GtkWidget* gtk_gamma_curve_new      (void);$/;"	p
gtk_gc_get	gtkgc.h	/^GdkGC* gtk_gc_get     (gint             depth,$/;"	p
gtk_gc_release	gtkgc.h	/^void   gtk_gc_release (GdkGC           *gc);$/;"	p
gtk_get_current_event	gtkmain.h	/^GdkEvent*       gtk_get_current_event       (void);$/;"	p
gtk_get_current_event_state	gtkmain.h	/^gboolean        gtk_get_current_event_state (GdkModifierType *state);$/;"	p
gtk_get_current_event_time	gtkmain.h	/^guint32         gtk_get_current_event_time  (void);$/;"	p
gtk_get_default_language	gtkmain.h	/^PangoLanguage *gtk_get_default_language (void);$/;"	p
gtk_get_event_widget	gtkmain.h	/^GtkWidget* gtk_get_event_widget	   (GdkEvent	   *event);$/;"	p
gtk_get_option_group	gtkmain.h	/^GOptionGroup *gtk_get_option_group (gboolean open_default_display);$/;"	p
gtk_grab_add	gtkmain.h	/^void	   gtk_grab_add		   (GtkWidget	       *widget);$/;"	p
gtk_grab_get_current	gtkmain.h	/^GtkWidget* gtk_grab_get_current	   (void);$/;"	p
gtk_grab_remove	gtkmain.h	/^void	   gtk_grab_remove	   (GtkWidget	       *widget);$/;"	p
gtk_handle_box_get_child_detached	gtkhandlebox.h	/^gboolean      gtk_handle_box_get_child_detached   (GtkHandleBox    *handle_box);$/;"	p
gtk_handle_box_get_handle_position	gtkhandlebox.h	/^GtkPositionType gtk_handle_box_get_handle_position(GtkHandleBox    *handle_box);$/;"	p
gtk_handle_box_get_shadow_type	gtkhandlebox.h	/^GtkShadowType gtk_handle_box_get_shadow_type      (GtkHandleBox    *handle_box);$/;"	p
gtk_handle_box_get_snap_edge	gtkhandlebox.h	/^GtkPositionType gtk_handle_box_get_snap_edge      (GtkHandleBox    *handle_box);$/;"	p
gtk_handle_box_new	gtkhandlebox.h	/^GtkWidget*    gtk_handle_box_new                  (void);$/;"	p
gtk_handle_box_set_handle_position	gtkhandlebox.h	/^void          gtk_handle_box_set_handle_position  (GtkHandleBox    *handle_box,$/;"	p
gtk_handle_box_set_shadow_type	gtkhandlebox.h	/^void          gtk_handle_box_set_shadow_type      (GtkHandleBox    *handle_box,$/;"	p
gtk_handle_box_set_snap_edge	gtkhandlebox.h	/^void          gtk_handle_box_set_snap_edge        (GtkHandleBox    *handle_box,$/;"	p
gtk_hbox_new	gtkhbox.h	/^GtkWidget * gtk_hbox_new      (gboolean homogeneous,$/;"	p
gtk_hbutton_box_get_layout_default	gtkhbbox.h	/^GtkButtonBoxStyle gtk_hbutton_box_get_layout_default (void);$/;"	p
gtk_hbutton_box_get_spacing_default	gtkhbbox.h	/^gint gtk_hbutton_box_get_spacing_default (void);$/;"	p
gtk_hbutton_box_new	gtkhbbox.h	/^GtkWidget* gtk_hbutton_box_new      (void);$/;"	p
gtk_hbutton_box_set_layout_default	gtkhbbox.h	/^void gtk_hbutton_box_set_layout_default (GtkButtonBoxStyle layout);$/;"	p
gtk_hbutton_box_set_spacing_default	gtkhbbox.h	/^void gtk_hbutton_box_set_spacing_default (gint spacing);$/;"	p
gtk_hpaned_new	gtkhpaned.h	/^GtkWidget * gtk_hpaned_new      (void);$/;"	p
gtk_hruler_new	gtkhruler.h	/^GtkWidget* gtk_hruler_new      (void);$/;"	p
gtk_hscale_new	gtkhscale.h	/^GtkWidget* gtk_hscale_new            (GtkAdjustment *adjustment);$/;"	p
gtk_hscale_new_with_range	gtkhscale.h	/^GtkWidget* gtk_hscale_new_with_range (gdouble        min,$/;"	p
gtk_hscrollbar_new	gtkhscrollbar.h	/^GtkWidget* gtk_hscrollbar_new      (GtkAdjustment *adjustment);$/;"	p
gtk_hseparator_new	gtkhseparator.h	/^GtkWidget* gtk_hseparator_new      (void);$/;"	p
gtk_hsv_get_color	gtkhsv.h	/^void       gtk_hsv_get_color    (GtkHSV    *hsv,$/;"	p
gtk_hsv_get_metrics	gtkhsv.h	/^void       gtk_hsv_get_metrics  (GtkHSV    *hsv,$/;"	p
gtk_hsv_is_adjusting	gtkhsv.h	/^gboolean   gtk_hsv_is_adjusting (GtkHSV    *hsv);$/;"	p
gtk_hsv_new	gtkhsv.h	/^GtkWidget* gtk_hsv_new          (void);$/;"	p
gtk_hsv_set_color	gtkhsv.h	/^void       gtk_hsv_set_color    (GtkHSV    *hsv,$/;"	p
gtk_hsv_set_metrics	gtkhsv.h	/^void       gtk_hsv_set_metrics  (GtkHSV    *hsv,$/;"	p
gtk_hsv_to_rgb	gtkhsv.h	/^void       gtk_hsv_to_rgb       (gdouble    h,$/;"	p
gtk_icon_factory_add	gtkiconfactory.h	/^void            gtk_icon_factory_add      (GtkIconFactory *factory,$/;"	p
gtk_icon_factory_add_default	gtkiconfactory.h	/^void        gtk_icon_factory_add_default     (GtkIconFactory  *factory);$/;"	p
gtk_icon_factory_lookup	gtkiconfactory.h	/^GtkIconSet*     gtk_icon_factory_lookup   (GtkIconFactory *factory,$/;"	p
gtk_icon_factory_lookup_default	gtkiconfactory.h	/^GtkIconSet* gtk_icon_factory_lookup_default  (const gchar     *stock_id);$/;"	p
gtk_icon_factory_new	gtkiconfactory.h	/^GtkIconFactory* gtk_icon_factory_new      (void);$/;"	p
gtk_icon_factory_remove_default	gtkiconfactory.h	/^void        gtk_icon_factory_remove_default  (GtkIconFactory  *factory);$/;"	p
gtk_icon_info_copy	gtkicontheme.h	/^GtkIconInfo *         gtk_icon_info_copy               (GtkIconInfo  *icon_info);$/;"	p
gtk_icon_info_free	gtkicontheme.h	/^void                  gtk_icon_info_free               (GtkIconInfo  *icon_info);$/;"	p
gtk_icon_info_get_attach_points	gtkicontheme.h	/^gboolean              gtk_icon_info_get_attach_points (GtkIconInfo    *icon_info,$/;"	p
gtk_icon_info_get_base_size	gtkicontheme.h	/^gint                  gtk_icon_info_get_base_size      (GtkIconInfo   *icon_info);$/;"	p
gtk_icon_info_get_builtin_pixbuf	gtkicontheme.h	/^GdkPixbuf *           gtk_icon_info_get_builtin_pixbuf (GtkIconInfo   *icon_info);$/;"	p
gtk_icon_info_get_display_name	gtkicontheme.h	/^const gchar *         gtk_icon_info_get_display_name  (GtkIconInfo    *icon_info);$/;"	p
gtk_icon_info_get_embedded_rect	gtkicontheme.h	/^gboolean              gtk_icon_info_get_embedded_rect (GtkIconInfo    *icon_info,$/;"	p
gtk_icon_info_get_filename	gtkicontheme.h	/^const gchar *         gtk_icon_info_get_filename       (GtkIconInfo   *icon_info);$/;"	p
gtk_icon_info_get_filename	gtkicontheme.h	111;"	d
gtk_icon_info_load_icon	gtkicontheme.h	/^GdkPixbuf *           gtk_icon_info_load_icon          (GtkIconInfo   *icon_info,$/;"	p
gtk_icon_info_new_for_pixbuf	gtkicontheme.h	/^GtkIconInfo *         gtk_icon_info_new_for_pixbuf     (GtkIconTheme  *icon_theme,$/;"	p
gtk_icon_info_set_raw_coordinates	gtkicontheme.h	/^void                  gtk_icon_info_set_raw_coordinates (GtkIconInfo  *icon_info,$/;"	p
gtk_icon_set_add_source	gtkiconfactory.h	/^void           gtk_icon_set_add_source   (GtkIconSet          *icon_set,$/;"	p
gtk_icon_set_copy	gtkiconfactory.h	/^GtkIconSet* gtk_icon_set_copy            (GtkIconSet      *icon_set);$/;"	p
gtk_icon_set_get_sizes	gtkiconfactory.h	/^void           gtk_icon_set_get_sizes    (GtkIconSet          *icon_set,$/;"	p
gtk_icon_set_new	gtkiconfactory.h	/^GtkIconSet* gtk_icon_set_new             (void);$/;"	p
gtk_icon_set_new_from_pixbuf	gtkiconfactory.h	/^GtkIconSet* gtk_icon_set_new_from_pixbuf (GdkPixbuf       *pixbuf);$/;"	p
gtk_icon_set_ref	gtkiconfactory.h	/^GtkIconSet* gtk_icon_set_ref             (GtkIconSet      *icon_set);$/;"	p
gtk_icon_set_render_icon	gtkiconfactory.h	/^GdkPixbuf*  gtk_icon_set_render_icon     (GtkIconSet      *icon_set,$/;"	p
gtk_icon_set_unref	gtkiconfactory.h	/^void        gtk_icon_set_unref           (GtkIconSet      *icon_set);$/;"	p
gtk_icon_size_from_name	gtkiconfactory.h	/^GtkIconSize           gtk_icon_size_from_name      (const gchar *name);$/;"	p
gtk_icon_size_get_name	gtkiconfactory.h	/^const gchar *         gtk_icon_size_get_name       (GtkIconSize  size);$/;"	p
gtk_icon_size_lookup	gtkiconfactory.h	/^gboolean gtk_icon_size_lookup              (GtkIconSize  size,$/;"	p
gtk_icon_size_lookup_for_settings	gtkiconfactory.h	/^gboolean gtk_icon_size_lookup_for_settings (GtkSettings *settings,$/;"	p
gtk_icon_size_register	gtkiconfactory.h	/^GtkIconSize           gtk_icon_size_register       (const gchar *name,$/;"	p
gtk_icon_size_register_alias	gtkiconfactory.h	/^void                  gtk_icon_size_register_alias (const gchar *alias,$/;"	p
gtk_icon_source_copy	gtkiconfactory.h	/^GtkIconSource* gtk_icon_source_copy                     (const GtkIconSource *source);$/;"	p
gtk_icon_source_free	gtkiconfactory.h	/^void           gtk_icon_source_free                     (GtkIconSource       *source);$/;"	p
gtk_icon_source_get_direction	gtkiconfactory.h	/^GtkTextDirection gtk_icon_source_get_direction            (const GtkIconSource *source);$/;"	p
gtk_icon_source_get_direction_wildcarded	gtkiconfactory.h	/^gboolean         gtk_icon_source_get_direction_wildcarded (const GtkIconSource *source);$/;"	p
gtk_icon_source_get_filename	gtkiconfactory.h	/^const gchar* gtk_icon_source_get_filename  (const GtkIconSource *source);$/;"	p
gtk_icon_source_get_filename	gtkiconfactory.h	71;"	d
gtk_icon_source_get_icon_name	gtkiconfactory.h	/^const gchar* gtk_icon_source_get_icon_name (const GtkIconSource *source);$/;"	p
gtk_icon_source_get_pixbuf	gtkiconfactory.h	/^GdkPixbuf*            gtk_icon_source_get_pixbuf    (const GtkIconSource *source);$/;"	p
gtk_icon_source_get_size	gtkiconfactory.h	/^GtkIconSize      gtk_icon_source_get_size                 (const GtkIconSource *source);$/;"	p
gtk_icon_source_get_size_wildcarded	gtkiconfactory.h	/^gboolean         gtk_icon_source_get_size_wildcarded      (const GtkIconSource *source);$/;"	p
gtk_icon_source_get_state	gtkiconfactory.h	/^GtkStateType     gtk_icon_source_get_state                (const GtkIconSource *source);$/;"	p
gtk_icon_source_get_state_wildcarded	gtkiconfactory.h	/^gboolean         gtk_icon_source_get_state_wildcarded     (const GtkIconSource *source);$/;"	p
gtk_icon_source_new	gtkiconfactory.h	/^GtkIconSource* gtk_icon_source_new                      (void);$/;"	p
gtk_icon_source_set_direction	gtkiconfactory.h	/^void             gtk_icon_source_set_direction            (GtkIconSource       *source,$/;"	p
gtk_icon_source_set_direction_wildcarded	gtkiconfactory.h	/^void             gtk_icon_source_set_direction_wildcarded (GtkIconSource       *source,$/;"	p
gtk_icon_source_set_filename	gtkiconfactory.h	/^void           gtk_icon_source_set_filename             (GtkIconSource       *source,$/;"	p
gtk_icon_source_set_filename	gtkiconfactory.h	70;"	d
gtk_icon_source_set_icon_name	gtkiconfactory.h	/^void           gtk_icon_source_set_icon_name            (GtkIconSource       *source,$/;"	p
gtk_icon_source_set_pixbuf	gtkiconfactory.h	/^void           gtk_icon_source_set_pixbuf               (GtkIconSource       *source,$/;"	p
gtk_icon_source_set_size	gtkiconfactory.h	/^void             gtk_icon_source_set_size                 (GtkIconSource       *source,$/;"	p
gtk_icon_source_set_size_wildcarded	gtkiconfactory.h	/^void             gtk_icon_source_set_size_wildcarded      (GtkIconSource       *source,$/;"	p
gtk_icon_source_set_state	gtkiconfactory.h	/^void             gtk_icon_source_set_state                (GtkIconSource       *source,$/;"	p
gtk_icon_source_set_state_wildcarded	gtkiconfactory.h	/^void             gtk_icon_source_set_state_wildcarded     (GtkIconSource       *source,$/;"	p
gtk_icon_theme_add_builtin_icon	gtkicontheme.h	/^void          gtk_icon_theme_add_builtin_icon      (const gchar *icon_name,$/;"	p
gtk_icon_theme_append_search_path	gtkicontheme.h	/^void          gtk_icon_theme_append_search_path    (GtkIconTheme                *icon_theme,$/;"	p
gtk_icon_theme_append_search_path	gtkicontheme.h	109;"	d
gtk_icon_theme_choose_icon	gtkicontheme.h	/^GtkIconInfo * gtk_icon_theme_choose_icon           (GtkIconTheme                *icon_theme,$/;"	p
gtk_icon_theme_error_quark	gtkicontheme.h	/^GQuark gtk_icon_theme_error_quark (void);$/;"	p
gtk_icon_theme_get_default	gtkicontheme.h	/^GtkIconTheme *gtk_icon_theme_get_default           (void);$/;"	p
gtk_icon_theme_get_example_icon_name	gtkicontheme.h	/^char *        gtk_icon_theme_get_example_icon_name (GtkIconTheme                *icon_theme);$/;"	p
gtk_icon_theme_get_for_screen	gtkicontheme.h	/^GtkIconTheme *gtk_icon_theme_get_for_screen        (GdkScreen                   *screen);$/;"	p
gtk_icon_theme_get_icon_sizes	gtkicontheme.h	/^gint         *gtk_icon_theme_get_icon_sizes        (GtkIconTheme                *icon_theme,$/;"	p
gtk_icon_theme_get_search_path	gtkicontheme.h	/^void          gtk_icon_theme_get_search_path       (GtkIconTheme                *icon_theme,$/;"	p
gtk_icon_theme_get_search_path	gtkicontheme.h	108;"	d
gtk_icon_theme_has_icon	gtkicontheme.h	/^gboolean      gtk_icon_theme_has_icon              (GtkIconTheme                *icon_theme,$/;"	p
gtk_icon_theme_list_contexts	gtkicontheme.h	/^GList *       gtk_icon_theme_list_contexts         (GtkIconTheme                *icon_theme);$/;"	p
gtk_icon_theme_list_icons	gtkicontheme.h	/^GList *       gtk_icon_theme_list_icons            (GtkIconTheme                *icon_theme,$/;"	p
gtk_icon_theme_load_icon	gtkicontheme.h	/^GdkPixbuf *   gtk_icon_theme_load_icon             (GtkIconTheme                *icon_theme,$/;"	p
gtk_icon_theme_lookup_by_gicon	gtkicontheme.h	/^GtkIconInfo * gtk_icon_theme_lookup_by_gicon       (GtkIconTheme                *icon_theme,$/;"	p
gtk_icon_theme_lookup_icon	gtkicontheme.h	/^GtkIconInfo * gtk_icon_theme_lookup_icon           (GtkIconTheme                *icon_theme,$/;"	p
gtk_icon_theme_new	gtkicontheme.h	/^GtkIconTheme *gtk_icon_theme_new                   (void);$/;"	p
gtk_icon_theme_prepend_search_path	gtkicontheme.h	/^void          gtk_icon_theme_prepend_search_path   (GtkIconTheme                *icon_theme,$/;"	p
gtk_icon_theme_prepend_search_path	gtkicontheme.h	110;"	d
gtk_icon_theme_rescan_if_needed	gtkicontheme.h	/^gboolean      gtk_icon_theme_rescan_if_needed      (GtkIconTheme                *icon_theme);$/;"	p
gtk_icon_theme_set_custom_theme	gtkicontheme.h	/^void          gtk_icon_theme_set_custom_theme      (GtkIconTheme                *icon_theme,$/;"	p
gtk_icon_theme_set_screen	gtkicontheme.h	/^void          gtk_icon_theme_set_screen            (GtkIconTheme                *icon_theme,$/;"	p
gtk_icon_theme_set_search_path	gtkicontheme.h	/^void          gtk_icon_theme_set_search_path       (GtkIconTheme                *icon_theme,$/;"	p
gtk_icon_theme_set_search_path	gtkicontheme.h	107;"	d
gtk_icon_view_convert_widget_to_bin_window_coords	gtkiconview.h	/^void    gtk_icon_view_convert_widget_to_bin_window_coords     (GtkIconView *icon_view,$/;"	p
gtk_icon_view_create_drag_icon	gtkiconview.h	/^GdkPixmap             *gtk_icon_view_create_drag_icon         (GtkIconView              *icon_view,$/;"	p
gtk_icon_view_enable_model_drag_dest	gtkiconview.h	/^void                   gtk_icon_view_enable_model_drag_dest   (GtkIconView              *icon_view,$/;"	p
gtk_icon_view_enable_model_drag_source	gtkiconview.h	/^void                   gtk_icon_view_enable_model_drag_source (GtkIconView              *icon_view,$/;"	p
gtk_icon_view_get_column_spacing	gtkiconview.h	/^gint           gtk_icon_view_get_column_spacing (GtkIconView    *icon_view);$/;"	p
gtk_icon_view_get_columns	gtkiconview.h	/^gint           gtk_icon_view_get_columns       (GtkIconView    *icon_view);$/;"	p
gtk_icon_view_get_cursor	gtkiconview.h	/^gboolean         gtk_icon_view_get_cursor         (GtkIconView            *icon_view,$/;"	p
gtk_icon_view_get_dest_item_at_pos	gtkiconview.h	/^gboolean               gtk_icon_view_get_dest_item_at_pos     (GtkIconView              *icon_view,$/;"	p
gtk_icon_view_get_drag_dest_item	gtkiconview.h	/^void                   gtk_icon_view_get_drag_dest_item       (GtkIconView              *icon_view,$/;"	p
gtk_icon_view_get_item_at_pos	gtkiconview.h	/^gboolean       gtk_icon_view_get_item_at_pos   (GtkIconView     *icon_view,$/;"	p
gtk_icon_view_get_item_column	gtkiconview.h	/^gint             gtk_icon_view_get_item_column    (GtkIconView            *icon_view,$/;"	p
gtk_icon_view_get_item_orientation	gtkiconview.h	/^GtkOrientation gtk_icon_view_get_item_orientation (GtkIconView    *icon_view);$/;"	p
gtk_icon_view_get_item_padding	gtkiconview.h	/^gint           gtk_icon_view_get_item_padding  (GtkIconView    *icon_view);$/;"	p
gtk_icon_view_get_item_row	gtkiconview.h	/^gint             gtk_icon_view_get_item_row       (GtkIconView            *icon_view,$/;"	p
gtk_icon_view_get_item_width	gtkiconview.h	/^gint           gtk_icon_view_get_item_width    (GtkIconView    *icon_view);$/;"	p
gtk_icon_view_get_margin	gtkiconview.h	/^gint           gtk_icon_view_get_margin        (GtkIconView    *icon_view);$/;"	p
gtk_icon_view_get_markup_column	gtkiconview.h	/^gint           gtk_icon_view_get_markup_column (GtkIconView    *icon_view);$/;"	p
gtk_icon_view_get_model	gtkiconview.h	/^GtkTreeModel * gtk_icon_view_get_model         (GtkIconView    *icon_view);$/;"	p
gtk_icon_view_get_orientation	gtkiconview.h	/^GtkOrientation gtk_icon_view_get_orientation   (GtkIconView    *icon_view);$/;"	p
gtk_icon_view_get_path_at_pos	gtkiconview.h	/^GtkTreePath *  gtk_icon_view_get_path_at_pos   (GtkIconView     *icon_view,$/;"	p
gtk_icon_view_get_pixbuf_column	gtkiconview.h	/^gint           gtk_icon_view_get_pixbuf_column (GtkIconView    *icon_view);$/;"	p
gtk_icon_view_get_reorderable	gtkiconview.h	/^gboolean               gtk_icon_view_get_reorderable          (GtkIconView              *icon_view);$/;"	p
gtk_icon_view_get_row_spacing	gtkiconview.h	/^gint           gtk_icon_view_get_row_spacing   (GtkIconView    *icon_view);$/;"	p
gtk_icon_view_get_selected_items	gtkiconview.h	/^GList           *gtk_icon_view_get_selected_items (GtkIconView            *icon_view);$/;"	p
gtk_icon_view_get_selection_mode	gtkiconview.h	/^GtkSelectionMode gtk_icon_view_get_selection_mode (GtkIconView            *icon_view);$/;"	p
gtk_icon_view_get_spacing	gtkiconview.h	/^gint           gtk_icon_view_get_spacing       (GtkIconView    *icon_view);$/;"	p
gtk_icon_view_get_text_column	gtkiconview.h	/^gint           gtk_icon_view_get_text_column   (GtkIconView    *icon_view);$/;"	p
gtk_icon_view_get_tooltip_column	gtkiconview.h	/^gint     gtk_icon_view_get_tooltip_column                     (GtkIconView       *icon_view);$/;"	p
gtk_icon_view_get_tooltip_context	gtkiconview.h	/^gboolean gtk_icon_view_get_tooltip_context                    (GtkIconView       *icon_view,$/;"	p
gtk_icon_view_get_visible_range	gtkiconview.h	/^gboolean       gtk_icon_view_get_visible_range (GtkIconView      *icon_view,$/;"	p
gtk_icon_view_item_activated	gtkiconview.h	/^void             gtk_icon_view_item_activated     (GtkIconView            *icon_view,$/;"	p
gtk_icon_view_new	gtkiconview.h	/^GtkWidget *    gtk_icon_view_new               (void);$/;"	p
gtk_icon_view_new_with_model	gtkiconview.h	/^GtkWidget *    gtk_icon_view_new_with_model    (GtkTreeModel   *model);$/;"	p
gtk_icon_view_path_is_selected	gtkiconview.h	/^gboolean         gtk_icon_view_path_is_selected   (GtkIconView            *icon_view,$/;"	p
gtk_icon_view_scroll_to_path	gtkiconview.h	/^void             gtk_icon_view_scroll_to_path     (GtkIconView            *icon_view,$/;"	p
gtk_icon_view_select_all	gtkiconview.h	/^void             gtk_icon_view_select_all         (GtkIconView            *icon_view);$/;"	p
gtk_icon_view_select_path	gtkiconview.h	/^void             gtk_icon_view_select_path        (GtkIconView            *icon_view,$/;"	p
gtk_icon_view_selected_foreach	gtkiconview.h	/^void           gtk_icon_view_selected_foreach   (GtkIconView            *icon_view,$/;"	p
gtk_icon_view_set_column_spacing	gtkiconview.h	/^void           gtk_icon_view_set_column_spacing (GtkIconView    *icon_view, $/;"	p
gtk_icon_view_set_columns	gtkiconview.h	/^void           gtk_icon_view_set_columns       (GtkIconView    *icon_view,$/;"	p
gtk_icon_view_set_cursor	gtkiconview.h	/^void             gtk_icon_view_set_cursor         (GtkIconView            *icon_view,$/;"	p
gtk_icon_view_set_drag_dest_item	gtkiconview.h	/^void                   gtk_icon_view_set_drag_dest_item       (GtkIconView              *icon_view,$/;"	p
gtk_icon_view_set_item_orientation	gtkiconview.h	/^void           gtk_icon_view_set_item_orientation (GtkIconView    *icon_view,$/;"	p
gtk_icon_view_set_item_padding	gtkiconview.h	/^void           gtk_icon_view_set_item_padding  (GtkIconView    *icon_view, $/;"	p
gtk_icon_view_set_item_width	gtkiconview.h	/^void           gtk_icon_view_set_item_width    (GtkIconView    *icon_view,$/;"	p
gtk_icon_view_set_margin	gtkiconview.h	/^void           gtk_icon_view_set_margin        (GtkIconView    *icon_view, $/;"	p
gtk_icon_view_set_markup_column	gtkiconview.h	/^void           gtk_icon_view_set_markup_column (GtkIconView    *icon_view,$/;"	p
gtk_icon_view_set_model	gtkiconview.h	/^void           gtk_icon_view_set_model         (GtkIconView    *icon_view,$/;"	p
gtk_icon_view_set_orientation	gtkiconview.h	/^void           gtk_icon_view_set_orientation   (GtkIconView    *icon_view,$/;"	p
gtk_icon_view_set_pixbuf_column	gtkiconview.h	/^void           gtk_icon_view_set_pixbuf_column (GtkIconView    *icon_view,$/;"	p
gtk_icon_view_set_reorderable	gtkiconview.h	/^void                   gtk_icon_view_set_reorderable          (GtkIconView              *icon_view,$/;"	p
gtk_icon_view_set_row_spacing	gtkiconview.h	/^void           gtk_icon_view_set_row_spacing   (GtkIconView    *icon_view, $/;"	p
gtk_icon_view_set_selection_mode	gtkiconview.h	/^void           gtk_icon_view_set_selection_mode (GtkIconView            *icon_view,$/;"	p
gtk_icon_view_set_spacing	gtkiconview.h	/^void           gtk_icon_view_set_spacing       (GtkIconView    *icon_view, $/;"	p
gtk_icon_view_set_text_column	gtkiconview.h	/^void           gtk_icon_view_set_text_column   (GtkIconView    *icon_view,$/;"	p
gtk_icon_view_set_tooltip_cell	gtkiconview.h	/^void    gtk_icon_view_set_tooltip_cell                        (GtkIconView     *icon_view,$/;"	p
gtk_icon_view_set_tooltip_column	gtkiconview.h	/^void     gtk_icon_view_set_tooltip_column                     (GtkIconView       *icon_view,$/;"	p
gtk_icon_view_set_tooltip_item	gtkiconview.h	/^void    gtk_icon_view_set_tooltip_item                        (GtkIconView     *icon_view,$/;"	p
gtk_icon_view_unselect_all	gtkiconview.h	/^void             gtk_icon_view_unselect_all       (GtkIconView            *icon_view);$/;"	p
gtk_icon_view_unselect_path	gtkiconview.h	/^void             gtk_icon_view_unselect_path      (GtkIconView            *icon_view,$/;"	p
gtk_icon_view_unset_model_drag_dest	gtkiconview.h	/^void                   gtk_icon_view_unset_model_drag_dest    (GtkIconView              *icon_view);$/;"	p
gtk_icon_view_unset_model_drag_source	gtkiconview.h	/^void                   gtk_icon_view_unset_model_drag_source  (GtkIconView              *icon_view);$/;"	p
gtk_idle_add	gtkmain.h	/^guint	   gtk_idle_add		   (GtkFunction	       function,$/;"	p
gtk_idle_add_full	gtkmain.h	/^guint	   gtk_idle_add_full	   (gint	       priority,$/;"	p
gtk_idle_add_priority	gtkmain.h	/^guint	   gtk_idle_add_priority   (gint	       priority,$/;"	p
gtk_idle_remove	gtkmain.h	/^void	   gtk_idle_remove	   (guint	       idle_handler_id);$/;"	p
gtk_idle_remove_by_data	gtkmain.h	/^void	   gtk_idle_remove_by_data (gpointer	       data);$/;"	p
gtk_im_context_delete_surrounding	gtkimcontext.h	/^gboolean gtk_im_context_delete_surrounding  (GtkIMContext       *context,$/;"	p
gtk_im_context_filter_keypress	gtkimcontext.h	/^gboolean gtk_im_context_filter_keypress     (GtkIMContext       *context,$/;"	p
gtk_im_context_focus_in	gtkimcontext.h	/^void     gtk_im_context_focus_in            (GtkIMContext       *context);$/;"	p
gtk_im_context_focus_out	gtkimcontext.h	/^void     gtk_im_context_focus_out           (GtkIMContext       *context);$/;"	p
gtk_im_context_get_preedit_string	gtkimcontext.h	/^void     gtk_im_context_get_preedit_string  (GtkIMContext       *context,$/;"	p
gtk_im_context_get_surrounding	gtkimcontext.h	/^gboolean gtk_im_context_get_surrounding     (GtkIMContext       *context,$/;"	p
gtk_im_context_reset	gtkimcontext.h	/^void     gtk_im_context_reset               (GtkIMContext       *context);$/;"	p
gtk_im_context_set_client_window	gtkimcontext.h	/^void     gtk_im_context_set_client_window   (GtkIMContext       *context,$/;"	p
gtk_im_context_set_cursor_location	gtkimcontext.h	/^void     gtk_im_context_set_cursor_location (GtkIMContext       *context,$/;"	p
gtk_im_context_set_surrounding	gtkimcontext.h	/^void     gtk_im_context_set_surrounding     (GtkIMContext       *context,$/;"	p
gtk_im_context_set_use_preedit	gtkimcontext.h	/^void     gtk_im_context_set_use_preedit     (GtkIMContext       *context,$/;"	p
gtk_im_context_simple_add_table	gtkimcontextsimple.h	/^void          gtk_im_context_simple_add_table (GtkIMContextSimple *context_simple,$/;"	p
gtk_im_context_simple_new	gtkimcontextsimple.h	/^GtkIMContext *gtk_im_context_simple_new       (void);$/;"	p
gtk_im_multicontext_append_menuitems	gtkimmulticontext.h	/^void          gtk_im_multicontext_append_menuitems (GtkIMMulticontext *context,$/;"	p
gtk_im_multicontext_get_context_id	gtkimmulticontext.h	/^const char  * gtk_im_multicontext_get_context_id   (GtkIMMulticontext *context);$/;"	p
gtk_im_multicontext_new	gtkimmulticontext.h	/^GtkIMContext *gtk_im_multicontext_new      (void);$/;"	p
gtk_im_multicontext_set_context_id	gtkimmulticontext.h	/^void          gtk_im_multicontext_set_context_id   (GtkIMMulticontext *context,$/;"	p
gtk_image_clear	gtkimage.h	/^void gtk_image_clear              (GtkImage        *image);$/;"	p
gtk_image_get	gtkimage.h	/^void       gtk_image_get      (GtkImage   *image,$/;"	p
gtk_image_get_animation	gtkimage.h	/^GdkPixbufAnimation* gtk_image_get_animation (GtkImage *image);$/;"	p
gtk_image_get_gicon	gtkimage.h	/^void       gtk_image_get_gicon     (GtkImage              *image,$/;"	p
gtk_image_get_icon_name	gtkimage.h	/^void       gtk_image_get_icon_name (GtkImage              *image,$/;"	p
gtk_image_get_icon_set	gtkimage.h	/^void       gtk_image_get_icon_set (GtkImage         *image,$/;"	p
gtk_image_get_image	gtkimage.h	/^void       gtk_image_get_image    (GtkImage         *image,$/;"	p
gtk_image_get_pixbuf	gtkimage.h	/^GdkPixbuf* gtk_image_get_pixbuf   (GtkImage         *image);$/;"	p
gtk_image_get_pixel_size	gtkimage.h	/^gint       gtk_image_get_pixel_size (GtkImage             *image);$/;"	p
gtk_image_get_pixmap	gtkimage.h	/^void       gtk_image_get_pixmap   (GtkImage         *image,$/;"	p
gtk_image_get_stock	gtkimage.h	/^void       gtk_image_get_stock    (GtkImage         *image,$/;"	p
gtk_image_get_storage_type	gtkimage.h	/^GtkImageType gtk_image_get_storage_type (GtkImage   *image);$/;"	p
gtk_image_menu_item_get_always_show_image	gtkimagemenuitem.h	/^gboolean   gtk_image_menu_item_get_always_show_image (GtkImageMenuItem *image_menu_item);$/;"	p
gtk_image_menu_item_get_image	gtkimagemenuitem.h	/^GtkWidget* gtk_image_menu_item_get_image         (GtkImageMenuItem *image_menu_item);$/;"	p
gtk_image_menu_item_get_use_stock	gtkimagemenuitem.h	/^gboolean   gtk_image_menu_item_get_use_stock     (GtkImageMenuItem *image_menu_item);$/;"	p
gtk_image_menu_item_new	gtkimagemenuitem.h	/^GtkWidget* gtk_image_menu_item_new               (void);$/;"	p
gtk_image_menu_item_new_from_stock	gtkimagemenuitem.h	/^GtkWidget* gtk_image_menu_item_new_from_stock    (const gchar      *stock_id,$/;"	p
gtk_image_menu_item_new_with_label	gtkimagemenuitem.h	/^GtkWidget* gtk_image_menu_item_new_with_label    (const gchar      *label);$/;"	p
gtk_image_menu_item_new_with_mnemonic	gtkimagemenuitem.h	/^GtkWidget* gtk_image_menu_item_new_with_mnemonic (const gchar      *label);$/;"	p
gtk_image_menu_item_set_accel_group	gtkimagemenuitem.h	/^void       gtk_image_menu_item_set_accel_group   (GtkImageMenuItem *image_menu_item, $/;"	p
gtk_image_menu_item_set_always_show_image	gtkimagemenuitem.h	/^void       gtk_image_menu_item_set_always_show_image (GtkImageMenuItem *image_menu_item,$/;"	p
gtk_image_menu_item_set_image	gtkimagemenuitem.h	/^void       gtk_image_menu_item_set_image         (GtkImageMenuItem *image_menu_item,$/;"	p
gtk_image_menu_item_set_use_stock	gtkimagemenuitem.h	/^void       gtk_image_menu_item_set_use_stock     (GtkImageMenuItem *image_menu_item,$/;"	p
gtk_image_new	gtkimage.h	/^GtkWidget* gtk_image_new                (void);$/;"	p
gtk_image_new_from_animation	gtkimage.h	/^GtkWidget* gtk_image_new_from_animation (GdkPixbufAnimation *animation);$/;"	p
gtk_image_new_from_file	gtkimage.h	/^GtkWidget* gtk_image_new_from_file      (const gchar     *filename);$/;"	p
gtk_image_new_from_file	gtkimage.h	186;"	d
gtk_image_new_from_gicon	gtkimage.h	/^GtkWidget* gtk_image_new_from_gicon     (GIcon           *icon,$/;"	p
gtk_image_new_from_icon_name	gtkimage.h	/^GtkWidget* gtk_image_new_from_icon_name (const gchar     *icon_name,$/;"	p
gtk_image_new_from_icon_set	gtkimage.h	/^GtkWidget* gtk_image_new_from_icon_set  (GtkIconSet      *icon_set,$/;"	p
gtk_image_new_from_image	gtkimage.h	/^GtkWidget* gtk_image_new_from_image     (GdkImage        *image,$/;"	p
gtk_image_new_from_pixbuf	gtkimage.h	/^GtkWidget* gtk_image_new_from_pixbuf    (GdkPixbuf       *pixbuf);$/;"	p
gtk_image_new_from_pixmap	gtkimage.h	/^GtkWidget* gtk_image_new_from_pixmap    (GdkPixmap       *pixmap,$/;"	p
gtk_image_new_from_stock	gtkimage.h	/^GtkWidget* gtk_image_new_from_stock     (const gchar     *stock_id,$/;"	p
gtk_image_set	gtkimage.h	/^void       gtk_image_set      (GtkImage   *image,$/;"	p
gtk_image_set_from_animation	gtkimage.h	/^void gtk_image_set_from_animation (GtkImage           *image,$/;"	p
gtk_image_set_from_file	gtkimage.h	/^void gtk_image_set_from_file      (GtkImage        *image,$/;"	p
gtk_image_set_from_file	gtkimage.h	187;"	d
gtk_image_set_from_gicon	gtkimage.h	/^void gtk_image_set_from_gicon     (GtkImage        *image,$/;"	p
gtk_image_set_from_icon_name	gtkimage.h	/^void gtk_image_set_from_icon_name (GtkImage        *image,$/;"	p
gtk_image_set_from_icon_set	gtkimage.h	/^void gtk_image_set_from_icon_set  (GtkImage        *image,$/;"	p
gtk_image_set_from_image	gtkimage.h	/^void gtk_image_set_from_image     (GtkImage        *image,$/;"	p
gtk_image_set_from_pixbuf	gtkimage.h	/^void gtk_image_set_from_pixbuf    (GtkImage        *image,$/;"	p
gtk_image_set_from_pixmap	gtkimage.h	/^void gtk_image_set_from_pixmap    (GtkImage        *image,$/;"	p
gtk_image_set_from_stock	gtkimage.h	/^void gtk_image_set_from_stock     (GtkImage        *image,$/;"	p
gtk_image_set_pixel_size	gtkimage.h	/^void gtk_image_set_pixel_size     (GtkImage        *image,$/;"	p
gtk_info_bar_add_action_widget	gtkinfobar.h	/^void           gtk_info_bar_add_action_widget      (GtkInfoBar     *info_bar,$/;"	p
gtk_info_bar_add_button	gtkinfobar.h	/^GtkWidget     *gtk_info_bar_add_button             (GtkInfoBar     *info_bar,$/;"	p
gtk_info_bar_add_buttons	gtkinfobar.h	/^void           gtk_info_bar_add_buttons            (GtkInfoBar     *info_bar,$/;"	p
gtk_info_bar_get_action_area	gtkinfobar.h	/^GtkWidget     *gtk_info_bar_get_action_area        (GtkInfoBar     *info_bar);$/;"	p
gtk_info_bar_get_content_area	gtkinfobar.h	/^GtkWidget     *gtk_info_bar_get_content_area       (GtkInfoBar     *info_bar);$/;"	p
gtk_info_bar_get_message_type	gtkinfobar.h	/^GtkMessageType gtk_info_bar_get_message_type       (GtkInfoBar     *info_bar);$/;"	p
gtk_info_bar_new	gtkinfobar.h	/^GtkWidget     *gtk_info_bar_new                    (void);$/;"	p
gtk_info_bar_new_with_buttons	gtkinfobar.h	/^GtkWidget     *gtk_info_bar_new_with_buttons       (const gchar    *first_button_text,$/;"	p
gtk_info_bar_response	gtkinfobar.h	/^void           gtk_info_bar_response               (GtkInfoBar     *info_bar,$/;"	p
gtk_info_bar_set_default_response	gtkinfobar.h	/^void           gtk_info_bar_set_default_response   (GtkInfoBar     *info_bar,$/;"	p
gtk_info_bar_set_message_type	gtkinfobar.h	/^void           gtk_info_bar_set_message_type       (GtkInfoBar     *info_bar,$/;"	p
gtk_info_bar_set_response_sensitive	gtkinfobar.h	/^void           gtk_info_bar_set_response_sensitive (GtkInfoBar     *info_bar,$/;"	p
gtk_init	gtkmain.h	/^void     gtk_init                 (int    *argc,$/;"	p
gtk_init	gtkmain.h	125;"	d
gtk_init_abi_check	gtkmain.h	/^void	 gtk_init_abi_check       (int	  *argc,$/;"	p
gtk_init_add	gtkmain.h	/^void	   gtk_init_add		   (GtkFunction	       function,$/;"	p
gtk_init_check	gtkmain.h	/^gboolean gtk_init_check           (int    *argc,$/;"	p
gtk_init_check	gtkmain.h	126;"	d
gtk_init_check_abi_check	gtkmain.h	/^gboolean gtk_init_check_abi_check (int	  *argc,$/;"	p
gtk_init_with_args	gtkmain.h	/^gboolean gtk_init_with_args       (int            *argc,$/;"	p
gtk_input_add_full	gtkmain.h	/^guint	   gtk_input_add_full	   (gint	       source,$/;"	p
gtk_input_dialog_new	gtkinputdialog.h	/^GtkWidget* gtk_input_dialog_new          (void);$/;"	p
gtk_input_remove	gtkmain.h	/^void	   gtk_input_remove	   (guint	       input_handler_id);$/;"	p
gtk_interface_age	gtkmain.h	/^GTKMAIN_C_VAR const guint gtk_interface_age;$/;"	v
gtk_invisible_get_screen	gtkinvisible.h	/^GdkScreen* gtk_invisible_get_screen	(GtkInvisible *invisible);$/;"	p
gtk_invisible_new	gtkinvisible.h	/^GtkWidget* gtk_invisible_new            (void);$/;"	p
gtk_invisible_new_for_screen	gtkinvisible.h	/^GtkWidget* gtk_invisible_new_for_screen (GdkScreen    *screen);$/;"	p
gtk_invisible_set_screen	gtkinvisible.h	/^void	   gtk_invisible_set_screen	(GtkInvisible *invisible,$/;"	p
gtk_item_deselect	gtkitem.h	/^void  gtk_item_deselect (GtkItem *item);$/;"	p
gtk_item_factories_path_delete	gtkitemfactory.h	/^void	gtk_item_factories_path_delete	   (const gchar		*ifactory_path,$/;"	p
gtk_item_factory_add_foreign	gtkitemfactory.h	/^void		gtk_item_factory_add_foreign        (GtkWidget	    *accel_widget,$/;"	p
gtk_item_factory_construct	gtkitemfactory.h	/^void		gtk_item_factory_construct (GtkItemFactory	*ifactory,$/;"	p
gtk_item_factory_create_item	gtkitemfactory.h	/^void	gtk_item_factory_create_item	(GtkItemFactory		*ifactory,$/;"	p
gtk_item_factory_create_items	gtkitemfactory.h	/^void	gtk_item_factory_create_items	(GtkItemFactory		*ifactory,$/;"	p
gtk_item_factory_create_items_ac	gtkitemfactory.h	/^void	gtk_item_factory_create_items_ac (GtkItemFactory	*ifactory,$/;"	p
gtk_item_factory_create_menu_entries	gtkitemfactory.h	/^void	gtk_item_factory_create_menu_entries (guint		 n_entries,$/;"	p
gtk_item_factory_delete_entries	gtkitemfactory.h	/^void	gtk_item_factory_delete_entries	(GtkItemFactory		*ifactory,$/;"	p
gtk_item_factory_delete_entry	gtkitemfactory.h	/^void	gtk_item_factory_delete_entry	(GtkItemFactory		*ifactory,$/;"	p
gtk_item_factory_delete_item	gtkitemfactory.h	/^void	gtk_item_factory_delete_item	(GtkItemFactory		*ifactory,$/;"	p
gtk_item_factory_from_path	gtkitemfactory.h	/^GtkItemFactory*	gtk_item_factory_from_path   (const gchar       *path);$/;"	p
gtk_item_factory_from_widget	gtkitemfactory.h	/^GtkItemFactory*       gtk_item_factory_from_widget      (GtkWidget *widget);$/;"	p
gtk_item_factory_get_item	gtkitemfactory.h	/^GtkWidget*	gtk_item_factory_get_item	      (GtkItemFactory *ifactory,$/;"	p
gtk_item_factory_get_item_by_action	gtkitemfactory.h	/^GtkWidget*	gtk_item_factory_get_item_by_action   (GtkItemFactory *ifactory,$/;"	p
gtk_item_factory_get_widget	gtkitemfactory.h	/^GtkWidget*	gtk_item_factory_get_widget	      (GtkItemFactory *ifactory,$/;"	p
gtk_item_factory_get_widget_by_action	gtkitemfactory.h	/^GtkWidget*	gtk_item_factory_get_widget_by_action (GtkItemFactory *ifactory,$/;"	p
gtk_item_factory_new	gtkitemfactory.h	/^GtkItemFactory*	gtk_item_factory_new	   (GType		 container_type,$/;"	p
gtk_item_factory_path_from_widget	gtkitemfactory.h	/^const gchar *         gtk_item_factory_path_from_widget (GtkWidget *widget);$/;"	p
gtk_item_factory_popup	gtkitemfactory.h	/^void	gtk_item_factory_popup		(GtkItemFactory		*ifactory,$/;"	p
gtk_item_factory_popup_data	gtkitemfactory.h	/^gpointer gtk_item_factory_popup_data	(GtkItemFactory		*ifactory);$/;"	p
gtk_item_factory_popup_data_from_widget	gtkitemfactory.h	/^gpointer gtk_item_factory_popup_data_from_widget (GtkWidget	*widget);$/;"	p
gtk_item_factory_popup_with_data	gtkitemfactory.h	/^void	gtk_item_factory_popup_with_data(GtkItemFactory		*ifactory,$/;"	p
gtk_item_factory_set_translate_func	gtkitemfactory.h	/^void   gtk_item_factory_set_translate_func (GtkItemFactory      *ifactory,$/;"	p
gtk_item_select	gtkitem.h	/^void  gtk_item_select   (GtkItem *item);$/;"	p
gtk_item_toggle	gtkitem.h	/^void  gtk_item_toggle   (GtkItem *item);$/;"	p
gtk_key_snooper_install	gtkmain.h	/^guint	   gtk_key_snooper_install (GtkKeySnoopFunc snooper,$/;"	p
gtk_key_snooper_remove	gtkmain.h	/^void	   gtk_key_snooper_remove  (guint	    snooper_handler_id);$/;"	p
gtk_label_get	gtklabel.h	/^void       gtk_label_get           (GtkLabel          *label,$/;"	p
gtk_label_get_angle	gtklabel.h	/^gdouble  gtk_label_get_angle                      (GtkLabel         *label);$/;"	p
gtk_label_get_attributes	gtklabel.h	/^PangoAttrList        *gtk_label_get_attributes    (GtkLabel      *label);$/;"	p
gtk_label_get_current_uri	gtklabel.h	/^const gchar *gtk_label_get_current_uri          (GtkLabel *label);$/;"	p
gtk_label_get_ellipsize	gtklabel.h	/^PangoEllipsizeMode gtk_label_get_ellipsize        (GtkLabel         *label);$/;"	p
gtk_label_get_justify	gtklabel.h	/^GtkJustification gtk_label_get_justify            (GtkLabel         *label);$/;"	p
gtk_label_get_label	gtklabel.h	/^const gchar *         gtk_label_get_label         (GtkLabel      *label);$/;"	p
gtk_label_get_layout	gtklabel.h	/^PangoLayout *gtk_label_get_layout         (GtkLabel *label);$/;"	p
gtk_label_get_layout_offsets	gtklabel.h	/^void         gtk_label_get_layout_offsets (GtkLabel *label,$/;"	p
gtk_label_get_line_wrap	gtklabel.h	/^gboolean gtk_label_get_line_wrap                  (GtkLabel         *label);$/;"	p
gtk_label_get_line_wrap_mode	gtklabel.h	/^PangoWrapMode gtk_label_get_line_wrap_mode        (GtkLabel         *label);$/;"	p
gtk_label_get_max_width_chars	gtklabel.h	/^gint     gtk_label_get_max_width_chars  	  (GtkLabel         *label);$/;"	p
gtk_label_get_mnemonic_keyval	gtklabel.h	/^guint    gtk_label_get_mnemonic_keyval            (GtkLabel         *label);$/;"	p
gtk_label_get_mnemonic_widget	gtklabel.h	/^GtkWidget *gtk_label_get_mnemonic_widget          (GtkLabel         *label);$/;"	p
gtk_label_get_selectable	gtklabel.h	/^gboolean gtk_label_get_selectable                 (GtkLabel         *label);$/;"	p
gtk_label_get_selection_bounds	gtklabel.h	/^gboolean gtk_label_get_selection_bounds           (GtkLabel         *label,$/;"	p
gtk_label_get_single_line_mode	gtklabel.h	/^gboolean     gtk_label_get_single_line_mode  (GtkLabel *label);$/;"	p
gtk_label_get_text	gtklabel.h	/^const gchar *         gtk_label_get_text          (GtkLabel      *label);$/;"	p
gtk_label_get_track_visited_links	gtklabel.h	/^gboolean     gtk_label_get_track_visited_links  (GtkLabel *label);$/;"	p
gtk_label_get_use_markup	gtklabel.h	/^gboolean              gtk_label_get_use_markup    (GtkLabel      *label);$/;"	p
gtk_label_get_use_underline	gtklabel.h	/^gboolean              gtk_label_get_use_underline (GtkLabel      *label);$/;"	p
gtk_label_get_width_chars	gtklabel.h	/^gint     gtk_label_get_width_chars                (GtkLabel         *label);$/;"	p
gtk_label_new	gtklabel.h	/^GtkWidget*            gtk_label_new               (const gchar   *str);$/;"	p
gtk_label_new_with_mnemonic	gtklabel.h	/^GtkWidget*            gtk_label_new_with_mnemonic (const gchar   *str);$/;"	p
gtk_label_parse_uline	gtklabel.h	/^guint gtk_label_parse_uline            (GtkLabel    *label,$/;"	p
gtk_label_select_region	gtklabel.h	/^void     gtk_label_select_region                  (GtkLabel         *label,$/;"	p
gtk_label_set	gtklabel.h	187;"	d
gtk_label_set_angle	gtklabel.h	/^void     gtk_label_set_angle                      (GtkLabel         *label,$/;"	p
gtk_label_set_attributes	gtklabel.h	/^void                  gtk_label_set_attributes    (GtkLabel      *label,$/;"	p
gtk_label_set_ellipsize	gtklabel.h	/^void     gtk_label_set_ellipsize		  (GtkLabel         *label,$/;"	p
gtk_label_set_justify	gtklabel.h	/^void     gtk_label_set_justify                    (GtkLabel         *label,$/;"	p
gtk_label_set_label	gtklabel.h	/^void                  gtk_label_set_label         (GtkLabel      *label,$/;"	p
gtk_label_set_line_wrap	gtklabel.h	/^void     gtk_label_set_line_wrap                  (GtkLabel         *label,$/;"	p
gtk_label_set_line_wrap_mode	gtklabel.h	/^void     gtk_label_set_line_wrap_mode             (GtkLabel         *label,$/;"	p
gtk_label_set_markup	gtklabel.h	/^void                  gtk_label_set_markup        (GtkLabel      *label,$/;"	p
gtk_label_set_markup_with_mnemonic	gtklabel.h	/^void     gtk_label_set_markup_with_mnemonic       (GtkLabel         *label,$/;"	p
gtk_label_set_max_width_chars	gtklabel.h	/^void     gtk_label_set_max_width_chars    	  (GtkLabel         *label,$/;"	p
gtk_label_set_mnemonic_widget	gtklabel.h	/^void     gtk_label_set_mnemonic_widget            (GtkLabel         *label,$/;"	p
gtk_label_set_pattern	gtklabel.h	/^void     gtk_label_set_pattern                    (GtkLabel         *label,$/;"	p
gtk_label_set_selectable	gtklabel.h	/^void     gtk_label_set_selectable                 (GtkLabel         *label,$/;"	p
gtk_label_set_single_line_mode	gtklabel.h	/^void         gtk_label_set_single_line_mode  (GtkLabel *label,$/;"	p
gtk_label_set_text	gtklabel.h	/^void                  gtk_label_set_text          (GtkLabel      *label,$/;"	p
gtk_label_set_text_with_mnemonic	gtklabel.h	/^void     gtk_label_set_text_with_mnemonic         (GtkLabel         *label,$/;"	p
gtk_label_set_track_visited_links	gtklabel.h	/^void         gtk_label_set_track_visited_links  (GtkLabel *label,$/;"	p
gtk_label_set_use_markup	gtklabel.h	/^void                  gtk_label_set_use_markup    (GtkLabel      *label,$/;"	p
gtk_label_set_use_underline	gtklabel.h	/^void                  gtk_label_set_use_underline (GtkLabel      *label,$/;"	p
gtk_label_set_width_chars	gtklabel.h	/^void     gtk_label_set_width_chars		  (GtkLabel         *label,$/;"	p
gtk_layout_freeze	gtklayout.h	/^void           gtk_layout_freeze          (GtkLayout     *layout);$/;"	p
gtk_layout_get_bin_window	gtklayout.h	/^GdkWindow*     gtk_layout_get_bin_window  (GtkLayout     *layout);$/;"	p
gtk_layout_get_hadjustment	gtklayout.h	/^GtkAdjustment* gtk_layout_get_hadjustment (GtkLayout     *layout);$/;"	p
gtk_layout_get_size	gtklayout.h	/^void           gtk_layout_get_size        (GtkLayout     *layout,$/;"	p
gtk_layout_get_vadjustment	gtklayout.h	/^GtkAdjustment* gtk_layout_get_vadjustment (GtkLayout     *layout);$/;"	p
gtk_layout_move	gtklayout.h	/^void           gtk_layout_move            (GtkLayout     *layout,$/;"	p
gtk_layout_new	gtklayout.h	/^GtkWidget*     gtk_layout_new             (GtkAdjustment *hadjustment,$/;"	p
gtk_layout_put	gtklayout.h	/^void           gtk_layout_put             (GtkLayout     *layout,$/;"	p
gtk_layout_set_hadjustment	gtklayout.h	/^void           gtk_layout_set_hadjustment (GtkLayout     *layout,$/;"	p
gtk_layout_set_size	gtklayout.h	/^void           gtk_layout_set_size        (GtkLayout     *layout,$/;"	p
gtk_layout_set_vadjustment	gtklayout.h	/^void           gtk_layout_set_vadjustment (GtkLayout     *layout,$/;"	p
gtk_layout_thaw	gtklayout.h	/^void           gtk_layout_thaw            (GtkLayout     *layout);$/;"	p
gtk_link_button_get_uri	gtklinkbutton.h	/^const gchar *         gtk_link_button_get_uri           (GtkLinkButton *link_button);$/;"	p
gtk_link_button_get_visited	gtklinkbutton.h	/^gboolean              gtk_link_button_get_visited       (GtkLinkButton *link_button);$/;"	p
gtk_link_button_new	gtklinkbutton.h	/^GtkWidget *           gtk_link_button_new               (const gchar   *uri);$/;"	p
gtk_link_button_new_with_label	gtklinkbutton.h	/^GtkWidget *           gtk_link_button_new_with_label    (const gchar   *uri,$/;"	p
gtk_link_button_set_uri	gtklinkbutton.h	/^void                  gtk_link_button_set_uri           (GtkLinkButton *link_button,$/;"	p
gtk_link_button_set_uri_hook	gtklinkbutton.h	/^GtkLinkButtonUriFunc  gtk_link_button_set_uri_hook      (GtkLinkButtonUriFunc func,$/;"	p
gtk_link_button_set_visited	gtklinkbutton.h	/^void                  gtk_link_button_set_visited       (GtkLinkButton *link_button,$/;"	p
gtk_list_append_items	gtklist.h	/^void	   gtk_list_append_items	  (GtkList	    *list,$/;"	p
gtk_list_child_position	gtklist.h	/^gint	   gtk_list_child_position	  (GtkList	    *list,$/;"	p
gtk_list_clear_items	gtklist.h	/^void	   gtk_list_clear_items		  (GtkList	    *list,$/;"	p
gtk_list_end_drag_selection	gtklist.h	/^void       gtk_list_end_drag_selection    (GtkList          *list);$/;"	p
gtk_list_end_selection	gtklist.h	/^void       gtk_list_end_selection         (GtkList          *list);$/;"	p
gtk_list_extend_selection	gtklist.h	/^void       gtk_list_extend_selection      (GtkList          *list,$/;"	p
gtk_list_insert_items	gtklist.h	/^void	   gtk_list_insert_items	  (GtkList	    *list,$/;"	p
gtk_list_item_deselect	gtklistitem.h	/^void       gtk_list_item_deselect       (GtkListItem      *list_item);$/;"	p
gtk_list_item_new	gtklistitem.h	/^GtkWidget* gtk_list_item_new            (void);$/;"	p
gtk_list_item_new_with_label	gtklistitem.h	/^GtkWidget* gtk_list_item_new_with_label (const gchar      *label);$/;"	p
gtk_list_item_select	gtklistitem.h	/^void       gtk_list_item_select         (GtkListItem      *list_item);$/;"	p
gtk_list_new	gtklist.h	/^GtkWidget* gtk_list_new			  (void);$/;"	p
gtk_list_prepend_items	gtklist.h	/^void	   gtk_list_prepend_items	  (GtkList	    *list,$/;"	p
gtk_list_remove_items	gtklist.h	/^void	   gtk_list_remove_items	  (GtkList	    *list,$/;"	p
gtk_list_remove_items_no_unref	gtklist.h	/^void	   gtk_list_remove_items_no_unref (GtkList	    *list,$/;"	p
gtk_list_scroll_horizontal	gtklist.h	/^void       gtk_list_scroll_horizontal     (GtkList          *list,$/;"	p
gtk_list_scroll_vertical	gtklist.h	/^void       gtk_list_scroll_vertical       (GtkList          *list,$/;"	p
gtk_list_select_all	gtklist.h	/^void       gtk_list_select_all            (GtkList          *list);$/;"	p
gtk_list_select_child	gtklist.h	/^void	   gtk_list_select_child	  (GtkList	    *list,$/;"	p
gtk_list_select_item	gtklist.h	/^void	   gtk_list_select_item		  (GtkList	    *list,$/;"	p
gtk_list_set_selection_mode	gtklist.h	/^void	   gtk_list_set_selection_mode	  (GtkList	    *list,$/;"	p
gtk_list_start_selection	gtklist.h	/^void       gtk_list_start_selection       (GtkList          *list);$/;"	p
gtk_list_store_append	gtkliststore.h	/^void          gtk_list_store_append           (GtkListStore *list_store,$/;"	p
gtk_list_store_clear	gtkliststore.h	/^void          gtk_list_store_clear            (GtkListStore *list_store);$/;"	p
gtk_list_store_insert	gtkliststore.h	/^void          gtk_list_store_insert           (GtkListStore *list_store,$/;"	p
gtk_list_store_insert_after	gtkliststore.h	/^void          gtk_list_store_insert_after     (GtkListStore *list_store,$/;"	p
gtk_list_store_insert_before	gtkliststore.h	/^void          gtk_list_store_insert_before    (GtkListStore *list_store,$/;"	p
gtk_list_store_insert_with_values	gtkliststore.h	/^void          gtk_list_store_insert_with_values  (GtkListStore *list_store,$/;"	p
gtk_list_store_insert_with_valuesv	gtkliststore.h	/^void          gtk_list_store_insert_with_valuesv (GtkListStore *list_store,$/;"	p
gtk_list_store_iter_is_valid	gtkliststore.h	/^gboolean      gtk_list_store_iter_is_valid    (GtkListStore *list_store,$/;"	p
gtk_list_store_move_after	gtkliststore.h	/^void          gtk_list_store_move_after       (GtkListStore *store,$/;"	p
gtk_list_store_move_before	gtkliststore.h	/^void          gtk_list_store_move_before      (GtkListStore *store,$/;"	p
gtk_list_store_new	gtkliststore.h	/^GtkListStore *gtk_list_store_new              (gint          n_columns,$/;"	p
gtk_list_store_newv	gtkliststore.h	/^GtkListStore *gtk_list_store_newv             (gint          n_columns,$/;"	p
gtk_list_store_prepend	gtkliststore.h	/^void          gtk_list_store_prepend          (GtkListStore *list_store,$/;"	p
gtk_list_store_remove	gtkliststore.h	/^gboolean      gtk_list_store_remove           (GtkListStore *list_store,$/;"	p
gtk_list_store_reorder	gtkliststore.h	/^void          gtk_list_store_reorder          (GtkListStore *store,$/;"	p
gtk_list_store_set	gtkliststore.h	/^void          gtk_list_store_set              (GtkListStore *list_store,$/;"	p
gtk_list_store_set_column_types	gtkliststore.h	/^void          gtk_list_store_set_column_types (GtkListStore *list_store,$/;"	p
gtk_list_store_set_valist	gtkliststore.h	/^void          gtk_list_store_set_valist       (GtkListStore *list_store,$/;"	p
gtk_list_store_set_value	gtkliststore.h	/^void          gtk_list_store_set_value        (GtkListStore *list_store,$/;"	p
gtk_list_store_set_valuesv	gtkliststore.h	/^void          gtk_list_store_set_valuesv      (GtkListStore *list_store,$/;"	p
gtk_list_store_swap	gtkliststore.h	/^void          gtk_list_store_swap             (GtkListStore *store,$/;"	p
gtk_list_toggle_add_mode	gtklist.h	/^void       gtk_list_toggle_add_mode       (GtkList          *list);$/;"	p
gtk_list_toggle_focus_row	gtklist.h	/^void       gtk_list_toggle_focus_row      (GtkList          *list);$/;"	p
gtk_list_toggle_row	gtklist.h	/^void       gtk_list_toggle_row            (GtkList          *list,$/;"	p
gtk_list_undo_selection	gtklist.h	/^void       gtk_list_undo_selection        (GtkList          *list);$/;"	p
gtk_list_unselect_all	gtklist.h	/^void       gtk_list_unselect_all          (GtkList          *list);$/;"	p
gtk_list_unselect_child	gtklist.h	/^void	   gtk_list_unselect_child	  (GtkList	    *list,$/;"	p
gtk_list_unselect_item	gtklist.h	/^void	   gtk_list_unselect_item	  (GtkList	    *list,$/;"	p
gtk_main	gtkmain.h	/^void	   gtk_main		   (void);$/;"	p
gtk_main_do_event	gtkmain.h	/^void 	   gtk_main_do_event	   (GdkEvent           *event);$/;"	p
gtk_main_iteration	gtkmain.h	/^gboolean   gtk_main_iteration	   (void);$/;"	p
gtk_main_iteration_do	gtkmain.h	/^gboolean   gtk_main_iteration_do   (gboolean blocking);$/;"	p
gtk_main_level	gtkmain.h	/^guint	   gtk_main_level	   (void);$/;"	p
gtk_main_quit	gtkmain.h	/^void	   gtk_main_quit	   (void);$/;"	p
gtk_major_version	gtkmain.h	/^GTKMAIN_C_VAR const guint gtk_major_version;$/;"	v
gtk_marshal_BOOLEAN__POINTER	gtkmarshal.h	/^extern void gtk_marshal_BOOLEAN__POINTER (GClosure     *closure,$/;"	p
gtk_marshal_BOOLEAN__POINTER_INT_INT	gtkmarshal.h	/^extern void gtk_marshal_BOOLEAN__POINTER_INT_INT (GClosure     *closure,$/;"	p
gtk_marshal_BOOLEAN__POINTER_INT_INT_UINT	gtkmarshal.h	/^extern void gtk_marshal_BOOLEAN__POINTER_INT_INT_UINT (GClosure     *closure,$/;"	p
gtk_marshal_BOOLEAN__POINTER_POINTER_INT_INT	gtkmarshal.h	/^extern void gtk_marshal_BOOLEAN__POINTER_POINTER_INT_INT (GClosure     *closure,$/;"	p
gtk_marshal_BOOLEAN__POINTER_STRING_STRING_POINTER	gtkmarshal.h	/^extern void gtk_marshal_BOOLEAN__POINTER_STRING_STRING_POINTER (GClosure     *closure,$/;"	p
gtk_marshal_BOOLEAN__VOID	gtkmarshal.h	/^extern void gtk_marshal_BOOLEAN__VOID (GClosure     *closure,$/;"	p
gtk_marshal_BOOL__NONE	gtkmarshal.h	17;"	d
gtk_marshal_BOOL__POINTER	gtkmarshal.h	26;"	d
gtk_marshal_BOOL__POINTER_INT_INT	gtkmarshal.h	44;"	d
gtk_marshal_BOOL__POINTER_INT_INT_UINT	gtkmarshal.h	53;"	d
gtk_marshal_BOOL__POINTER_POINTER_INT_INT	gtkmarshal.h	35;"	d
gtk_marshal_BOOL__POINTER_STRING_STRING_POINTER	gtkmarshal.h	62;"	d
gtk_marshal_ENUM__ENUM	gtkmarshal.h	/^extern void gtk_marshal_ENUM__ENUM (GClosure     *closure,$/;"	p
gtk_marshal_INT__POINTER	gtkmarshal.h	/^extern void gtk_marshal_INT__POINTER (GClosure     *closure,$/;"	p
gtk_marshal_INT__POINTER_CHAR_CHAR	gtkmarshal.h	/^extern void gtk_marshal_INT__POINTER_CHAR_CHAR (GClosure     *closure,$/;"	p
gtk_marshal_NONE__BOOL	gtkmarshal.h	90;"	d
gtk_marshal_NONE__BOXED	gtkmarshal.h	94;"	d
gtk_marshal_NONE__ENUM	gtkmarshal.h	98;"	d
gtk_marshal_NONE__ENUM_FLOAT	gtkmarshal.h	107;"	d
gtk_marshal_NONE__ENUM_FLOAT_BOOL	gtkmarshal.h	116;"	d
gtk_marshal_NONE__INT	gtkmarshal.h	120;"	d
gtk_marshal_NONE__INT_INT	gtkmarshal.h	129;"	d
gtk_marshal_NONE__INT_INT_POINTER	gtkmarshal.h	138;"	d
gtk_marshal_NONE__NONE	gtkmarshal.h	142;"	d
gtk_marshal_NONE__OBJECT	gtkmarshal.h	146;"	d
gtk_marshal_NONE__POINTER	gtkmarshal.h	150;"	d
gtk_marshal_NONE__POINTER_INT	gtkmarshal.h	159;"	d
gtk_marshal_NONE__POINTER_INT_INT_POINTER_UINT_UINT	gtkmarshal.h	222;"	d
gtk_marshal_NONE__POINTER_POINTER	gtkmarshal.h	168;"	d
gtk_marshal_NONE__POINTER_POINTER_POINTER	gtkmarshal.h	177;"	d
gtk_marshal_NONE__POINTER_POINTER_UINT_UINT	gtkmarshal.h	213;"	d
gtk_marshal_NONE__POINTER_STRING_STRING	gtkmarshal.h	186;"	d
gtk_marshal_NONE__POINTER_UINT	gtkmarshal.h	195;"	d
gtk_marshal_NONE__POINTER_UINT_ENUM	gtkmarshal.h	204;"	d
gtk_marshal_NONE__POINTER_UINT_UINT	gtkmarshal.h	231;"	d
gtk_marshal_NONE__STRING	gtkmarshal.h	237;"	d
gtk_marshal_NONE__STRING_INT_POINTER	gtkmarshal.h	246;"	d
gtk_marshal_NONE__UINT	gtkmarshal.h	250;"	d
gtk_marshal_NONE__UINT_POINTER_UINT_ENUM_ENUM_POINTER	gtkmarshal.h	259;"	d
gtk_marshal_NONE__UINT_POINTER_UINT_UINT_ENUM	gtkmarshal.h	268;"	d
gtk_marshal_NONE__UINT_STRING	gtkmarshal.h	277;"	d
gtk_marshal_VOID__BOOLEAN	gtkmarshal.h	89;"	d
gtk_marshal_VOID__BOXED	gtkmarshal.h	93;"	d
gtk_marshal_VOID__ENUM	gtkmarshal.h	97;"	d
gtk_marshal_VOID__ENUM_FLOAT	gtkmarshal.h	/^extern void gtk_marshal_VOID__ENUM_FLOAT (GClosure     *closure,$/;"	p
gtk_marshal_VOID__ENUM_FLOAT_BOOLEAN	gtkmarshal.h	/^extern void gtk_marshal_VOID__ENUM_FLOAT_BOOLEAN (GClosure     *closure,$/;"	p
gtk_marshal_VOID__INT	gtkmarshal.h	119;"	d
gtk_marshal_VOID__INT_INT	gtkmarshal.h	/^extern void gtk_marshal_VOID__INT_INT (GClosure     *closure,$/;"	p
gtk_marshal_VOID__INT_INT_POINTER	gtkmarshal.h	/^extern void gtk_marshal_VOID__INT_INT_POINTER (GClosure     *closure,$/;"	p
gtk_marshal_VOID__OBJECT	gtkmarshal.h	145;"	d
gtk_marshal_VOID__POINTER	gtkmarshal.h	149;"	d
gtk_marshal_VOID__POINTER_INT	gtkmarshal.h	/^extern void gtk_marshal_VOID__POINTER_INT (GClosure     *closure,$/;"	p
gtk_marshal_VOID__POINTER_INT_INT_POINTER_UINT_UINT	gtkmarshal.h	/^extern void gtk_marshal_VOID__POINTER_INT_INT_POINTER_UINT_UINT (GClosure     *closure,$/;"	p
gtk_marshal_VOID__POINTER_POINTER	gtkmarshal.h	/^extern void gtk_marshal_VOID__POINTER_POINTER (GClosure     *closure,$/;"	p
gtk_marshal_VOID__POINTER_POINTER_POINTER	gtkmarshal.h	/^extern void gtk_marshal_VOID__POINTER_POINTER_POINTER (GClosure     *closure,$/;"	p
gtk_marshal_VOID__POINTER_POINTER_UINT_UINT	gtkmarshal.h	/^extern void gtk_marshal_VOID__POINTER_POINTER_UINT_UINT (GClosure     *closure,$/;"	p
gtk_marshal_VOID__POINTER_STRING_STRING	gtkmarshal.h	/^extern void gtk_marshal_VOID__POINTER_STRING_STRING (GClosure     *closure,$/;"	p
gtk_marshal_VOID__POINTER_UINT	gtkmarshal.h	/^extern void gtk_marshal_VOID__POINTER_UINT (GClosure     *closure,$/;"	p
gtk_marshal_VOID__POINTER_UINT_ENUM	gtkmarshal.h	/^extern void gtk_marshal_VOID__POINTER_UINT_ENUM (GClosure     *closure,$/;"	p
gtk_marshal_VOID__POINTER_UINT_UINT	gtkmarshal.h	/^extern void gtk_marshal_VOID__POINTER_UINT_UINT (GClosure     *closure,$/;"	p
gtk_marshal_VOID__STRING	gtkmarshal.h	236;"	d
gtk_marshal_VOID__STRING_INT_POINTER	gtkmarshal.h	/^extern void gtk_marshal_VOID__STRING_INT_POINTER (GClosure     *closure,$/;"	p
gtk_marshal_VOID__UINT	gtkmarshal.h	249;"	d
gtk_marshal_VOID__UINT_POINTER_UINT_ENUM_ENUM_POINTER	gtkmarshal.h	/^extern void gtk_marshal_VOID__UINT_POINTER_UINT_ENUM_ENUM_POINTER (GClosure     *closure,$/;"	p
gtk_marshal_VOID__UINT_POINTER_UINT_UINT_ENUM	gtkmarshal.h	/^extern void gtk_marshal_VOID__UINT_POINTER_UINT_UINT_ENUM (GClosure     *closure,$/;"	p
gtk_marshal_VOID__UINT_STRING	gtkmarshal.h	/^extern void gtk_marshal_VOID__UINT_STRING (GClosure     *closure,$/;"	p
gtk_marshal_VOID__VOID	gtkmarshal.h	141;"	d
gtk_menu_append	gtkmenu.h	207;"	d
gtk_menu_attach	gtkmenu.h	/^void       gtk_menu_attach                (GtkMenu             *menu,$/;"	p
gtk_menu_attach_to_widget	gtkmenu.h	/^void	   gtk_menu_attach_to_widget	  (GtkMenu	       *menu,$/;"	p
gtk_menu_bar_append	gtkmenubar.h	79;"	d
gtk_menu_bar_get_child_pack_direction	gtkmenubar.h	/^GtkPackDirection gtk_menu_bar_get_child_pack_direction (GtkMenuBar       *menubar);$/;"	p
gtk_menu_bar_get_pack_direction	gtkmenubar.h	/^GtkPackDirection gtk_menu_bar_get_pack_direction (GtkMenuBar       *menubar);$/;"	p
gtk_menu_bar_insert	gtkmenubar.h	81;"	d
gtk_menu_bar_new	gtkmenubar.h	/^GtkWidget* gtk_menu_bar_new             (void);$/;"	p
gtk_menu_bar_prepend	gtkmenubar.h	80;"	d
gtk_menu_bar_set_child_pack_direction	gtkmenubar.h	/^void             gtk_menu_bar_set_child_pack_direction (GtkMenuBar       *menubar,$/;"	p
gtk_menu_bar_set_pack_direction	gtkmenubar.h	/^void             gtk_menu_bar_set_pack_direction (GtkMenuBar       *menubar,$/;"	p
gtk_menu_detach	gtkmenu.h	/^void	   gtk_menu_detach		  (GtkMenu	       *menu);$/;"	p
gtk_menu_get_accel_group	gtkmenu.h	/^GtkAccelGroup* gtk_menu_get_accel_group	  (GtkMenu	       *menu);$/;"	p
gtk_menu_get_accel_path	gtkmenu.h	/^const gchar*   gtk_menu_get_accel_path    (GtkMenu             *menu);$/;"	p
gtk_menu_get_active	gtkmenu.h	/^GtkWidget* gtk_menu_get_active		  (GtkMenu	       *menu);$/;"	p
gtk_menu_get_attach_widget	gtkmenu.h	/^GtkWidget* gtk_menu_get_attach_widget	  (GtkMenu	       *menu);$/;"	p
gtk_menu_get_for_attach_widget	gtkmenu.h	/^GList*     gtk_menu_get_for_attach_widget (GtkWidget           *widget); $/;"	p
gtk_menu_get_monitor	gtkmenu.h	/^gint       gtk_menu_get_monitor           (GtkMenu             *menu);$/;"	p
gtk_menu_get_reserve_toggle_size	gtkmenu.h	/^gboolean gtk_menu_get_reserve_toggle_size (GtkMenu  *menu);$/;"	p
gtk_menu_get_tearoff_state	gtkmenu.h	/^gboolean   gtk_menu_get_tearoff_state     (GtkMenu             *menu);$/;"	p
gtk_menu_get_title	gtkmenu.h	/^const gchar *gtk_menu_get_title           (GtkMenu             *menu);$/;"	p
gtk_menu_insert	gtkmenu.h	209;"	d
gtk_menu_item_activate	gtkmenuitem.h	/^void       gtk_menu_item_activate             (GtkMenuItem         *menu_item);$/;"	p
gtk_menu_item_deselect	gtkmenuitem.h	/^void       gtk_menu_item_deselect             (GtkMenuItem         *menu_item);$/;"	p
gtk_menu_item_get_accel_path	gtkmenuitem.h	/^const gchar* gtk_menu_item_get_accel_path     (GtkMenuItem    *menu_item);$/;"	p
gtk_menu_item_get_label	gtkmenuitem.h	/^const gchar *gtk_menu_item_get_label          (GtkMenuItem         *menu_item);$/;"	p
gtk_menu_item_get_right_justified	gtkmenuitem.h	/^gboolean   gtk_menu_item_get_right_justified  (GtkMenuItem         *menu_item);$/;"	p
gtk_menu_item_get_submenu	gtkmenuitem.h	/^GtkWidget* gtk_menu_item_get_submenu          (GtkMenuItem         *menu_item);$/;"	p
gtk_menu_item_get_use_underline	gtkmenuitem.h	/^gboolean   gtk_menu_item_get_use_underline    (GtkMenuItem         *menu_item);$/;"	p
gtk_menu_item_new	gtkmenuitem.h	/^GtkWidget* gtk_menu_item_new                  (void);$/;"	p
gtk_menu_item_new_with_label	gtkmenuitem.h	/^GtkWidget* gtk_menu_item_new_with_label       (const gchar         *label);$/;"	p
gtk_menu_item_new_with_mnemonic	gtkmenuitem.h	/^GtkWidget* gtk_menu_item_new_with_mnemonic    (const gchar         *label);$/;"	p
gtk_menu_item_remove_submenu	gtkmenuitem.h	/^void       gtk_menu_item_remove_submenu       (GtkMenuItem         *menu_item);$/;"	p
gtk_menu_item_right_justify	gtkmenuitem.h	140;"	d
gtk_menu_item_select	gtkmenuitem.h	/^void       gtk_menu_item_select               (GtkMenuItem         *menu_item);$/;"	p
gtk_menu_item_set_accel_path	gtkmenuitem.h	/^void	   gtk_menu_item_set_accel_path	      (GtkMenuItem	   *menu_item,$/;"	p
gtk_menu_item_set_label	gtkmenuitem.h	/^void       gtk_menu_item_set_label            (GtkMenuItem         *menu_item,$/;"	p
gtk_menu_item_set_right_justified	gtkmenuitem.h	/^void       gtk_menu_item_set_right_justified  (GtkMenuItem         *menu_item,$/;"	p
gtk_menu_item_set_submenu	gtkmenuitem.h	/^void       gtk_menu_item_set_submenu          (GtkMenuItem         *menu_item,$/;"	p
gtk_menu_item_set_use_underline	gtkmenuitem.h	/^void       gtk_menu_item_set_use_underline    (GtkMenuItem         *menu_item,$/;"	p
gtk_menu_item_toggle_size_allocate	gtkmenuitem.h	/^void       gtk_menu_item_toggle_size_allocate (GtkMenuItem         *menu_item,$/;"	p
gtk_menu_item_toggle_size_request	gtkmenuitem.h	/^void       gtk_menu_item_toggle_size_request  (GtkMenuItem         *menu_item,$/;"	p
gtk_menu_new	gtkmenu.h	/^GtkWidget* gtk_menu_new			  (void);$/;"	p
gtk_menu_popdown	gtkmenu.h	/^void	   gtk_menu_popdown		  (GtkMenu	       *menu);$/;"	p
gtk_menu_popup	gtkmenu.h	/^void	   gtk_menu_popup		  (GtkMenu	       *menu,$/;"	p
gtk_menu_prepend	gtkmenu.h	208;"	d
gtk_menu_reorder_child	gtkmenu.h	/^void       gtk_menu_reorder_child         (GtkMenu             *menu,$/;"	p
gtk_menu_reposition	gtkmenu.h	/^void	   gtk_menu_reposition		  (GtkMenu	       *menu);$/;"	p
gtk_menu_set_accel_group	gtkmenu.h	/^void	       gtk_menu_set_accel_group	  (GtkMenu	       *menu,$/;"	p
gtk_menu_set_accel_path	gtkmenu.h	/^void           gtk_menu_set_accel_path    (GtkMenu             *menu,$/;"	p
gtk_menu_set_active	gtkmenu.h	/^void	   gtk_menu_set_active		  (GtkMenu	       *menu,$/;"	p
gtk_menu_set_monitor	gtkmenu.h	/^void       gtk_menu_set_monitor           (GtkMenu             *menu,$/;"	p
gtk_menu_set_reserve_toggle_size	gtkmenu.h	/^void     gtk_menu_set_reserve_toggle_size (GtkMenu  *menu,$/;"	p
gtk_menu_set_screen	gtkmenu.h	/^void	   gtk_menu_set_screen		  (GtkMenu	       *menu,$/;"	p
gtk_menu_set_tearoff_state	gtkmenu.h	/^void       gtk_menu_set_tearoff_state     (GtkMenu             *menu,$/;"	p
gtk_menu_set_title	gtkmenu.h	/^void       gtk_menu_set_title             (GtkMenu             *menu,$/;"	p
gtk_menu_shell_activate_item	gtkmenushell.h	/^void  gtk_menu_shell_activate_item     (GtkMenuShell *menu_shell,$/;"	p
gtk_menu_shell_append	gtkmenushell.h	/^void  gtk_menu_shell_append            (GtkMenuShell *menu_shell,$/;"	p
gtk_menu_shell_cancel	gtkmenushell.h	/^void  gtk_menu_shell_cancel            (GtkMenuShell *menu_shell);$/;"	p
gtk_menu_shell_deactivate	gtkmenushell.h	/^void  gtk_menu_shell_deactivate        (GtkMenuShell *menu_shell);$/;"	p
gtk_menu_shell_deselect	gtkmenushell.h	/^void  gtk_menu_shell_deselect          (GtkMenuShell *menu_shell);$/;"	p
gtk_menu_shell_get_take_focus	gtkmenushell.h	/^gboolean gtk_menu_shell_get_take_focus (GtkMenuShell *menu_shell);$/;"	p
gtk_menu_shell_insert	gtkmenushell.h	/^void  gtk_menu_shell_insert            (GtkMenuShell *menu_shell,$/;"	p
gtk_menu_shell_prepend	gtkmenushell.h	/^void  gtk_menu_shell_prepend           (GtkMenuShell *menu_shell,$/;"	p
gtk_menu_shell_select_first	gtkmenushell.h	/^void  gtk_menu_shell_select_first      (GtkMenuShell *menu_shell,$/;"	p
gtk_menu_shell_select_item	gtkmenushell.h	/^void  gtk_menu_shell_select_item       (GtkMenuShell *menu_shell,$/;"	p
gtk_menu_shell_set_take_focus	gtkmenushell.h	/^void     gtk_menu_shell_set_take_focus (GtkMenuShell *menu_shell,$/;"	p
gtk_menu_tool_button_get_menu	gtkmenutoolbutton.h	/^GtkWidget    *gtk_menu_tool_button_get_menu       (GtkMenuToolButton *button);$/;"	p
gtk_menu_tool_button_new	gtkmenutoolbutton.h	/^GtkToolItem  *gtk_menu_tool_button_new            (GtkWidget   *icon_widget,$/;"	p
gtk_menu_tool_button_new_from_stock	gtkmenutoolbutton.h	/^GtkToolItem  *gtk_menu_tool_button_new_from_stock (const gchar *stock_id);$/;"	p
gtk_menu_tool_button_set_arrow_tooltip	gtkmenutoolbutton.h	/^void          gtk_menu_tool_button_set_arrow_tooltip (GtkMenuToolButton *button,$/;"	p
gtk_menu_tool_button_set_arrow_tooltip_markup	gtkmenutoolbutton.h	/^void          gtk_menu_tool_button_set_arrow_tooltip_markup (GtkMenuToolButton *button,$/;"	p
gtk_menu_tool_button_set_arrow_tooltip_text	gtkmenutoolbutton.h	/^void          gtk_menu_tool_button_set_arrow_tooltip_text   (GtkMenuToolButton *button,$/;"	p
gtk_menu_tool_button_set_menu	gtkmenutoolbutton.h	/^void          gtk_menu_tool_button_set_menu       (GtkMenuToolButton *button,$/;"	p
gtk_message_dialog_get_image	gtkmessagedialog.h	/^GtkWidget * gtk_message_dialog_get_image   (GtkMessageDialog *dialog);$/;"	p
gtk_message_dialog_get_message_area	gtkmessagedialog.h	/^GtkWidget *gtk_message_dialog_get_message_area (GtkMessageDialog *message_dialog);$/;"	p
gtk_message_dialog_set_image	gtkmessagedialog.h	/^void       gtk_message_dialog_set_image    (GtkMessageDialog *dialog,$/;"	p
gtk_message_dialog_set_markup	gtkmessagedialog.h	/^void       gtk_message_dialog_set_markup  (GtkMessageDialog *message_dialog,$/;"	p
gtk_micro_version	gtkmain.h	/^GTKMAIN_C_VAR const guint gtk_micro_version;$/;"	v
gtk_minor_version	gtkmain.h	/^GTKMAIN_C_VAR const guint gtk_minor_version;$/;"	v
gtk_misc_get_alignment	gtkmisc.h	/^void    gtk_misc_get_alignment (GtkMisc *misc,$/;"	p
gtk_misc_get_padding	gtkmisc.h	/^void    gtk_misc_get_padding   (GtkMisc *misc,$/;"	p
gtk_misc_set_alignment	gtkmisc.h	/^void	gtk_misc_set_alignment (GtkMisc *misc,$/;"	p
gtk_misc_set_padding	gtkmisc.h	/^void	gtk_misc_set_padding   (GtkMisc *misc,$/;"	p
gtk_mount_operation_get_parent	gtkmountoperation.h	/^GtkWindow *      gtk_mount_operation_get_parent (GtkMountOperation *op);$/;"	p
gtk_mount_operation_get_screen	gtkmountoperation.h	/^GdkScreen       *gtk_mount_operation_get_screen (GtkMountOperation *op);$/;"	p
gtk_mount_operation_get_type	gtkmountoperation.h	/^GType            gtk_mount_operation_get_type   (void);$/;"	p
gtk_mount_operation_is_showing	gtkmountoperation.h	/^gboolean         gtk_mount_operation_is_showing (GtkMountOperation *op);$/;"	p
gtk_mount_operation_new	gtkmountoperation.h	/^GMountOperation *gtk_mount_operation_new        (GtkWindow         *parent);$/;"	p
gtk_mount_operation_set_parent	gtkmountoperation.h	/^void             gtk_mount_operation_set_parent (GtkMountOperation *op,$/;"	p
gtk_mount_operation_set_screen	gtkmountoperation.h	/^void             gtk_mount_operation_set_screen (GtkMountOperation *op,$/;"	p
gtk_notebook_append_page	gtknotebook.h	/^gint gtk_notebook_append_page       (GtkNotebook *notebook,$/;"	p
gtk_notebook_append_page_menu	gtknotebook.h	/^gint gtk_notebook_append_page_menu  (GtkNotebook *notebook,$/;"	p
gtk_notebook_current_page	gtknotebook.h	311;"	d
gtk_notebook_get_action_widget	gtknotebook.h	/^GtkWidget* gtk_notebook_get_action_widget (GtkNotebook *notebook,$/;"	p
gtk_notebook_get_current_page	gtknotebook.h	/^gint       gtk_notebook_get_current_page (GtkNotebook *notebook);$/;"	p
gtk_notebook_get_group	gtknotebook.h	/^gpointer gtk_notebook_get_group            (GtkNotebook *notebook);$/;"	p
gtk_notebook_get_group_id	gtknotebook.h	/^gint gtk_notebook_get_group_id             (GtkNotebook *notebook);$/;"	p
gtk_notebook_get_group_name	gtknotebook.h	/^const gchar *gtk_notebook_get_group_name   (GtkNotebook *notebook);$/;"	p
gtk_notebook_get_menu_label	gtknotebook.h	/^GtkWidget * gtk_notebook_get_menu_label   (GtkNotebook *notebook,$/;"	p
gtk_notebook_get_menu_label_text	gtknotebook.h	/^const gchar *gtk_notebook_get_menu_label_text (GtkNotebook *notebook,$/;"	p
gtk_notebook_get_n_pages	gtknotebook.h	/^gint       gtk_notebook_get_n_pages      (GtkNotebook *notebook);$/;"	p
gtk_notebook_get_nth_page	gtknotebook.h	/^GtkWidget* gtk_notebook_get_nth_page     (GtkNotebook *notebook,$/;"	p
gtk_notebook_get_scrollable	gtknotebook.h	/^gboolean gtk_notebook_get_scrollable       (GtkNotebook     *notebook);$/;"	p
gtk_notebook_get_show_border	gtknotebook.h	/^gboolean gtk_notebook_get_show_border      (GtkNotebook     *notebook);$/;"	p
gtk_notebook_get_show_tabs	gtknotebook.h	/^gboolean gtk_notebook_get_show_tabs        (GtkNotebook     *notebook);$/;"	p
gtk_notebook_get_tab_detachable	gtknotebook.h	/^gboolean gtk_notebook_get_tab_detachable  (GtkNotebook *notebook,$/;"	p
gtk_notebook_get_tab_hborder	gtknotebook.h	/^guint16  gtk_notebook_get_tab_hborder      (GtkNotebook     *notebook);$/;"	p
gtk_notebook_get_tab_label	gtknotebook.h	/^GtkWidget * gtk_notebook_get_tab_label    (GtkNotebook *notebook,$/;"	p
gtk_notebook_get_tab_label_text	gtknotebook.h	/^const gchar *gtk_notebook_get_tab_label_text (GtkNotebook *notebook,$/;"	p
gtk_notebook_get_tab_pos	gtknotebook.h	/^GtkPositionType gtk_notebook_get_tab_pos   (GtkNotebook     *notebook);$/;"	p
gtk_notebook_get_tab_reorderable	gtknotebook.h	/^gboolean gtk_notebook_get_tab_reorderable (GtkNotebook *notebook,$/;"	p
gtk_notebook_get_tab_vborder	gtknotebook.h	/^guint16  gtk_notebook_get_tab_vborder      (GtkNotebook     *notebook);$/;"	p
gtk_notebook_insert_page	gtknotebook.h	/^gint gtk_notebook_insert_page       (GtkNotebook *notebook,$/;"	p
gtk_notebook_insert_page_menu	gtknotebook.h	/^gint gtk_notebook_insert_page_menu  (GtkNotebook *notebook,$/;"	p
gtk_notebook_new	gtknotebook.h	/^GtkWidget * gtk_notebook_new        (void);$/;"	p
gtk_notebook_next_page	gtknotebook.h	/^void       gtk_notebook_next_page        (GtkNotebook *notebook);$/;"	p
gtk_notebook_page_num	gtknotebook.h	/^gint       gtk_notebook_page_num         (GtkNotebook *notebook,$/;"	p
gtk_notebook_popup_disable	gtknotebook.h	/^void gtk_notebook_popup_disable (GtkNotebook *notebook);$/;"	p
gtk_notebook_popup_enable	gtknotebook.h	/^void gtk_notebook_popup_enable  (GtkNotebook *notebook);$/;"	p
gtk_notebook_prepend_page	gtknotebook.h	/^gint gtk_notebook_prepend_page      (GtkNotebook *notebook,$/;"	p
gtk_notebook_prepend_page_menu	gtknotebook.h	/^gint gtk_notebook_prepend_page_menu (GtkNotebook *notebook,$/;"	p
gtk_notebook_prev_page	gtknotebook.h	/^void       gtk_notebook_prev_page        (GtkNotebook *notebook);$/;"	p
gtk_notebook_query_tab_label_packing	gtknotebook.h	/^void gtk_notebook_query_tab_label_packing (GtkNotebook *notebook,$/;"	p
gtk_notebook_remove_page	gtknotebook.h	/^void gtk_notebook_remove_page       (GtkNotebook *notebook,$/;"	p
gtk_notebook_reorder_child	gtknotebook.h	/^void gtk_notebook_reorder_child           (GtkNotebook *notebook,$/;"	p
gtk_notebook_set_action_widget	gtknotebook.h	/^void       gtk_notebook_set_action_widget (GtkNotebook *notebook,$/;"	p
gtk_notebook_set_current_page	gtknotebook.h	/^void       gtk_notebook_set_current_page (GtkNotebook *notebook,$/;"	p
gtk_notebook_set_group	gtknotebook.h	/^void gtk_notebook_set_group                (GtkNotebook *notebook,$/;"	p
gtk_notebook_set_group_id	gtknotebook.h	/^void gtk_notebook_set_group_id             (GtkNotebook *notebook,$/;"	p
gtk_notebook_set_group_name	gtknotebook.h	/^void         gtk_notebook_set_group_name   (GtkNotebook *notebook,$/;"	p
gtk_notebook_set_homogeneous_tabs	gtknotebook.h	/^void     gtk_notebook_set_homogeneous_tabs (GtkNotebook     *notebook,$/;"	p
gtk_notebook_set_menu_label	gtknotebook.h	/^void gtk_notebook_set_menu_label          (GtkNotebook *notebook,$/;"	p
gtk_notebook_set_menu_label_text	gtknotebook.h	/^void gtk_notebook_set_menu_label_text     (GtkNotebook *notebook,$/;"	p
gtk_notebook_set_page	gtknotebook.h	312;"	d
gtk_notebook_set_scrollable	gtknotebook.h	/^void     gtk_notebook_set_scrollable       (GtkNotebook     *notebook,$/;"	p
gtk_notebook_set_show_border	gtknotebook.h	/^void     gtk_notebook_set_show_border      (GtkNotebook     *notebook,$/;"	p
gtk_notebook_set_show_tabs	gtknotebook.h	/^void     gtk_notebook_set_show_tabs        (GtkNotebook     *notebook,$/;"	p
gtk_notebook_set_tab_border	gtknotebook.h	/^void     gtk_notebook_set_tab_border       (GtkNotebook     *notebook,$/;"	p
gtk_notebook_set_tab_detachable	gtknotebook.h	/^void gtk_notebook_set_tab_detachable      (GtkNotebook *notebook,$/;"	p
gtk_notebook_set_tab_hborder	gtknotebook.h	/^void     gtk_notebook_set_tab_hborder      (GtkNotebook     *notebook,$/;"	p
gtk_notebook_set_tab_label	gtknotebook.h	/^void gtk_notebook_set_tab_label           (GtkNotebook *notebook,$/;"	p
gtk_notebook_set_tab_label_packing	gtknotebook.h	/^void gtk_notebook_set_tab_label_packing   (GtkNotebook *notebook,$/;"	p
gtk_notebook_set_tab_label_text	gtknotebook.h	/^void gtk_notebook_set_tab_label_text      (GtkNotebook *notebook,$/;"	p
gtk_notebook_set_tab_pos	gtknotebook.h	/^void     gtk_notebook_set_tab_pos          (GtkNotebook     *notebook,$/;"	p
gtk_notebook_set_tab_reorderable	gtknotebook.h	/^void gtk_notebook_set_tab_reorderable     (GtkNotebook *notebook,$/;"	p
gtk_notebook_set_tab_vborder	gtknotebook.h	/^void     gtk_notebook_set_tab_vborder      (GtkNotebook     *notebook,$/;"	p
gtk_notebook_set_window_creation_hook	gtknotebook.h	/^void gtk_notebook_set_window_creation_hook (GtkNotebookWindowCreationFunc  func,$/;"	p
gtk_object_add_arg_type	gtkobject.h	/^void	gtk_object_add_arg_type		(const gchar    *arg_name,$/;"	p
gtk_object_data_force_id	gtkobject.h	222;"	d
gtk_object_data_try_key	gtkobject.h	221;"	d
gtk_object_destroy	gtkobject.h	/^void gtk_object_destroy	  (GtkObject *object);$/;"	p
gtk_object_get_data	gtkobject.h	/^gpointer gtk_object_get_data	     (GtkObject	     *object,$/;"	p
gtk_object_get_data_by_id	gtkobject.h	/^gpointer gtk_object_get_data_by_id	(GtkObject	 *object,$/;"	p
gtk_object_get_user_data	gtkobject.h	/^gpointer gtk_object_get_user_data (GtkObject	*object);$/;"	p
gtk_object_new	gtkobject.h	/^GtkObject*	gtk_object_new		  (GType	       type,$/;"	p
gtk_object_ref	gtkobject.h	/^GtkObject*	gtk_object_ref		  (GtkObject	      *object);$/;"	p
gtk_object_remove_data	gtkobject.h	/^void	 gtk_object_remove_data	     (GtkObject	     *object,$/;"	p
gtk_object_remove_data_by_id	gtkobject.h	/^void  gtk_object_remove_data_by_id	(GtkObject	 *object,$/;"	p
gtk_object_remove_no_notify	gtkobject.h	/^void	 gtk_object_remove_no_notify (GtkObject	     *object,$/;"	p
gtk_object_remove_no_notify_by_id	gtkobject.h	/^void  gtk_object_remove_no_notify_by_id	(GtkObject	 *object,$/;"	p
gtk_object_set_data	gtkobject.h	/^void	 gtk_object_set_data	     (GtkObject	     *object,$/;"	p
gtk_object_set_data_by_id	gtkobject.h	/^void gtk_object_set_data_by_id		(GtkObject	 *object,$/;"	p
gtk_object_set_data_by_id_full	gtkobject.h	/^void gtk_object_set_data_by_id_full	(GtkObject	 *object,$/;"	p
gtk_object_set_data_full	gtkobject.h	/^void	 gtk_object_set_data_full    (GtkObject	     *object,$/;"	p
gtk_object_set_user_data	gtkobject.h	/^void	 gtk_object_set_user_data (GtkObject	*object,$/;"	p
gtk_object_sink	gtkobject.h	/^void gtk_object_sink	  (GtkObject *object);$/;"	p
gtk_object_unref	gtkobject.h	/^void		gtk_object_unref	  (GtkObject	      *object);$/;"	p
gtk_object_weakref	gtkobject.h	/^void gtk_object_weakref	  (GtkObject	    *object,$/;"	p
gtk_object_weakunref	gtkobject.h	/^void gtk_object_weakunref (GtkObject	    *object,$/;"	p
gtk_offscreen_window_get_pixbuf	gtkoffscreenwindow.h	/^GdkPixbuf *gtk_offscreen_window_get_pixbuf (GtkOffscreenWindow *offscreen);$/;"	p
gtk_offscreen_window_get_pixmap	gtkoffscreenwindow.h	/^GdkPixmap *gtk_offscreen_window_get_pixmap (GtkOffscreenWindow *offscreen);$/;"	p
gtk_offscreen_window_new	gtkoffscreenwindow.h	/^GtkWidget *gtk_offscreen_window_new        (void);$/;"	p
gtk_old_editable_changed	gtkoldeditable.h	/^void       gtk_old_editable_changed         (GtkOldEditable *old_editable);$/;"	p
gtk_old_editable_claim_selection	gtkoldeditable.h	/^void       gtk_old_editable_claim_selection (GtkOldEditable *old_editable,$/;"	p
gtk_option_menu_get_history	gtkoptionmenu.h	/^gint       gtk_option_menu_get_history (GtkOptionMenu *option_menu);$/;"	p
gtk_option_menu_get_menu	gtkoptionmenu.h	/^GtkWidget* gtk_option_menu_get_menu    (GtkOptionMenu *option_menu);$/;"	p
gtk_option_menu_new	gtkoptionmenu.h	/^GtkWidget* gtk_option_menu_new         (void);$/;"	p
gtk_option_menu_remove_menu	gtkoptionmenu.h	/^void       gtk_option_menu_remove_menu (GtkOptionMenu *option_menu);$/;"	p
gtk_option_menu_set_history	gtkoptionmenu.h	/^void       gtk_option_menu_set_history (GtkOptionMenu *option_menu,$/;"	p
gtk_option_menu_set_menu	gtkoptionmenu.h	/^void       gtk_option_menu_set_menu    (GtkOptionMenu *option_menu,$/;"	p
gtk_orientable_get_orientation	gtkorientable.h	/^GtkOrientation gtk_orientable_get_orientation (GtkOrientable  *orientable);$/;"	p
gtk_orientable_set_orientation	gtkorientable.h	/^void           gtk_orientable_set_orientation (GtkOrientable  *orientable,$/;"	p
gtk_page_setup_copy	gtkpagesetup.h	/^GtkPageSetup *     gtk_page_setup_copy              (GtkPageSetup       *other);$/;"	p
gtk_page_setup_get_bottom_margin	gtkpagesetup.h	/^gdouble            gtk_page_setup_get_bottom_margin (GtkPageSetup       *setup,$/;"	p
gtk_page_setup_get_left_margin	gtkpagesetup.h	/^gdouble            gtk_page_setup_get_left_margin   (GtkPageSetup       *setup,$/;"	p
gtk_page_setup_get_orientation	gtkpagesetup.h	/^GtkPageOrientation gtk_page_setup_get_orientation   (GtkPageSetup       *setup);$/;"	p
gtk_page_setup_get_page_height	gtkpagesetup.h	/^gdouble            gtk_page_setup_get_page_height   (GtkPageSetup       *setup,$/;"	p
gtk_page_setup_get_page_width	gtkpagesetup.h	/^gdouble            gtk_page_setup_get_page_width    (GtkPageSetup       *setup,$/;"	p
gtk_page_setup_get_paper_height	gtkpagesetup.h	/^gdouble            gtk_page_setup_get_paper_height  (GtkPageSetup       *setup,$/;"	p
gtk_page_setup_get_paper_size	gtkpagesetup.h	/^GtkPaperSize *     gtk_page_setup_get_paper_size    (GtkPageSetup       *setup);$/;"	p
gtk_page_setup_get_paper_width	gtkpagesetup.h	/^gdouble            gtk_page_setup_get_paper_width   (GtkPageSetup       *setup,$/;"	p
gtk_page_setup_get_right_margin	gtkpagesetup.h	/^gdouble            gtk_page_setup_get_right_margin  (GtkPageSetup       *setup,$/;"	p
gtk_page_setup_get_top_margin	gtkpagesetup.h	/^gdouble            gtk_page_setup_get_top_margin    (GtkPageSetup       *setup,$/;"	p
gtk_page_setup_load_file	gtkpagesetup.h	/^gboolean	   gtk_page_setup_load_file	    (GtkPageSetup        *setup,$/;"	p
gtk_page_setup_load_key_file	gtkpagesetup.h	/^gboolean           gtk_page_setup_load_key_file     (GtkPageSetup        *setup,$/;"	p
gtk_page_setup_new	gtkpagesetup.h	/^GtkPageSetup *     gtk_page_setup_new               (void);$/;"	p
gtk_page_setup_new_from_file	gtkpagesetup.h	/^GtkPageSetup	  *gtk_page_setup_new_from_file	    (const gchar         *file_name,$/;"	p
gtk_page_setup_new_from_key_file	gtkpagesetup.h	/^GtkPageSetup	  *gtk_page_setup_new_from_key_file (GKeyFile            *key_file,$/;"	p
gtk_page_setup_set_bottom_margin	gtkpagesetup.h	/^void               gtk_page_setup_set_bottom_margin (GtkPageSetup       *setup,$/;"	p
gtk_page_setup_set_left_margin	gtkpagesetup.h	/^void               gtk_page_setup_set_left_margin   (GtkPageSetup       *setup,$/;"	p
gtk_page_setup_set_orientation	gtkpagesetup.h	/^void               gtk_page_setup_set_orientation   (GtkPageSetup       *setup,$/;"	p
gtk_page_setup_set_paper_size	gtkpagesetup.h	/^void               gtk_page_setup_set_paper_size    (GtkPageSetup       *setup,$/;"	p
gtk_page_setup_set_paper_size_and_default_margins	gtkpagesetup.h	/^void gtk_page_setup_set_paper_size_and_default_margins (GtkPageSetup    *setup,$/;"	p
gtk_page_setup_set_right_margin	gtkpagesetup.h	/^void               gtk_page_setup_set_right_margin  (GtkPageSetup       *setup,$/;"	p
gtk_page_setup_set_top_margin	gtkpagesetup.h	/^void               gtk_page_setup_set_top_margin    (GtkPageSetup       *setup,$/;"	p
gtk_page_setup_to_file	gtkpagesetup.h	/^gboolean	   gtk_page_setup_to_file	    (GtkPageSetup        *setup,$/;"	p
gtk_page_setup_to_key_file	gtkpagesetup.h	/^void		   gtk_page_setup_to_key_file	    (GtkPageSetup        *setup,$/;"	p
gtk_paint_arrow	gtkstyle.h	/^void gtk_paint_arrow       (GtkStyle           *style,$/;"	p
gtk_paint_box	gtkstyle.h	/^void gtk_paint_box         (GtkStyle           *style,$/;"	p
gtk_paint_box_gap	gtkstyle.h	/^void gtk_paint_box_gap     (GtkStyle           *style,$/;"	p
gtk_paint_check	gtkstyle.h	/^void gtk_paint_check       (GtkStyle           *style,$/;"	p
gtk_paint_diamond	gtkstyle.h	/^void gtk_paint_diamond     (GtkStyle           *style,$/;"	p
gtk_paint_expander	gtkstyle.h	/^void gtk_paint_expander    (GtkStyle           *style,$/;"	p
gtk_paint_extension	gtkstyle.h	/^void gtk_paint_extension   (GtkStyle           *style,$/;"	p
gtk_paint_flat_box	gtkstyle.h	/^void gtk_paint_flat_box    (GtkStyle           *style,$/;"	p
gtk_paint_focus	gtkstyle.h	/^void gtk_paint_focus       (GtkStyle           *style,$/;"	p
gtk_paint_handle	gtkstyle.h	/^void gtk_paint_handle      (GtkStyle           *style,$/;"	p
gtk_paint_hline	gtkstyle.h	/^void gtk_paint_hline       (GtkStyle           *style,$/;"	p
gtk_paint_layout	gtkstyle.h	/^void gtk_paint_layout      (GtkStyle           *style,$/;"	p
gtk_paint_option	gtkstyle.h	/^void gtk_paint_option      (GtkStyle           *style,$/;"	p
gtk_paint_polygon	gtkstyle.h	/^void gtk_paint_polygon     (GtkStyle           *style,$/;"	p
gtk_paint_resize_grip	gtkstyle.h	/^void gtk_paint_resize_grip (GtkStyle           *style,$/;"	p
gtk_paint_shadow	gtkstyle.h	/^void gtk_paint_shadow      (GtkStyle           *style,$/;"	p
gtk_paint_shadow_gap	gtkstyle.h	/^void gtk_paint_shadow_gap  (GtkStyle           *style,$/;"	p
gtk_paint_slider	gtkstyle.h	/^void gtk_paint_slider      (GtkStyle           *style,$/;"	p
gtk_paint_spinner	gtkstyle.h	/^void gtk_paint_spinner     (GtkStyle           *style,$/;"	p
gtk_paint_string	gtkstyle.h	/^void gtk_paint_string     (GtkStyle           *style,$/;"	p
gtk_paint_tab	gtkstyle.h	/^void gtk_paint_tab         (GtkStyle           *style,$/;"	p
gtk_paint_vline	gtkstyle.h	/^void gtk_paint_vline       (GtkStyle           *style,$/;"	p
gtk_paned_add1	gtkpaned.h	/^void        gtk_paned_add1         (GtkPaned       *paned,$/;"	p
gtk_paned_add2	gtkpaned.h	/^void        gtk_paned_add2         (GtkPaned       *paned,$/;"	p
gtk_paned_compute_position	gtkpaned.h	/^void    gtk_paned_compute_position (GtkPaned  *paned,$/;"	p
gtk_paned_get_child1	gtkpaned.h	/^GtkWidget * gtk_paned_get_child1   (GtkPaned       *paned);$/;"	p
gtk_paned_get_child2	gtkpaned.h	/^GtkWidget * gtk_paned_get_child2   (GtkPaned       *paned);$/;"	p
gtk_paned_get_handle_window	gtkpaned.h	/^GdkWindow * gtk_paned_get_handle_window (GtkPaned  *paned);$/;"	p
gtk_paned_get_position	gtkpaned.h	/^gint        gtk_paned_get_position (GtkPaned       *paned);$/;"	p
gtk_paned_gutter_size	gtkpaned.h	138;"	d
gtk_paned_pack1	gtkpaned.h	/^void        gtk_paned_pack1        (GtkPaned       *paned,$/;"	p
gtk_paned_pack2	gtkpaned.h	/^void        gtk_paned_pack2        (GtkPaned       *paned,$/;"	p
gtk_paned_set_gutter_size	gtkpaned.h	139;"	d
gtk_paned_set_position	gtkpaned.h	/^void        gtk_paned_set_position (GtkPaned       *paned,$/;"	p
gtk_paper_size_copy	gtkpapersize.h	/^GtkPaperSize *gtk_paper_size_copy         (GtkPaperSize *other);$/;"	p
gtk_paper_size_free	gtkpapersize.h	/^void          gtk_paper_size_free         (GtkPaperSize *size);$/;"	p
gtk_paper_size_get_default	gtkpapersize.h	/^const gchar *gtk_paper_size_get_default (void);$/;"	p
gtk_paper_size_get_default_bottom_margin	gtkpapersize.h	/^gdouble gtk_paper_size_get_default_bottom_margin (GtkPaperSize *size,$/;"	p
gtk_paper_size_get_default_left_margin	gtkpapersize.h	/^gdouble gtk_paper_size_get_default_left_margin   (GtkPaperSize *size,$/;"	p
gtk_paper_size_get_default_right_margin	gtkpapersize.h	/^gdouble gtk_paper_size_get_default_right_margin  (GtkPaperSize *size,$/;"	p
gtk_paper_size_get_default_top_margin	gtkpapersize.h	/^gdouble gtk_paper_size_get_default_top_margin    (GtkPaperSize *size,$/;"	p
gtk_paper_size_get_display_name	gtkpapersize.h	/^const gchar *gtk_paper_size_get_display_name (GtkPaperSize *size);$/;"	p
gtk_paper_size_get_height	gtkpapersize.h	/^gdouble  gtk_paper_size_get_height       (GtkPaperSize *size, GtkUnit unit);$/;"	p
gtk_paper_size_get_name	gtkpapersize.h	/^const gchar *gtk_paper_size_get_name         (GtkPaperSize *size);$/;"	p
gtk_paper_size_get_paper_sizes	gtkpapersize.h	/^GList        *gtk_paper_size_get_paper_sizes (gboolean include_custom);$/;"	p
gtk_paper_size_get_ppd_name	gtkpapersize.h	/^const gchar *gtk_paper_size_get_ppd_name     (GtkPaperSize *size);$/;"	p
gtk_paper_size_get_width	gtkpapersize.h	/^gdouble  gtk_paper_size_get_width        (GtkPaperSize *size, GtkUnit unit);$/;"	p
gtk_paper_size_is_custom	gtkpapersize.h	/^gboolean gtk_paper_size_is_custom        (GtkPaperSize *size);$/;"	p
gtk_paper_size_is_equal	gtkpapersize.h	/^gboolean      gtk_paper_size_is_equal     (GtkPaperSize *size1,$/;"	p
gtk_paper_size_new	gtkpapersize.h	/^GtkPaperSize *gtk_paper_size_new          (const gchar  *name);$/;"	p
gtk_paper_size_new_custom	gtkpapersize.h	/^GtkPaperSize *gtk_paper_size_new_custom   (const gchar  *name,$/;"	p
gtk_paper_size_new_from_key_file	gtkpapersize.h	/^GtkPaperSize *gtk_paper_size_new_from_key_file (GKeyFile    *key_file,$/;"	p
gtk_paper_size_new_from_ppd	gtkpapersize.h	/^GtkPaperSize *gtk_paper_size_new_from_ppd (const gchar  *ppd_name,$/;"	p
gtk_paper_size_set_size	gtkpapersize.h	/^void    gtk_paper_size_set_size                  (GtkPaperSize *size, $/;"	p
gtk_paper_size_to_key_file	gtkpapersize.h	/^void     gtk_paper_size_to_key_file            (GtkPaperSize *size,$/;"	p
gtk_parse_args	gtkmain.h	/^gboolean gtk_parse_args           (int    *argc,$/;"	p
gtk_pixmap_get	gtkpixmap.h	/^void	   gtk_pixmap_get	 (GtkPixmap  *pixmap,$/;"	p
gtk_pixmap_new	gtkpixmap.h	/^GtkWidget* gtk_pixmap_new	 (GdkPixmap  *pixmap,$/;"	p
gtk_pixmap_set	gtkpixmap.h	/^void	   gtk_pixmap_set	 (GtkPixmap  *pixmap,$/;"	p
gtk_pixmap_set_build_insensitive	gtkpixmap.h	/^void       gtk_pixmap_set_build_insensitive (GtkPixmap *pixmap,$/;"	p
gtk_plug_construct	gtkplug.h	/^void       gtk_plug_construct (GtkPlug         *plug,$/;"	p
gtk_plug_construct_for_display	gtkplug.h	/^void       gtk_plug_construct_for_display (GtkPlug         *plug,$/;"	p
gtk_plug_get_embedded	gtkplug.h	/^gboolean  gtk_plug_get_embedded (GtkPlug         *plug);$/;"	p
gtk_plug_get_id	gtkplug.h	/^GdkNativeWindow gtk_plug_get_id (GtkPlug         *plug);$/;"	p
gtk_plug_get_socket_window	gtkplug.h	/^GdkWindow *gtk_plug_get_socket_window (GtkPlug   *plug);$/;"	p
gtk_plug_new	gtkplug.h	/^GtkWidget* gtk_plug_new       (GdkNativeWindow  socket_id);$/;"	p
gtk_plug_new_for_display	gtkplug.h	/^GtkWidget* gtk_plug_new_for_display       (GdkDisplay      *display,$/;"	p
gtk_preview_draw_row	gtkpreview.h	/^void            gtk_preview_draw_row           (GtkPreview      *preview,$/;"	p
gtk_preview_get_cmap	gtkpreview.h	/^GdkColormap*    gtk_preview_get_cmap           (void);$/;"	p
gtk_preview_get_info	gtkpreview.h	/^GtkPreviewInfo* gtk_preview_get_info           (void);$/;"	p
gtk_preview_get_visual	gtkpreview.h	/^GdkVisual*      gtk_preview_get_visual         (void);$/;"	p
gtk_preview_new	gtkpreview.h	/^GtkWidget*      gtk_preview_new                (GtkPreviewType   type);$/;"	p
gtk_preview_put	gtkpreview.h	/^void            gtk_preview_put                (GtkPreview      *preview,$/;"	p
gtk_preview_reset	gtkpreview.h	/^void            gtk_preview_reset              (void);$/;"	p
gtk_preview_set_color_cube	gtkpreview.h	/^void            gtk_preview_set_color_cube     (guint            nred_shades,$/;"	p
gtk_preview_set_dither	gtkpreview.h	/^void            gtk_preview_set_dither         (GtkPreview      *preview,$/;"	p
gtk_preview_set_expand	gtkpreview.h	/^void            gtk_preview_set_expand         (GtkPreview      *preview,$/;"	p
gtk_preview_set_gamma	gtkpreview.h	/^void            gtk_preview_set_gamma          (double           gamma_);$/;"	p
gtk_preview_set_install_cmap	gtkpreview.h	/^void            gtk_preview_set_install_cmap   (gint             install_cmap);$/;"	p
gtk_preview_set_reserved	gtkpreview.h	/^void            gtk_preview_set_reserved       (gint             nreserved);$/;"	p
gtk_preview_size	gtkpreview.h	/^void            gtk_preview_size               (GtkPreview      *preview,$/;"	p
gtk_preview_uninit	gtkpreview.h	/^void            gtk_preview_uninit             (void);$/;"	p
gtk_print_context_create_pango_context	gtkprintcontext.h	/^PangoContext *gtk_print_context_create_pango_context (GtkPrintContext *context);$/;"	p
gtk_print_context_create_pango_layout	gtkprintcontext.h	/^PangoLayout  *gtk_print_context_create_pango_layout  (GtkPrintContext *context);$/;"	p
gtk_print_context_get_cairo_context	gtkprintcontext.h	/^cairo_t      *gtk_print_context_get_cairo_context    (GtkPrintContext *context);$/;"	p
gtk_print_context_get_dpi_x	gtkprintcontext.h	/^gdouble       gtk_print_context_get_dpi_x            (GtkPrintContext *context);$/;"	p
gtk_print_context_get_dpi_y	gtkprintcontext.h	/^gdouble       gtk_print_context_get_dpi_y            (GtkPrintContext *context);$/;"	p
gtk_print_context_get_hard_margins	gtkprintcontext.h	/^gboolean      gtk_print_context_get_hard_margins     (GtkPrintContext *context,$/;"	p
gtk_print_context_get_height	gtkprintcontext.h	/^gdouble       gtk_print_context_get_height           (GtkPrintContext *context);$/;"	p
gtk_print_context_get_page_setup	gtkprintcontext.h	/^GtkPageSetup *gtk_print_context_get_page_setup       (GtkPrintContext *context);$/;"	p
gtk_print_context_get_pango_fontmap	gtkprintcontext.h	/^PangoFontMap *gtk_print_context_get_pango_fontmap    (GtkPrintContext *context);$/;"	p
gtk_print_context_get_width	gtkprintcontext.h	/^gdouble       gtk_print_context_get_width            (GtkPrintContext *context);$/;"	p
gtk_print_context_set_cairo_context	gtkprintcontext.h	/^void         gtk_print_context_set_cairo_context     (GtkPrintContext *context,$/;"	p
gtk_print_error_quark	gtkprintoperation.h	/^GQuark gtk_print_error_quark (void);$/;"	p
gtk_print_operation_cancel	gtkprintoperation.h	/^void                    gtk_print_operation_cancel                 (GtkPrintOperation  *op);$/;"	p
gtk_print_operation_draw_page_finish	gtkprintoperation.h	/^void                    gtk_print_operation_draw_page_finish       (GtkPrintOperation  *op);$/;"	p
gtk_print_operation_get_default_page_setup	gtkprintoperation.h	/^GtkPageSetup *          gtk_print_operation_get_default_page_setup (GtkPrintOperation  *op);$/;"	p
gtk_print_operation_get_embed_page_setup	gtkprintoperation.h	/^gboolean                gtk_print_operation_get_embed_page_setup   (GtkPrintOperation  *op);$/;"	p
gtk_print_operation_get_error	gtkprintoperation.h	/^void                    gtk_print_operation_get_error              (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_get_has_selection	gtkprintoperation.h	/^gboolean                gtk_print_operation_get_has_selection      (GtkPrintOperation  *op);$/;"	p
gtk_print_operation_get_n_pages_to_print	gtkprintoperation.h	/^gint                    gtk_print_operation_get_n_pages_to_print   (GtkPrintOperation  *op);$/;"	p
gtk_print_operation_get_print_settings	gtkprintoperation.h	/^GtkPrintSettings *      gtk_print_operation_get_print_settings     (GtkPrintOperation  *op);$/;"	p
gtk_print_operation_get_status	gtkprintoperation.h	/^GtkPrintStatus          gtk_print_operation_get_status             (GtkPrintOperation  *op);$/;"	p
gtk_print_operation_get_status_string	gtkprintoperation.h	/^const gchar *           gtk_print_operation_get_status_string      (GtkPrintOperation  *op);$/;"	p
gtk_print_operation_get_support_selection	gtkprintoperation.h	/^gboolean                gtk_print_operation_get_support_selection  (GtkPrintOperation  *op);$/;"	p
gtk_print_operation_is_finished	gtkprintoperation.h	/^gboolean                gtk_print_operation_is_finished            (GtkPrintOperation  *op);$/;"	p
gtk_print_operation_new	gtkprintoperation.h	/^GtkPrintOperation *     gtk_print_operation_new                    (void);$/;"	p
gtk_print_operation_preview_end_preview	gtkprintoperationpreview.h	/^void     gtk_print_operation_preview_end_preview (GtkPrintOperationPreview *preview);$/;"	p
gtk_print_operation_preview_is_selected	gtkprintoperationpreview.h	/^gboolean gtk_print_operation_preview_is_selected (GtkPrintOperationPreview *preview,$/;"	p
gtk_print_operation_preview_render_page	gtkprintoperationpreview.h	/^void     gtk_print_operation_preview_render_page (GtkPrintOperationPreview *preview,$/;"	p
gtk_print_operation_run	gtkprintoperation.h	/^GtkPrintOperationResult gtk_print_operation_run                    (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_set_allow_async	gtkprintoperation.h	/^void                    gtk_print_operation_set_allow_async        (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_set_current_page	gtkprintoperation.h	/^void                    gtk_print_operation_set_current_page       (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_set_custom_tab_label	gtkprintoperation.h	/^void                    gtk_print_operation_set_custom_tab_label   (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_set_default_page_setup	gtkprintoperation.h	/^void                    gtk_print_operation_set_default_page_setup (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_set_defer_drawing	gtkprintoperation.h	/^void                    gtk_print_operation_set_defer_drawing      (GtkPrintOperation  *op);$/;"	p
gtk_print_operation_set_embed_page_setup	gtkprintoperation.h	/^void                    gtk_print_operation_set_embed_page_setup   (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_set_export_filename	gtkprintoperation.h	/^void                    gtk_print_operation_set_export_filename    (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_set_has_selection	gtkprintoperation.h	/^void                    gtk_print_operation_set_has_selection      (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_set_job_name	gtkprintoperation.h	/^void                    gtk_print_operation_set_job_name           (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_set_n_pages	gtkprintoperation.h	/^void                    gtk_print_operation_set_n_pages            (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_set_print_settings	gtkprintoperation.h	/^void                    gtk_print_operation_set_print_settings     (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_set_show_progress	gtkprintoperation.h	/^void                    gtk_print_operation_set_show_progress      (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_set_support_selection	gtkprintoperation.h	/^void                    gtk_print_operation_set_support_selection  (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_set_track_print_status	gtkprintoperation.h	/^void                    gtk_print_operation_set_track_print_status (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_set_unit	gtkprintoperation.h	/^void                    gtk_print_operation_set_unit               (GtkPrintOperation  *op,$/;"	p
gtk_print_operation_set_use_full_page	gtkprintoperation.h	/^void                    gtk_print_operation_set_use_full_page      (GtkPrintOperation  *op,$/;"	p
gtk_print_run_page_setup_dialog	gtkprintoperation.h	/^GtkPageSetup           *gtk_print_run_page_setup_dialog            (GtkWindow          *parent,$/;"	p
gtk_print_run_page_setup_dialog_async	gtkprintoperation.h	/^void                    gtk_print_run_page_setup_dialog_async      (GtkWindow            *parent,$/;"	p
gtk_print_settings_copy	gtkprintsettings.h	/^GtkPrintSettings *gtk_print_settings_copy                    (GtkPrintSettings     *other);$/;"	p
gtk_print_settings_foreach	gtkprintsettings.h	/^void              gtk_print_settings_foreach                 (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_get	gtkprintsettings.h	/^const gchar *     gtk_print_settings_get                 (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_get_bool	gtkprintsettings.h	/^gboolean          gtk_print_settings_get_bool                (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_get_collate	gtkprintsettings.h	/^gboolean              gtk_print_settings_get_collate           (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_default_source	gtkprintsettings.h	/^const gchar *         gtk_print_settings_get_default_source    (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_dither	gtkprintsettings.h	/^const gchar *         gtk_print_settings_get_dither            (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_double	gtkprintsettings.h	/^gdouble           gtk_print_settings_get_double              (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_get_double_with_default	gtkprintsettings.h	/^gdouble           gtk_print_settings_get_double_with_default (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_get_duplex	gtkprintsettings.h	/^GtkPrintDuplex        gtk_print_settings_get_duplex            (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_finishings	gtkprintsettings.h	/^const gchar *         gtk_print_settings_get_finishings        (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_int	gtkprintsettings.h	/^gint              gtk_print_settings_get_int                 (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_get_int_with_default	gtkprintsettings.h	/^gint              gtk_print_settings_get_int_with_default    (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_get_length	gtkprintsettings.h	/^gdouble           gtk_print_settings_get_length              (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_get_media_type	gtkprintsettings.h	/^const gchar *         gtk_print_settings_get_media_type        (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_n_copies	gtkprintsettings.h	/^gint                  gtk_print_settings_get_n_copies          (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_number_up	gtkprintsettings.h	/^gint                  gtk_print_settings_get_number_up         (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_number_up_layout	gtkprintsettings.h	/^GtkNumberUpLayout     gtk_print_settings_get_number_up_layout  (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_orientation	gtkprintsettings.h	/^GtkPageOrientation    gtk_print_settings_get_orientation       (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_output_bin	gtkprintsettings.h	/^const gchar *         gtk_print_settings_get_output_bin        (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_page_ranges	gtkprintsettings.h	/^GtkPageRange *        gtk_print_settings_get_page_ranges       (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_get_page_set	gtkprintsettings.h	/^GtkPageSet            gtk_print_settings_get_page_set          (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_paper_height	gtkprintsettings.h	/^gdouble               gtk_print_settings_get_paper_height      (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_get_paper_size	gtkprintsettings.h	/^GtkPaperSize *        gtk_print_settings_get_paper_size        (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_paper_width	gtkprintsettings.h	/^gdouble               gtk_print_settings_get_paper_width       (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_get_print_pages	gtkprintsettings.h	/^GtkPrintPages         gtk_print_settings_get_print_pages       (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_printer	gtkprintsettings.h	/^const gchar *gtk_print_settings_get_printer           (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_printer_lpi	gtkprintsettings.h	/^gdouble               gtk_print_settings_get_printer_lpi       (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_quality	gtkprintsettings.h	/^GtkPrintQuality       gtk_print_settings_get_quality           (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_resolution	gtkprintsettings.h	/^gint                  gtk_print_settings_get_resolution        (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_resolution_x	gtkprintsettings.h	/^gint                  gtk_print_settings_get_resolution_x      (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_resolution_y	gtkprintsettings.h	/^gint                  gtk_print_settings_get_resolution_y      (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_reverse	gtkprintsettings.h	/^gboolean              gtk_print_settings_get_reverse           (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_scale	gtkprintsettings.h	/^gdouble               gtk_print_settings_get_scale             (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_get_use_color	gtkprintsettings.h	/^gboolean              gtk_print_settings_get_use_color         (GtkPrintSettings   *settings);$/;"	p
gtk_print_settings_has_key	gtkprintsettings.h	/^gboolean          gtk_print_settings_has_key                 (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_load_file	gtkprintsettings.h	/^gboolean          gtk_print_settings_load_file               (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_load_key_file	gtkprintsettings.h	/^gboolean          gtk_print_settings_load_key_file           (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_new	gtkprintsettings.h	/^GtkPrintSettings *gtk_print_settings_new                     (void);$/;"	p
gtk_print_settings_new_from_file	gtkprintsettings.h	/^GtkPrintSettings *gtk_print_settings_new_from_file           (const gchar          *file_name,$/;"	p
gtk_print_settings_new_from_key_file	gtkprintsettings.h	/^GtkPrintSettings *gtk_print_settings_new_from_key_file       (GKeyFile             *key_file,$/;"	p
gtk_print_settings_set	gtkprintsettings.h	/^void              gtk_print_settings_set                     (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_set_bool	gtkprintsettings.h	/^void              gtk_print_settings_set_bool                (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_set_collate	gtkprintsettings.h	/^void                  gtk_print_settings_set_collate           (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_default_source	gtkprintsettings.h	/^void                  gtk_print_settings_set_default_source    (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_dither	gtkprintsettings.h	/^void                  gtk_print_settings_set_dither            (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_double	gtkprintsettings.h	/^void              gtk_print_settings_set_double              (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_set_duplex	gtkprintsettings.h	/^void                  gtk_print_settings_set_duplex            (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_finishings	gtkprintsettings.h	/^void                  gtk_print_settings_set_finishings        (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_int	gtkprintsettings.h	/^void              gtk_print_settings_set_int                 (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_set_length	gtkprintsettings.h	/^void              gtk_print_settings_set_length              (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_set_media_type	gtkprintsettings.h	/^void                  gtk_print_settings_set_media_type        (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_n_copies	gtkprintsettings.h	/^void                  gtk_print_settings_set_n_copies          (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_number_up	gtkprintsettings.h	/^void                  gtk_print_settings_set_number_up         (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_number_up_layout	gtkprintsettings.h	/^void                  gtk_print_settings_set_number_up_layout  (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_orientation	gtkprintsettings.h	/^void                  gtk_print_settings_set_orientation       (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_output_bin	gtkprintsettings.h	/^void                  gtk_print_settings_set_output_bin        (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_page_ranges	gtkprintsettings.h	/^void                  gtk_print_settings_set_page_ranges       (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_page_set	gtkprintsettings.h	/^void                  gtk_print_settings_set_page_set          (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_paper_height	gtkprintsettings.h	/^void                  gtk_print_settings_set_paper_height      (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_paper_size	gtkprintsettings.h	/^void                  gtk_print_settings_set_paper_size        (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_paper_width	gtkprintsettings.h	/^void                  gtk_print_settings_set_paper_width       (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_print_pages	gtkprintsettings.h	/^void                  gtk_print_settings_set_print_pages       (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_printer	gtkprintsettings.h	/^void                  gtk_print_settings_set_printer           (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_printer_lpi	gtkprintsettings.h	/^void                  gtk_print_settings_set_printer_lpi       (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_quality	gtkprintsettings.h	/^void                  gtk_print_settings_set_quality           (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_resolution	gtkprintsettings.h	/^void                  gtk_print_settings_set_resolution        (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_resolution_xy	gtkprintsettings.h	/^void                  gtk_print_settings_set_resolution_xy     (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_reverse	gtkprintsettings.h	/^void                  gtk_print_settings_set_reverse           (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_scale	gtkprintsettings.h	/^void                  gtk_print_settings_set_scale             (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_set_use_color	gtkprintsettings.h	/^void                  gtk_print_settings_set_use_color         (GtkPrintSettings   *settings,$/;"	p
gtk_print_settings_to_file	gtkprintsettings.h	/^gboolean          gtk_print_settings_to_file                 (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_to_key_file	gtkprintsettings.h	/^void              gtk_print_settings_to_key_file             (GtkPrintSettings     *settings,$/;"	p
gtk_print_settings_unset	gtkprintsettings.h	/^void              gtk_print_settings_unset                   (GtkPrintSettings     *settings,$/;"	p
gtk_progress_bar_get_ellipsize	gtkprogressbar.h	/^PangoEllipsizeMode gtk_progress_bar_get_ellipsize (GtkProgressBar     *pbar);$/;"	p
gtk_progress_bar_get_fraction	gtkprogressbar.h	/^gdouble               gtk_progress_bar_get_fraction   (GtkProgressBar *pbar);$/;"	p
gtk_progress_bar_get_orientation	gtkprogressbar.h	/^GtkProgressBarOrientation gtk_progress_bar_get_orientation (GtkProgressBar *pbar);$/;"	p
gtk_progress_bar_get_pulse_step	gtkprogressbar.h	/^gdouble               gtk_progress_bar_get_pulse_step (GtkProgressBar *pbar);$/;"	p
gtk_progress_bar_get_text	gtkprogressbar.h	/^const gchar*          gtk_progress_bar_get_text       (GtkProgressBar *pbar);$/;"	p
gtk_progress_bar_new	gtkprogressbar.h	/^GtkWidget* gtk_progress_bar_new                  (void);$/;"	p
gtk_progress_bar_new_with_adjustment	gtkprogressbar.h	/^GtkWidget* gtk_progress_bar_new_with_adjustment  (GtkAdjustment  *adjustment);$/;"	p
gtk_progress_bar_pulse	gtkprogressbar.h	/^void       gtk_progress_bar_pulse                (GtkProgressBar *pbar);$/;"	p
gtk_progress_bar_set_activity_blocks	gtkprogressbar.h	/^void       gtk_progress_bar_set_activity_blocks  (GtkProgressBar *pbar,$/;"	p
gtk_progress_bar_set_activity_step	gtkprogressbar.h	/^void       gtk_progress_bar_set_activity_step    (GtkProgressBar *pbar,$/;"	p
gtk_progress_bar_set_bar_style	gtkprogressbar.h	/^void       gtk_progress_bar_set_bar_style        (GtkProgressBar *pbar,$/;"	p
gtk_progress_bar_set_discrete_blocks	gtkprogressbar.h	/^void       gtk_progress_bar_set_discrete_blocks  (GtkProgressBar *pbar,$/;"	p
gtk_progress_bar_set_ellipsize	gtkprogressbar.h	/^void               gtk_progress_bar_set_ellipsize (GtkProgressBar     *pbar,$/;"	p
gtk_progress_bar_set_fraction	gtkprogressbar.h	/^void       gtk_progress_bar_set_fraction         (GtkProgressBar *pbar,$/;"	p
gtk_progress_bar_set_orientation	gtkprogressbar.h	/^void       gtk_progress_bar_set_orientation      (GtkProgressBar *pbar,$/;"	p
gtk_progress_bar_set_pulse_step	gtkprogressbar.h	/^void       gtk_progress_bar_set_pulse_step       (GtkProgressBar *pbar,$/;"	p
gtk_progress_bar_set_text	gtkprogressbar.h	/^void       gtk_progress_bar_set_text             (GtkProgressBar *pbar,$/;"	p
gtk_progress_bar_update	gtkprogressbar.h	/^void       gtk_progress_bar_update               (GtkProgressBar *pbar,$/;"	p
gtk_progress_configure	gtkprogress.h	/^void       gtk_progress_configure           (GtkProgress   *progress,$/;"	p
gtk_progress_get_current_percentage	gtkprogress.h	/^gdouble    gtk_progress_get_current_percentage (GtkProgress *progress);$/;"	p
gtk_progress_get_current_text	gtkprogress.h	/^gchar*     gtk_progress_get_current_text    (GtkProgress   *progress);$/;"	p
gtk_progress_get_percentage_from_value	gtkprogress.h	/^gdouble    gtk_progress_get_percentage_from_value (GtkProgress *progress,$/;"	p
gtk_progress_get_text_from_value	gtkprogress.h	/^gchar*     gtk_progress_get_text_from_value (GtkProgress   *progress,$/;"	p
gtk_progress_get_value	gtkprogress.h	/^gdouble    gtk_progress_get_value           (GtkProgress   *progress);$/;"	p
gtk_progress_set_activity_mode	gtkprogress.h	/^void       gtk_progress_set_activity_mode   (GtkProgress   *progress,$/;"	p
gtk_progress_set_adjustment	gtkprogress.h	/^void       gtk_progress_set_adjustment      (GtkProgress   *progress,$/;"	p
gtk_progress_set_format_string	gtkprogress.h	/^void       gtk_progress_set_format_string   (GtkProgress   *progress,$/;"	p
gtk_progress_set_percentage	gtkprogress.h	/^void       gtk_progress_set_percentage      (GtkProgress   *progress,$/;"	p
gtk_progress_set_show_text	gtkprogress.h	/^void       gtk_progress_set_show_text       (GtkProgress   *progress,$/;"	p
gtk_progress_set_text_alignment	gtkprogress.h	/^void       gtk_progress_set_text_alignment  (GtkProgress   *progress,$/;"	p
gtk_progress_set_value	gtkprogress.h	/^void       gtk_progress_set_value           (GtkProgress   *progress,$/;"	p
gtk_propagate_event	gtkmain.h	/^void       gtk_propagate_event     (GtkWidget         *widget,$/;"	p
gtk_quit_add	gtkmain.h	/^guint	   gtk_quit_add		   (guint	       main_level,$/;"	p
gtk_quit_add_destroy	gtkmain.h	/^void	   gtk_quit_add_destroy	   (guint	       main_level,$/;"	p
gtk_quit_add_full	gtkmain.h	/^guint	   gtk_quit_add_full	   (guint	       main_level,$/;"	p
gtk_quit_remove	gtkmain.h	/^void	   gtk_quit_remove	   (guint	       quit_handler_id);$/;"	p
gtk_quit_remove_by_data	gtkmain.h	/^void	   gtk_quit_remove_by_data (gpointer	       data);$/;"	p
gtk_radio_action_get_current_value	gtkradioaction.h	/^gint            gtk_radio_action_get_current_value (GtkRadioAction        *action);$/;"	p
gtk_radio_action_get_group	gtkradioaction.h	/^GSList         *gtk_radio_action_get_group         (GtkRadioAction        *action);$/;"	p
gtk_radio_action_new	gtkradioaction.h	/^GtkRadioAction *gtk_radio_action_new               (const gchar           *name,$/;"	p
gtk_radio_action_set_current_value	gtkradioaction.h	/^void            gtk_radio_action_set_current_value (GtkRadioAction        *action,$/;"	p
gtk_radio_action_set_group	gtkradioaction.h	/^void            gtk_radio_action_set_group         (GtkRadioAction        *action,$/;"	p
gtk_radio_button_get_group	gtkradiobutton.h	/^GSList*    gtk_radio_button_get_group                     (GtkRadioButton *radio_button);$/;"	p
gtk_radio_button_group	gtkradiobutton.h	89;"	d
gtk_radio_button_new	gtkradiobutton.h	/^GtkWidget* gtk_radio_button_new                           (GSList         *group);$/;"	p
gtk_radio_button_new_from_widget	gtkradiobutton.h	/^GtkWidget* gtk_radio_button_new_from_widget               (GtkRadioButton *radio_group_member);$/;"	p
gtk_radio_button_new_with_label	gtkradiobutton.h	/^GtkWidget* gtk_radio_button_new_with_label                (GSList         *group,$/;"	p
gtk_radio_button_new_with_label_from_widget	gtkradiobutton.h	/^GtkWidget* gtk_radio_button_new_with_label_from_widget    (GtkRadioButton *radio_group_member,$/;"	p
gtk_radio_button_new_with_mnemonic	gtkradiobutton.h	/^GtkWidget* gtk_radio_button_new_with_mnemonic             (GSList         *group,$/;"	p
gtk_radio_button_new_with_mnemonic_from_widget	gtkradiobutton.h	/^GtkWidget* gtk_radio_button_new_with_mnemonic_from_widget (GtkRadioButton *radio_group_member,$/;"	p
gtk_radio_button_set_group	gtkradiobutton.h	/^void       gtk_radio_button_set_group                     (GtkRadioButton *radio_button,$/;"	p
gtk_radio_menu_item_get_group	gtkradiomenuitem.h	/^GSList*    gtk_radio_menu_item_get_group                     (GtkRadioMenuItem *radio_menu_item);$/;"	p
gtk_radio_menu_item_group	gtkradiomenuitem.h	89;"	d
gtk_radio_menu_item_new	gtkradiomenuitem.h	/^GtkWidget* gtk_radio_menu_item_new                           (GSList           *group);$/;"	p
gtk_radio_menu_item_new_from_widget	gtkradiomenuitem.h	/^GtkWidget* gtk_radio_menu_item_new_from_widget               (GtkRadioMenuItem *group);$/;"	p
gtk_radio_menu_item_new_with_label	gtkradiomenuitem.h	/^GtkWidget* gtk_radio_menu_item_new_with_label                (GSList           *group,$/;"	p
gtk_radio_menu_item_new_with_label_from_widget	gtkradiomenuitem.h	/^GtkWidget *gtk_radio_menu_item_new_with_label_from_widget    (GtkRadioMenuItem *group,$/;"	p
gtk_radio_menu_item_new_with_mnemonic	gtkradiomenuitem.h	/^GtkWidget* gtk_radio_menu_item_new_with_mnemonic             (GSList           *group,$/;"	p
gtk_radio_menu_item_new_with_mnemonic_from_widget	gtkradiomenuitem.h	/^GtkWidget *gtk_radio_menu_item_new_with_mnemonic_from_widget (GtkRadioMenuItem *group,$/;"	p
gtk_radio_menu_item_set_group	gtkradiomenuitem.h	/^void       gtk_radio_menu_item_set_group                     (GtkRadioMenuItem *radio_menu_item,$/;"	p
gtk_radio_tool_button_get_group	gtkradiotoolbutton.h	/^GSList *     gtk_radio_tool_button_get_group                  (GtkRadioToolButton *button);$/;"	p
gtk_radio_tool_button_new	gtkradiotoolbutton.h	/^GtkToolItem *gtk_radio_tool_button_new                        (GSList             *group);$/;"	p
gtk_radio_tool_button_new_from_stock	gtkradiotoolbutton.h	/^GtkToolItem *gtk_radio_tool_button_new_from_stock             (GSList             *group,$/;"	p
gtk_radio_tool_button_new_from_widget	gtkradiotoolbutton.h	/^GtkToolItem *gtk_radio_tool_button_new_from_widget            (GtkRadioToolButton *group);$/;"	p
gtk_radio_tool_button_new_with_stock_from_widget	gtkradiotoolbutton.h	/^GtkToolItem *gtk_radio_tool_button_new_with_stock_from_widget (GtkRadioToolButton *group,$/;"	p
gtk_radio_tool_button_set_group	gtkradiotoolbutton.h	/^void         gtk_radio_tool_button_set_group                  (GtkRadioToolButton *button,$/;"	p
gtk_range_get_adjustment	gtkrange.h	/^GtkAdjustment*     gtk_range_get_adjustment                (GtkRange      *range);$/;"	p
gtk_range_get_fill_level	gtkrange.h	/^gdouble            gtk_range_get_fill_level                (GtkRange      *range);$/;"	p
gtk_range_get_flippable	gtkrange.h	/^gboolean           gtk_range_get_flippable                 (GtkRange      *range);$/;"	p
gtk_range_get_inverted	gtkrange.h	/^gboolean           gtk_range_get_inverted                  (GtkRange      *range);$/;"	p
gtk_range_get_lower_stepper_sensitivity	gtkrange.h	/^GtkSensitivityType gtk_range_get_lower_stepper_sensitivity (GtkRange      *range);$/;"	p
gtk_range_get_min_slider_size	gtkrange.h	/^gint               gtk_range_get_min_slider_size           (GtkRange      *range);$/;"	p
gtk_range_get_range_rect	gtkrange.h	/^void               gtk_range_get_range_rect                (GtkRange      *range,$/;"	p
gtk_range_get_restrict_to_fill_level	gtkrange.h	/^gboolean           gtk_range_get_restrict_to_fill_level    (GtkRange      *range);$/;"	p
gtk_range_get_round_digits	gtkrange.h	/^gint                gtk_range_get_round_digits             (GtkRange      *range);$/;"	p
gtk_range_get_show_fill_level	gtkrange.h	/^gboolean           gtk_range_get_show_fill_level           (GtkRange      *range);$/;"	p
gtk_range_get_slider_range	gtkrange.h	/^void               gtk_range_get_slider_range              (GtkRange      *range,$/;"	p
gtk_range_get_slider_size_fixed	gtkrange.h	/^gboolean           gtk_range_get_slider_size_fixed         (GtkRange      *range);$/;"	p
gtk_range_get_update_policy	gtkrange.h	/^GtkUpdateType      gtk_range_get_update_policy             (GtkRange      *range);$/;"	p
gtk_range_get_upper_stepper_sensitivity	gtkrange.h	/^GtkSensitivityType gtk_range_get_upper_stepper_sensitivity (GtkRange      *range);$/;"	p
gtk_range_get_value	gtkrange.h	/^gdouble            gtk_range_get_value                     (GtkRange      *range);$/;"	p
gtk_range_set_adjustment	gtkrange.h	/^void               gtk_range_set_adjustment                (GtkRange      *range,$/;"	p
gtk_range_set_fill_level	gtkrange.h	/^void               gtk_range_set_fill_level                (GtkRange      *range,$/;"	p
gtk_range_set_flippable	gtkrange.h	/^void               gtk_range_set_flippable                 (GtkRange      *range,$/;"	p
gtk_range_set_increments	gtkrange.h	/^void               gtk_range_set_increments                (GtkRange      *range,$/;"	p
gtk_range_set_inverted	gtkrange.h	/^void               gtk_range_set_inverted                  (GtkRange      *range,$/;"	p
gtk_range_set_lower_stepper_sensitivity	gtkrange.h	/^void               gtk_range_set_lower_stepper_sensitivity (GtkRange      *range,$/;"	p
gtk_range_set_min_slider_size	gtkrange.h	/^void               gtk_range_set_min_slider_size           (GtkRange      *range,$/;"	p
gtk_range_set_range	gtkrange.h	/^void               gtk_range_set_range                     (GtkRange      *range,$/;"	p
gtk_range_set_restrict_to_fill_level	gtkrange.h	/^void               gtk_range_set_restrict_to_fill_level    (GtkRange      *range,$/;"	p
gtk_range_set_round_digits	gtkrange.h	/^void               gtk_range_set_round_digits              (GtkRange      *range,$/;"	p
gtk_range_set_show_fill_level	gtkrange.h	/^void               gtk_range_set_show_fill_level           (GtkRange      *range,$/;"	p
gtk_range_set_slider_size_fixed	gtkrange.h	/^void               gtk_range_set_slider_size_fixed         (GtkRange      *range,$/;"	p
gtk_range_set_update_policy	gtkrange.h	/^void               gtk_range_set_update_policy             (GtkRange      *range,$/;"	p
gtk_range_set_upper_stepper_sensitivity	gtkrange.h	/^void               gtk_range_set_upper_stepper_sensitivity (GtkRange      *range,$/;"	p
gtk_range_set_value	gtkrange.h	/^void               gtk_range_set_value                     (GtkRange      *range,$/;"	p
gtk_rc_add_class_style	gtkrc.h	/^void	  gtk_rc_add_class_style	(GtkRcStyle   *rc_style,$/;"	p
gtk_rc_add_default_file	gtkrc.h	/^void      gtk_rc_add_default_file	(const gchar *filename);$/;"	p
gtk_rc_add_default_file	gtkrc.h	128;"	d
gtk_rc_add_widget_class_style	gtkrc.h	/^void	  gtk_rc_add_widget_class_style (GtkRcStyle   *rc_style,$/;"	p
gtk_rc_add_widget_name_style	gtkrc.h	/^void	  gtk_rc_add_widget_name_style	(GtkRcStyle   *rc_style,$/;"	p
gtk_rc_find_module_in_path	gtkrc.h	/^gchar*		gtk_rc_find_module_in_path	(const gchar 	*module_file);$/;"	p
gtk_rc_find_pixmap_in_path	gtkrc.h	/^gchar*   gtk_rc_find_pixmap_in_path (GtkSettings  *settings,$/;"	p
gtk_rc_get_default_files	gtkrc.h	/^gchar**   gtk_rc_get_default_files      (void);$/;"	p
gtk_rc_get_im_module_file	gtkrc.h	/^gchar*		gtk_rc_get_im_module_file	(void);$/;"	p
gtk_rc_get_im_module_path	gtkrc.h	/^gchar*		gtk_rc_get_im_module_path	(void);$/;"	p
gtk_rc_get_module_dir	gtkrc.h	/^gchar*		gtk_rc_get_module_dir		(void);$/;"	p
gtk_rc_get_style	gtkrc.h	/^GtkStyle* gtk_rc_get_style		(GtkWidget   *widget);$/;"	p
gtk_rc_get_style_by_paths	gtkrc.h	/^GtkStyle* gtk_rc_get_style_by_paths     (GtkSettings *settings,$/;"	p
gtk_rc_get_theme_dir	gtkrc.h	/^gchar*		gtk_rc_get_theme_dir		(void);$/;"	p
gtk_rc_parse	gtkrc.h	/^void	  gtk_rc_parse			(const gchar *filename);$/;"	p
gtk_rc_parse	gtkrc.h	130;"	d
gtk_rc_parse_color	gtkrc.h	/^guint	  gtk_rc_parse_color	(GScanner	     *scanner,$/;"	p
gtk_rc_parse_color_full	gtkrc.h	/^guint	  gtk_rc_parse_color_full (GScanner	     *scanner,$/;"	p
gtk_rc_parse_priority	gtkrc.h	/^guint	  gtk_rc_parse_priority	(GScanner	     *scanner,$/;"	p
gtk_rc_parse_state	gtkrc.h	/^guint	  gtk_rc_parse_state	(GScanner	     *scanner,$/;"	p
gtk_rc_parse_string	gtkrc.h	/^void	  gtk_rc_parse_string		(const gchar *rc_string);$/;"	p
gtk_rc_property_parse_border	gtksettings.h	/^gboolean gtk_rc_property_parse_border      (const GParamSpec *pspec,$/;"	p
gtk_rc_property_parse_color	gtksettings.h	/^gboolean gtk_rc_property_parse_color       (const GParamSpec *pspec,$/;"	p
gtk_rc_property_parse_enum	gtksettings.h	/^gboolean gtk_rc_property_parse_enum        (const GParamSpec *pspec,$/;"	p
gtk_rc_property_parse_flags	gtksettings.h	/^gboolean gtk_rc_property_parse_flags       (const GParamSpec *pspec,$/;"	p
gtk_rc_property_parse_requisition	gtksettings.h	/^gboolean gtk_rc_property_parse_requisition (const GParamSpec *pspec,$/;"	p
gtk_rc_reparse_all	gtkrc.h	/^gboolean  gtk_rc_reparse_all		(void);$/;"	p
gtk_rc_reparse_all_for_settings	gtkrc.h	/^gboolean gtk_rc_reparse_all_for_settings (GtkSettings *settings,$/;"	p
gtk_rc_reset_styles	gtkrc.h	/^void     gtk_rc_reset_styles             (GtkSettings *settings);$/;"	p
gtk_rc_scanner_new	gtkrc.h	/^GScanner* gtk_rc_scanner_new	(void);$/;"	p
gtk_rc_set_default_files	gtkrc.h	/^void      gtk_rc_set_default_files      (gchar **filenames);$/;"	p
gtk_rc_set_default_files	gtkrc.h	129;"	d
gtk_rc_style_copy	gtkrc.h	/^GtkRcStyle* gtk_rc_style_copy       (GtkRcStyle *orig);$/;"	p
gtk_rc_style_new	gtkrc.h	/^GtkRcStyle* gtk_rc_style_new        (void);$/;"	p
gtk_rc_style_ref	gtkrc.h	/^void        gtk_rc_style_ref        (GtkRcStyle *rc_style);$/;"	p
gtk_rc_style_unref	gtkrc.h	/^void        gtk_rc_style_unref      (GtkRcStyle *rc_style);$/;"	p
gtk_recent1	gtkrecentchoosermenu.h	/^  void (* gtk_recent1) (void);$/;"	m	struct:_GtkRecentChooserMenuClass
gtk_recent2	gtkrecentchoosermenu.h	/^  void (* gtk_recent2) (void);$/;"	m	struct:_GtkRecentChooserMenuClass
gtk_recent3	gtkrecentchoosermenu.h	/^  void (* gtk_recent3) (void);$/;"	m	struct:_GtkRecentChooserMenuClass
gtk_recent4	gtkrecentchoosermenu.h	/^  void (* gtk_recent4) (void);$/;"	m	struct:_GtkRecentChooserMenuClass
gtk_recent_action_get_show_numbers	gtkrecentaction.h	/^gboolean   gtk_recent_action_get_show_numbers (GtkRecentAction  *action);$/;"	p
gtk_recent_action_new	gtkrecentaction.h	/^GtkAction *gtk_recent_action_new              (const gchar      *name,$/;"	p
gtk_recent_action_new_for_manager	gtkrecentaction.h	/^GtkAction *gtk_recent_action_new_for_manager  (const gchar      *name,$/;"	p
gtk_recent_action_set_show_numbers	gtkrecentaction.h	/^void       gtk_recent_action_set_show_numbers (GtkRecentAction  *action,$/;"	p
gtk_recent_chooser_add_filter	gtkrecentchooser.h	/^void 		 gtk_recent_chooser_add_filter    (GtkRecentChooser *chooser,$/;"	p
gtk_recent_chooser_error_quark	gtkrecentchooser.h	/^GQuark  gtk_recent_chooser_error_quark (void);$/;"	p
gtk_recent_chooser_get_current_item	gtkrecentchooser.h	/^GtkRecentInfo *gtk_recent_chooser_get_current_item (GtkRecentChooser  *chooser);$/;"	p
gtk_recent_chooser_get_current_uri	gtkrecentchooser.h	/^gchar *        gtk_recent_chooser_get_current_uri  (GtkRecentChooser  *chooser);$/;"	p
gtk_recent_chooser_get_filter	gtkrecentchooser.h	/^GtkRecentFilter *gtk_recent_chooser_get_filter    (GtkRecentChooser *chooser);$/;"	p
gtk_recent_chooser_get_items	gtkrecentchooser.h	/^GList *        gtk_recent_chooser_get_items        (GtkRecentChooser  *chooser);$/;"	p
gtk_recent_chooser_get_limit	gtkrecentchooser.h	/^gint              gtk_recent_chooser_get_limit           (GtkRecentChooser  *chooser);$/;"	p
gtk_recent_chooser_get_local_only	gtkrecentchooser.h	/^gboolean          gtk_recent_chooser_get_local_only      (GtkRecentChooser  *chooser);$/;"	p
gtk_recent_chooser_get_select_multiple	gtkrecentchooser.h	/^gboolean          gtk_recent_chooser_get_select_multiple (GtkRecentChooser  *chooser);$/;"	p
gtk_recent_chooser_get_show_icons	gtkrecentchooser.h	/^gboolean          gtk_recent_chooser_get_show_icons      (GtkRecentChooser  *chooser);$/;"	p
gtk_recent_chooser_get_show_not_found	gtkrecentchooser.h	/^gboolean          gtk_recent_chooser_get_show_not_found  (GtkRecentChooser  *chooser);$/;"	p
gtk_recent_chooser_get_show_numbers	gtkrecentchooser.h	/^gboolean          gtk_recent_chooser_get_show_numbers    (GtkRecentChooser  *chooser);$/;"	p
gtk_recent_chooser_get_show_private	gtkrecentchooser.h	/^gboolean          gtk_recent_chooser_get_show_private    (GtkRecentChooser  *chooser);$/;"	p
gtk_recent_chooser_get_show_tips	gtkrecentchooser.h	/^gboolean          gtk_recent_chooser_get_show_tips       (GtkRecentChooser  *chooser);$/;"	p
gtk_recent_chooser_get_sort_type	gtkrecentchooser.h	/^GtkRecentSortType gtk_recent_chooser_get_sort_type       (GtkRecentChooser  *chooser);$/;"	p
gtk_recent_chooser_get_uris	gtkrecentchooser.h	/^gchar **       gtk_recent_chooser_get_uris         (GtkRecentChooser  *chooser,$/;"	p
gtk_recent_chooser_list_filters	gtkrecentchooser.h	/^GSList * 	 gtk_recent_chooser_list_filters  (GtkRecentChooser *chooser);$/;"	p
gtk_recent_chooser_menu_get_show_numbers	gtkrecentchoosermenu.h	/^gboolean   gtk_recent_chooser_menu_get_show_numbers (GtkRecentChooserMenu *menu);$/;"	p
gtk_recent_chooser_menu_new	gtkrecentchoosermenu.h	/^GtkWidget *gtk_recent_chooser_menu_new              (void);$/;"	p
gtk_recent_chooser_menu_new_for_manager	gtkrecentchoosermenu.h	/^GtkWidget *gtk_recent_chooser_menu_new_for_manager  (GtkRecentManager     *manager);$/;"	p
gtk_recent_chooser_menu_set_show_numbers	gtkrecentchoosermenu.h	/^void       gtk_recent_chooser_menu_set_show_numbers (GtkRecentChooserMenu *menu,$/;"	p
gtk_recent_chooser_remove_filter	gtkrecentchooser.h	/^void 		 gtk_recent_chooser_remove_filter (GtkRecentChooser *chooser,$/;"	p
gtk_recent_chooser_select_all	gtkrecentchooser.h	/^void           gtk_recent_chooser_select_all       (GtkRecentChooser  *chooser);$/;"	p
gtk_recent_chooser_select_uri	gtkrecentchooser.h	/^gboolean       gtk_recent_chooser_select_uri       (GtkRecentChooser  *chooser,$/;"	p
gtk_recent_chooser_set_current_uri	gtkrecentchooser.h	/^gboolean       gtk_recent_chooser_set_current_uri  (GtkRecentChooser  *chooser,$/;"	p
gtk_recent_chooser_set_filter	gtkrecentchooser.h	/^void 		 gtk_recent_chooser_set_filter    (GtkRecentChooser *chooser,$/;"	p
gtk_recent_chooser_set_limit	gtkrecentchooser.h	/^void              gtk_recent_chooser_set_limit           (GtkRecentChooser  *chooser,$/;"	p
gtk_recent_chooser_set_local_only	gtkrecentchooser.h	/^void              gtk_recent_chooser_set_local_only      (GtkRecentChooser  *chooser,$/;"	p
gtk_recent_chooser_set_select_multiple	gtkrecentchooser.h	/^void              gtk_recent_chooser_set_select_multiple (GtkRecentChooser  *chooser,$/;"	p
gtk_recent_chooser_set_show_icons	gtkrecentchooser.h	/^void              gtk_recent_chooser_set_show_icons      (GtkRecentChooser  *chooser,$/;"	p
gtk_recent_chooser_set_show_not_found	gtkrecentchooser.h	/^void              gtk_recent_chooser_set_show_not_found  (GtkRecentChooser  *chooser,$/;"	p
gtk_recent_chooser_set_show_numbers	gtkrecentchooser.h	/^void              gtk_recent_chooser_set_show_numbers    (GtkRecentChooser  *chooser,$/;"	p
gtk_recent_chooser_set_show_private	gtkrecentchooser.h	/^void              gtk_recent_chooser_set_show_private    (GtkRecentChooser  *chooser,$/;"	p
gtk_recent_chooser_set_show_tips	gtkrecentchooser.h	/^void              gtk_recent_chooser_set_show_tips       (GtkRecentChooser  *chooser,$/;"	p
gtk_recent_chooser_set_sort_func	gtkrecentchooser.h	/^void              gtk_recent_chooser_set_sort_func       (GtkRecentChooser  *chooser,$/;"	p
gtk_recent_chooser_set_sort_type	gtkrecentchooser.h	/^void              gtk_recent_chooser_set_sort_type       (GtkRecentChooser  *chooser,$/;"	p
gtk_recent_chooser_unselect_all	gtkrecentchooser.h	/^void           gtk_recent_chooser_unselect_all     (GtkRecentChooser  *chooser);$/;"	p
gtk_recent_chooser_unselect_uri	gtkrecentchooser.h	/^void           gtk_recent_chooser_unselect_uri     (GtkRecentChooser  *chooser,$/;"	p
gtk_recent_chooser_widget_new	gtkrecentchooserwidget.h	/^GtkWidget *gtk_recent_chooser_widget_new             (void);$/;"	p
gtk_recent_chooser_widget_new_for_manager	gtkrecentchooserwidget.h	/^GtkWidget *gtk_recent_chooser_widget_new_for_manager (GtkRecentManager *manager);$/;"	p
gtk_recent_filter_add_age	gtkrecentfilter.h	/^void gtk_recent_filter_add_age            (GtkRecentFilter      *filter,$/;"	p
gtk_recent_filter_add_application	gtkrecentfilter.h	/^void gtk_recent_filter_add_application    (GtkRecentFilter      *filter,$/;"	p
gtk_recent_filter_add_custom	gtkrecentfilter.h	/^void gtk_recent_filter_add_custom         (GtkRecentFilter      *filter,$/;"	p
gtk_recent_filter_add_group	gtkrecentfilter.h	/^void gtk_recent_filter_add_group          (GtkRecentFilter      *filter,$/;"	p
gtk_recent_filter_add_mime_type	gtkrecentfilter.h	/^void gtk_recent_filter_add_mime_type      (GtkRecentFilter      *filter,$/;"	p
gtk_recent_filter_add_pattern	gtkrecentfilter.h	/^void gtk_recent_filter_add_pattern        (GtkRecentFilter      *filter,$/;"	p
gtk_recent_filter_add_pixbuf_formats	gtkrecentfilter.h	/^void gtk_recent_filter_add_pixbuf_formats (GtkRecentFilter      *filter);$/;"	p
gtk_recent_filter_filter	gtkrecentfilter.h	/^gboolean             gtk_recent_filter_filter     (GtkRecentFilter           *filter,$/;"	p
gtk_recent_filter_get_name	gtkrecentfilter.h	/^const gchar *         gtk_recent_filter_get_name (GtkRecentFilter *filter);$/;"	p
gtk_recent_filter_get_needed	gtkrecentfilter.h	/^GtkRecentFilterFlags gtk_recent_filter_get_needed (GtkRecentFilter           *filter);$/;"	p
gtk_recent_filter_new	gtkrecentfilter.h	/^GtkRecentFilter *     gtk_recent_filter_new      (void);$/;"	p
gtk_recent_filter_set_name	gtkrecentfilter.h	/^void                  gtk_recent_filter_set_name (GtkRecentFilter *filter,$/;"	p
gtk_recent_info_exists	gtkrecentmanager.h	/^gboolean              gtk_recent_info_exists               (GtkRecentInfo  *info);$/;"	p
gtk_recent_info_get_added	gtkrecentmanager.h	/^time_t                gtk_recent_info_get_added            (GtkRecentInfo  *info);$/;"	p
gtk_recent_info_get_age	gtkrecentmanager.h	/^gint                  gtk_recent_info_get_age              (GtkRecentInfo  *info);$/;"	p
gtk_recent_info_get_application_info	gtkrecentmanager.h	/^gboolean              gtk_recent_info_get_application_info (GtkRecentInfo  *info,$/;"	p
gtk_recent_info_get_description	gtkrecentmanager.h	/^const gchar *         gtk_recent_info_get_description      (GtkRecentInfo  *info);$/;"	p
gtk_recent_info_get_display_name	gtkrecentmanager.h	/^const gchar *         gtk_recent_info_get_display_name     (GtkRecentInfo  *info);$/;"	p
gtk_recent_info_get_icon	gtkrecentmanager.h	/^GdkPixbuf *           gtk_recent_info_get_icon             (GtkRecentInfo  *info,$/;"	p
gtk_recent_info_get_mime_type	gtkrecentmanager.h	/^const gchar *         gtk_recent_info_get_mime_type        (GtkRecentInfo  *info);$/;"	p
gtk_recent_info_get_modified	gtkrecentmanager.h	/^time_t                gtk_recent_info_get_modified         (GtkRecentInfo  *info);$/;"	p
gtk_recent_info_get_private_hint	gtkrecentmanager.h	/^gboolean              gtk_recent_info_get_private_hint     (GtkRecentInfo  *info);$/;"	p
gtk_recent_info_get_uri	gtkrecentmanager.h	/^const gchar *         gtk_recent_info_get_uri              (GtkRecentInfo  *info);$/;"	p
gtk_recent_info_get_visited	gtkrecentmanager.h	/^time_t                gtk_recent_info_get_visited          (GtkRecentInfo  *info);$/;"	p
gtk_recent_info_has_application	gtkrecentmanager.h	/^gboolean              gtk_recent_info_has_application      (GtkRecentInfo  *info,$/;"	p
gtk_recent_info_has_group	gtkrecentmanager.h	/^gboolean              gtk_recent_info_has_group            (GtkRecentInfo  *info,$/;"	p
gtk_recent_info_is_local	gtkrecentmanager.h	/^gboolean              gtk_recent_info_is_local             (GtkRecentInfo  *info);$/;"	p
gtk_recent_info_match	gtkrecentmanager.h	/^gboolean              gtk_recent_info_match                (GtkRecentInfo  *info_a,$/;"	p
gtk_recent_info_ref	gtkrecentmanager.h	/^GtkRecentInfo *       gtk_recent_info_ref                  (GtkRecentInfo  *info);$/;"	p
gtk_recent_info_unref	gtkrecentmanager.h	/^void                  gtk_recent_info_unref                (GtkRecentInfo  *info);$/;"	p
gtk_recent_manager_add_full	gtkrecentmanager.h	/^gboolean          gtk_recent_manager_add_full       (GtkRecentManager     *manager,$/;"	p
gtk_recent_manager_add_item	gtkrecentmanager.h	/^gboolean          gtk_recent_manager_add_item       (GtkRecentManager     *manager,$/;"	p
gtk_recent_manager_error_quark	gtkrecentmanager.h	/^GQuark 	gtk_recent_manager_error_quark (void);$/;"	p
gtk_recent_manager_get_default	gtkrecentmanager.h	/^GtkRecentManager *gtk_recent_manager_get_default    (void);$/;"	p
gtk_recent_manager_get_for_screen	gtkrecentmanager.h	/^GtkRecentManager *gtk_recent_manager_get_for_screen (GdkScreen            *screen);$/;"	p
gtk_recent_manager_get_items	gtkrecentmanager.h	/^GList *           gtk_recent_manager_get_items      (GtkRecentManager     *manager);$/;"	p
gtk_recent_manager_get_limit	gtkrecentmanager.h	/^gint              gtk_recent_manager_get_limit      (GtkRecentManager     *manager);$/;"	p
gtk_recent_manager_has_item	gtkrecentmanager.h	/^gboolean          gtk_recent_manager_has_item       (GtkRecentManager     *manager,$/;"	p
gtk_recent_manager_lookup_item	gtkrecentmanager.h	/^GtkRecentInfo *   gtk_recent_manager_lookup_item    (GtkRecentManager     *manager,$/;"	p
gtk_recent_manager_move_item	gtkrecentmanager.h	/^gboolean          gtk_recent_manager_move_item      (GtkRecentManager     *manager,$/;"	p
gtk_recent_manager_new	gtkrecentmanager.h	/^GtkRecentManager *gtk_recent_manager_new            (void);$/;"	p
gtk_recent_manager_purge_items	gtkrecentmanager.h	/^gint              gtk_recent_manager_purge_items    (GtkRecentManager     *manager,$/;"	p
gtk_recent_manager_remove_item	gtkrecentmanager.h	/^gboolean          gtk_recent_manager_remove_item    (GtkRecentManager     *manager,$/;"	p
gtk_recent_manager_set_limit	gtkrecentmanager.h	/^void              gtk_recent_manager_set_limit      (GtkRecentManager     *manager,$/;"	p
gtk_recent_manager_set_screen	gtkrecentmanager.h	/^void              gtk_recent_manager_set_screen     (GtkRecentManager     *manager,$/;"	p
gtk_requisition_copy	gtkwidget.h	/^GtkRequisition *gtk_requisition_copy     (const GtkRequisition *requisition);$/;"	p
gtk_requisition_free	gtkwidget.h	/^void            gtk_requisition_free     (GtkRequisition       *requisition);$/;"	p
gtk_rgb_to_hsv	gtkhsv.h	/^void       gtk_rgb_to_hsv       (gdouble    r,$/;"	p
gtk_ruler_draw_pos	gtkruler.h	/^void            gtk_ruler_draw_pos   (GtkRuler       *ruler);$/;"	p
gtk_ruler_draw_ticks	gtkruler.h	/^void            gtk_ruler_draw_ticks (GtkRuler       *ruler);$/;"	p
gtk_ruler_get_metric	gtkruler.h	/^GtkMetricType   gtk_ruler_get_metric (GtkRuler       *ruler);$/;"	p
gtk_ruler_get_range	gtkruler.h	/^void            gtk_ruler_get_range  (GtkRuler       *ruler,$/;"	p
gtk_ruler_set_metric	gtkruler.h	/^void            gtk_ruler_set_metric (GtkRuler       *ruler,$/;"	p
gtk_ruler_set_range	gtkruler.h	/^void            gtk_ruler_set_range  (GtkRuler       *ruler,$/;"	p
gtk_scale_add_mark	gtkscale.h	/^void              gtk_scale_add_mark           (GtkScale        *scale,$/;"	p
gtk_scale_button_get_adjustment	gtkscalebutton.h	/^GtkAdjustment *  gtk_scale_button_get_adjustment   (GtkScaleButton  *button);$/;"	p
gtk_scale_button_get_minus_button	gtkscalebutton.h	/^GtkWidget *      gtk_scale_button_get_minus_button (GtkScaleButton  *button);$/;"	p
gtk_scale_button_get_orientation	gtkscalebutton.h	/^GtkOrientation   gtk_scale_button_get_orientation  (GtkScaleButton  *button);$/;"	p
gtk_scale_button_get_plus_button	gtkscalebutton.h	/^GtkWidget *      gtk_scale_button_get_plus_button  (GtkScaleButton  *button);$/;"	p
gtk_scale_button_get_popup	gtkscalebutton.h	/^GtkWidget *      gtk_scale_button_get_popup        (GtkScaleButton  *button);$/;"	p
gtk_scale_button_get_value	gtkscalebutton.h	/^gdouble          gtk_scale_button_get_value        (GtkScaleButton  *button);$/;"	p
gtk_scale_button_new	gtkscalebutton.h	/^GtkWidget *      gtk_scale_button_new              (GtkIconSize      size,$/;"	p
gtk_scale_button_set_adjustment	gtkscalebutton.h	/^void             gtk_scale_button_set_adjustment   (GtkScaleButton  *button,$/;"	p
gtk_scale_button_set_icons	gtkscalebutton.h	/^void             gtk_scale_button_set_icons        (GtkScaleButton  *button,$/;"	p
gtk_scale_button_set_orientation	gtkscalebutton.h	/^void             gtk_scale_button_set_orientation  (GtkScaleButton  *button,$/;"	p
gtk_scale_button_set_value	gtkscalebutton.h	/^void             gtk_scale_button_set_value        (GtkScaleButton  *button,$/;"	p
gtk_scale_clear_marks	gtkscale.h	/^void              gtk_scale_clear_marks        (GtkScale        *scale);$/;"	p
gtk_scale_get_digits	gtkscale.h	/^gint              gtk_scale_get_digits         (GtkScale        *scale);$/;"	p
gtk_scale_get_draw_value	gtkscale.h	/^gboolean          gtk_scale_get_draw_value     (GtkScale        *scale);$/;"	p
gtk_scale_get_layout	gtkscale.h	/^PangoLayout     * gtk_scale_get_layout         (GtkScale        *scale);$/;"	p
gtk_scale_get_layout_offsets	gtkscale.h	/^void              gtk_scale_get_layout_offsets (GtkScale        *scale,$/;"	p
gtk_scale_get_value_pos	gtkscale.h	/^GtkPositionType   gtk_scale_get_value_pos      (GtkScale        *scale);$/;"	p
gtk_scale_set_digits	gtkscale.h	/^void              gtk_scale_set_digits         (GtkScale        *scale,$/;"	p
gtk_scale_set_draw_value	gtkscale.h	/^void              gtk_scale_set_draw_value     (GtkScale        *scale,$/;"	p
gtk_scale_set_value_pos	gtkscale.h	/^void              gtk_scale_set_value_pos      (GtkScale        *scale,$/;"	p
gtk_scrolled_window_add_with_viewport	gtkscrolledwindow.h	/^void	       gtk_scrolled_window_add_with_viewport (GtkScrolledWindow *scrolled_window,$/;"	p
gtk_scrolled_window_get_hadjustment	gtkscrolledwindow.h	/^GtkAdjustment* gtk_scrolled_window_get_hadjustment   (GtkScrolledWindow *scrolled_window);$/;"	p
gtk_scrolled_window_get_hscrollbar	gtkscrolledwindow.h	/^GtkWidget*     gtk_scrolled_window_get_hscrollbar    (GtkScrolledWindow *scrolled_window);$/;"	p
gtk_scrolled_window_get_placement	gtkscrolledwindow.h	/^GtkCornerType  gtk_scrolled_window_get_placement     (GtkScrolledWindow *scrolled_window);$/;"	p
gtk_scrolled_window_get_policy	gtkscrolledwindow.h	/^void           gtk_scrolled_window_get_policy        (GtkScrolledWindow *scrolled_window,$/;"	p
gtk_scrolled_window_get_shadow_type	gtkscrolledwindow.h	/^GtkShadowType  gtk_scrolled_window_get_shadow_type   (GtkScrolledWindow *scrolled_window);$/;"	p
gtk_scrolled_window_get_vadjustment	gtkscrolledwindow.h	/^GtkAdjustment* gtk_scrolled_window_get_vadjustment   (GtkScrolledWindow *scrolled_window);$/;"	p
gtk_scrolled_window_get_vscrollbar	gtkscrolledwindow.h	/^GtkWidget*     gtk_scrolled_window_get_vscrollbar    (GtkScrolledWindow *scrolled_window);$/;"	p
gtk_scrolled_window_new	gtkscrolledwindow.h	/^GtkWidget*     gtk_scrolled_window_new               (GtkAdjustment     *hadjustment,$/;"	p
gtk_scrolled_window_set_hadjustment	gtkscrolledwindow.h	/^void           gtk_scrolled_window_set_hadjustment   (GtkScrolledWindow *scrolled_window,$/;"	p
gtk_scrolled_window_set_placement	gtkscrolledwindow.h	/^void           gtk_scrolled_window_set_placement     (GtkScrolledWindow *scrolled_window,$/;"	p
gtk_scrolled_window_set_policy	gtkscrolledwindow.h	/^void           gtk_scrolled_window_set_policy        (GtkScrolledWindow *scrolled_window,$/;"	p
gtk_scrolled_window_set_shadow_type	gtkscrolledwindow.h	/^void           gtk_scrolled_window_set_shadow_type   (GtkScrolledWindow *scrolled_window,$/;"	p
gtk_scrolled_window_set_vadjustment	gtkscrolledwindow.h	/^void           gtk_scrolled_window_set_vadjustment   (GtkScrolledWindow *scrolled_window,$/;"	p
gtk_scrolled_window_unset_placement	gtkscrolledwindow.h	/^void           gtk_scrolled_window_unset_placement   (GtkScrolledWindow *scrolled_window);$/;"	p
gtk_selection_add_target	gtkselection.h	/^void     gtk_selection_add_target    (GtkWidget            *widget,$/;"	p
gtk_selection_add_targets	gtkselection.h	/^void     gtk_selection_add_targets   (GtkWidget            *widget,$/;"	p
gtk_selection_clear	gtkselection.h	/^gboolean gtk_selection_clear		  (GtkWidget 	     *widget,$/;"	p
gtk_selection_clear_targets	gtkselection.h	/^void     gtk_selection_clear_targets (GtkWidget            *widget,$/;"	p
gtk_selection_convert	gtkselection.h	/^gboolean gtk_selection_convert       (GtkWidget            *widget,$/;"	p
gtk_selection_data_copy	gtkselection.h	/^GtkSelectionData *gtk_selection_data_copy     (GtkSelectionData *data);$/;"	p
gtk_selection_data_free	gtkselection.h	/^void		  gtk_selection_data_free     (GtkSelectionData *data);$/;"	p
gtk_selection_data_get_data	gtkselection.h	/^const guchar *gtk_selection_data_get_data      (GtkSelectionData *selection_data);$/;"	p
gtk_selection_data_get_data_type	gtkselection.h	/^GdkAtom       gtk_selection_data_get_data_type (GtkSelectionData *selection_data);$/;"	p
gtk_selection_data_get_display	gtkselection.h	/^GdkDisplay   *gtk_selection_data_get_display   (GtkSelectionData *selection_data);$/;"	p
gtk_selection_data_get_format	gtkselection.h	/^gint          gtk_selection_data_get_format    (GtkSelectionData *selection_data);$/;"	p
gtk_selection_data_get_length	gtkselection.h	/^gint          gtk_selection_data_get_length    (GtkSelectionData *selection_data);$/;"	p
gtk_selection_data_get_pixbuf	gtkselection.h	/^GdkPixbuf *gtk_selection_data_get_pixbuf (GtkSelectionData  *selection_data);$/;"	p
gtk_selection_data_get_selection	gtkselection.h	/^GdkAtom       gtk_selection_data_get_selection (GtkSelectionData *selection_data);$/;"	p
gtk_selection_data_get_target	gtkselection.h	/^GdkAtom       gtk_selection_data_get_target    (GtkSelectionData *selection_data);$/;"	p
gtk_selection_data_get_targets	gtkselection.h	/^gboolean gtk_selection_data_get_targets          (GtkSelectionData  *selection_data,$/;"	p
gtk_selection_data_get_text	gtkselection.h	/^guchar * gtk_selection_data_get_text (GtkSelectionData     *selection_data);$/;"	p
gtk_selection_data_get_uris	gtkselection.h	/^gchar  **gtk_selection_data_get_uris (GtkSelectionData     *selection_data);$/;"	p
gtk_selection_data_set	gtkselection.h	/^void     gtk_selection_data_set      (GtkSelectionData     *selection_data,$/;"	p
gtk_selection_data_set_pixbuf	gtkselection.h	/^gboolean gtk_selection_data_set_pixbuf   (GtkSelectionData  *selection_data,$/;"	p
gtk_selection_data_set_text	gtkselection.h	/^gboolean gtk_selection_data_set_text (GtkSelectionData     *selection_data,$/;"	p
gtk_selection_data_set_uris	gtkselection.h	/^gboolean gtk_selection_data_set_uris (GtkSelectionData     *selection_data,$/;"	p
gtk_selection_data_targets_include_image	gtkselection.h	/^gboolean gtk_selection_data_targets_include_image (GtkSelectionData  *selection_data,$/;"	p
gtk_selection_data_targets_include_rich_text	gtkselection.h	/^gboolean gtk_selection_data_targets_include_rich_text (GtkSelectionData *selection_data,$/;"	p
gtk_selection_data_targets_include_text	gtkselection.h	/^gboolean gtk_selection_data_targets_include_text (GtkSelectionData  *selection_data);$/;"	p
gtk_selection_data_targets_include_uri	gtkselection.h	/^gboolean gtk_selection_data_targets_include_uri  (GtkSelectionData  *selection_data);$/;"	p
gtk_selection_owner_set	gtkselection.h	/^gboolean gtk_selection_owner_set             (GtkWidget  *widget,$/;"	p
gtk_selection_owner_set_for_display	gtkselection.h	/^gboolean gtk_selection_owner_set_for_display (GdkDisplay *display,$/;"	p
gtk_selection_remove_all	gtkselection.h	/^void gtk_selection_remove_all      (GtkWidget *widget);$/;"	p
gtk_separator_menu_item_new	gtkseparatormenuitem.h	/^GtkWidget* gtk_separator_menu_item_new	           (void);$/;"	p
gtk_separator_tool_item_get_draw	gtkseparatortoolitem.h	/^gboolean     gtk_separator_tool_item_get_draw (GtkSeparatorToolItem *item);$/;"	p
gtk_separator_tool_item_new	gtkseparatortoolitem.h	/^GtkToolItem *gtk_separator_tool_item_new      (void);$/;"	p
gtk_separator_tool_item_set_draw	gtkseparatortoolitem.h	/^void         gtk_separator_tool_item_set_draw (GtkSeparatorToolItem *item,$/;"	p
gtk_set_locale	gtkmain.h	/^gchar *        gtk_set_locale           (void);$/;"	p
gtk_settings_get_default	gtksettings.h	/^GtkSettings*	gtk_settings_get_default	     (void);$/;"	p
gtk_settings_get_for_screen	gtksettings.h	/^GtkSettings*	gtk_settings_get_for_screen	     (GdkScreen *screen);$/;"	p
gtk_settings_install_property	gtksettings.h	/^void		gtk_settings_install_property	     (GParamSpec         *pspec);$/;"	p
gtk_settings_install_property_parser	gtksettings.h	/^void		gtk_settings_install_property_parser (GParamSpec         *pspec,$/;"	p
gtk_settings_set_double_property	gtksettings.h	/^void		gtk_settings_set_double_property (GtkSettings	*settings,$/;"	p
gtk_settings_set_long_property	gtksettings.h	/^void		gtk_settings_set_long_property	 (GtkSettings	*settings,$/;"	p
gtk_settings_set_property_value	gtksettings.h	/^void		gtk_settings_set_property_value	 (GtkSettings	*settings,$/;"	p
gtk_settings_set_string_property	gtksettings.h	/^void		gtk_settings_set_string_property (GtkSettings	*settings,$/;"	p
gtk_show_uri	gtkshow.h	/^gboolean gtk_show_uri  (GdkScreen   *screen,$/;"	p
gtk_signal_compat_matched	gtksignal.h	/^void	gtk_signal_compat_matched		(GtkObject	    *object,$/;"	p
gtk_signal_connect	gtksignal.h	48;"	d
gtk_signal_connect_after	gtksignal.h	50;"	d
gtk_signal_connect_full	gtksignal.h	/^gulong	gtk_signal_connect_full			(GtkObject	    *object,$/;"	p
gtk_signal_connect_object	gtksignal.h	52;"	d
gtk_signal_connect_object_after	gtksignal.h	54;"	d
gtk_signal_connect_object_while_alive	gtksignal.h	/^void	gtk_signal_connect_object_while_alive	(GtkObject	    *object,$/;"	p
gtk_signal_connect_while_alive	gtksignal.h	/^void	gtk_signal_connect_while_alive		(GtkObject	    *object,$/;"	p
gtk_signal_default_marshaller	gtksignal.h	37;"	d
gtk_signal_disconnect	gtksignal.h	56;"	d
gtk_signal_disconnect_by_data	gtksignal.h	66;"	d
gtk_signal_disconnect_by_func	gtksignal.h	62;"	d
gtk_signal_emit	gtksignal.h	/^void	gtk_signal_emit				(GtkObject	    *object,$/;"	p
gtk_signal_emit_by_name	gtksignal.h	/^void	gtk_signal_emit_by_name			(GtkObject	    *object,$/;"	p
gtk_signal_emit_stop	gtksignal.h	46;"	d
gtk_signal_emit_stop_by_name	gtksignal.h	/^void	gtk_signal_emit_stop_by_name		(GtkObject	    *object,$/;"	p
gtk_signal_emitv	gtksignal.h	/^void	gtk_signal_emitv			(GtkObject	    *object,$/;"	p
gtk_signal_emitv_by_name	gtksignal.h	/^void	gtk_signal_emitv_by_name		(GtkObject	    *object,$/;"	p
gtk_signal_handler_block	gtksignal.h	58;"	d
gtk_signal_handler_block_by_data	gtksignal.h	72;"	d
gtk_signal_handler_block_by_func	gtksignal.h	68;"	d
gtk_signal_handler_pending	gtksignal.h	80;"	d
gtk_signal_handler_pending_by_func	gtksignal.h	82;"	d
gtk_signal_handler_unblock	gtksignal.h	60;"	d
gtk_signal_handler_unblock_by_data	gtksignal.h	78;"	d
gtk_signal_handler_unblock_by_func	gtksignal.h	74;"	d
gtk_signal_lookup	gtksignal.h	42;"	d
gtk_signal_name	gtksignal.h	44;"	d
gtk_signal_new	gtksignal.h	/^guint	gtk_signal_new				(const gchar	    *name,$/;"	p
gtk_signal_newv	gtksignal.h	/^guint	gtk_signal_newv				(const gchar	    *name,$/;"	p
gtk_size_group_add_widget	gtksizegroup.h	/^void             gtk_size_group_add_widget    (GtkSizeGroup     *size_group,$/;"	p
gtk_size_group_get_ignore_hidden	gtksizegroup.h	/^gboolean         gtk_size_group_get_ignore_hidden (GtkSizeGroup *size_group);$/;"	p
gtk_size_group_get_mode	gtksizegroup.h	/^GtkSizeGroupMode gtk_size_group_get_mode      (GtkSizeGroup     *size_group);$/;"	p
gtk_size_group_get_widgets	gtksizegroup.h	/^GSList *         gtk_size_group_get_widgets   (GtkSizeGroup     *size_group);$/;"	p
gtk_size_group_new	gtksizegroup.h	/^GtkSizeGroup *   gtk_size_group_new           (GtkSizeGroupMode  mode);$/;"	p
gtk_size_group_remove_widget	gtksizegroup.h	/^void             gtk_size_group_remove_widget (GtkSizeGroup     *size_group,$/;"	p
gtk_size_group_set_ignore_hidden	gtksizegroup.h	/^void             gtk_size_group_set_ignore_hidden (GtkSizeGroup *size_group,$/;"	p
gtk_size_group_set_mode	gtksizegroup.h	/^void             gtk_size_group_set_mode      (GtkSizeGroup     *size_group,$/;"	p
gtk_socket_add_id	gtksocket.h	/^void            gtk_socket_add_id (GtkSocket       *socket_,$/;"	p
gtk_socket_get_id	gtksocket.h	/^GdkNativeWindow gtk_socket_get_id (GtkSocket       *socket_);$/;"	p
gtk_socket_get_plug_window	gtksocket.h	/^GdkWindow*      gtk_socket_get_plug_window (GtkSocket       *socket_);$/;"	p
gtk_socket_new	gtksocket.h	/^GtkWidget*     gtk_socket_new      (void);$/;"	p
gtk_socket_steal	gtksocket.h	/^void           gtk_socket_steal    (GtkSocket      *socket_,$/;"	p
gtk_spin_button_configure	gtkspinbutton.h	/^void		gtk_spin_button_configure	   (GtkSpinButton  *spin_button,$/;"	p
gtk_spin_button_get_adjustment	gtkspinbutton.h	/^GtkAdjustment*	gtk_spin_button_get_adjustment	   (GtkSpinButton  *spin_button);$/;"	p
gtk_spin_button_get_digits	gtkspinbutton.h	/^guint           gtk_spin_button_get_digits         (GtkSpinButton  *spin_button);$/;"	p
gtk_spin_button_get_increments	gtkspinbutton.h	/^void            gtk_spin_button_get_increments     (GtkSpinButton  *spin_button,$/;"	p
gtk_spin_button_get_numeric	gtkspinbutton.h	/^gboolean        gtk_spin_button_get_numeric        (GtkSpinButton  *spin_button);$/;"	p
gtk_spin_button_get_range	gtkspinbutton.h	/^void            gtk_spin_button_get_range          (GtkSpinButton  *spin_button,$/;"	p
gtk_spin_button_get_snap_to_ticks	gtkspinbutton.h	/^gboolean        gtk_spin_button_get_snap_to_ticks  (GtkSpinButton  *spin_button);$/;"	p
gtk_spin_button_get_update_policy	gtkspinbutton.h	/^GtkSpinButtonUpdatePolicy gtk_spin_button_get_update_policy (GtkSpinButton *spin_button);$/;"	p
gtk_spin_button_get_value	gtkspinbutton.h	/^gdouble		gtk_spin_button_get_value          (GtkSpinButton  *spin_button);$/;"	p
gtk_spin_button_get_value_as_float	gtkspinbutton.h	191;"	d
gtk_spin_button_get_value_as_int	gtkspinbutton.h	/^gint		gtk_spin_button_get_value_as_int   (GtkSpinButton  *spin_button);$/;"	p
gtk_spin_button_get_wrap	gtkspinbutton.h	/^gboolean        gtk_spin_button_get_wrap           (GtkSpinButton  *spin_button);$/;"	p
gtk_spin_button_new	gtkspinbutton.h	/^GtkWidget*	gtk_spin_button_new		   (GtkAdjustment  *adjustment,$/;"	p
gtk_spin_button_new_with_range	gtkspinbutton.h	/^GtkWidget*	gtk_spin_button_new_with_range	   (gdouble  min,$/;"	p
gtk_spin_button_set_adjustment	gtkspinbutton.h	/^void		gtk_spin_button_set_adjustment	   (GtkSpinButton  *spin_button,$/;"	p
gtk_spin_button_set_digits	gtkspinbutton.h	/^void		gtk_spin_button_set_digits	   (GtkSpinButton  *spin_button,$/;"	p
gtk_spin_button_set_increments	gtkspinbutton.h	/^void		gtk_spin_button_set_increments	   (GtkSpinButton  *spin_button,$/;"	p
gtk_spin_button_set_numeric	gtkspinbutton.h	/^void		gtk_spin_button_set_numeric	   (GtkSpinButton  *spin_button,$/;"	p
gtk_spin_button_set_range	gtkspinbutton.h	/^void		gtk_spin_button_set_range	   (GtkSpinButton  *spin_button,$/;"	p
gtk_spin_button_set_snap_to_ticks	gtkspinbutton.h	/^void		gtk_spin_button_set_snap_to_ticks  (GtkSpinButton  *spin_button,$/;"	p
gtk_spin_button_set_update_policy	gtkspinbutton.h	/^void		gtk_spin_button_set_update_policy  (GtkSpinButton  *spin_button,$/;"	p
gtk_spin_button_set_value	gtkspinbutton.h	/^void		gtk_spin_button_set_value	   (GtkSpinButton  *spin_button,$/;"	p
gtk_spin_button_set_wrap	gtkspinbutton.h	/^void		gtk_spin_button_set_wrap	   (GtkSpinButton  *spin_button,$/;"	p
gtk_spin_button_spin	gtkspinbutton.h	/^void		gtk_spin_button_spin		   (GtkSpinButton  *spin_button,$/;"	p
gtk_spin_button_update	gtkspinbutton.h	/^void            gtk_spin_button_update             (GtkSpinButton  *spin_button);$/;"	p
gtk_spinner_new	gtkspinner.h	/^GtkWidget *gtk_spinner_new (void);$/;"	p
gtk_spinner_start	gtkspinner.h	/^void       gtk_spinner_start      (GtkSpinner *spinner);$/;"	p
gtk_spinner_stop	gtkspinner.h	/^void       gtk_spinner_stop       (GtkSpinner *spinner);$/;"	p
gtk_status_icon_get_blinking	gtkstatusicon.h	/^gboolean              gtk_status_icon_get_blinking       (GtkStatusIcon      *status_icon);$/;"	p
gtk_status_icon_get_geometry	gtkstatusicon.h	/^gboolean              gtk_status_icon_get_geometry       (GtkStatusIcon      *status_icon,$/;"	p
gtk_status_icon_get_gicon	gtkstatusicon.h	/^GIcon                *gtk_status_icon_get_gicon          (GtkStatusIcon      *status_icon);$/;"	p
gtk_status_icon_get_has_tooltip	gtkstatusicon.h	/^gboolean              gtk_status_icon_get_has_tooltip    (GtkStatusIcon      *status_icon);$/;"	p
gtk_status_icon_get_icon_name	gtkstatusicon.h	/^const gchar *         gtk_status_icon_get_icon_name      (GtkStatusIcon      *status_icon);$/;"	p
gtk_status_icon_get_pixbuf	gtkstatusicon.h	/^GdkPixbuf            *gtk_status_icon_get_pixbuf         (GtkStatusIcon      *status_icon);$/;"	p
gtk_status_icon_get_screen	gtkstatusicon.h	/^GdkScreen            *gtk_status_icon_get_screen         (GtkStatusIcon      *status_icon);$/;"	p
gtk_status_icon_get_size	gtkstatusicon.h	/^gint                  gtk_status_icon_get_size           (GtkStatusIcon      *status_icon);$/;"	p
gtk_status_icon_get_stock	gtkstatusicon.h	/^const gchar *         gtk_status_icon_get_stock          (GtkStatusIcon      *status_icon);$/;"	p
gtk_status_icon_get_storage_type	gtkstatusicon.h	/^GtkImageType          gtk_status_icon_get_storage_type   (GtkStatusIcon      *status_icon);$/;"	p
gtk_status_icon_get_title	gtkstatusicon.h	/^const gchar *         gtk_status_icon_get_title          (GtkStatusIcon      *status_icon);$/;"	p
gtk_status_icon_get_tooltip_markup	gtkstatusicon.h	/^gchar                *gtk_status_icon_get_tooltip_markup (GtkStatusIcon      *status_icon);$/;"	p
gtk_status_icon_get_tooltip_text	gtkstatusicon.h	/^gchar                *gtk_status_icon_get_tooltip_text   (GtkStatusIcon      *status_icon);$/;"	p
gtk_status_icon_get_visible	gtkstatusicon.h	/^gboolean              gtk_status_icon_get_visible        (GtkStatusIcon      *status_icon);$/;"	p
gtk_status_icon_get_x11_window_id	gtkstatusicon.h	/^guint32               gtk_status_icon_get_x11_window_id  (GtkStatusIcon      *status_icon);$/;"	p
gtk_status_icon_is_embedded	gtkstatusicon.h	/^gboolean              gtk_status_icon_is_embedded        (GtkStatusIcon      *status_icon);$/;"	p
gtk_status_icon_new	gtkstatusicon.h	/^GtkStatusIcon        *gtk_status_icon_new                (void);$/;"	p
gtk_status_icon_new_from_file	gtkstatusicon.h	/^GtkStatusIcon        *gtk_status_icon_new_from_file      (const gchar        *filename);$/;"	p
gtk_status_icon_new_from_gicon	gtkstatusicon.h	/^GtkStatusIcon        *gtk_status_icon_new_from_gicon     (GIcon              *icon);$/;"	p
gtk_status_icon_new_from_icon_name	gtkstatusicon.h	/^GtkStatusIcon        *gtk_status_icon_new_from_icon_name (const gchar        *icon_name);$/;"	p
gtk_status_icon_new_from_pixbuf	gtkstatusicon.h	/^GtkStatusIcon        *gtk_status_icon_new_from_pixbuf    (GdkPixbuf          *pixbuf);$/;"	p
gtk_status_icon_new_from_stock	gtkstatusicon.h	/^GtkStatusIcon        *gtk_status_icon_new_from_stock     (const gchar        *stock_id);$/;"	p
gtk_status_icon_position_menu	gtkstatusicon.h	/^void                  gtk_status_icon_position_menu      (GtkMenu            *menu,$/;"	p
gtk_status_icon_set_blinking	gtkstatusicon.h	/^void                  gtk_status_icon_set_blinking       (GtkStatusIcon      *status_icon,$/;"	p
gtk_status_icon_set_from_file	gtkstatusicon.h	/^void                  gtk_status_icon_set_from_file      (GtkStatusIcon      *status_icon,$/;"	p
gtk_status_icon_set_from_gicon	gtkstatusicon.h	/^void                  gtk_status_icon_set_from_gicon     (GtkStatusIcon      *status_icon,$/;"	p
gtk_status_icon_set_from_icon_name	gtkstatusicon.h	/^void                  gtk_status_icon_set_from_icon_name (GtkStatusIcon      *status_icon,$/;"	p
gtk_status_icon_set_from_pixbuf	gtkstatusicon.h	/^void                  gtk_status_icon_set_from_pixbuf    (GtkStatusIcon      *status_icon,$/;"	p
gtk_status_icon_set_from_stock	gtkstatusicon.h	/^void                  gtk_status_icon_set_from_stock     (GtkStatusIcon      *status_icon,$/;"	p
gtk_status_icon_set_has_tooltip	gtkstatusicon.h	/^void                  gtk_status_icon_set_has_tooltip    (GtkStatusIcon      *status_icon,$/;"	p
gtk_status_icon_set_name	gtkstatusicon.h	/^void                  gtk_status_icon_set_name           (GtkStatusIcon      *status_icon,$/;"	p
gtk_status_icon_set_screen	gtkstatusicon.h	/^void                  gtk_status_icon_set_screen         (GtkStatusIcon      *status_icon,$/;"	p
gtk_status_icon_set_title	gtkstatusicon.h	/^void                  gtk_status_icon_set_title          (GtkStatusIcon      *status_icon,$/;"	p
gtk_status_icon_set_tooltip	gtkstatusicon.h	/^void                  gtk_status_icon_set_tooltip        (GtkStatusIcon      *status_icon,$/;"	p
gtk_status_icon_set_tooltip_markup	gtkstatusicon.h	/^void                  gtk_status_icon_set_tooltip_markup (GtkStatusIcon      *status_icon,$/;"	p
gtk_status_icon_set_tooltip_text	gtkstatusicon.h	/^void                  gtk_status_icon_set_tooltip_text   (GtkStatusIcon      *status_icon,$/;"	p
gtk_status_icon_set_visible	gtkstatusicon.h	/^void                  gtk_status_icon_set_visible        (GtkStatusIcon      *status_icon,$/;"	p
gtk_statusbar_get_context_id	gtkstatusbar.h	/^guint	   gtk_statusbar_get_context_id	(GtkStatusbar *statusbar,$/;"	p
gtk_statusbar_get_has_resize_grip	gtkstatusbar.h	/^gboolean gtk_statusbar_get_has_resize_grip (GtkStatusbar *statusbar);$/;"	p
gtk_statusbar_get_message_area	gtkstatusbar.h	/^GtkWidget* gtk_statusbar_get_message_area  (GtkStatusbar *statusbar);$/;"	p
gtk_statusbar_new	gtkstatusbar.h	/^GtkWidget* gtk_statusbar_new          	(void);$/;"	p
gtk_statusbar_pop	gtkstatusbar.h	/^void       gtk_statusbar_pop          	(GtkStatusbar *statusbar,$/;"	p
gtk_statusbar_push	gtkstatusbar.h	/^guint      gtk_statusbar_push          	(GtkStatusbar *statusbar,$/;"	p
gtk_statusbar_remove	gtkstatusbar.h	/^void       gtk_statusbar_remove        	(GtkStatusbar *statusbar,$/;"	p
gtk_statusbar_remove_all	gtkstatusbar.h	/^void       gtk_statusbar_remove_all    	(GtkStatusbar *statusbar,$/;"	p
gtk_statusbar_set_has_resize_grip	gtkstatusbar.h	/^void     gtk_statusbar_set_has_resize_grip (GtkStatusbar *statusbar,$/;"	p
gtk_stock_add	gtkstock.h	/^void     gtk_stock_add        (const GtkStockItem  *items,$/;"	p
gtk_stock_add_static	gtkstock.h	/^void     gtk_stock_add_static (const GtkStockItem  *items,$/;"	p
gtk_stock_item_copy	gtkstock.h	/^GtkStockItem *gtk_stock_item_copy (const GtkStockItem *item);$/;"	p
gtk_stock_item_free	gtkstock.h	/^void          gtk_stock_item_free (GtkStockItem       *item);$/;"	p
gtk_stock_list_ids	gtkstock.h	/^GSList*  gtk_stock_list_ids  (void);$/;"	p
gtk_stock_lookup	gtkstock.h	/^gboolean gtk_stock_lookup     (const gchar         *stock_id,$/;"	p
gtk_stock_set_translate_func	gtkstock.h	/^void          gtk_stock_set_translate_func (const gchar      *domain,$/;"	p
gtk_style_apply_default_background	gtkstyle.h	/^void	  gtk_style_apply_default_background (GtkStyle	   *style,$/;"	p
gtk_style_apply_default_pixmap	gtkstyle.h	914;"	d
gtk_style_copy	gtkstyle.h	/^GtkStyle* gtk_style_copy		     (GtkStyle	   *style);$/;"	p
gtk_style_detach	gtkstyle.h	/^void	  gtk_style_detach		     (GtkStyle	   *style);$/;"	p
gtk_style_get_font	gtkstyle.h	/^GdkFont * gtk_style_get_font                 (GtkStyle     *style);$/;"	p
gtk_style_get_style_property	gtkstyle.h	/^void gtk_style_get_style_property (GtkStyle    *style,$/;"	p
gtk_style_get_valist	gtkstyle.h	/^void gtk_style_get_valist         (GtkStyle    *style,$/;"	p
gtk_style_lookup_color	gtkstyle.h	/^gboolean    gtk_style_lookup_color           (GtkStyle     *style,$/;"	p
gtk_style_lookup_icon_set	gtkstyle.h	/^GtkIconSet* gtk_style_lookup_icon_set        (GtkStyle     *style,$/;"	p
gtk_style_new	gtkstyle.h	/^GtkStyle* gtk_style_new			     (void);$/;"	p
gtk_style_ref	gtkstyle.h	/^GtkStyle* gtk_style_ref			     (GtkStyle	   *style);$/;"	p
gtk_style_render_icon	gtkstyle.h	/^GdkPixbuf*  gtk_style_render_icon     (GtkStyle            *style,$/;"	p
gtk_style_set_background	gtkstyle.h	/^void	  gtk_style_set_background	     (GtkStyle	   *style,$/;"	p
gtk_style_set_font	gtkstyle.h	/^void      gtk_style_set_font                 (GtkStyle     *style,$/;"	p
gtk_style_unref	gtkstyle.h	/^void	  gtk_style_unref		     (GtkStyle	   *style);$/;"	p
gtk_table_attach	gtktable.h	/^void	   gtk_table_attach	      (GtkTable	       *table,$/;"	p
gtk_table_attach_defaults	gtktable.h	/^void	   gtk_table_attach_defaults  (GtkTable	       *table,$/;"	p
gtk_table_get_col_spacing	gtktable.h	/^guint      gtk_table_get_col_spacing  (GtkTable        *table,$/;"	p
gtk_table_get_default_col_spacing	gtktable.h	/^guint      gtk_table_get_default_col_spacing (GtkTable        *table);$/;"	p
gtk_table_get_default_row_spacing	gtktable.h	/^guint      gtk_table_get_default_row_spacing (GtkTable        *table);$/;"	p
gtk_table_get_homogeneous	gtktable.h	/^gboolean   gtk_table_get_homogeneous  (GtkTable        *table);$/;"	p
gtk_table_get_row_spacing	gtktable.h	/^guint      gtk_table_get_row_spacing  (GtkTable        *table,$/;"	p
gtk_table_get_size	gtktable.h	/^void       gtk_table_get_size         (GtkTable        *table,$/;"	p
gtk_table_new	gtktable.h	/^GtkWidget* gtk_table_new	      (guint		rows,$/;"	p
gtk_table_resize	gtktable.h	/^void	   gtk_table_resize	      (GtkTable	       *table,$/;"	p
gtk_table_set_col_spacing	gtktable.h	/^void	   gtk_table_set_col_spacing  (GtkTable	       *table,$/;"	p
gtk_table_set_col_spacings	gtktable.h	/^void	   gtk_table_set_col_spacings (GtkTable	       *table,$/;"	p
gtk_table_set_homogeneous	gtktable.h	/^void	   gtk_table_set_homogeneous  (GtkTable	       *table,$/;"	p
gtk_table_set_row_spacing	gtktable.h	/^void	   gtk_table_set_row_spacing  (GtkTable	       *table,$/;"	p
gtk_table_set_row_spacings	gtktable.h	/^void	   gtk_table_set_row_spacings (GtkTable	       *table,$/;"	p
gtk_target_list_add	gtkselection.h	/^void           gtk_target_list_add       (GtkTargetList  *list,$/;"	p
gtk_target_list_add_image_targets	gtkselection.h	/^void           gtk_target_list_add_image_targets     (GtkTargetList  *list,$/;"	p
gtk_target_list_add_rich_text_targets	gtkselection.h	/^void           gtk_target_list_add_rich_text_targets (GtkTargetList  *list,$/;"	p
gtk_target_list_add_table	gtkselection.h	/^void           gtk_target_list_add_table (GtkTargetList        *list,$/;"	p
gtk_target_list_add_text_targets	gtkselection.h	/^void           gtk_target_list_add_text_targets      (GtkTargetList  *list,$/;"	p
gtk_target_list_add_uri_targets	gtkselection.h	/^void           gtk_target_list_add_uri_targets       (GtkTargetList  *list,$/;"	p
gtk_target_list_find	gtkselection.h	/^gboolean       gtk_target_list_find      (GtkTargetList  *list,$/;"	p
gtk_target_list_new	gtkselection.h	/^GtkTargetList *gtk_target_list_new       (const GtkTargetEntry *targets,$/;"	p
gtk_target_list_ref	gtkselection.h	/^GtkTargetList *gtk_target_list_ref       (GtkTargetList  *list);$/;"	p
gtk_target_list_remove	gtkselection.h	/^void           gtk_target_list_remove    (GtkTargetList  *list,$/;"	p
gtk_target_list_unref	gtkselection.h	/^void           gtk_target_list_unref     (GtkTargetList  *list);$/;"	p
gtk_target_table_free	gtkselection.h	/^void             gtk_target_table_free          (GtkTargetEntry *targets,$/;"	p
gtk_target_table_new_from_list	gtkselection.h	/^GtkTargetEntry * gtk_target_table_new_from_list (GtkTargetList  *list,$/;"	p
gtk_targets_include_image	gtkselection.h	/^gboolean gtk_targets_include_image               (GdkAtom       *targets,$/;"	p
gtk_targets_include_rich_text	gtkselection.h	/^gboolean gtk_targets_include_rich_text           (GdkAtom       *targets,$/;"	p
gtk_targets_include_text	gtkselection.h	/^gboolean gtk_targets_include_text                (GdkAtom       *targets,$/;"	p
gtk_targets_include_uri	gtkselection.h	/^gboolean gtk_targets_include_uri                 (GdkAtom       *targets,$/;"	p
gtk_tearoff_menu_item_new	gtktearoffmenuitem.h	/^GtkWidget* gtk_tearoff_menu_item_new	      (void);$/;"	p
gtk_test_create_simple_window	gtktestutils.h	/^GtkWidget*      gtk_test_create_simple_window   (const gchar    *window_title,$/;"	p
gtk_test_create_widget	gtktestutils.h	/^GtkWidget*      gtk_test_create_widget          (GType           widget_type,$/;"	p
gtk_test_display_button_window	gtktestutils.h	/^GtkWidget*      gtk_test_display_button_window  (const gchar    *window_title,$/;"	p
gtk_test_find_label	gtktestutils.h	/^GtkWidget*      gtk_test_find_label             (GtkWidget      *widget,$/;"	p
gtk_test_find_sibling	gtktestutils.h	/^GtkWidget*      gtk_test_find_sibling           (GtkWidget      *base_widget,$/;"	p
gtk_test_find_widget	gtktestutils.h	/^GtkWidget*      gtk_test_find_widget            (GtkWidget      *widget,$/;"	p
gtk_test_init	gtktestutils.h	/^void            gtk_test_init                   (int            *argcp,$/;"	p
gtk_test_list_all_types	gtktestutils.h	/^const GType*    gtk_test_list_all_types         (guint          *n_types);$/;"	p
gtk_test_register_all_types	gtktestutils.h	/^void            gtk_test_register_all_types     (void);$/;"	p
gtk_test_slider_get_value	gtktestutils.h	/^double          gtk_test_slider_get_value       (GtkWidget      *widget);$/;"	p
gtk_test_slider_set_perc	gtktestutils.h	/^void            gtk_test_slider_set_perc        (GtkWidget      *widget, \/* GtkRange-alike *\/$/;"	p
gtk_test_spin_button_click	gtktestutils.h	/^gboolean        gtk_test_spin_button_click      (GtkSpinButton  *spinner,$/;"	p
gtk_test_text_get	gtktestutils.h	/^gchar*          gtk_test_text_get               (GtkWidget      *widget);$/;"	p
gtk_test_text_set	gtktestutils.h	/^void            gtk_test_text_set               (GtkWidget      *widget,$/;"	p
gtk_test_widget_click	gtktestutils.h	/^gboolean        gtk_test_widget_click           (GtkWidget      *widget,$/;"	p
gtk_test_widget_send_key	gtktestutils.h	/^gboolean        gtk_test_widget_send_key        (GtkWidget      *widget,$/;"	p
gtk_text_anchored_child_set_layout	gtktextlayout.h	/^void gtk_text_anchored_child_set_layout     (GtkWidget          *child,$/;"	p
gtk_text_attributes_copy	gtktexttag.h	/^GtkTextAttributes* gtk_text_attributes_copy        (GtkTextAttributes *src);$/;"	p
gtk_text_attributes_copy_values	gtktexttag.h	/^void               gtk_text_attributes_copy_values (GtkTextAttributes *src,$/;"	p
gtk_text_attributes_new	gtktexttag.h	/^GtkTextAttributes* gtk_text_attributes_new         (void);$/;"	p
gtk_text_attributes_ref	gtktexttag.h	/^GtkTextAttributes *gtk_text_attributes_ref         (GtkTextAttributes *values);$/;"	p
gtk_text_attributes_unref	gtktexttag.h	/^void               gtk_text_attributes_unref       (GtkTextAttributes *values);$/;"	p
gtk_text_backward_delete	gtktext.h	/^gboolean   gtk_text_backward_delete (GtkText       *text,$/;"	p
gtk_text_buffer_add_mark	gtktextbuffer.h	/^void           gtk_text_buffer_add_mark    (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_add_selection_clipboard	gtktextbuffer.h	/^void gtk_text_buffer_add_selection_clipboard    (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_apply_tag	gtktextbuffer.h	/^void gtk_text_buffer_apply_tag             (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_apply_tag_by_name	gtktextbuffer.h	/^void gtk_text_buffer_apply_tag_by_name     (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_backspace	gtktextbuffer.h	/^gboolean gtk_text_buffer_backspace          (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_begin_user_action	gtktextbuffer.h	/^void            gtk_text_buffer_begin_user_action       (GtkTextBuffer *buffer);$/;"	p
gtk_text_buffer_copy_clipboard	gtktextbuffer.h	/^void            gtk_text_buffer_copy_clipboard          (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_create_child_anchor	gtktextbuffer.h	/^GtkTextChildAnchor *gtk_text_buffer_create_child_anchor (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_create_mark	gtktextbuffer.h	/^GtkTextMark   *gtk_text_buffer_create_mark (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_create_tag	gtktextbuffer.h	/^GtkTextTag    *gtk_text_buffer_create_tag (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_cut_clipboard	gtktextbuffer.h	/^void            gtk_text_buffer_cut_clipboard           (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_delete	gtktextbuffer.h	/^void     gtk_text_buffer_delete             (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_delete_interactive	gtktextbuffer.h	/^gboolean gtk_text_buffer_delete_interactive (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_delete_mark	gtktextbuffer.h	/^void           gtk_text_buffer_delete_mark (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_delete_mark_by_name	gtktextbuffer.h	/^void gtk_text_buffer_delete_mark_by_name (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_delete_selection	gtktextbuffer.h	/^gboolean        gtk_text_buffer_delete_selection        (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_deserialize	gtktextbufferrichtext.h	/^gboolean  gtk_text_buffer_deserialize                 (GtkTextBuffer                *register_buffer,$/;"	p
gtk_text_buffer_deserialize_get_can_create_tags	gtktextbufferrichtext.h	/^gboolean gtk_text_buffer_deserialize_get_can_create_tags (GtkTextBuffer             *buffer,$/;"	p
gtk_text_buffer_deserialize_set_can_create_tags	gtktextbufferrichtext.h	/^void     gtk_text_buffer_deserialize_set_can_create_tags (GtkTextBuffer             *buffer,$/;"	p
gtk_text_buffer_end_user_action	gtktextbuffer.h	/^void            gtk_text_buffer_end_user_action         (GtkTextBuffer *buffer);$/;"	p
gtk_text_buffer_get_bounds	gtktextbuffer.h	/^void gtk_text_buffer_get_bounds              (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_get_char_count	gtktextbuffer.h	/^gint           gtk_text_buffer_get_char_count (GtkTextBuffer   *buffer);$/;"	p
gtk_text_buffer_get_copy_target_list	gtktextbuffer.h	/^GtkTargetList * gtk_text_buffer_get_copy_target_list    (GtkTextBuffer *buffer);$/;"	p
gtk_text_buffer_get_deserialize_formats	gtktextbufferrichtext.h	/^GdkAtom * gtk_text_buffer_get_deserialize_formats     (GtkTextBuffer                *buffer,$/;"	p
gtk_text_buffer_get_end_iter	gtktextbuffer.h	/^void gtk_text_buffer_get_end_iter            (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_get_has_selection	gtktextbuffer.h	/^gboolean        gtk_text_buffer_get_has_selection       (GtkTextBuffer *buffer);$/;"	p
gtk_text_buffer_get_insert	gtktextbuffer.h	/^GtkTextMark* gtk_text_buffer_get_insert          (GtkTextBuffer *buffer);$/;"	p
gtk_text_buffer_get_iter_at_child_anchor	gtktextbuffer.h	/^void gtk_text_buffer_get_iter_at_child_anchor (GtkTextBuffer      *buffer,$/;"	p
gtk_text_buffer_get_iter_at_line	gtktextbuffer.h	/^void gtk_text_buffer_get_iter_at_line        (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_get_iter_at_line_index	gtktextbuffer.h	/^void gtk_text_buffer_get_iter_at_line_index  (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_get_iter_at_line_offset	gtktextbuffer.h	/^void gtk_text_buffer_get_iter_at_line_offset (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_get_iter_at_mark	gtktextbuffer.h	/^void gtk_text_buffer_get_iter_at_mark        (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_get_iter_at_offset	gtktextbuffer.h	/^void gtk_text_buffer_get_iter_at_offset      (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_get_line_count	gtktextbuffer.h	/^gint           gtk_text_buffer_get_line_count (GtkTextBuffer   *buffer);$/;"	p
gtk_text_buffer_get_mark	gtktextbuffer.h	/^GtkTextMark*   gtk_text_buffer_get_mark    (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_get_modified	gtktextbuffer.h	/^gboolean        gtk_text_buffer_get_modified            (GtkTextBuffer *buffer);$/;"	p
gtk_text_buffer_get_paste_target_list	gtktextbuffer.h	/^GtkTargetList * gtk_text_buffer_get_paste_target_list   (GtkTextBuffer *buffer);$/;"	p
gtk_text_buffer_get_selection_bound	gtktextbuffer.h	/^GtkTextMark* gtk_text_buffer_get_selection_bound (GtkTextBuffer *buffer);$/;"	p
gtk_text_buffer_get_selection_bounds	gtktextbuffer.h	/^gboolean        gtk_text_buffer_get_selection_bounds    (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_get_serialize_formats	gtktextbufferrichtext.h	/^GdkAtom * gtk_text_buffer_get_serialize_formats       (GtkTextBuffer                *buffer,$/;"	p
gtk_text_buffer_get_slice	gtktextbuffer.h	/^gchar          *gtk_text_buffer_get_slice           (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_get_start_iter	gtktextbuffer.h	/^void gtk_text_buffer_get_start_iter          (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_get_tag_table	gtktextbuffer.h	/^GtkTextTagTable* gtk_text_buffer_get_tag_table (GtkTextBuffer  *buffer);$/;"	p
gtk_text_buffer_get_text	gtktextbuffer.h	/^gchar          *gtk_text_buffer_get_text            (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_insert	gtktextbuffer.h	/^void gtk_text_buffer_insert            (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_insert_at_cursor	gtktextbuffer.h	/^void gtk_text_buffer_insert_at_cursor  (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_insert_child_anchor	gtktextbuffer.h	/^void               gtk_text_buffer_insert_child_anchor (GtkTextBuffer      *buffer,$/;"	p
gtk_text_buffer_insert_interactive	gtktextbuffer.h	/^gboolean gtk_text_buffer_insert_interactive           (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_insert_interactive_at_cursor	gtktextbuffer.h	/^gboolean gtk_text_buffer_insert_interactive_at_cursor (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_insert_pixbuf	gtktextbuffer.h	/^void gtk_text_buffer_insert_pixbuf         (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_insert_range	gtktextbuffer.h	/^void     gtk_text_buffer_insert_range             (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_insert_range_interactive	gtktextbuffer.h	/^gboolean gtk_text_buffer_insert_range_interactive (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_move_mark	gtktextbuffer.h	/^void           gtk_text_buffer_move_mark   (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_move_mark_by_name	gtktextbuffer.h	/^void gtk_text_buffer_move_mark_by_name   (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_new	gtktextbuffer.h	/^GtkTextBuffer *gtk_text_buffer_new            (GtkTextTagTable *table);$/;"	p
gtk_text_buffer_paste_clipboard	gtktextbuffer.h	/^void            gtk_text_buffer_paste_clipboard         (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_place_cursor	gtktextbuffer.h	/^void gtk_text_buffer_place_cursor (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_register_deserialize_format	gtktextbufferrichtext.h	/^GdkAtom   gtk_text_buffer_register_deserialize_format (GtkTextBuffer                *buffer,$/;"	p
gtk_text_buffer_register_deserialize_tagset	gtktextbufferrichtext.h	/^GdkAtom   gtk_text_buffer_register_deserialize_tagset (GtkTextBuffer                *buffer,$/;"	p
gtk_text_buffer_register_serialize_format	gtktextbufferrichtext.h	/^GdkAtom   gtk_text_buffer_register_serialize_format   (GtkTextBuffer                *buffer,$/;"	p
gtk_text_buffer_register_serialize_tagset	gtktextbufferrichtext.h	/^GdkAtom   gtk_text_buffer_register_serialize_tagset   (GtkTextBuffer                *buffer,$/;"	p
gtk_text_buffer_remove_all_tags	gtktextbuffer.h	/^void gtk_text_buffer_remove_all_tags       (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_remove_selection_clipboard	gtktextbuffer.h	/^void gtk_text_buffer_remove_selection_clipboard (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_remove_tag	gtktextbuffer.h	/^void gtk_text_buffer_remove_tag            (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_remove_tag_by_name	gtktextbuffer.h	/^void gtk_text_buffer_remove_tag_by_name    (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_select_range	gtktextbuffer.h	/^void gtk_text_buffer_select_range (GtkTextBuffer     *buffer,$/;"	p
gtk_text_buffer_serialize	gtktextbufferrichtext.h	/^guint8  * gtk_text_buffer_serialize                   (GtkTextBuffer                *register_buffer,$/;"	p
gtk_text_buffer_set_modified	gtktextbuffer.h	/^void            gtk_text_buffer_set_modified            (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_set_text	gtktextbuffer.h	/^void gtk_text_buffer_set_text          (GtkTextBuffer *buffer,$/;"	p
gtk_text_buffer_unregister_deserialize_format	gtktextbufferrichtext.h	/^void    gtk_text_buffer_unregister_deserialize_format (GtkTextBuffer                *buffer,$/;"	p
gtk_text_buffer_unregister_serialize_format	gtktextbufferrichtext.h	/^void    gtk_text_buffer_unregister_serialize_format   (GtkTextBuffer                *buffer,$/;"	p
gtk_text_child_anchor_get_deleted	gtktextchild.h	/^gboolean gtk_text_child_anchor_get_deleted (GtkTextChildAnchor *anchor);$/;"	p
gtk_text_child_anchor_get_widgets	gtktextchild.h	/^GList*   gtk_text_child_anchor_get_widgets (GtkTextChildAnchor *anchor);$/;"	p
gtk_text_child_anchor_new	gtktextchild.h	/^GtkTextChildAnchor* gtk_text_child_anchor_new (void);$/;"	p
gtk_text_child_anchor_queue_resize	gtktextlayout.h	/^void gtk_text_child_anchor_queue_resize     (GtkTextChildAnchor *anchor,$/;"	p
gtk_text_child_anchor_register_child	gtktextlayout.h	/^void gtk_text_child_anchor_register_child   (GtkTextChildAnchor *anchor,$/;"	p
gtk_text_child_anchor_unregister_child	gtktextlayout.h	/^void gtk_text_child_anchor_unregister_child (GtkTextChildAnchor *anchor,$/;"	p
gtk_text_forward_delete	gtktext.h	/^gboolean   gtk_text_forward_delete  (GtkText       *text,$/;"	p
gtk_text_freeze	gtktext.h	/^void       gtk_text_freeze          (GtkText       *text);$/;"	p
gtk_text_get_length	gtktext.h	/^guint      gtk_text_get_length      (GtkText       *text);$/;"	p
gtk_text_get_point	gtktext.h	/^guint      gtk_text_get_point       (GtkText       *text);$/;"	p
gtk_text_insert	gtktext.h	/^void       gtk_text_insert          (GtkText        *text,$/;"	p
gtk_text_iter_backward_char	gtktextiter.h	/^gboolean gtk_text_iter_backward_char        (GtkTextIter *iter);$/;"	p
gtk_text_iter_backward_chars	gtktextiter.h	/^gboolean gtk_text_iter_backward_chars       (GtkTextIter *iter,$/;"	p
gtk_text_iter_backward_cursor_position	gtktextiter.h	/^gboolean gtk_text_iter_backward_cursor_position  (GtkTextIter *iter);$/;"	p
gtk_text_iter_backward_cursor_positions	gtktextiter.h	/^gboolean gtk_text_iter_backward_cursor_positions (GtkTextIter *iter,$/;"	p
gtk_text_iter_backward_find_char	gtktextiter.h	/^gboolean gtk_text_iter_backward_find_char (GtkTextIter          *iter,$/;"	p
gtk_text_iter_backward_line	gtktextiter.h	/^gboolean gtk_text_iter_backward_line        (GtkTextIter *iter);$/;"	p
gtk_text_iter_backward_lines	gtktextiter.h	/^gboolean gtk_text_iter_backward_lines       (GtkTextIter *iter,$/;"	p
gtk_text_iter_backward_search	gtktextiter.h	/^gboolean gtk_text_iter_backward_search (const GtkTextIter *iter,$/;"	p
gtk_text_iter_backward_sentence_start	gtktextiter.h	/^gboolean gtk_text_iter_backward_sentence_start  (GtkTextIter *iter);$/;"	p
gtk_text_iter_backward_sentence_starts	gtktextiter.h	/^gboolean gtk_text_iter_backward_sentence_starts (GtkTextIter *iter,$/;"	p
gtk_text_iter_backward_to_tag_toggle	gtktextiter.h	/^gboolean gtk_text_iter_backward_to_tag_toggle (GtkTextIter *iter,$/;"	p
gtk_text_iter_backward_visible_cursor_position	gtktextiter.h	/^gboolean gtk_text_iter_backward_visible_cursor_position  (GtkTextIter *iter);$/;"	p
gtk_text_iter_backward_visible_cursor_positions	gtktextiter.h	/^gboolean gtk_text_iter_backward_visible_cursor_positions (GtkTextIter *iter,$/;"	p
gtk_text_iter_backward_visible_line	gtktextiter.h	/^gboolean gtk_text_iter_backward_visible_line  (GtkTextIter *iter);$/;"	p
gtk_text_iter_backward_visible_lines	gtktextiter.h	/^gboolean gtk_text_iter_backward_visible_lines (GtkTextIter *iter,$/;"	p
gtk_text_iter_backward_visible_word_start	gtktextiter.h	/^gboolean gtk_text_iter_backward_visible_word_start  (GtkTextIter *iter);$/;"	p
gtk_text_iter_backward_visible_word_starts	gtktextiter.h	/^gboolean gtk_text_iter_backward_visible_word_starts (GtkTextIter *iter,$/;"	p
gtk_text_iter_backward_word_start	gtktextiter.h	/^gboolean gtk_text_iter_backward_word_start  (GtkTextIter *iter);$/;"	p
gtk_text_iter_backward_word_starts	gtktextiter.h	/^gboolean gtk_text_iter_backward_word_starts (GtkTextIter *iter,$/;"	p
gtk_text_iter_begins_tag	gtktextiter.h	/^gboolean gtk_text_iter_begins_tag        (const GtkTextIter  *iter,$/;"	p
gtk_text_iter_can_insert	gtktextiter.h	/^gboolean gtk_text_iter_can_insert        (const GtkTextIter   *iter,$/;"	p
gtk_text_iter_compare	gtktextiter.h	/^gint     gtk_text_iter_compare         (const GtkTextIter *lhs,$/;"	p
gtk_text_iter_copy	gtktextiter.h	/^GtkTextIter *gtk_text_iter_copy     (const GtkTextIter *iter);$/;"	p
gtk_text_iter_editable	gtktextiter.h	/^gboolean gtk_text_iter_editable          (const GtkTextIter   *iter,$/;"	p
gtk_text_iter_ends_line	gtktextiter.h	/^gboolean gtk_text_iter_ends_line          (const GtkTextIter   *iter);$/;"	p
gtk_text_iter_ends_sentence	gtktextiter.h	/^gboolean gtk_text_iter_ends_sentence      (const GtkTextIter   *iter);$/;"	p
gtk_text_iter_ends_tag	gtktextiter.h	/^gboolean gtk_text_iter_ends_tag          (const GtkTextIter  *iter,$/;"	p
gtk_text_iter_ends_word	gtktextiter.h	/^gboolean gtk_text_iter_ends_word          (const GtkTextIter   *iter);$/;"	p
gtk_text_iter_equal	gtktextiter.h	/^gboolean gtk_text_iter_equal           (const GtkTextIter *lhs,$/;"	p
gtk_text_iter_forward_char	gtktextiter.h	/^gboolean gtk_text_iter_forward_char         (GtkTextIter *iter);$/;"	p
gtk_text_iter_forward_chars	gtktextiter.h	/^gboolean gtk_text_iter_forward_chars        (GtkTextIter *iter,$/;"	p
gtk_text_iter_forward_cursor_position	gtktextiter.h	/^gboolean gtk_text_iter_forward_cursor_position   (GtkTextIter *iter);$/;"	p
gtk_text_iter_forward_cursor_positions	gtktextiter.h	/^gboolean gtk_text_iter_forward_cursor_positions  (GtkTextIter *iter,$/;"	p
gtk_text_iter_forward_find_char	gtktextiter.h	/^gboolean gtk_text_iter_forward_find_char  (GtkTextIter          *iter,$/;"	p
gtk_text_iter_forward_line	gtktextiter.h	/^gboolean gtk_text_iter_forward_line         (GtkTextIter *iter);$/;"	p
gtk_text_iter_forward_lines	gtktextiter.h	/^gboolean gtk_text_iter_forward_lines        (GtkTextIter *iter,$/;"	p
gtk_text_iter_forward_search	gtktextiter.h	/^gboolean gtk_text_iter_forward_search  (const GtkTextIter *iter,$/;"	p
gtk_text_iter_forward_sentence_end	gtktextiter.h	/^gboolean gtk_text_iter_forward_sentence_end     (GtkTextIter *iter);$/;"	p
gtk_text_iter_forward_sentence_ends	gtktextiter.h	/^gboolean gtk_text_iter_forward_sentence_ends    (GtkTextIter *iter,$/;"	p
gtk_text_iter_forward_to_end	gtktextiter.h	/^void     gtk_text_iter_forward_to_end     (GtkTextIter *iter);$/;"	p
gtk_text_iter_forward_to_line_end	gtktextiter.h	/^gboolean gtk_text_iter_forward_to_line_end (GtkTextIter *iter);$/;"	p
gtk_text_iter_forward_to_tag_toggle	gtktextiter.h	/^gboolean gtk_text_iter_forward_to_tag_toggle (GtkTextIter *iter,$/;"	p
gtk_text_iter_forward_visible_cursor_position	gtktextiter.h	/^gboolean gtk_text_iter_forward_visible_cursor_position   (GtkTextIter *iter);$/;"	p
gtk_text_iter_forward_visible_cursor_positions	gtktextiter.h	/^gboolean gtk_text_iter_forward_visible_cursor_positions  (GtkTextIter *iter,$/;"	p
gtk_text_iter_forward_visible_line	gtktextiter.h	/^gboolean gtk_text_iter_forward_visible_line   (GtkTextIter *iter);$/;"	p
gtk_text_iter_forward_visible_lines	gtktextiter.h	/^gboolean gtk_text_iter_forward_visible_lines  (GtkTextIter *iter,$/;"	p
gtk_text_iter_forward_visible_word_end	gtktextiter.h	/^gboolean gtk_text_iter_forward_visible_word_end     (GtkTextIter *iter);$/;"	p
gtk_text_iter_forward_visible_word_ends	gtktextiter.h	/^gboolean gtk_text_iter_forward_visible_word_ends    (GtkTextIter *iter,$/;"	p
gtk_text_iter_forward_word_end	gtktextiter.h	/^gboolean gtk_text_iter_forward_word_end     (GtkTextIter *iter);$/;"	p
gtk_text_iter_forward_word_ends	gtktextiter.h	/^gboolean gtk_text_iter_forward_word_ends    (GtkTextIter *iter,$/;"	p
gtk_text_iter_free	gtktextiter.h	/^void         gtk_text_iter_free     (GtkTextIter       *iter);$/;"	p
gtk_text_iter_get_attributes	gtktextiter.h	/^gboolean       gtk_text_iter_get_attributes (const GtkTextIter *iter,$/;"	p
gtk_text_iter_get_buffer	gtktextiter.h	/^GtkTextBuffer *gtk_text_iter_get_buffer (const GtkTextIter *iter);$/;"	p
gtk_text_iter_get_bytes_in_line	gtktextiter.h	/^gint     gtk_text_iter_get_bytes_in_line (const GtkTextIter   *iter);$/;"	p
gtk_text_iter_get_char	gtktextiter.h	/^gunichar gtk_text_iter_get_char          (const GtkTextIter  *iter);$/;"	p
gtk_text_iter_get_chars_in_line	gtktextiter.h	/^gint     gtk_text_iter_get_chars_in_line (const GtkTextIter   *iter);$/;"	p
gtk_text_iter_get_child_anchor	gtktextiter.h	/^GtkTextChildAnchor* gtk_text_iter_get_child_anchor (const GtkTextIter *iter);$/;"	p
gtk_text_iter_get_language	gtktextiter.h	/^PangoLanguage* gtk_text_iter_get_language   (const GtkTextIter *iter);$/;"	p
gtk_text_iter_get_line	gtktextiter.h	/^gint gtk_text_iter_get_line        (const GtkTextIter *iter);$/;"	p
gtk_text_iter_get_line_index	gtktextiter.h	/^gint gtk_text_iter_get_line_index  (const GtkTextIter *iter);$/;"	p
gtk_text_iter_get_line_offset	gtktextiter.h	/^gint gtk_text_iter_get_line_offset (const GtkTextIter *iter);$/;"	p
gtk_text_iter_get_marks	gtktextiter.h	/^GSList  *  gtk_text_iter_get_marks  (const GtkTextIter *iter);$/;"	p
gtk_text_iter_get_offset	gtktextiter.h	/^gint gtk_text_iter_get_offset      (const GtkTextIter *iter);$/;"	p
gtk_text_iter_get_pixbuf	gtktextiter.h	/^GdkPixbuf* gtk_text_iter_get_pixbuf (const GtkTextIter *iter);$/;"	p
gtk_text_iter_get_slice	gtktextiter.h	/^gchar   *gtk_text_iter_get_slice         (const GtkTextIter  *start,$/;"	p
gtk_text_iter_get_tags	gtktextiter.h	/^GSList  *gtk_text_iter_get_tags          (const GtkTextIter   *iter);$/;"	p
gtk_text_iter_get_text	gtktextiter.h	/^gchar   *gtk_text_iter_get_text          (const GtkTextIter  *start,$/;"	p
gtk_text_iter_get_toggled_tags	gtktextiter.h	/^GSList  *gtk_text_iter_get_toggled_tags  (const GtkTextIter  *iter,$/;"	p
gtk_text_iter_get_visible_line_index	gtktextiter.h	/^gint gtk_text_iter_get_visible_line_index (const GtkTextIter *iter);$/;"	p
gtk_text_iter_get_visible_line_offset	gtktextiter.h	/^gint gtk_text_iter_get_visible_line_offset (const GtkTextIter *iter);$/;"	p
gtk_text_iter_get_visible_slice	gtktextiter.h	/^gchar   *gtk_text_iter_get_visible_slice (const GtkTextIter  *start,$/;"	p
gtk_text_iter_get_visible_text	gtktextiter.h	/^gchar   *gtk_text_iter_get_visible_text  (const GtkTextIter  *start,$/;"	p
gtk_text_iter_has_tag	gtktextiter.h	/^gboolean gtk_text_iter_has_tag           (const GtkTextIter   *iter,$/;"	p
gtk_text_iter_in_range	gtktextiter.h	/^gboolean gtk_text_iter_in_range        (const GtkTextIter *iter,$/;"	p
gtk_text_iter_inside_sentence	gtktextiter.h	/^gboolean gtk_text_iter_inside_sentence    (const GtkTextIter   *iter);$/;"	p
gtk_text_iter_inside_word	gtktextiter.h	/^gboolean gtk_text_iter_inside_word        (const GtkTextIter   *iter);$/;"	p
gtk_text_iter_is_cursor_position	gtktextiter.h	/^gboolean gtk_text_iter_is_cursor_position (const GtkTextIter   *iter);$/;"	p
gtk_text_iter_is_end	gtktextiter.h	/^gboolean       gtk_text_iter_is_end         (const GtkTextIter *iter);$/;"	p
gtk_text_iter_is_start	gtktextiter.h	/^gboolean       gtk_text_iter_is_start       (const GtkTextIter *iter);$/;"	p
gtk_text_iter_order	gtktextiter.h	/^void     gtk_text_iter_order           (GtkTextIter *first,$/;"	p
gtk_text_iter_set_line	gtktextiter.h	/^void     gtk_text_iter_set_line           (GtkTextIter *iter,$/;"	p
gtk_text_iter_set_line_index	gtktextiter.h	/^void     gtk_text_iter_set_line_index     (GtkTextIter *iter,$/;"	p
gtk_text_iter_set_line_offset	gtktextiter.h	/^void     gtk_text_iter_set_line_offset    (GtkTextIter *iter,$/;"	p
gtk_text_iter_set_offset	gtktextiter.h	/^void     gtk_text_iter_set_offset         (GtkTextIter *iter,$/;"	p
gtk_text_iter_set_visible_line_index	gtktextiter.h	/^void     gtk_text_iter_set_visible_line_index  (GtkTextIter *iter,$/;"	p
gtk_text_iter_set_visible_line_offset	gtktextiter.h	/^void     gtk_text_iter_set_visible_line_offset (GtkTextIter *iter,$/;"	p
gtk_text_iter_starts_line	gtktextiter.h	/^gboolean gtk_text_iter_starts_line        (const GtkTextIter   *iter);$/;"	p
gtk_text_iter_starts_sentence	gtktextiter.h	/^gboolean gtk_text_iter_starts_sentence    (const GtkTextIter   *iter);$/;"	p
gtk_text_iter_starts_word	gtktextiter.h	/^gboolean gtk_text_iter_starts_word        (const GtkTextIter   *iter);$/;"	p
gtk_text_iter_toggles_tag	gtktextiter.h	/^gboolean gtk_text_iter_toggles_tag       (const GtkTextIter  *iter,$/;"	p
gtk_text_layout_changed	gtktextlayout.h	/^void     gtk_text_layout_changed              (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_clamp_iter_to_vrange	gtktextlayout.h	/^gboolean gtk_text_layout_clamp_iter_to_vrange (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_cursors_changed	gtktextlayout.h	/^void     gtk_text_layout_cursors_changed      (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_default_style_changed	gtktextlayout.h	/^void               gtk_text_layout_default_style_changed (GtkTextLayout     *layout);$/;"	p
gtk_text_layout_draw	gtktextdisplay.h	/^void gtk_text_layout_draw (GtkTextLayout        *layout,$/;"	p
gtk_text_layout_free_line_data	gtktextlayout.h	/^void gtk_text_layout_free_line_data    (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_free_line_display	gtktextlayout.h	/^void                gtk_text_layout_free_line_display (GtkTextLayout      *layout,$/;"	p
gtk_text_layout_get_buffer	gtktextlayout.h	/^GtkTextBuffer     *gtk_text_layout_get_buffer            (GtkTextLayout     *layout);$/;"	p
gtk_text_layout_get_cursor_locations	gtktextlayout.h	/^void     gtk_text_layout_get_cursor_locations (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_get_cursor_visible	gtktextlayout.h	/^gboolean gtk_text_layout_get_cursor_visible (GtkTextLayout     *layout);$/;"	p
gtk_text_layout_get_iter_at_line	gtktextlayout.h	/^void     gtk_text_layout_get_iter_at_line           (GtkTextLayout *layout,$/;"	p
gtk_text_layout_get_iter_at_pixel	gtktextlayout.h	/^void gtk_text_layout_get_iter_at_pixel (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_get_iter_at_position	gtktextlayout.h	/^void gtk_text_layout_get_iter_at_position (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_get_iter_location	gtktextlayout.h	/^void     gtk_text_layout_get_iter_location    (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_get_line_at_y	gtktextlayout.h	/^void gtk_text_layout_get_line_at_y     (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_get_line_display	gtktextlayout.h	/^GtkTextLineDisplay* gtk_text_layout_get_line_display  (GtkTextLayout      *layout,$/;"	p
gtk_text_layout_get_line_yrange	gtktextlayout.h	/^void     gtk_text_layout_get_line_yrange      (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_get_lines	gtktextlayout.h	/^GSList* gtk_text_layout_get_lines (GtkTextLayout  *layout,$/;"	p
gtk_text_layout_get_size	gtktextlayout.h	/^void    gtk_text_layout_get_size  (GtkTextLayout  *layout,$/;"	p
gtk_text_layout_invalidate	gtktextlayout.h	/^void gtk_text_layout_invalidate        (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_invalidate_cursors	gtktextlayout.h	/^void gtk_text_layout_invalidate_cursors(GtkTextLayout     *layout,$/;"	p
gtk_text_layout_is_valid	gtktextlayout.h	/^gboolean gtk_text_layout_is_valid        (GtkTextLayout *layout);$/;"	p
gtk_text_layout_iter_starts_line	gtktextlayout.h	/^gboolean gtk_text_layout_iter_starts_line           (GtkTextLayout       *layout,$/;"	p
gtk_text_layout_move_iter_to_line_end	gtktextlayout.h	/^gboolean gtk_text_layout_move_iter_to_line_end      (GtkTextLayout *layout,$/;"	p
gtk_text_layout_move_iter_to_next_line	gtktextlayout.h	/^gboolean gtk_text_layout_move_iter_to_next_line     (GtkTextLayout *layout,$/;"	p
gtk_text_layout_move_iter_to_previous_line	gtktextlayout.h	/^gboolean gtk_text_layout_move_iter_to_previous_line (GtkTextLayout *layout,$/;"	p
gtk_text_layout_move_iter_to_x	gtktextlayout.h	/^void     gtk_text_layout_move_iter_to_x             (GtkTextLayout *layout,$/;"	p
gtk_text_layout_move_iter_visually	gtktextlayout.h	/^gboolean gtk_text_layout_move_iter_visually         (GtkTextLayout *layout,$/;"	p
gtk_text_layout_new	gtktextlayout.h	/^GtkTextLayout*     gtk_text_layout_new                   (void);$/;"	p
gtk_text_layout_set_buffer	gtktextlayout.h	/^void               gtk_text_layout_set_buffer            (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_set_contexts	gtktextlayout.h	/^void               gtk_text_layout_set_contexts          (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_set_cursor_direction	gtktextlayout.h	/^void               gtk_text_layout_set_cursor_direction  (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_set_cursor_visible	gtktextlayout.h	/^void     gtk_text_layout_set_cursor_visible (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_set_default_style	gtktextlayout.h	/^void               gtk_text_layout_set_default_style     (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_set_keyboard_direction	gtktextlayout.h	/^void               gtk_text_layout_set_keyboard_direction (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_set_overwrite_mode	gtktextlayout.h	/^void		   gtk_text_layout_set_overwrite_mode	 (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_set_preedit_string	gtktextlayout.h	/^void gtk_text_layout_set_preedit_string     (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_set_screen_width	gtktextlayout.h	/^void gtk_text_layout_set_screen_width       (GtkTextLayout     *layout,$/;"	p
gtk_text_layout_spew	gtktextlayout.h	/^void gtk_text_layout_spew (GtkTextLayout *layout);$/;"	p
gtk_text_layout_validate	gtktextlayout.h	/^void     gtk_text_layout_validate        (GtkTextLayout *layout,$/;"	p
gtk_text_layout_validate_yrange	gtktextlayout.h	/^void     gtk_text_layout_validate_yrange (GtkTextLayout *layout,$/;"	p
gtk_text_layout_wrap	gtktextlayout.h	/^GtkTextLineData* gtk_text_layout_wrap  (GtkTextLayout   *layout,$/;"	p
gtk_text_layout_wrap_loop_end	gtktextlayout.h	/^void gtk_text_layout_wrap_loop_end   (GtkTextLayout *layout);$/;"	p
gtk_text_layout_wrap_loop_start	gtktextlayout.h	/^void gtk_text_layout_wrap_loop_start (GtkTextLayout *layout);$/;"	p
gtk_text_mark_get_buffer	gtktextmark.h	/^GtkTextBuffer*        gtk_text_mark_get_buffer       (GtkTextMark *mark);$/;"	p
gtk_text_mark_get_deleted	gtktextmark.h	/^gboolean              gtk_text_mark_get_deleted      (GtkTextMark *mark);$/;"	p
gtk_text_mark_get_left_gravity	gtktextmark.h	/^gboolean              gtk_text_mark_get_left_gravity (GtkTextMark *mark);$/;"	p
gtk_text_mark_get_name	gtktextmark.h	/^const gchar *         gtk_text_mark_get_name         (GtkTextMark *mark);$/;"	p
gtk_text_mark_get_visible	gtktextmark.h	/^gboolean       gtk_text_mark_get_visible (GtkTextMark *mark);$/;"	p
gtk_text_mark_new	gtktextmark.h	/^GtkTextMark          *gtk_text_mark_new              (const gchar *name,$/;"	p
gtk_text_mark_set_visible	gtktextmark.h	/^void           gtk_text_mark_set_visible (GtkTextMark *mark,$/;"	p
gtk_text_new	gtktext.h	/^GtkWidget* gtk_text_new             (GtkAdjustment *hadj,$/;"	p
gtk_text_set_adjustments	gtktext.h	/^void       gtk_text_set_adjustments (GtkText       *text,$/;"	p
gtk_text_set_editable	gtktext.h	/^void       gtk_text_set_editable    (GtkText       *text,$/;"	p
gtk_text_set_line_wrap	gtktext.h	/^void       gtk_text_set_line_wrap   (GtkText       *text,$/;"	p
gtk_text_set_point	gtktext.h	/^void       gtk_text_set_point       (GtkText       *text,$/;"	p
gtk_text_set_word_wrap	gtktext.h	/^void       gtk_text_set_word_wrap   (GtkText       *text,$/;"	p
gtk_text_tag_event	gtktexttag.h	/^gboolean     gtk_text_tag_event        (GtkTextTag        *tag,$/;"	p
gtk_text_tag_get_priority	gtktexttag.h	/^gint         gtk_text_tag_get_priority (GtkTextTag        *tag);$/;"	p
gtk_text_tag_new	gtktexttag.h	/^GtkTextTag  *gtk_text_tag_new          (const gchar       *name);$/;"	p
gtk_text_tag_set_priority	gtktexttag.h	/^void         gtk_text_tag_set_priority (GtkTextTag        *tag,$/;"	p
gtk_text_tag_table_add	gtktexttagtable.h	/^void             gtk_text_tag_table_add      (GtkTextTagTable        *table,$/;"	p
gtk_text_tag_table_foreach	gtktexttagtable.h	/^void             gtk_text_tag_table_foreach  (GtkTextTagTable        *table,$/;"	p
gtk_text_tag_table_get_size	gtktexttagtable.h	/^gint             gtk_text_tag_table_get_size (GtkTextTagTable        *table);$/;"	p
gtk_text_tag_table_lookup	gtktexttagtable.h	/^GtkTextTag      *gtk_text_tag_table_lookup   (GtkTextTagTable        *table,$/;"	p
gtk_text_tag_table_new	gtktexttagtable.h	/^GtkTextTagTable *gtk_text_tag_table_new      (void);$/;"	p
gtk_text_tag_table_remove	gtktexttagtable.h	/^void             gtk_text_tag_table_remove   (GtkTextTagTable        *table,$/;"	p
gtk_text_thaw	gtktext.h	/^void       gtk_text_thaw            (GtkText       *text);$/;"	p
gtk_text_view_add_child_at_anchor	gtktextview.h	/^void gtk_text_view_add_child_at_anchor (GtkTextView          *text_view,$/;"	p
gtk_text_view_add_child_in_window	gtktextview.h	/^void gtk_text_view_add_child_in_window (GtkTextView          *text_view,$/;"	p
gtk_text_view_backward_display_line	gtktextview.h	/^gboolean gtk_text_view_backward_display_line          (GtkTextView       *text_view,$/;"	p
gtk_text_view_backward_display_line_start	gtktextview.h	/^gboolean gtk_text_view_backward_display_line_start    (GtkTextView       *text_view,$/;"	p
gtk_text_view_buffer_to_window_coords	gtktextview.h	/^void gtk_text_view_buffer_to_window_coords (GtkTextView       *text_view,$/;"	p
gtk_text_view_forward_display_line	gtktextview.h	/^gboolean gtk_text_view_forward_display_line           (GtkTextView       *text_view,$/;"	p
gtk_text_view_forward_display_line_end	gtktextview.h	/^gboolean gtk_text_view_forward_display_line_end       (GtkTextView       *text_view,$/;"	p
gtk_text_view_get_accepts_tab	gtktextview.h	/^gboolean	 gtk_text_view_get_accepts_tab        (GtkTextView	*text_view);$/;"	p
gtk_text_view_get_border_window_size	gtktextview.h	/^gint gtk_text_view_get_border_window_size (GtkTextView       *text_view,$/;"	p
gtk_text_view_get_buffer	gtktextview.h	/^GtkTextBuffer *gtk_text_view_get_buffer            (GtkTextView   *text_view);$/;"	p
gtk_text_view_get_cursor_visible	gtktextview.h	/^gboolean       gtk_text_view_get_cursor_visible    (GtkTextView   *text_view);$/;"	p
gtk_text_view_get_default_attributes	gtktextview.h	/^GtkTextAttributes* gtk_text_view_get_default_attributes (GtkTextView    *text_view);$/;"	p
gtk_text_view_get_editable	gtktextview.h	/^gboolean         gtk_text_view_get_editable           (GtkTextView      *text_view);$/;"	p
gtk_text_view_get_hadjustment	gtktextview.h	/^GtkAdjustment* gtk_text_view_get_hadjustment (GtkTextView *text_view);$/;"	p
gtk_text_view_get_indent	gtktextview.h	/^gint             gtk_text_view_get_indent             (GtkTextView      *text_view);$/;"	p
gtk_text_view_get_iter_at_location	gtktextview.h	/^void           gtk_text_view_get_iter_at_location  (GtkTextView   *text_view,$/;"	p
gtk_text_view_get_iter_at_position	gtktextview.h	/^void           gtk_text_view_get_iter_at_position  (GtkTextView   *text_view,$/;"	p
gtk_text_view_get_iter_location	gtktextview.h	/^void           gtk_text_view_get_iter_location     (GtkTextView   *text_view,$/;"	p
gtk_text_view_get_justification	gtktextview.h	/^GtkJustification gtk_text_view_get_justification      (GtkTextView      *text_view);$/;"	p
gtk_text_view_get_left_margin	gtktextview.h	/^gint             gtk_text_view_get_left_margin        (GtkTextView      *text_view);$/;"	p
gtk_text_view_get_line_at_y	gtktextview.h	/^void           gtk_text_view_get_line_at_y         (GtkTextView       *text_view,$/;"	p
gtk_text_view_get_line_yrange	gtktextview.h	/^void           gtk_text_view_get_line_yrange       (GtkTextView       *text_view,$/;"	p
gtk_text_view_get_overwrite	gtktextview.h	/^gboolean         gtk_text_view_get_overwrite          (GtkTextView      *text_view);$/;"	p
gtk_text_view_get_pixels_above_lines	gtktextview.h	/^gint             gtk_text_view_get_pixels_above_lines (GtkTextView      *text_view);$/;"	p
gtk_text_view_get_pixels_below_lines	gtktextview.h	/^gint             gtk_text_view_get_pixels_below_lines (GtkTextView      *text_view);$/;"	p
gtk_text_view_get_pixels_inside_wrap	gtktextview.h	/^gint             gtk_text_view_get_pixels_inside_wrap (GtkTextView      *text_view);$/;"	p
gtk_text_view_get_right_margin	gtktextview.h	/^gint             gtk_text_view_get_right_margin       (GtkTextView      *text_view);$/;"	p
gtk_text_view_get_tabs	gtktextview.h	/^PangoTabArray*   gtk_text_view_get_tabs               (GtkTextView      *text_view);$/;"	p
gtk_text_view_get_vadjustment	gtktextview.h	/^GtkAdjustment* gtk_text_view_get_vadjustment (GtkTextView *text_view);$/;"	p
gtk_text_view_get_visible_rect	gtktextview.h	/^void           gtk_text_view_get_visible_rect      (GtkTextView   *text_view,$/;"	p
gtk_text_view_get_window	gtktextview.h	/^GdkWindow*        gtk_text_view_get_window      (GtkTextView       *text_view,$/;"	p
gtk_text_view_get_window_type	gtktextview.h	/^GtkTextWindowType gtk_text_view_get_window_type (GtkTextView       *text_view,$/;"	p
gtk_text_view_get_wrap_mode	gtktextview.h	/^GtkWrapMode      gtk_text_view_get_wrap_mode          (GtkTextView      *text_view);$/;"	p
gtk_text_view_im_context_filter_keypress	gtktextview.h	/^gboolean        gtk_text_view_im_context_filter_keypress        (GtkTextView       *text_view,$/;"	p
gtk_text_view_move_child	gtktextview.h	/^void gtk_text_view_move_child          (GtkTextView          *text_view,$/;"	p
gtk_text_view_move_mark_onscreen	gtktextview.h	/^gboolean       gtk_text_view_move_mark_onscreen    (GtkTextView   *text_view,$/;"	p
gtk_text_view_move_visually	gtktextview.h	/^gboolean gtk_text_view_move_visually                  (GtkTextView       *text_view,$/;"	p
gtk_text_view_new	gtktextview.h	/^GtkWidget *    gtk_text_view_new                   (void);$/;"	p
gtk_text_view_new_with_buffer	gtktextview.h	/^GtkWidget *    gtk_text_view_new_with_buffer       (GtkTextBuffer *buffer);$/;"	p
gtk_text_view_place_cursor_onscreen	gtktextview.h	/^gboolean       gtk_text_view_place_cursor_onscreen (GtkTextView   *text_view);$/;"	p
gtk_text_view_reset_im_context	gtktextview.h	/^void            gtk_text_view_reset_im_context                  (GtkTextView       *text_view);$/;"	p
gtk_text_view_scroll_mark_onscreen	gtktextview.h	/^void           gtk_text_view_scroll_mark_onscreen  (GtkTextView   *text_view,$/;"	p
gtk_text_view_scroll_to_iter	gtktextview.h	/^gboolean       gtk_text_view_scroll_to_iter        (GtkTextView   *text_view,$/;"	p
gtk_text_view_scroll_to_mark	gtktextview.h	/^void           gtk_text_view_scroll_to_mark        (GtkTextView   *text_view,$/;"	p
gtk_text_view_set_accepts_tab	gtktextview.h	/^void		 gtk_text_view_set_accepts_tab        (GtkTextView	*text_view,$/;"	p
gtk_text_view_set_border_window_size	gtktextview.h	/^void gtk_text_view_set_border_window_size (GtkTextView       *text_view,$/;"	p
gtk_text_view_set_buffer	gtktextview.h	/^void           gtk_text_view_set_buffer            (GtkTextView   *text_view,$/;"	p
gtk_text_view_set_cursor_visible	gtktextview.h	/^void           gtk_text_view_set_cursor_visible    (GtkTextView   *text_view,$/;"	p
gtk_text_view_set_editable	gtktextview.h	/^void             gtk_text_view_set_editable           (GtkTextView      *text_view,$/;"	p
gtk_text_view_set_indent	gtktextview.h	/^void             gtk_text_view_set_indent             (GtkTextView      *text_view,$/;"	p
gtk_text_view_set_justification	gtktextview.h	/^void             gtk_text_view_set_justification      (GtkTextView      *text_view,$/;"	p
gtk_text_view_set_left_margin	gtktextview.h	/^void             gtk_text_view_set_left_margin        (GtkTextView      *text_view,$/;"	p
gtk_text_view_set_overwrite	gtktextview.h	/^void             gtk_text_view_set_overwrite          (GtkTextView      *text_view,$/;"	p
gtk_text_view_set_pixels_above_lines	gtktextview.h	/^void             gtk_text_view_set_pixels_above_lines (GtkTextView      *text_view,$/;"	p
gtk_text_view_set_pixels_below_lines	gtktextview.h	/^void             gtk_text_view_set_pixels_below_lines (GtkTextView      *text_view,$/;"	p
gtk_text_view_set_pixels_inside_wrap	gtktextview.h	/^void             gtk_text_view_set_pixels_inside_wrap (GtkTextView      *text_view,$/;"	p
gtk_text_view_set_right_margin	gtktextview.h	/^void             gtk_text_view_set_right_margin       (GtkTextView      *text_view,$/;"	p
gtk_text_view_set_tabs	gtktextview.h	/^void             gtk_text_view_set_tabs               (GtkTextView      *text_view,$/;"	p
gtk_text_view_set_wrap_mode	gtktextview.h	/^void             gtk_text_view_set_wrap_mode          (GtkTextView      *text_view,$/;"	p
gtk_text_view_starts_display_line	gtktextview.h	/^gboolean gtk_text_view_starts_display_line            (GtkTextView       *text_view,$/;"	p
gtk_text_view_window_to_buffer_coords	gtktextview.h	/^void gtk_text_view_window_to_buffer_coords (GtkTextView       *text_view,$/;"	p
gtk_timeout_add	gtkmain.h	/^guint	   gtk_timeout_add	   (guint32	       interval,$/;"	p
gtk_timeout_add_full	gtkmain.h	/^guint	   gtk_timeout_add_full	   (guint32	       interval,$/;"	p
gtk_timeout_remove	gtkmain.h	/^void	   gtk_timeout_remove	   (guint	       timeout_handler_id);$/;"	p
gtk_tips_query_new	gtktipsquery.h	/^GtkWidget*	gtk_tips_query_new		(void);$/;"	p
gtk_tips_query_set_caller	gtktipsquery.h	/^void		gtk_tips_query_set_caller	(GtkTipsQuery	*tips_query,$/;"	p
gtk_tips_query_set_labels	gtktipsquery.h	/^void		gtk_tips_query_set_labels 	(GtkTipsQuery   *tips_query,$/;"	p
gtk_tips_query_start_query	gtktipsquery.h	/^void		gtk_tips_query_start_query	(GtkTipsQuery	*tips_query);$/;"	p
gtk_tips_query_stop_query	gtktipsquery.h	/^void		gtk_tips_query_stop_query	(GtkTipsQuery	*tips_query);$/;"	p
gtk_toggle_action_get_active	gtktoggleaction.h	/^gboolean         gtk_toggle_action_get_active        (GtkToggleAction *action);$/;"	p
gtk_toggle_action_get_draw_as_radio	gtktoggleaction.h	/^gboolean         gtk_toggle_action_get_draw_as_radio (GtkToggleAction *action);$/;"	p
gtk_toggle_action_new	gtktoggleaction.h	/^GtkToggleAction *gtk_toggle_action_new               (const gchar     *name,$/;"	p
gtk_toggle_action_set_active	gtktoggleaction.h	/^void             gtk_toggle_action_set_active        (GtkToggleAction *action,$/;"	p
gtk_toggle_action_set_draw_as_radio	gtktoggleaction.h	/^void             gtk_toggle_action_set_draw_as_radio (GtkToggleAction *action,$/;"	p
gtk_toggle_action_toggled	gtktoggleaction.h	/^void             gtk_toggle_action_toggled           (GtkToggleAction *action);$/;"	p
gtk_toggle_button_get_active	gtktogglebutton.h	/^gboolean   gtk_toggle_button_get_active        (GtkToggleButton *toggle_button);$/;"	p
gtk_toggle_button_get_inconsistent	gtktogglebutton.h	/^gboolean   gtk_toggle_button_get_inconsistent  (GtkToggleButton *toggle_button);$/;"	p
gtk_toggle_button_get_mode	gtktogglebutton.h	/^gboolean   gtk_toggle_button_get_mode          (GtkToggleButton *toggle_button);$/;"	p
gtk_toggle_button_new	gtktogglebutton.h	/^GtkWidget* gtk_toggle_button_new               (void);$/;"	p
gtk_toggle_button_new_with_label	gtktogglebutton.h	/^GtkWidget* gtk_toggle_button_new_with_label    (const gchar     *label);$/;"	p
gtk_toggle_button_new_with_mnemonic	gtktogglebutton.h	/^GtkWidget* gtk_toggle_button_new_with_mnemonic (const gchar     *label);$/;"	p
gtk_toggle_button_set_active	gtktogglebutton.h	/^void       gtk_toggle_button_set_active        (GtkToggleButton *toggle_button,$/;"	p
gtk_toggle_button_set_inconsistent	gtktogglebutton.h	/^void       gtk_toggle_button_set_inconsistent  (GtkToggleButton *toggle_button,$/;"	p
gtk_toggle_button_set_mode	gtktogglebutton.h	/^void       gtk_toggle_button_set_mode          (GtkToggleButton *toggle_button,$/;"	p
gtk_toggle_button_set_state	gtktogglebutton.h	92;"	d
gtk_toggle_button_toggled	gtktogglebutton.h	/^void       gtk_toggle_button_toggled           (GtkToggleButton *toggle_button);$/;"	p
gtk_toggle_tool_button_get_active	gtktoggletoolbutton.h	/^gboolean     gtk_toggle_tool_button_get_active     (GtkToggleToolButton *button);$/;"	p
gtk_toggle_tool_button_new	gtktoggletoolbutton.h	/^GtkToolItem *gtk_toggle_tool_button_new            (void);$/;"	p
gtk_toggle_tool_button_new_from_stock	gtktoggletoolbutton.h	/^GtkToolItem *gtk_toggle_tool_button_new_from_stock (const gchar *stock_id);$/;"	p
gtk_toggle_tool_button_set_active	gtktoggletoolbutton.h	/^void         gtk_toggle_tool_button_set_active     (GtkToggleToolButton *button,$/;"	p
gtk_tool_button_get_icon_name	gtktoolbutton.h	/^const gchar *         gtk_tool_button_get_icon_name     (GtkToolButton *button);$/;"	p
gtk_tool_button_get_icon_widget	gtktoolbutton.h	/^GtkWidget *           gtk_tool_button_get_icon_widget   (GtkToolButton *button);$/;"	p
gtk_tool_button_get_label	gtktoolbutton.h	/^const gchar *         gtk_tool_button_get_label         (GtkToolButton *button);$/;"	p
gtk_tool_button_get_label_widget	gtktoolbutton.h	/^GtkWidget *           gtk_tool_button_get_label_widget  (GtkToolButton *button);$/;"	p
gtk_tool_button_get_stock_id	gtktoolbutton.h	/^const gchar *         gtk_tool_button_get_stock_id      (GtkToolButton *button);$/;"	p
gtk_tool_button_get_use_underline	gtktoolbutton.h	/^gboolean              gtk_tool_button_get_use_underline (GtkToolButton *button);$/;"	p
gtk_tool_button_new	gtktoolbutton.h	/^GtkToolItem *gtk_tool_button_new            (GtkWidget   *icon_widget,$/;"	p
gtk_tool_button_new_from_stock	gtktoolbutton.h	/^GtkToolItem *gtk_tool_button_new_from_stock (const gchar *stock_id);$/;"	p
gtk_tool_button_set_icon_name	gtktoolbutton.h	/^void                  gtk_tool_button_set_icon_name     (GtkToolButton *button,$/;"	p
gtk_tool_button_set_icon_widget	gtktoolbutton.h	/^void                  gtk_tool_button_set_icon_widget   (GtkToolButton *button,$/;"	p
gtk_tool_button_set_label	gtktoolbutton.h	/^void                  gtk_tool_button_set_label         (GtkToolButton *button,$/;"	p
gtk_tool_button_set_label_widget	gtktoolbutton.h	/^void                  gtk_tool_button_set_label_widget  (GtkToolButton *button,$/;"	p
gtk_tool_button_set_stock_id	gtktoolbutton.h	/^void                  gtk_tool_button_set_stock_id      (GtkToolButton *button,$/;"	p
gtk_tool_button_set_use_underline	gtktoolbutton.h	/^void                  gtk_tool_button_set_use_underline (GtkToolButton *button,$/;"	p
gtk_tool_item_get_ellipsize_mode	gtktoolitem.h	/^PangoEllipsizeMode gtk_tool_item_get_ellipsize_mode    (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_get_expand	gtktoolitem.h	/^gboolean        gtk_tool_item_get_expand               (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_get_homogeneous	gtktoolitem.h	/^gboolean        gtk_tool_item_get_homogeneous          (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_get_icon_size	gtktoolitem.h	/^GtkIconSize     gtk_tool_item_get_icon_size            (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_get_is_important	gtktoolitem.h	/^gboolean        gtk_tool_item_get_is_important         (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_get_orientation	gtktoolitem.h	/^GtkOrientation  gtk_tool_item_get_orientation          (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_get_proxy_menu_item	gtktoolitem.h	/^GtkWidget *     gtk_tool_item_get_proxy_menu_item      (GtkToolItem *tool_item,$/;"	p
gtk_tool_item_get_relief_style	gtktoolitem.h	/^GtkReliefStyle  gtk_tool_item_get_relief_style         (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_get_text_alignment	gtktoolitem.h	/^gfloat          gtk_tool_item_get_text_alignment       (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_get_text_orientation	gtktoolitem.h	/^GtkOrientation  gtk_tool_item_get_text_orientation     (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_get_text_size_group	gtktoolitem.h	/^GtkSizeGroup *  gtk_tool_item_get_text_size_group      (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_get_toolbar_style	gtktoolitem.h	/^GtkToolbarStyle gtk_tool_item_get_toolbar_style        (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_get_use_drag_window	gtktoolitem.h	/^gboolean        gtk_tool_item_get_use_drag_window      (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_get_visible_horizontal	gtktoolitem.h	/^gboolean        gtk_tool_item_get_visible_horizontal   (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_get_visible_vertical	gtktoolitem.h	/^gboolean        gtk_tool_item_get_visible_vertical     (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_group_get_collapsed	gtktoolitemgroup.h	/^gboolean              gtk_tool_item_group_get_collapsed     (GtkToolItemGroup   *group);$/;"	p
gtk_tool_item_group_get_drop_item	gtktoolitemgroup.h	/^GtkToolItem*          gtk_tool_item_group_get_drop_item     (GtkToolItemGroup   *group,$/;"	p
gtk_tool_item_group_get_ellipsize	gtktoolitemgroup.h	/^PangoEllipsizeMode    gtk_tool_item_group_get_ellipsize     (GtkToolItemGroup   *group);$/;"	p
gtk_tool_item_group_get_header_relief	gtktoolitemgroup.h	/^GtkReliefStyle        gtk_tool_item_group_get_header_relief (GtkToolItemGroup   *group);$/;"	p
gtk_tool_item_group_get_item_position	gtktoolitemgroup.h	/^gint                  gtk_tool_item_group_get_item_position (GtkToolItemGroup   *group,$/;"	p
gtk_tool_item_group_get_label	gtktoolitemgroup.h	/^const gchar *         gtk_tool_item_group_get_label         (GtkToolItemGroup   *group);$/;"	p
gtk_tool_item_group_get_label_widget	gtktoolitemgroup.h	/^GtkWidget            *gtk_tool_item_group_get_label_widget  (GtkToolItemGroup   *group);$/;"	p
gtk_tool_item_group_get_n_items	gtktoolitemgroup.h	/^guint                 gtk_tool_item_group_get_n_items       (GtkToolItemGroup   *group);$/;"	p
gtk_tool_item_group_get_nth_item	gtktoolitemgroup.h	/^GtkToolItem*          gtk_tool_item_group_get_nth_item      (GtkToolItemGroup   *group,$/;"	p
gtk_tool_item_group_insert	gtktoolitemgroup.h	/^void                  gtk_tool_item_group_insert            (GtkToolItemGroup   *group,$/;"	p
gtk_tool_item_group_new	gtktoolitemgroup.h	/^GtkWidget*            gtk_tool_item_group_new               (const gchar        *label);$/;"	p
gtk_tool_item_group_set_collapsed	gtktoolitemgroup.h	/^void                  gtk_tool_item_group_set_collapsed      (GtkToolItemGroup  *group,$/;"	p
gtk_tool_item_group_set_ellipsize	gtktoolitemgroup.h	/^void                  gtk_tool_item_group_set_ellipsize     (GtkToolItemGroup   *group,$/;"	p
gtk_tool_item_group_set_header_relief	gtktoolitemgroup.h	/^void                  gtk_tool_item_group_set_header_relief (GtkToolItemGroup   *group,$/;"	p
gtk_tool_item_group_set_item_position	gtktoolitemgroup.h	/^void                  gtk_tool_item_group_set_item_position (GtkToolItemGroup   *group,$/;"	p
gtk_tool_item_group_set_label	gtktoolitemgroup.h	/^void                  gtk_tool_item_group_set_label         (GtkToolItemGroup   *group,$/;"	p
gtk_tool_item_group_set_label_widget	gtktoolitemgroup.h	/^void                  gtk_tool_item_group_set_label_widget  (GtkToolItemGroup   *group,$/;"	p
gtk_tool_item_new	gtktoolitem.h	/^GtkToolItem *gtk_tool_item_new      (void);$/;"	p
gtk_tool_item_rebuild_menu	gtktoolitem.h	/^void		gtk_tool_item_rebuild_menu	       (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_retrieve_proxy_menu_item	gtktoolitem.h	/^GtkWidget *     gtk_tool_item_retrieve_proxy_menu_item (GtkToolItem *tool_item);$/;"	p
gtk_tool_item_set_expand	gtktoolitem.h	/^void            gtk_tool_item_set_expand               (GtkToolItem *tool_item,$/;"	p
gtk_tool_item_set_homogeneous	gtktoolitem.h	/^void            gtk_tool_item_set_homogeneous          (GtkToolItem *tool_item,$/;"	p
gtk_tool_item_set_is_important	gtktoolitem.h	/^void            gtk_tool_item_set_is_important         (GtkToolItem *tool_item,$/;"	p
gtk_tool_item_set_proxy_menu_item	gtktoolitem.h	/^void            gtk_tool_item_set_proxy_menu_item      (GtkToolItem *tool_item,$/;"	p
gtk_tool_item_set_tooltip	gtktoolitem.h	/^void            gtk_tool_item_set_tooltip              (GtkToolItem *tool_item,$/;"	p
gtk_tool_item_set_tooltip_markup	gtktoolitem.h	/^void            gtk_tool_item_set_tooltip_markup       (GtkToolItem *tool_item,$/;"	p
gtk_tool_item_set_tooltip_text	gtktoolitem.h	/^void            gtk_tool_item_set_tooltip_text         (GtkToolItem *tool_item,$/;"	p
gtk_tool_item_set_use_drag_window	gtktoolitem.h	/^void            gtk_tool_item_set_use_drag_window      (GtkToolItem *tool_item,$/;"	p
gtk_tool_item_set_visible_horizontal	gtktoolitem.h	/^void            gtk_tool_item_set_visible_horizontal   (GtkToolItem *tool_item,$/;"	p
gtk_tool_item_set_visible_vertical	gtktoolitem.h	/^void            gtk_tool_item_set_visible_vertical     (GtkToolItem *tool_item,$/;"	p
gtk_tool_item_toolbar_reconfigured	gtktoolitem.h	/^void            gtk_tool_item_toolbar_reconfigured     (GtkToolItem *tool_item);$/;"	p
gtk_tool_palette_add_drag_dest	gtktoolpalette.h	/^void                           gtk_tool_palette_add_drag_dest         (GtkToolPalette            *palette,$/;"	p
gtk_tool_palette_get_drag_item	gtktoolpalette.h	/^GtkWidget*                     gtk_tool_palette_get_drag_item         (GtkToolPalette            *palette,$/;"	p
gtk_tool_palette_get_drop_group	gtktoolpalette.h	/^GtkToolItemGroup*              gtk_tool_palette_get_drop_group        (GtkToolPalette            *palette,$/;"	p
gtk_tool_palette_get_drop_item	gtktoolpalette.h	/^GtkToolItem*                   gtk_tool_palette_get_drop_item         (GtkToolPalette            *palette,$/;"	p
gtk_tool_palette_get_exclusive	gtktoolpalette.h	/^gboolean                       gtk_tool_palette_get_exclusive         (GtkToolPalette            *palette,$/;"	p
gtk_tool_palette_get_expand	gtktoolpalette.h	/^gboolean                       gtk_tool_palette_get_expand            (GtkToolPalette            *palette,$/;"	p
gtk_tool_palette_get_group_position	gtktoolpalette.h	/^gint                           gtk_tool_palette_get_group_position    (GtkToolPalette            *palette,$/;"	p
gtk_tool_palette_get_hadjustment	gtktoolpalette.h	/^GtkAdjustment*                 gtk_tool_palette_get_hadjustment       (GtkToolPalette            *palette);$/;"	p
gtk_tool_palette_get_icon_size	gtktoolpalette.h	/^GtkIconSize                    gtk_tool_palette_get_icon_size         (GtkToolPalette            *palette);$/;"	p
gtk_tool_palette_get_style	gtktoolpalette.h	/^GtkToolbarStyle                gtk_tool_palette_get_style             (GtkToolPalette            *palette);$/;"	p
gtk_tool_palette_get_vadjustment	gtktoolpalette.h	/^GtkAdjustment*                 gtk_tool_palette_get_vadjustment       (GtkToolPalette            *palette);$/;"	p
gtk_tool_palette_new	gtktoolpalette.h	/^GtkWidget*                     gtk_tool_palette_new                   (void);$/;"	p
gtk_tool_palette_set_drag_source	gtktoolpalette.h	/^void                           gtk_tool_palette_set_drag_source       (GtkToolPalette            *palette,$/;"	p
gtk_tool_palette_set_exclusive	gtktoolpalette.h	/^void                           gtk_tool_palette_set_exclusive         (GtkToolPalette            *palette,$/;"	p
gtk_tool_palette_set_expand	gtktoolpalette.h	/^void                           gtk_tool_palette_set_expand            (GtkToolPalette            *palette,$/;"	p
gtk_tool_palette_set_group_position	gtktoolpalette.h	/^void                           gtk_tool_palette_set_group_position    (GtkToolPalette            *palette,$/;"	p
gtk_tool_palette_set_icon_size	gtktoolpalette.h	/^void                           gtk_tool_palette_set_icon_size         (GtkToolPalette            *palette,$/;"	p
gtk_tool_palette_set_style	gtktoolpalette.h	/^void                           gtk_tool_palette_set_style             (GtkToolPalette            *palette,$/;"	p
gtk_tool_palette_unset_icon_size	gtktoolpalette.h	/^void                           gtk_tool_palette_unset_icon_size       (GtkToolPalette            *palette);$/;"	p
gtk_tool_palette_unset_style	gtktoolpalette.h	/^void                           gtk_tool_palette_unset_style           (GtkToolPalette            *palette);$/;"	p
gtk_tool_shell_get_ellipsize_mode	gtktoolshell.h	/^PangoEllipsizeMode gtk_tool_shell_get_ellipsize_mode   (GtkToolShell *shell);$/;"	p
gtk_tool_shell_get_icon_size	gtktoolshell.h	/^GtkIconSize        gtk_tool_shell_get_icon_size        (GtkToolShell *shell);$/;"	p
gtk_tool_shell_get_orientation	gtktoolshell.h	/^GtkOrientation     gtk_tool_shell_get_orientation      (GtkToolShell *shell);$/;"	p
gtk_tool_shell_get_relief_style	gtktoolshell.h	/^GtkReliefStyle     gtk_tool_shell_get_relief_style     (GtkToolShell *shell);$/;"	p
gtk_tool_shell_get_style	gtktoolshell.h	/^GtkToolbarStyle    gtk_tool_shell_get_style            (GtkToolShell *shell);$/;"	p
gtk_tool_shell_get_text_alignment	gtktoolshell.h	/^gfloat             gtk_tool_shell_get_text_alignment   (GtkToolShell *shell);$/;"	p
gtk_tool_shell_get_text_orientation	gtktoolshell.h	/^GtkOrientation     gtk_tool_shell_get_text_orientation (GtkToolShell *shell);$/;"	p
gtk_tool_shell_get_text_size_group	gtktoolshell.h	/^GtkSizeGroup *     gtk_tool_shell_get_text_size_group  (GtkToolShell *shell);$/;"	p
gtk_tool_shell_rebuild_menu	gtktoolshell.h	/^void               gtk_tool_shell_rebuild_menu         (GtkToolShell *shell);$/;"	p
gtk_toolbar_append_element	gtktoolbar.h	/^GtkWidget* gtk_toolbar_append_element  (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_append_item	gtktoolbar.h	/^GtkWidget* gtk_toolbar_append_item   (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_append_space	gtktoolbar.h	/^void       gtk_toolbar_append_space    (GtkToolbar      *toolbar);$/;"	p
gtk_toolbar_append_widget	gtktoolbar.h	/^void       gtk_toolbar_append_widget   (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_get_drop_index	gtktoolbar.h	/^gint            gtk_toolbar_get_drop_index          (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_get_icon_size	gtktoolbar.h	/^GtkIconSize     gtk_toolbar_get_icon_size           (GtkToolbar      *toolbar);$/;"	p
gtk_toolbar_get_item_index	gtktoolbar.h	/^gint            gtk_toolbar_get_item_index          (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_get_n_items	gtktoolbar.h	/^gint            gtk_toolbar_get_n_items             (GtkToolbar      *toolbar);$/;"	p
gtk_toolbar_get_nth_item	gtktoolbar.h	/^GtkToolItem *   gtk_toolbar_get_nth_item            (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_get_orientation	gtktoolbar.h	/^GtkOrientation  gtk_toolbar_get_orientation         (GtkToolbar      *toolbar);$/;"	p
gtk_toolbar_get_relief_style	gtktoolbar.h	/^GtkReliefStyle  gtk_toolbar_get_relief_style        (GtkToolbar      *toolbar);$/;"	p
gtk_toolbar_get_show_arrow	gtktoolbar.h	/^gboolean        gtk_toolbar_get_show_arrow          (GtkToolbar      *toolbar);$/;"	p
gtk_toolbar_get_style	gtktoolbar.h	/^GtkToolbarStyle gtk_toolbar_get_style               (GtkToolbar      *toolbar);$/;"	p
gtk_toolbar_get_tooltips	gtktoolbar.h	/^gboolean        gtk_toolbar_get_tooltips            (GtkToolbar      *toolbar);$/;"	p
gtk_toolbar_insert	gtktoolbar.h	/^void            gtk_toolbar_insert                  (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_insert_element	gtktoolbar.h	/^GtkWidget* gtk_toolbar_insert_element  (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_insert_item	gtktoolbar.h	/^GtkWidget* gtk_toolbar_insert_item   (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_insert_space	gtktoolbar.h	/^void       gtk_toolbar_insert_space    (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_insert_stock	gtktoolbar.h	/^GtkWidget* gtk_toolbar_insert_stock    (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_insert_widget	gtktoolbar.h	/^void       gtk_toolbar_insert_widget   (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_new	gtktoolbar.h	/^GtkWidget *     gtk_toolbar_new                     (void);$/;"	p
gtk_toolbar_prepend_element	gtktoolbar.h	/^GtkWidget* gtk_toolbar_prepend_element (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_prepend_item	gtktoolbar.h	/^GtkWidget* gtk_toolbar_prepend_item  (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_prepend_space	gtktoolbar.h	/^void       gtk_toolbar_prepend_space   (GtkToolbar      *toolbar);$/;"	p
gtk_toolbar_prepend_widget	gtktoolbar.h	/^void       gtk_toolbar_prepend_widget  (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_remove_space	gtktoolbar.h	/^void       gtk_toolbar_remove_space    (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_set_drop_highlight_item	gtktoolbar.h	/^void            gtk_toolbar_set_drop_highlight_item (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_set_icon_size	gtktoolbar.h	/^void            gtk_toolbar_set_icon_size           (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_set_orientation	gtktoolbar.h	/^void            gtk_toolbar_set_orientation         (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_set_show_arrow	gtktoolbar.h	/^void            gtk_toolbar_set_show_arrow          (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_set_style	gtktoolbar.h	/^void            gtk_toolbar_set_style               (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_set_tooltips	gtktoolbar.h	/^void            gtk_toolbar_set_tooltips            (GtkToolbar      *toolbar,$/;"	p
gtk_toolbar_unset_icon_size	gtktoolbar.h	/^void            gtk_toolbar_unset_icon_size         (GtkToolbar      *toolbar);$/;"	p
gtk_toolbar_unset_style	gtktoolbar.h	/^void            gtk_toolbar_unset_style             (GtkToolbar      *toolbar);$/;"	p
gtk_tooltip_get_type	gtktooltip.h	/^GType gtk_tooltip_get_type (void);$/;"	p
gtk_tooltip_set_custom	gtktooltip.h	/^void gtk_tooltip_set_custom	         (GtkTooltip         *tooltip,$/;"	p
gtk_tooltip_set_icon	gtktooltip.h	/^void gtk_tooltip_set_icon                (GtkTooltip         *tooltip,$/;"	p
gtk_tooltip_set_icon_from_gicon	gtktooltip.h	/^void gtk_tooltip_set_icon_from_gicon     (GtkTooltip         *tooltip,$/;"	p
gtk_tooltip_set_icon_from_icon_name	gtktooltip.h	/^void gtk_tooltip_set_icon_from_icon_name (GtkTooltip         *tooltip,$/;"	p
gtk_tooltip_set_icon_from_stock	gtktooltip.h	/^void gtk_tooltip_set_icon_from_stock     (GtkTooltip         *tooltip,$/;"	p
gtk_tooltip_set_markup	gtktooltip.h	/^void gtk_tooltip_set_markup              (GtkTooltip         *tooltip,$/;"	p
gtk_tooltip_set_text	gtktooltip.h	/^void gtk_tooltip_set_text                (GtkTooltip         *tooltip,$/;"	p
gtk_tooltip_set_tip_area	gtktooltip.h	/^void gtk_tooltip_set_tip_area            (GtkTooltip         *tooltip,$/;"	p
gtk_tooltip_trigger_tooltip_query	gtktooltip.h	/^void gtk_tooltip_trigger_tooltip_query   (GdkDisplay         *display);$/;"	p
gtk_tooltips_data_get	gtktooltips.h	/^GtkTooltipsData* gtk_tooltips_data_get	   (GtkWidget	  *widget);$/;"	p
gtk_tooltips_disable	gtktooltips.h	/^void		 gtk_tooltips_disable	   (GtkTooltips   *tooltips);$/;"	p
gtk_tooltips_enable	gtktooltips.h	/^void		 gtk_tooltips_enable	   (GtkTooltips   *tooltips);$/;"	p
gtk_tooltips_force_window	gtktooltips.h	/^void             gtk_tooltips_force_window (GtkTooltips   *tooltips);$/;"	p
gtk_tooltips_get_info_from_tip_window	gtktooltips.h	/^gboolean         gtk_tooltips_get_info_from_tip_window (GtkWindow    *tip_window,$/;"	p
gtk_tooltips_new	gtktooltips.h	/^GtkTooltips*	 gtk_tooltips_new	   (void);$/;"	p
gtk_tooltips_set_delay	gtktooltips.h	/^void		 gtk_tooltips_set_delay	   (GtkTooltips   *tooltips,$/;"	p
gtk_tooltips_set_tip	gtktooltips.h	/^void		 gtk_tooltips_set_tip	   (GtkTooltips   *tooltips,$/;"	p
gtk_tree_append	gtktree.h	/^void       gtk_tree_append             (GtkTree          *tree,$/;"	p
gtk_tree_child_position	gtktree.h	/^gint       gtk_tree_child_position     (GtkTree          *tree,$/;"	p
gtk_tree_clear_items	gtktree.h	/^void       gtk_tree_clear_items        (GtkTree          *tree,$/;"	p
gtk_tree_drag_dest_drag_data_received	gtktreednd.h	/^gboolean gtk_tree_drag_dest_drag_data_received (GtkTreeDragDest   *drag_dest,$/;"	p
gtk_tree_drag_dest_row_drop_possible	gtktreednd.h	/^gboolean gtk_tree_drag_dest_row_drop_possible  (GtkTreeDragDest   *drag_dest,$/;"	p
gtk_tree_drag_source_drag_data_delete	gtktreednd.h	/^gboolean gtk_tree_drag_source_drag_data_delete (GtkTreeDragSource *drag_source,$/;"	p
gtk_tree_drag_source_drag_data_get	gtktreednd.h	/^gboolean gtk_tree_drag_source_drag_data_get    (GtkTreeDragSource *drag_source,$/;"	p
gtk_tree_drag_source_row_draggable	gtktreednd.h	/^gboolean gtk_tree_drag_source_row_draggable    (GtkTreeDragSource *drag_source,$/;"	p
gtk_tree_get_row_drag_data	gtktreednd.h	/^gboolean gtk_tree_get_row_drag_data            (GtkSelectionData  *selection_data,$/;"	p
gtk_tree_insert	gtktree.h	/^void       gtk_tree_insert             (GtkTree          *tree,$/;"	p
gtk_tree_item_collapse	gtktreeitem.h	/^void       gtk_tree_item_collapse       (GtkTreeItem *tree_item);$/;"	p
gtk_tree_item_deselect	gtktreeitem.h	/^void       gtk_tree_item_deselect       (GtkTreeItem *tree_item);$/;"	p
gtk_tree_item_expand	gtktreeitem.h	/^void       gtk_tree_item_expand         (GtkTreeItem *tree_item);$/;"	p
gtk_tree_item_new	gtktreeitem.h	/^GtkWidget* gtk_tree_item_new            (void);$/;"	p
gtk_tree_item_new_with_label	gtktreeitem.h	/^GtkWidget* gtk_tree_item_new_with_label (const gchar *label);$/;"	p
gtk_tree_item_remove_subtree	gtktreeitem.h	/^void       gtk_tree_item_remove_subtree (GtkTreeItem *tree_item);$/;"	p
gtk_tree_item_select	gtktreeitem.h	/^void       gtk_tree_item_select         (GtkTreeItem *tree_item);$/;"	p
gtk_tree_item_set_subtree	gtktreeitem.h	/^void       gtk_tree_item_set_subtree    (GtkTreeItem *tree_item,$/;"	p
gtk_tree_iter_copy	gtktreemodel.h	/^GtkTreeIter *     gtk_tree_iter_copy             (GtkTreeIter  *iter);$/;"	p
gtk_tree_iter_free	gtktreemodel.h	/^void              gtk_tree_iter_free             (GtkTreeIter  *iter);$/;"	p
gtk_tree_model_filter_clear_cache	gtktreemodelfilter.h	/^void          gtk_tree_model_filter_clear_cache                (GtkTreeModelFilter           *filter);$/;"	p
gtk_tree_model_filter_convert_child_iter_to_iter	gtktreemodelfilter.h	/^gboolean      gtk_tree_model_filter_convert_child_iter_to_iter (GtkTreeModelFilter           *filter,$/;"	p
gtk_tree_model_filter_convert_child_path_to_path	gtktreemodelfilter.h	/^GtkTreePath  *gtk_tree_model_filter_convert_child_path_to_path (GtkTreeModelFilter           *filter,$/;"	p
gtk_tree_model_filter_convert_iter_to_child_iter	gtktreemodelfilter.h	/^void          gtk_tree_model_filter_convert_iter_to_child_iter (GtkTreeModelFilter           *filter,$/;"	p
gtk_tree_model_filter_convert_path_to_child_path	gtktreemodelfilter.h	/^GtkTreePath  *gtk_tree_model_filter_convert_path_to_child_path (GtkTreeModelFilter           *filter,$/;"	p
gtk_tree_model_filter_get_model	gtktreemodelfilter.h	/^GtkTreeModel *gtk_tree_model_filter_get_model                  (GtkTreeModelFilter           *filter);$/;"	p
gtk_tree_model_filter_new	gtktreemodelfilter.h	/^GtkTreeModel *gtk_tree_model_filter_new                        (GtkTreeModel                 *child_model,$/;"	p
gtk_tree_model_filter_refilter	gtktreemodelfilter.h	/^void          gtk_tree_model_filter_refilter                   (GtkTreeModelFilter           *filter);$/;"	p
gtk_tree_model_filter_set_modify_func	gtktreemodelfilter.h	/^void          gtk_tree_model_filter_set_modify_func            (GtkTreeModelFilter           *filter,$/;"	p
gtk_tree_model_filter_set_visible_column	gtktreemodelfilter.h	/^void          gtk_tree_model_filter_set_visible_column         (GtkTreeModelFilter           *filter,$/;"	p
gtk_tree_model_filter_set_visible_func	gtktreemodelfilter.h	/^void          gtk_tree_model_filter_set_visible_func           (GtkTreeModelFilter           *filter,$/;"	p
gtk_tree_model_foreach	gtktreemodel.h	/^void              gtk_tree_model_foreach         (GtkTreeModel            *model,$/;"	p
gtk_tree_model_get	gtktreemodel.h	/^void              gtk_tree_model_get             (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_get_column_type	gtktreemodel.h	/^GType             gtk_tree_model_get_column_type (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_get_flags	gtktreemodel.h	/^GtkTreeModelFlags gtk_tree_model_get_flags       (GtkTreeModel *tree_model);$/;"	p
gtk_tree_model_get_iter	gtktreemodel.h	/^gboolean          gtk_tree_model_get_iter        (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_get_iter_first	gtktreemodel.h	/^gboolean          gtk_tree_model_get_iter_first  (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_get_iter_from_string	gtktreemodel.h	/^gboolean          gtk_tree_model_get_iter_from_string (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_get_iter_root	gtktreemodel.h	248;"	d
gtk_tree_model_get_n_columns	gtktreemodel.h	/^gint              gtk_tree_model_get_n_columns   (GtkTreeModel *tree_model);$/;"	p
gtk_tree_model_get_path	gtktreemodel.h	/^GtkTreePath *     gtk_tree_model_get_path        (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_get_string_from_iter	gtktreemodel.h	/^gchar *           gtk_tree_model_get_string_from_iter (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_get_valist	gtktreemodel.h	/^void              gtk_tree_model_get_valist      (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_get_value	gtktreemodel.h	/^void              gtk_tree_model_get_value       (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_iter_children	gtktreemodel.h	/^gboolean          gtk_tree_model_iter_children   (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_iter_has_child	gtktreemodel.h	/^gboolean          gtk_tree_model_iter_has_child  (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_iter_n_children	gtktreemodel.h	/^gint              gtk_tree_model_iter_n_children (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_iter_next	gtktreemodel.h	/^gboolean          gtk_tree_model_iter_next       (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_iter_nth_child	gtktreemodel.h	/^gboolean          gtk_tree_model_iter_nth_child  (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_iter_parent	gtktreemodel.h	/^gboolean          gtk_tree_model_iter_parent     (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_ref_node	gtktreemodel.h	/^void              gtk_tree_model_ref_node        (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_row_changed	gtktreemodel.h	/^void gtk_tree_model_row_changed           (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_row_deleted	gtktreemodel.h	/^void gtk_tree_model_row_deleted           (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_row_has_child_toggled	gtktreemodel.h	/^void gtk_tree_model_row_has_child_toggled (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_row_inserted	gtktreemodel.h	/^void gtk_tree_model_row_inserted          (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_rows_reordered	gtktreemodel.h	/^void gtk_tree_model_rows_reordered        (GtkTreeModel *tree_model,$/;"	p
gtk_tree_model_sort_clear_cache	gtktreemodelsort.h	/^void          gtk_tree_model_sort_clear_cache                (GtkTreeModelSort *tree_model_sort);$/;"	p
gtk_tree_model_sort_convert_child_iter_to_iter	gtktreemodelsort.h	/^gboolean      gtk_tree_model_sort_convert_child_iter_to_iter (GtkTreeModelSort *tree_model_sort,$/;"	p
gtk_tree_model_sort_convert_child_path_to_path	gtktreemodelsort.h	/^GtkTreePath  *gtk_tree_model_sort_convert_child_path_to_path (GtkTreeModelSort *tree_model_sort,$/;"	p
gtk_tree_model_sort_convert_iter_to_child_iter	gtktreemodelsort.h	/^void          gtk_tree_model_sort_convert_iter_to_child_iter (GtkTreeModelSort *tree_model_sort,$/;"	p
gtk_tree_model_sort_convert_path_to_child_path	gtktreemodelsort.h	/^GtkTreePath  *gtk_tree_model_sort_convert_path_to_child_path (GtkTreeModelSort *tree_model_sort,$/;"	p
gtk_tree_model_sort_get_model	gtktreemodelsort.h	/^GtkTreeModel *gtk_tree_model_sort_get_model                  (GtkTreeModelSort *tree_model);$/;"	p
gtk_tree_model_sort_iter_is_valid	gtktreemodelsort.h	/^gboolean      gtk_tree_model_sort_iter_is_valid              (GtkTreeModelSort *tree_model_sort,$/;"	p
gtk_tree_model_sort_new_with_model	gtktreemodelsort.h	/^GtkTreeModel *gtk_tree_model_sort_new_with_model             (GtkTreeModel     *child_model);$/;"	p
gtk_tree_model_sort_reset_default_sort_func	gtktreemodelsort.h	/^void          gtk_tree_model_sort_reset_default_sort_func    (GtkTreeModelSort *tree_model_sort);$/;"	p
gtk_tree_model_unref_node	gtktreemodel.h	/^void              gtk_tree_model_unref_node      (GtkTreeModel *tree_model,$/;"	p
gtk_tree_new	gtktree.h	/^GtkWidget* gtk_tree_new                (void);$/;"	p
gtk_tree_path_append_index	gtktreemodel.h	/^void         gtk_tree_path_append_index     (GtkTreePath       *path,$/;"	p
gtk_tree_path_compare	gtktreemodel.h	/^gint         gtk_tree_path_compare          (const GtkTreePath *a,$/;"	p
gtk_tree_path_copy	gtktreemodel.h	/^GtkTreePath *gtk_tree_path_copy             (const GtkTreePath *path);$/;"	p
gtk_tree_path_down	gtktreemodel.h	/^void         gtk_tree_path_down             (GtkTreePath       *path);$/;"	p
gtk_tree_path_free	gtktreemodel.h	/^void         gtk_tree_path_free             (GtkTreePath       *path);$/;"	p
gtk_tree_path_get_depth	gtktreemodel.h	/^gint         gtk_tree_path_get_depth        (GtkTreePath       *path);$/;"	p
gtk_tree_path_get_indices	gtktreemodel.h	/^gint        *gtk_tree_path_get_indices      (GtkTreePath       *path);$/;"	p
gtk_tree_path_get_indices_with_depth	gtktreemodel.h	/^gint        *gtk_tree_path_get_indices_with_depth (GtkTreePath *path,$/;"	p
gtk_tree_path_is_ancestor	gtktreemodel.h	/^gboolean     gtk_tree_path_is_ancestor      (GtkTreePath       *path,$/;"	p
gtk_tree_path_is_descendant	gtktreemodel.h	/^gboolean     gtk_tree_path_is_descendant    (GtkTreePath       *path,$/;"	p
gtk_tree_path_new	gtktreemodel.h	/^GtkTreePath *gtk_tree_path_new              (void);$/;"	p
gtk_tree_path_new_first	gtktreemodel.h	/^GtkTreePath *gtk_tree_path_new_first        (void);$/;"	p
gtk_tree_path_new_from_indices	gtktreemodel.h	/^GtkTreePath *gtk_tree_path_new_from_indices (gint               first_index,$/;"	p
gtk_tree_path_new_from_string	gtktreemodel.h	/^GtkTreePath *gtk_tree_path_new_from_string  (const gchar       *path);$/;"	p
gtk_tree_path_new_root	gtktreemodel.h	155;"	d
gtk_tree_path_next	gtktreemodel.h	/^void         gtk_tree_path_next             (GtkTreePath       *path);$/;"	p
gtk_tree_path_prepend_index	gtktreemodel.h	/^void         gtk_tree_path_prepend_index    (GtkTreePath       *path,$/;"	p
gtk_tree_path_prev	gtktreemodel.h	/^gboolean     gtk_tree_path_prev             (GtkTreePath       *path);$/;"	p
gtk_tree_path_to_string	gtktreemodel.h	/^gchar       *gtk_tree_path_to_string        (GtkTreePath       *path);$/;"	p
gtk_tree_path_up	gtktreemodel.h	/^gboolean     gtk_tree_path_up               (GtkTreePath       *path);$/;"	p
gtk_tree_prepend	gtktree.h	/^void       gtk_tree_prepend            (GtkTree          *tree,$/;"	p
gtk_tree_remove_item	gtktree.h	/^void       gtk_tree_remove_item        (GtkTree          *tree,$/;"	p
gtk_tree_remove_items	gtktree.h	/^void       gtk_tree_remove_items       (GtkTree          *tree,$/;"	p
gtk_tree_row_reference_copy	gtktreemodel.h	/^GtkTreeRowReference *gtk_tree_row_reference_copy      (GtkTreeRowReference *reference);$/;"	p
gtk_tree_row_reference_deleted	gtktreemodel.h	/^void                 gtk_tree_row_reference_deleted   (GObject     *proxy,$/;"	p
gtk_tree_row_reference_free	gtktreemodel.h	/^void                 gtk_tree_row_reference_free      (GtkTreeRowReference *reference);$/;"	p
gtk_tree_row_reference_get_model	gtktreemodel.h	/^GtkTreeModel        *gtk_tree_row_reference_get_model (GtkTreeRowReference *reference);$/;"	p
gtk_tree_row_reference_get_path	gtktreemodel.h	/^GtkTreePath         *gtk_tree_row_reference_get_path  (GtkTreeRowReference *reference);$/;"	p
gtk_tree_row_reference_inserted	gtktreemodel.h	/^void                 gtk_tree_row_reference_inserted  (GObject     *proxy,$/;"	p
gtk_tree_row_reference_new	gtktreemodel.h	/^GtkTreeRowReference *gtk_tree_row_reference_new       (GtkTreeModel        *model,$/;"	p
gtk_tree_row_reference_new_proxy	gtktreemodel.h	/^GtkTreeRowReference *gtk_tree_row_reference_new_proxy (GObject             *proxy,$/;"	p
gtk_tree_row_reference_reordered	gtktreemodel.h	/^void                 gtk_tree_row_reference_reordered (GObject     *proxy,$/;"	p
gtk_tree_row_reference_valid	gtktreemodel.h	/^gboolean             gtk_tree_row_reference_valid     (GtkTreeRowReference *reference);$/;"	p
gtk_tree_select_child	gtktree.h	/^void       gtk_tree_select_child       (GtkTree          *tree,$/;"	p
gtk_tree_select_item	gtktree.h	/^void       gtk_tree_select_item        (GtkTree          *tree,$/;"	p
gtk_tree_selection_count_selected_rows	gtktreeselection.h	/^gint             gtk_tree_selection_count_selected_rows (GtkTreeSelection            *selection);$/;"	p
gtk_tree_selection_get_mode	gtktreeselection.h	/^GtkSelectionMode gtk_tree_selection_get_mode        (GtkTreeSelection            *selection);$/;"	p
gtk_tree_selection_get_select_function	gtktreeselection.h	/^GtkTreeSelectionFunc gtk_tree_selection_get_select_function (GtkTreeSelection        *selection);$/;"	p
gtk_tree_selection_get_selected	gtktreeselection.h	/^gboolean         gtk_tree_selection_get_selected        (GtkTreeSelection            *selection,$/;"	p
gtk_tree_selection_get_selected_rows	gtktreeselection.h	/^GList *          gtk_tree_selection_get_selected_rows   (GtkTreeSelection            *selection,$/;"	p
gtk_tree_selection_get_tree_view	gtktreeselection.h	/^GtkTreeView*     gtk_tree_selection_get_tree_view       (GtkTreeSelection            *selection);$/;"	p
gtk_tree_selection_get_user_data	gtktreeselection.h	/^gpointer         gtk_tree_selection_get_user_data       (GtkTreeSelection            *selection);$/;"	p
gtk_tree_selection_iter_is_selected	gtktreeselection.h	/^gboolean         gtk_tree_selection_iter_is_selected    (GtkTreeSelection            *selection,$/;"	p
gtk_tree_selection_path_is_selected	gtktreeselection.h	/^gboolean         gtk_tree_selection_path_is_selected    (GtkTreeSelection            *selection,$/;"	p
gtk_tree_selection_select_all	gtktreeselection.h	/^void             gtk_tree_selection_select_all          (GtkTreeSelection            *selection);$/;"	p
gtk_tree_selection_select_iter	gtktreeselection.h	/^void             gtk_tree_selection_select_iter         (GtkTreeSelection            *selection,$/;"	p
gtk_tree_selection_select_path	gtktreeselection.h	/^void             gtk_tree_selection_select_path         (GtkTreeSelection            *selection,$/;"	p
gtk_tree_selection_select_range	gtktreeselection.h	/^void             gtk_tree_selection_select_range        (GtkTreeSelection            *selection,$/;"	p
gtk_tree_selection_selected_foreach	gtktreeselection.h	/^void             gtk_tree_selection_selected_foreach    (GtkTreeSelection            *selection,$/;"	p
gtk_tree_selection_set_mode	gtktreeselection.h	/^void             gtk_tree_selection_set_mode            (GtkTreeSelection            *selection,$/;"	p
gtk_tree_selection_set_select_function	gtktreeselection.h	/^void             gtk_tree_selection_set_select_function (GtkTreeSelection            *selection,$/;"	p
gtk_tree_selection_unselect_all	gtktreeselection.h	/^void             gtk_tree_selection_unselect_all        (GtkTreeSelection            *selection);$/;"	p
gtk_tree_selection_unselect_iter	gtktreeselection.h	/^void             gtk_tree_selection_unselect_iter       (GtkTreeSelection            *selection,$/;"	p
gtk_tree_selection_unselect_path	gtktreeselection.h	/^void             gtk_tree_selection_unselect_path       (GtkTreeSelection            *selection,$/;"	p
gtk_tree_selection_unselect_range	gtktreeselection.h	/^void             gtk_tree_selection_unselect_range      (GtkTreeSelection            *selection,$/;"	p
gtk_tree_set_row_drag_data	gtktreednd.h	/^gboolean gtk_tree_set_row_drag_data            (GtkSelectionData  *selection_data,$/;"	p
gtk_tree_set_selection_mode	gtktree.h	/^void       gtk_tree_set_selection_mode (GtkTree          *tree,$/;"	p
gtk_tree_set_view_lines	gtktree.h	/^void       gtk_tree_set_view_lines     (GtkTree          *tree,$/;"	p
gtk_tree_set_view_mode	gtktree.h	/^void       gtk_tree_set_view_mode      (GtkTree          *tree,$/;"	p
gtk_tree_sortable_get_sort_column_id	gtktreesortable.h	/^gboolean gtk_tree_sortable_get_sort_column_id    (GtkTreeSortable        *sortable,$/;"	p
gtk_tree_sortable_has_default_sort_func	gtktreesortable.h	/^gboolean gtk_tree_sortable_has_default_sort_func (GtkTreeSortable        *sortable);$/;"	p
gtk_tree_sortable_set_default_sort_func	gtktreesortable.h	/^void     gtk_tree_sortable_set_default_sort_func (GtkTreeSortable        *sortable,$/;"	p
gtk_tree_sortable_set_sort_column_id	gtktreesortable.h	/^void     gtk_tree_sortable_set_sort_column_id    (GtkTreeSortable        *sortable,$/;"	p
gtk_tree_sortable_set_sort_func	gtktreesortable.h	/^void     gtk_tree_sortable_set_sort_func         (GtkTreeSortable        *sortable,$/;"	p
gtk_tree_sortable_sort_column_changed	gtktreesortable.h	/^void     gtk_tree_sortable_sort_column_changed   (GtkTreeSortable        *sortable);$/;"	p
gtk_tree_store_append	gtktreestore.h	/^void          gtk_tree_store_append           (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_clear	gtktreestore.h	/^void          gtk_tree_store_clear            (GtkTreeStore *tree_store);$/;"	p
gtk_tree_store_insert	gtktreestore.h	/^void          gtk_tree_store_insert           (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_insert_after	gtktreestore.h	/^void          gtk_tree_store_insert_after     (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_insert_before	gtktreestore.h	/^void          gtk_tree_store_insert_before    (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_insert_with_values	gtktreestore.h	/^void          gtk_tree_store_insert_with_values (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_insert_with_valuesv	gtktreestore.h	/^void          gtk_tree_store_insert_with_valuesv (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_is_ancestor	gtktreestore.h	/^gboolean      gtk_tree_store_is_ancestor      (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_iter_depth	gtktreestore.h	/^gint          gtk_tree_store_iter_depth       (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_iter_is_valid	gtktreestore.h	/^gboolean      gtk_tree_store_iter_is_valid    (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_move_after	gtktreestore.h	/^void          gtk_tree_store_move_after       (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_move_before	gtktreestore.h	/^void          gtk_tree_store_move_before      (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_new	gtktreestore.h	/^GtkTreeStore *gtk_tree_store_new              (gint          n_columns,$/;"	p
gtk_tree_store_newv	gtktreestore.h	/^GtkTreeStore *gtk_tree_store_newv             (gint          n_columns,$/;"	p
gtk_tree_store_prepend	gtktreestore.h	/^void          gtk_tree_store_prepend          (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_remove	gtktreestore.h	/^gboolean      gtk_tree_store_remove           (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_reorder	gtktreestore.h	/^void          gtk_tree_store_reorder          (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_set	gtktreestore.h	/^void          gtk_tree_store_set              (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_set_column_types	gtktreestore.h	/^void          gtk_tree_store_set_column_types (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_set_valist	gtktreestore.h	/^void          gtk_tree_store_set_valist       (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_set_value	gtktreestore.h	/^void          gtk_tree_store_set_value        (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_set_valuesv	gtktreestore.h	/^void          gtk_tree_store_set_valuesv      (GtkTreeStore *tree_store,$/;"	p
gtk_tree_store_swap	gtktreestore.h	/^void          gtk_tree_store_swap             (GtkTreeStore *tree_store,$/;"	p
gtk_tree_unselect_child	gtktree.h	/^void       gtk_tree_unselect_child     (GtkTree          *tree,$/;"	p
gtk_tree_unselect_item	gtktree.h	/^void       gtk_tree_unselect_item      (GtkTree          *tree,$/;"	p
gtk_tree_view_append_column	gtktreeview.h	/^gint                   gtk_tree_view_append_column                 (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_collapse_all	gtktreeview.h	/^void                   gtk_tree_view_collapse_all                  (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_collapse_row	gtktreeview.h	/^gboolean               gtk_tree_view_collapse_row                  (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_column_add_attribute	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_add_attribute       (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_cell_get_position	gtktreeviewcolumn.h	/^gboolean                gtk_tree_view_column_cell_get_position   (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_cell_get_size	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_cell_get_size       (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_cell_is_visible	gtktreeviewcolumn.h	/^gboolean                gtk_tree_view_column_cell_is_visible     (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_cell_set_cell_data	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_cell_set_cell_data  (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_clear	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_clear               (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_clear_attributes	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_clear_attributes    (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_clicked	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_clicked             (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_focus_cell	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_focus_cell          (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_get_alignment	gtktreeviewcolumn.h	/^gfloat                  gtk_tree_view_column_get_alignment       (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_cell_renderers	gtktreeviewcolumn.h	/^GList                  *gtk_tree_view_column_get_cell_renderers  (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_clickable	gtktreeviewcolumn.h	/^gboolean                gtk_tree_view_column_get_clickable       (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_expand	gtktreeviewcolumn.h	/^gboolean                gtk_tree_view_column_get_expand          (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_fixed_width	gtktreeviewcolumn.h	/^gint                    gtk_tree_view_column_get_fixed_width     (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_max_width	gtktreeviewcolumn.h	/^gint                    gtk_tree_view_column_get_max_width       (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_min_width	gtktreeviewcolumn.h	/^gint                    gtk_tree_view_column_get_min_width       (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_reorderable	gtktreeviewcolumn.h	/^gboolean                gtk_tree_view_column_get_reorderable     (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_resizable	gtktreeviewcolumn.h	/^gboolean                gtk_tree_view_column_get_resizable       (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_sizing	gtktreeviewcolumn.h	/^GtkTreeViewColumnSizing gtk_tree_view_column_get_sizing          (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_sort_column_id	gtktreeviewcolumn.h	/^gint                    gtk_tree_view_column_get_sort_column_id  (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_sort_indicator	gtktreeviewcolumn.h	/^gboolean                gtk_tree_view_column_get_sort_indicator  (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_sort_order	gtktreeviewcolumn.h	/^GtkSortType             gtk_tree_view_column_get_sort_order      (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_spacing	gtktreeviewcolumn.h	/^gint                    gtk_tree_view_column_get_spacing         (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_title	gtktreeviewcolumn.h	/^const gchar *           gtk_tree_view_column_get_title           (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_tree_view	gtktreeviewcolumn.h	/^GtkWidget              *gtk_tree_view_column_get_tree_view       (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_visible	gtktreeviewcolumn.h	/^gboolean                gtk_tree_view_column_get_visible         (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_widget	gtktreeviewcolumn.h	/^GtkWidget              *gtk_tree_view_column_get_widget          (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_get_width	gtktreeviewcolumn.h	/^gint                    gtk_tree_view_column_get_width           (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_new	gtktreeviewcolumn.h	/^GtkTreeViewColumn      *gtk_tree_view_column_new                 (void);$/;"	p
gtk_tree_view_column_pack_end	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_pack_end            (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_pack_start	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_pack_start          (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_queue_resize	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_queue_resize        (GtkTreeViewColumn       *tree_column);$/;"	p
gtk_tree_view_column_set_alignment	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_alignment       (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_cell_data_func	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_cell_data_func  (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_clickable	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_clickable       (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_expand	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_expand          (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_fixed_width	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_fixed_width     (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_max_width	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_max_width       (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_min_width	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_min_width       (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_reorderable	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_reorderable     (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_resizable	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_resizable       (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_sizing	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_sizing          (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_sort_column_id	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_sort_column_id  (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_sort_indicator	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_sort_indicator  (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_sort_order	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_sort_order      (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_spacing	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_spacing         (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_title	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_title           (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_visible	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_visible         (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_column_set_widget	gtktreeviewcolumn.h	/^void                    gtk_tree_view_column_set_widget          (GtkTreeViewColumn       *tree_column,$/;"	p
gtk_tree_view_columns_autosize	gtktreeview.h	/^void                   gtk_tree_view_columns_autosize              (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_convert_bin_window_to_tree_coords	gtktreeview.h	/^void gtk_tree_view_convert_bin_window_to_tree_coords   (GtkTreeView *tree_view,$/;"	p
gtk_tree_view_convert_bin_window_to_widget_coords	gtktreeview.h	/^void gtk_tree_view_convert_bin_window_to_widget_coords (GtkTreeView *tree_view,$/;"	p
gtk_tree_view_convert_tree_to_bin_window_coords	gtktreeview.h	/^void gtk_tree_view_convert_tree_to_bin_window_coords   (GtkTreeView *tree_view,$/;"	p
gtk_tree_view_convert_tree_to_widget_coords	gtktreeview.h	/^void gtk_tree_view_convert_tree_to_widget_coords       (GtkTreeView *tree_view,$/;"	p
gtk_tree_view_convert_widget_to_bin_window_coords	gtktreeview.h	/^void gtk_tree_view_convert_widget_to_bin_window_coords (GtkTreeView *tree_view,$/;"	p
gtk_tree_view_convert_widget_to_tree_coords	gtktreeview.h	/^void gtk_tree_view_convert_widget_to_tree_coords       (GtkTreeView *tree_view,$/;"	p
gtk_tree_view_create_row_drag_icon	gtktreeview.h	/^GdkPixmap             *gtk_tree_view_create_row_drag_icon          (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_enable_model_drag_dest	gtktreeview.h	/^void                   gtk_tree_view_enable_model_drag_dest        (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_enable_model_drag_source	gtktreeview.h	/^void                   gtk_tree_view_enable_model_drag_source      (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_expand_all	gtktreeview.h	/^void                   gtk_tree_view_expand_all                    (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_expand_row	gtktreeview.h	/^gboolean               gtk_tree_view_expand_row                    (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_expand_to_path	gtktreeview.h	/^void                   gtk_tree_view_expand_to_path                (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_get_background_area	gtktreeview.h	/^void                   gtk_tree_view_get_background_area           (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_get_bin_window	gtktreeview.h	/^GdkWindow             *gtk_tree_view_get_bin_window                (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_get_cell_area	gtktreeview.h	/^void                   gtk_tree_view_get_cell_area                 (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_get_column	gtktreeview.h	/^GtkTreeViewColumn     *gtk_tree_view_get_column                    (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_get_columns	gtktreeview.h	/^GList                 *gtk_tree_view_get_columns                   (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_get_cursor	gtktreeview.h	/^void                   gtk_tree_view_get_cursor                    (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_get_dest_row_at_pos	gtktreeview.h	/^gboolean               gtk_tree_view_get_dest_row_at_pos           (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_get_drag_dest_row	gtktreeview.h	/^void                   gtk_tree_view_get_drag_dest_row             (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_get_enable_search	gtktreeview.h	/^gboolean                   gtk_tree_view_get_enable_search     (GtkTreeView                *tree_view);$/;"	p
gtk_tree_view_get_enable_tree_lines	gtktreeview.h	/^gboolean                    gtk_tree_view_get_enable_tree_lines  (GtkTreeView                *tree_view);$/;"	p
gtk_tree_view_get_expander_column	gtktreeview.h	/^GtkTreeViewColumn     *gtk_tree_view_get_expander_column           (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_get_fixed_height_mode	gtktreeview.h	/^gboolean gtk_tree_view_get_fixed_height_mode (GtkTreeView          *tree_view);$/;"	p
gtk_tree_view_get_grid_lines	gtktreeview.h	/^GtkTreeViewGridLines        gtk_tree_view_get_grid_lines         (GtkTreeView                *tree_view);$/;"	p
gtk_tree_view_get_hadjustment	gtktreeview.h	/^GtkAdjustment         *gtk_tree_view_get_hadjustment               (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_get_headers_clickable	gtktreeview.h	/^gboolean               gtk_tree_view_get_headers_clickable         (GtkTreeView *tree_view);$/;"	p
gtk_tree_view_get_headers_visible	gtktreeview.h	/^gboolean               gtk_tree_view_get_headers_visible           (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_get_hover_expand	gtktreeview.h	/^gboolean gtk_tree_view_get_hover_expand      (GtkTreeView          *tree_view);$/;"	p
gtk_tree_view_get_hover_selection	gtktreeview.h	/^gboolean gtk_tree_view_get_hover_selection   (GtkTreeView          *tree_view);$/;"	p
gtk_tree_view_get_level_indentation	gtktreeview.h	/^gint                        gtk_tree_view_get_level_indentation  (GtkTreeView                *tree_view);$/;"	p
gtk_tree_view_get_model	gtktreeview.h	/^GtkTreeModel          *gtk_tree_view_get_model                     (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_get_path_at_pos	gtktreeview.h	/^gboolean               gtk_tree_view_get_path_at_pos               (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_get_reorderable	gtktreeview.h	/^gboolean               gtk_tree_view_get_reorderable               (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_get_row_separator_func	gtktreeview.h	/^GtkTreeViewRowSeparatorFunc gtk_tree_view_get_row_separator_func (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_get_rubber_banding	gtktreeview.h	/^gboolean gtk_tree_view_get_rubber_banding    (GtkTreeView          *tree_view);$/;"	p
gtk_tree_view_get_rules_hint	gtktreeview.h	/^gboolean               gtk_tree_view_get_rules_hint                (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_get_search_column	gtktreeview.h	/^gint                       gtk_tree_view_get_search_column     (GtkTreeView                *tree_view);$/;"	p
gtk_tree_view_get_search_entry	gtktreeview.h	/^GtkEntry                     *gtk_tree_view_get_search_entry         (GtkTreeView                   *tree_view);$/;"	p
gtk_tree_view_get_search_equal_func	gtktreeview.h	/^GtkTreeViewSearchEqualFunc gtk_tree_view_get_search_equal_func (GtkTreeView                *tree_view);$/;"	p
gtk_tree_view_get_search_position_func	gtktreeview.h	/^GtkTreeViewSearchPositionFunc gtk_tree_view_get_search_position_func (GtkTreeView                   *tree_view);$/;"	p
gtk_tree_view_get_selection	gtktreeview.h	/^GtkTreeSelection      *gtk_tree_view_get_selection                 (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_get_show_expanders	gtktreeview.h	/^gboolean                    gtk_tree_view_get_show_expanders     (GtkTreeView                *tree_view);$/;"	p
gtk_tree_view_get_tooltip_column	gtktreeview.h	/^gint          gtk_tree_view_get_tooltip_column (GtkTreeView       *tree_view);$/;"	p
gtk_tree_view_get_tooltip_context	gtktreeview.h	/^gboolean      gtk_tree_view_get_tooltip_context(GtkTreeView       *tree_view,$/;"	p
gtk_tree_view_get_vadjustment	gtktreeview.h	/^GtkAdjustment         *gtk_tree_view_get_vadjustment               (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_get_visible_range	gtktreeview.h	/^gboolean               gtk_tree_view_get_visible_range             (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_get_visible_rect	gtktreeview.h	/^void                   gtk_tree_view_get_visible_rect              (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_insert_column	gtktreeview.h	/^gint                   gtk_tree_view_insert_column                 (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_insert_column_with_data_func	gtktreeview.h	/^gint                   gtk_tree_view_insert_column_with_data_func  (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_is_rubber_banding_active	gtktreeview.h	/^gboolean gtk_tree_view_is_rubber_banding_active (GtkTreeView       *tree_view);$/;"	p
gtk_tree_view_map_expanded_rows	gtktreeview.h	/^void                   gtk_tree_view_map_expanded_rows             (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_move_column_after	gtktreeview.h	/^void                   gtk_tree_view_move_column_after             (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_new	gtktreeview.h	/^GtkWidget             *gtk_tree_view_new                           (void);$/;"	p
gtk_tree_view_new_with_model	gtktreeview.h	/^GtkWidget             *gtk_tree_view_new_with_model                (GtkTreeModel              *model);$/;"	p
gtk_tree_view_remove_column	gtktreeview.h	/^gint                   gtk_tree_view_remove_column                 (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_row_activated	gtktreeview.h	/^void                   gtk_tree_view_row_activated                 (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_row_expanded	gtktreeview.h	/^gboolean               gtk_tree_view_row_expanded                  (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_scroll_to_cell	gtktreeview.h	/^void                   gtk_tree_view_scroll_to_cell                (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_scroll_to_point	gtktreeview.h	/^void                   gtk_tree_view_scroll_to_point               (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_set_column_drag_function	gtktreeview.h	/^void                   gtk_tree_view_set_column_drag_function      (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_set_cursor	gtktreeview.h	/^void                   gtk_tree_view_set_cursor                    (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_set_cursor_on_cell	gtktreeview.h	/^void                   gtk_tree_view_set_cursor_on_cell            (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_set_destroy_count_func	gtktreeview.h	/^void gtk_tree_view_set_destroy_count_func (GtkTreeView             *tree_view,$/;"	p
gtk_tree_view_set_drag_dest_row	gtktreeview.h	/^void                   gtk_tree_view_set_drag_dest_row             (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_set_enable_search	gtktreeview.h	/^void                       gtk_tree_view_set_enable_search     (GtkTreeView                *tree_view,$/;"	p
gtk_tree_view_set_enable_tree_lines	gtktreeview.h	/^void                        gtk_tree_view_set_enable_tree_lines  (GtkTreeView                *tree_view,$/;"	p
gtk_tree_view_set_expander_column	gtktreeview.h	/^void                   gtk_tree_view_set_expander_column           (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_set_fixed_height_mode	gtktreeview.h	/^void     gtk_tree_view_set_fixed_height_mode (GtkTreeView          *tree_view,$/;"	p
gtk_tree_view_set_grid_lines	gtktreeview.h	/^void                        gtk_tree_view_set_grid_lines         (GtkTreeView                *tree_view,$/;"	p
gtk_tree_view_set_hadjustment	gtktreeview.h	/^void                   gtk_tree_view_set_hadjustment               (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_set_headers_clickable	gtktreeview.h	/^void                   gtk_tree_view_set_headers_clickable         (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_set_headers_visible	gtktreeview.h	/^void                   gtk_tree_view_set_headers_visible           (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_set_hover_expand	gtktreeview.h	/^void     gtk_tree_view_set_hover_expand      (GtkTreeView          *tree_view,$/;"	p
gtk_tree_view_set_hover_selection	gtktreeview.h	/^void     gtk_tree_view_set_hover_selection   (GtkTreeView          *tree_view,$/;"	p
gtk_tree_view_set_level_indentation	gtktreeview.h	/^void                        gtk_tree_view_set_level_indentation  (GtkTreeView                *tree_view,$/;"	p
gtk_tree_view_set_model	gtktreeview.h	/^void                   gtk_tree_view_set_model                     (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_set_reorderable	gtktreeview.h	/^void                   gtk_tree_view_set_reorderable               (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_set_row_separator_func	gtktreeview.h	/^void                        gtk_tree_view_set_row_separator_func (GtkTreeView                *tree_view,$/;"	p
gtk_tree_view_set_rubber_banding	gtktreeview.h	/^void     gtk_tree_view_set_rubber_banding    (GtkTreeView          *tree_view,$/;"	p
gtk_tree_view_set_rules_hint	gtktreeview.h	/^void                   gtk_tree_view_set_rules_hint                (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_set_search_column	gtktreeview.h	/^void                       gtk_tree_view_set_search_column     (GtkTreeView                *tree_view,$/;"	p
gtk_tree_view_set_search_entry	gtktreeview.h	/^void                          gtk_tree_view_set_search_entry         (GtkTreeView                   *tree_view,$/;"	p
gtk_tree_view_set_search_equal_func	gtktreeview.h	/^void                       gtk_tree_view_set_search_equal_func (GtkTreeView                *tree_view,$/;"	p
gtk_tree_view_set_search_position_func	gtktreeview.h	/^void                          gtk_tree_view_set_search_position_func (GtkTreeView                   *tree_view,$/;"	p
gtk_tree_view_set_show_expanders	gtktreeview.h	/^void                        gtk_tree_view_set_show_expanders     (GtkTreeView                *tree_view,$/;"	p
gtk_tree_view_set_tooltip_cell	gtktreeview.h	/^void          gtk_tree_view_set_tooltip_cell   (GtkTreeView       *tree_view,$/;"	p
gtk_tree_view_set_tooltip_column	gtktreeview.h	/^void          gtk_tree_view_set_tooltip_column (GtkTreeView       *tree_view,$/;"	p
gtk_tree_view_set_tooltip_row	gtktreeview.h	/^void          gtk_tree_view_set_tooltip_row    (GtkTreeView       *tree_view,$/;"	p
gtk_tree_view_set_vadjustment	gtktreeview.h	/^void                   gtk_tree_view_set_vadjustment               (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_tree_to_widget_coords	gtktreeview.h	/^void                   gtk_tree_view_tree_to_widget_coords         (GtkTreeView               *tree_view,$/;"	p
gtk_tree_view_unset_rows_drag_dest	gtktreeview.h	/^void                   gtk_tree_view_unset_rows_drag_dest          (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_unset_rows_drag_source	gtktreeview.h	/^void                   gtk_tree_view_unset_rows_drag_source        (GtkTreeView               *tree_view);$/;"	p
gtk_tree_view_widget_to_tree_coords	gtktreeview.h	/^void                   gtk_tree_view_widget_to_tree_coords         (GtkTreeView               *tree_view,$/;"	p
gtk_type_class	gtktypeutils.h	/^gpointer        gtk_type_class  (GtkType            type);$/;"	p
gtk_type_enum_find_value	gtktypeutils.h	/^GtkEnumValue*	gtk_type_enum_find_value	(GtkType	 enum_type,$/;"	p
gtk_type_enum_get_values	gtktypeutils.h	/^GtkEnumValue*	gtk_type_enum_get_values	(GtkType	 enum_type);$/;"	p
gtk_type_flags_find_value	gtktypeutils.h	/^GtkFlagValue*	gtk_type_flags_find_value	(GtkType	 flags_type,$/;"	p
gtk_type_flags_get_values	gtktypeutils.h	/^GtkFlagValue*	gtk_type_flags_get_values	(GtkType	 flags_type);$/;"	p
gtk_type_from_name	gtktypeutils.h	244;"	d
gtk_type_init	gtktypeutils.h	/^void            gtk_type_init   (GTypeDebugFlags    debug_flags);$/;"	p
gtk_type_is_a	gtktypeutils.h	246;"	d
gtk_type_name	gtktypeutils.h	243;"	d
gtk_type_new	gtktypeutils.h	/^gpointer        gtk_type_new    (GtkType            type);$/;"	p
gtk_type_parent	gtktypeutils.h	245;"	d
gtk_type_unique	gtktypeutils.h	/^GtkType         gtk_type_unique (GtkType            parent_type,$/;"	p
gtk_ui_manager_add_ui	gtkuimanager.h	/^void           gtk_ui_manager_add_ui              (GtkUIManager          *self,$/;"	p
gtk_ui_manager_add_ui_from_file	gtkuimanager.h	/^guint          gtk_ui_manager_add_ui_from_file    (GtkUIManager          *self,$/;"	p
gtk_ui_manager_add_ui_from_file	gtkuimanager.h	110;"	d
gtk_ui_manager_add_ui_from_string	gtkuimanager.h	/^guint          gtk_ui_manager_add_ui_from_string  (GtkUIManager          *self,$/;"	p
gtk_ui_manager_ensure_update	gtkuimanager.h	/^void           gtk_ui_manager_ensure_update       (GtkUIManager          *self);$/;"	p
gtk_ui_manager_get_accel_group	gtkuimanager.h	/^GtkAccelGroup *gtk_ui_manager_get_accel_group     (GtkUIManager          *self);$/;"	p
gtk_ui_manager_get_action	gtkuimanager.h	/^GtkAction     *gtk_ui_manager_get_action          (GtkUIManager          *self,$/;"	p
gtk_ui_manager_get_action_groups	gtkuimanager.h	/^GList         *gtk_ui_manager_get_action_groups   (GtkUIManager          *self);$/;"	p
gtk_ui_manager_get_add_tearoffs	gtkuimanager.h	/^gboolean       gtk_ui_manager_get_add_tearoffs    (GtkUIManager          *self);$/;"	p
gtk_ui_manager_get_toplevels	gtkuimanager.h	/^GSList        *gtk_ui_manager_get_toplevels       (GtkUIManager          *self,$/;"	p
gtk_ui_manager_get_ui	gtkuimanager.h	/^gchar         *gtk_ui_manager_get_ui              (GtkUIManager          *self);$/;"	p
gtk_ui_manager_get_widget	gtkuimanager.h	/^GtkWidget     *gtk_ui_manager_get_widget          (GtkUIManager          *self,$/;"	p
gtk_ui_manager_insert_action_group	gtkuimanager.h	/^void           gtk_ui_manager_insert_action_group (GtkUIManager          *self,$/;"	p
gtk_ui_manager_new	gtkuimanager.h	/^GtkUIManager  *gtk_ui_manager_new                 (void);$/;"	p
gtk_ui_manager_new_merge_id	gtkuimanager.h	/^guint          gtk_ui_manager_new_merge_id        (GtkUIManager          *self);$/;"	p
gtk_ui_manager_remove_action_group	gtkuimanager.h	/^void           gtk_ui_manager_remove_action_group (GtkUIManager          *self,$/;"	p
gtk_ui_manager_remove_ui	gtkuimanager.h	/^void           gtk_ui_manager_remove_ui           (GtkUIManager          *self,$/;"	p
gtk_ui_manager_set_add_tearoffs	gtkuimanager.h	/^void           gtk_ui_manager_set_add_tearoffs    (GtkUIManager          *self,$/;"	p
gtk_vbox_new	gtkvbox.h	/^GtkWidget * gtk_vbox_new      (gboolean homogeneous,$/;"	p
gtk_vbutton_box_get_layout_default	gtkvbbox.h	/^GtkButtonBoxStyle gtk_vbutton_box_get_layout_default (void);$/;"	p
gtk_vbutton_box_get_spacing_default	gtkvbbox.h	/^gint gtk_vbutton_box_get_spacing_default (void);$/;"	p
gtk_vbutton_box_new	gtkvbbox.h	/^GtkWidget *gtk_vbutton_box_new      (void);$/;"	p
gtk_vbutton_box_set_layout_default	gtkvbbox.h	/^void gtk_vbutton_box_set_layout_default (GtkButtonBoxStyle layout);$/;"	p
gtk_vbutton_box_set_spacing_default	gtkvbbox.h	/^void gtk_vbutton_box_set_spacing_default (gint spacing);$/;"	p
gtk_viewport_get_bin_window	gtkviewport.h	/^GdkWindow*     gtk_viewport_get_bin_window  (GtkViewport   *viewport);$/;"	p
gtk_viewport_get_hadjustment	gtkviewport.h	/^GtkAdjustment* gtk_viewport_get_hadjustment (GtkViewport   *viewport);$/;"	p
gtk_viewport_get_shadow_type	gtkviewport.h	/^GtkShadowType  gtk_viewport_get_shadow_type (GtkViewport   *viewport);$/;"	p
gtk_viewport_get_vadjustment	gtkviewport.h	/^GtkAdjustment* gtk_viewport_get_vadjustment (GtkViewport   *viewport);$/;"	p
gtk_viewport_get_view_window	gtkviewport.h	/^GdkWindow*     gtk_viewport_get_view_window (GtkViewport   *viewport);$/;"	p
gtk_viewport_new	gtkviewport.h	/^GtkWidget*     gtk_viewport_new             (GtkAdjustment *hadjustment,$/;"	p
gtk_viewport_set_hadjustment	gtkviewport.h	/^void           gtk_viewport_set_hadjustment (GtkViewport   *viewport,$/;"	p
gtk_viewport_set_shadow_type	gtkviewport.h	/^void           gtk_viewport_set_shadow_type (GtkViewport   *viewport,$/;"	p
gtk_viewport_set_vadjustment	gtkviewport.h	/^void           gtk_viewport_set_vadjustment (GtkViewport   *viewport,$/;"	p
gtk_volume_button_new	gtkvolumebutton.h	/^GtkWidget*	gtk_volume_button_new		(void);$/;"	p
gtk_vpaned_new	gtkvpaned.h	/^GtkWidget * gtk_vpaned_new      (void);$/;"	p
gtk_vruler_new	gtkvruler.h	/^GtkWidget* gtk_vruler_new      (void);$/;"	p
gtk_vscale_new	gtkvscale.h	/^GtkWidget* gtk_vscale_new            (GtkAdjustment *adjustment);$/;"	p
gtk_vscale_new_with_range	gtkvscale.h	/^GtkWidget* gtk_vscale_new_with_range (gdouble        min,$/;"	p
gtk_vscrollbar_new	gtkvscrollbar.h	/^GtkWidget* gtk_vscrollbar_new      (GtkAdjustment *adjustment);$/;"	p
gtk_vseparator_new	gtkvseparator.h	/^GtkWidget* gtk_vseparator_new      (void);$/;"	p
gtk_widget_activate	gtkwidget.h	/^gboolean   gtk_widget_activate		     (GtkWidget	       *widget);$/;"	p
gtk_widget_add_accelerator	gtkwidget.h	/^void	   gtk_widget_add_accelerator	  (GtkWidget           *widget,$/;"	p
gtk_widget_add_events	gtkwidget.h	/^void       gtk_widget_add_events          (GtkWidget           *widget,$/;"	p
gtk_widget_add_mnemonic_label	gtkwidget.h	/^void   gtk_widget_add_mnemonic_label    (GtkWidget *widget,$/;"	p
gtk_widget_can_activate_accel	gtkwidget.h	/^gboolean   gtk_widget_can_activate_accel  (GtkWidget           *widget,$/;"	p
gtk_widget_child_focus	gtkwidget.h	/^gboolean   gtk_widget_child_focus         (GtkWidget           *widget,$/;"	p
gtk_widget_child_notify	gtkwidget.h	/^void	gtk_widget_child_notify		  (GtkWidget	       *widget,$/;"	p
gtk_widget_class_find_style_property	gtkwidget.h	/^GParamSpec*  gtk_widget_class_find_style_property   (GtkWidgetClass     *klass,$/;"	p
gtk_widget_class_install_style_property	gtkwidget.h	/^void gtk_widget_class_install_style_property        (GtkWidgetClass     *klass,$/;"	p
gtk_widget_class_install_style_property_parser	gtkwidget.h	/^void gtk_widget_class_install_style_property_parser (GtkWidgetClass     *klass,$/;"	p
gtk_widget_class_list_style_properties	gtkwidget.h	/^GParamSpec** gtk_widget_class_list_style_properties (GtkWidgetClass     *klass,$/;"	p
gtk_widget_class_path	gtkwidget.h	/^void	     gtk_widget_class_path	   (GtkWidget *widget,$/;"	p
gtk_widget_create_pango_context	gtkwidget.h	/^PangoContext *gtk_widget_create_pango_context (GtkWidget   *widget);$/;"	p
gtk_widget_create_pango_layout	gtkwidget.h	/^PangoLayout  *gtk_widget_create_pango_layout  (GtkWidget   *widget,$/;"	p
gtk_widget_destroy	gtkwidget.h	/^void	   gtk_widget_destroy		  (GtkWidget	       *widget);$/;"	p
gtk_widget_destroyed	gtkwidget.h	/^void	   gtk_widget_destroyed		  (GtkWidget	       *widget,$/;"	p
gtk_widget_draw	gtkwidget.h	/^void	   gtk_widget_draw		  (GtkWidget	       *widget,$/;"	p
gtk_widget_ensure_style	gtkwidget.h	/^void        gtk_widget_ensure_style       (GtkWidget            *widget);$/;"	p
gtk_widget_error_bell	gtkwidget.h	/^void       gtk_widget_error_bell          (GtkWidget           *widget);$/;"	p
gtk_widget_event	gtkwidget.h	/^gboolean   gtk_widget_event		  (GtkWidget	       *widget,$/;"	p
gtk_widget_freeze_child_notify	gtkwidget.h	/^void	gtk_widget_freeze_child_notify	  (GtkWidget	       *widget);$/;"	p
gtk_widget_get_accessible	gtkwidget.h	/^AtkObject*       gtk_widget_get_accessible               (GtkWidget          *widget);$/;"	p
gtk_widget_get_action	gtkaction.h	/^GtkAction   *gtk_widget_get_action             (GtkWidget     *widget);$/;"	p
gtk_widget_get_allocation	gtkwidget.h	/^void                  gtk_widget_get_allocation         (GtkWidget     *widget,$/;"	p
gtk_widget_get_ancestor	gtkwidget.h	/^GtkWidget*   gtk_widget_get_ancestor	(GtkWidget	*widget,$/;"	p
gtk_widget_get_app_paintable	gtkwidget.h	/^gboolean              gtk_widget_get_app_paintable      (GtkWidget    *widget);$/;"	p
gtk_widget_get_can_default	gtkwidget.h	/^gboolean   gtk_widget_get_can_default     (GtkWidget           *widget);$/;"	p
gtk_widget_get_can_focus	gtkwidget.h	/^gboolean   gtk_widget_get_can_focus       (GtkWidget           *widget);$/;"	p
gtk_widget_get_child_requisition	gtkwidget.h	/^void       gtk_widget_get_child_requisition (GtkWidget	       *widget,$/;"	p
gtk_widget_get_child_visible	gtkwidget.h	/^gboolean              gtk_widget_get_child_visible      (GtkWidget    *widget);$/;"	p
gtk_widget_get_clipboard	gtkwidget.h	/^GtkClipboard *gtk_widget_get_clipboard   (GtkWidget *widget,$/;"	p
gtk_widget_get_colormap	gtkwidget.h	/^GdkColormap* gtk_widget_get_colormap	(GtkWidget	*widget);$/;"	p
gtk_widget_get_composite_name	gtkwidget.h	/^gchar* gtk_widget_get_composite_name	(GtkWidget	*widget);$/;"	p
gtk_widget_get_default_colormap	gtkwidget.h	/^GdkColormap* gtk_widget_get_default_colormap (void);$/;"	p
gtk_widget_get_default_direction	gtkwidget.h	/^GtkTextDirection gtk_widget_get_default_direction (void);$/;"	p
gtk_widget_get_default_style	gtkwidget.h	/^GtkStyle*    gtk_widget_get_default_style    (void);$/;"	p
gtk_widget_get_default_visual	gtkwidget.h	/^GdkVisual*   gtk_widget_get_default_visual   (void);$/;"	p
gtk_widget_get_direction	gtkwidget.h	/^GtkTextDirection gtk_widget_get_direction         (GtkWidget        *widget);$/;"	p
gtk_widget_get_display	gtkwidget.h	/^GdkDisplay *  gtk_widget_get_display     (GtkWidget *widget);$/;"	p
gtk_widget_get_double_buffered	gtkwidget.h	/^gboolean              gtk_widget_get_double_buffered    (GtkWidget    *widget);$/;"	p
gtk_widget_get_events	gtkwidget.h	/^gint	     gtk_widget_get_events	(GtkWidget	*widget);$/;"	p
gtk_widget_get_extension_events	gtkwidget.h	/^GdkExtensionMode gtk_widget_get_extension_events (GtkWidget	*widget);$/;"	p
gtk_widget_get_has_tooltip	gtkwidget.h	/^gboolean   gtk_widget_get_has_tooltip       (GtkWidget   *widget);$/;"	p
gtk_widget_get_has_window	gtkwidget.h	/^gboolean              gtk_widget_get_has_window         (GtkWidget    *widget);$/;"	p
gtk_widget_get_mapped	gtkwidget.h	/^gboolean              gtk_widget_get_mapped             (GtkWidget    *widget);$/;"	p
gtk_widget_get_modifier_style	gtkwidget.h	/^GtkRcStyle *gtk_widget_get_modifier_style (GtkWidget            *widget);$/;"	p
gtk_widget_get_name	gtkwidget.h	/^const gchar*          gtk_widget_get_name               (GtkWidget    *widget);$/;"	p
gtk_widget_get_no_show_all	gtkwidget.h	/^gboolean   gtk_widget_get_no_show_all     (GtkWidget           *widget);$/;"	p
gtk_widget_get_pango_context	gtkwidget.h	/^PangoContext *gtk_widget_get_pango_context    (GtkWidget   *widget);$/;"	p
gtk_widget_get_parent	gtkwidget.h	/^GtkWidget           * gtk_widget_get_parent             (GtkWidget    *widget);$/;"	p
gtk_widget_get_parent_window	gtkwidget.h	/^GdkWindow           * gtk_widget_get_parent_window      (GtkWidget    *widget);$/;"	p
gtk_widget_get_pointer	gtkwidget.h	/^void	     gtk_widget_get_pointer	(GtkWidget	*widget,$/;"	p
gtk_widget_get_realized	gtkwidget.h	/^gboolean              gtk_widget_get_realized           (GtkWidget    *widget);$/;"	p
gtk_widget_get_receives_default	gtkwidget.h	/^gboolean  gtk_widget_get_receives_default (GtkWidget           *widget);$/;"	p
gtk_widget_get_requisition	gtkwidget.h	/^void                  gtk_widget_get_requisition        (GtkWidget     *widget,$/;"	p
gtk_widget_get_root_window	gtkwidget.h	/^GdkWindow *   gtk_widget_get_root_window (GtkWidget *widget);$/;"	p
gtk_widget_get_screen	gtkwidget.h	/^GdkScreen *   gtk_widget_get_screen      (GtkWidget *widget);$/;"	p
gtk_widget_get_sensitive	gtkwidget.h	/^gboolean              gtk_widget_get_sensitive          (GtkWidget    *widget);$/;"	p
gtk_widget_get_settings	gtkwidget.h	/^GtkSettings*  gtk_widget_get_settings    (GtkWidget *widget);$/;"	p
gtk_widget_get_size_request	gtkwidget.h	/^void       gtk_widget_get_size_request    (GtkWidget           *widget,$/;"	p
gtk_widget_get_snapshot	gtkwidget.h	/^GdkPixmap *   gtk_widget_get_snapshot    (GtkWidget    *widget,$/;"	p
gtk_widget_get_state	gtkwidget.h	/^GtkStateType          gtk_widget_get_state              (GtkWidget    *widget);$/;"	p
gtk_widget_get_style	gtkwidget.h	/^GtkStyle *  gtk_widget_get_style          (GtkWidget            *widget);$/;"	p
gtk_widget_get_tooltip_markup	gtkwidget.h	/^gchar *    gtk_widget_get_tooltip_markup    (GtkWidget   *widget);$/;"	p
gtk_widget_get_tooltip_text	gtkwidget.h	/^gchar *    gtk_widget_get_tooltip_text      (GtkWidget   *widget);$/;"	p
gtk_widget_get_tooltip_window	gtkwidget.h	/^GtkWindow *gtk_widget_get_tooltip_window    (GtkWidget   *widget);$/;"	p
gtk_widget_get_toplevel	gtkwidget.h	/^GtkWidget*   gtk_widget_get_toplevel	(GtkWidget	*widget);$/;"	p
gtk_widget_get_visible	gtkwidget.h	/^gboolean              gtk_widget_get_visible            (GtkWidget    *widget);$/;"	p
gtk_widget_get_visual	gtkwidget.h	/^GdkVisual*   gtk_widget_get_visual	(GtkWidget	*widget);$/;"	p
gtk_widget_get_window	gtkwidget.h	/^GdkWindow           * gtk_widget_get_window             (GtkWidget    *widget);$/;"	p
gtk_widget_grab_default	gtkwidget.h	/^void       gtk_widget_grab_default        (GtkWidget           *widget);$/;"	p
gtk_widget_grab_focus	gtkwidget.h	/^void       gtk_widget_grab_focus          (GtkWidget           *widget);$/;"	p
gtk_widget_has_default	gtkwidget.h	/^gboolean   gtk_widget_has_default         (GtkWidget           *widget);$/;"	p
gtk_widget_has_focus	gtkwidget.h	/^gboolean   gtk_widget_has_focus           (GtkWidget           *widget);$/;"	p
gtk_widget_has_grab	gtkwidget.h	/^gboolean   gtk_widget_has_grab            (GtkWidget           *widget);$/;"	p
gtk_widget_has_rc_style	gtkwidget.h	/^gboolean    gtk_widget_has_rc_style       (GtkWidget            *widget);$/;"	p
gtk_widget_has_screen	gtkwidget.h	/^gboolean      gtk_widget_has_screen      (GtkWidget *widget);$/;"	p
gtk_widget_hide	gtkwidget.h	/^void	   gtk_widget_hide		  (GtkWidget	       *widget);$/;"	p
gtk_widget_hide_all	gtkwidget.h	/^void       gtk_widget_hide_all            (GtkWidget           *widget);$/;"	p
gtk_widget_hide_on_delete	gtkwidget.h	/^gboolean     gtk_widget_hide_on_delete	(GtkWidget	*widget);$/;"	p
gtk_widget_input_shape_combine_mask	gtkwidget.h	/^void	     gtk_widget_input_shape_combine_mask (GtkWidget *widget,$/;"	p
gtk_widget_intersect	gtkwidget.h	/^gboolean   gtk_widget_intersect		  (GtkWidget	       *widget,$/;"	p
gtk_widget_is_ancestor	gtkwidget.h	/^gboolean     gtk_widget_is_ancestor	(GtkWidget	*widget,$/;"	p
gtk_widget_is_composited	gtkwidget.h	/^gboolean gtk_widget_is_composited (GtkWidget *widget);$/;"	p
gtk_widget_is_drawable	gtkwidget.h	/^gboolean              gtk_widget_is_drawable            (GtkWidget    *widget);$/;"	p
gtk_widget_is_focus	gtkwidget.h	/^gboolean   gtk_widget_is_focus            (GtkWidget           *widget);$/;"	p
gtk_widget_is_sensitive	gtkwidget.h	/^gboolean              gtk_widget_is_sensitive           (GtkWidget    *widget);$/;"	p
gtk_widget_is_toplevel	gtkwidget.h	/^gboolean              gtk_widget_is_toplevel            (GtkWidget    *widget);$/;"	p
gtk_widget_keynav_failed	gtkwidget.h	/^gboolean   gtk_widget_keynav_failed       (GtkWidget           *widget,$/;"	p
gtk_widget_list_accel_closures	gtkwidget.h	/^GList*     gtk_widget_list_accel_closures (GtkWidget	       *widget);$/;"	p
gtk_widget_list_mnemonic_labels	gtkwidget.h	/^GList* gtk_widget_list_mnemonic_labels  (GtkWidget *widget);$/;"	p
gtk_widget_map	gtkwidget.h	/^void	   gtk_widget_map		  (GtkWidget	       *widget);$/;"	p
gtk_widget_mnemonic_activate	gtkwidget.h	/^gboolean   gtk_widget_mnemonic_activate   (GtkWidget           *widget,$/;"	p
gtk_widget_modify_base	gtkwidget.h	/^void        gtk_widget_modify_base        (GtkWidget            *widget,$/;"	p
gtk_widget_modify_bg	gtkwidget.h	/^void        gtk_widget_modify_bg          (GtkWidget            *widget,$/;"	p
gtk_widget_modify_cursor	gtkwidget.h	/^void        gtk_widget_modify_cursor      (GtkWidget            *widget,$/;"	p
gtk_widget_modify_fg	gtkwidget.h	/^void        gtk_widget_modify_fg          (GtkWidget            *widget,$/;"	p
gtk_widget_modify_font	gtkwidget.h	/^void        gtk_widget_modify_font        (GtkWidget            *widget,$/;"	p
gtk_widget_modify_style	gtkwidget.h	/^void        gtk_widget_modify_style       (GtkWidget            *widget,$/;"	p
gtk_widget_modify_text	gtkwidget.h	/^void        gtk_widget_modify_text        (GtkWidget            *widget,$/;"	p
gtk_widget_new	gtkwidget.h	/^GtkWidget* gtk_widget_new		  (GType		type,$/;"	p
gtk_widget_path	gtkwidget.h	/^void	     gtk_widget_path		   (GtkWidget *widget,$/;"	p
gtk_widget_pop_colormap	gtkwidget.h	/^void	     gtk_widget_pop_colormap	     (void);$/;"	p
gtk_widget_pop_composite_child	gtkwidget.h	/^void	     gtk_widget_pop_composite_child  (void);$/;"	p
gtk_widget_pop_visual	gtkwidget.h	1090;"	d
gtk_widget_push_colormap	gtkwidget.h	/^void	     gtk_widget_push_colormap	     (GdkColormap *cmap);$/;"	p
gtk_widget_push_composite_child	gtkwidget.h	/^void	     gtk_widget_push_composite_child (void);$/;"	p
gtk_widget_push_visual	gtkwidget.h	1083;"	d
gtk_widget_queue_clear	gtkwidget.h	/^void	   gtk_widget_queue_clear	  (GtkWidget	       *widget);$/;"	p
gtk_widget_queue_clear_area	gtkwidget.h	/^void	   gtk_widget_queue_clear_area	  (GtkWidget	       *widget,$/;"	p
gtk_widget_queue_draw	gtkwidget.h	/^void	   gtk_widget_queue_draw	  (GtkWidget	       *widget);$/;"	p
gtk_widget_queue_draw_area	gtkwidget.h	/^void	   gtk_widget_queue_draw_area	  (GtkWidget	       *widget,$/;"	p
gtk_widget_queue_resize	gtkwidget.h	/^void	   gtk_widget_queue_resize	  (GtkWidget	       *widget);$/;"	p
gtk_widget_queue_resize_no_redraw	gtkwidget.h	/^void	   gtk_widget_queue_resize_no_redraw (GtkWidget *widget);$/;"	p
gtk_widget_realize	gtkwidget.h	/^void	   gtk_widget_realize		  (GtkWidget	       *widget);$/;"	p
gtk_widget_ref	gtkwidget.h	/^GtkWidget* gtk_widget_ref		  (GtkWidget	       *widget);$/;"	p
gtk_widget_ref	gtkwidget.h	1313;"	d
gtk_widget_region_intersect	gtkwidget.h	/^GdkRegion *gtk_widget_region_intersect	  (GtkWidget	       *widget,$/;"	p
gtk_widget_remove_accelerator	gtkwidget.h	/^gboolean   gtk_widget_remove_accelerator  (GtkWidget           *widget,$/;"	p
gtk_widget_remove_mnemonic_label	gtkwidget.h	/^void   gtk_widget_remove_mnemonic_label (GtkWidget *widget,$/;"	p
gtk_widget_render_icon	gtkwidget.h	/^GdkPixbuf    *gtk_widget_render_icon          (GtkWidget   *widget,$/;"	p
gtk_widget_reparent	gtkwidget.h	/^void	   gtk_widget_reparent		  (GtkWidget	       *widget,$/;"	p
gtk_widget_reset_rc_styles	gtkwidget.h	/^void       gtk_widget_reset_rc_styles   (GtkWidget      *widget);$/;"	p
gtk_widget_reset_shapes	gtkwidget.h	/^void	     gtk_widget_reset_shapes	   (GtkWidget *widget);$/;"	p
gtk_widget_restore_default_style	gtkwidget.h	1184;"	d
gtk_widget_send_expose	gtkwidget.h	/^gint       gtk_widget_send_expose         (GtkWidget           *widget,$/;"	p
gtk_widget_send_focus_change	gtkwidget.h	/^gboolean   gtk_widget_send_focus_change   (GtkWidget           *widget,$/;"	p
gtk_widget_set_accel_path	gtkwidget.h	/^void       gtk_widget_set_accel_path      (GtkWidget           *widget,$/;"	p
gtk_widget_set_allocation	gtkwidget.h	/^void                  gtk_widget_set_allocation         (GtkWidget     *widget,$/;"	p
gtk_widget_set_app_paintable	gtkwidget.h	/^void                  gtk_widget_set_app_paintable      (GtkWidget    *widget,$/;"	p
gtk_widget_set_can_default	gtkwidget.h	/^void       gtk_widget_set_can_default     (GtkWidget           *widget,$/;"	p
gtk_widget_set_can_focus	gtkwidget.h	/^void       gtk_widget_set_can_focus       (GtkWidget           *widget,$/;"	p
gtk_widget_set_child_visible	gtkwidget.h	/^void                  gtk_widget_set_child_visible      (GtkWidget    *widget,$/;"	p
gtk_widget_set_colormap	gtkwidget.h	/^void         gtk_widget_set_colormap    (GtkWidget      *widget,$/;"	p
gtk_widget_set_composite_name	gtkwidget.h	/^void   gtk_widget_set_composite_name	(GtkWidget	*widget,$/;"	p
gtk_widget_set_default_colormap	gtkwidget.h	/^void	     gtk_widget_set_default_colormap (GdkColormap *colormap);$/;"	p
gtk_widget_set_default_direction	gtkwidget.h	/^void             gtk_widget_set_default_direction (GtkTextDirection  dir);$/;"	p
gtk_widget_set_default_visual	gtkwidget.h	1098;"	d
gtk_widget_set_direction	gtkwidget.h	/^void             gtk_widget_set_direction         (GtkWidget        *widget,$/;"	p
gtk_widget_set_double_buffered	gtkwidget.h	/^void                  gtk_widget_set_double_buffered    (GtkWidget    *widget,$/;"	p
gtk_widget_set_events	gtkwidget.h	/^void	   gtk_widget_set_events	  (GtkWidget	       *widget,$/;"	p
gtk_widget_set_extension_events	gtkwidget.h	/^void	   gtk_widget_set_extension_events (GtkWidget		*widget,$/;"	p
gtk_widget_set_has_tooltip	gtkwidget.h	/^void       gtk_widget_set_has_tooltip       (GtkWidget   *widget,$/;"	p
gtk_widget_set_has_window	gtkwidget.h	/^void                  gtk_widget_set_has_window         (GtkWidget    *widget,$/;"	p
gtk_widget_set_mapped	gtkwidget.h	/^void                  gtk_widget_set_mapped             (GtkWidget    *widget,$/;"	p
gtk_widget_set_name	gtkwidget.h	/^void                  gtk_widget_set_name               (GtkWidget    *widget,$/;"	p
gtk_widget_set_no_show_all	gtkwidget.h	/^void       gtk_widget_set_no_show_all     (GtkWidget           *widget,$/;"	p
gtk_widget_set_parent	gtkwidget.h	/^void                  gtk_widget_set_parent             (GtkWidget    *widget,$/;"	p
gtk_widget_set_parent_window	gtkwidget.h	/^void                  gtk_widget_set_parent_window      (GtkWidget    *widget,$/;"	p
gtk_widget_set_rc_style	gtkwidget.h	1174;"	d
gtk_widget_set_realized	gtkwidget.h	/^void                  gtk_widget_set_realized           (GtkWidget    *widget,$/;"	p
gtk_widget_set_receives_default	gtkwidget.h	/^void      gtk_widget_set_receives_default (GtkWidget           *widget,$/;"	p
gtk_widget_set_redraw_on_allocate	gtkwidget.h	/^void                  gtk_widget_set_redraw_on_allocate (GtkWidget    *widget,$/;"	p
gtk_widget_set_scroll_adjustments	gtkwidget.h	/^gboolean   gtk_widget_set_scroll_adjustments (GtkWidget        *widget,$/;"	p
gtk_widget_set_sensitive	gtkwidget.h	/^void                  gtk_widget_set_sensitive          (GtkWidget    *widget,$/;"	p
gtk_widget_set_size_request	gtkwidget.h	/^void       gtk_widget_set_size_request    (GtkWidget           *widget,$/;"	p
gtk_widget_set_state	gtkwidget.h	/^void                  gtk_widget_set_state              (GtkWidget    *widget,$/;"	p
gtk_widget_set_style	gtkwidget.h	/^void	    gtk_widget_set_style          (GtkWidget            *widget,$/;"	p
gtk_widget_set_tooltip_markup	gtkwidget.h	/^void       gtk_widget_set_tooltip_markup    (GtkWidget   *widget,$/;"	p
gtk_widget_set_tooltip_text	gtkwidget.h	/^void       gtk_widget_set_tooltip_text      (GtkWidget   *widget,$/;"	p
gtk_widget_set_tooltip_window	gtkwidget.h	/^void                  gtk_widget_set_tooltip_window    (GtkWidget   *widget,$/;"	p
gtk_widget_set_uposition	gtkwidget.h	/^void	   gtk_widget_set_uposition	  (GtkWidget	       *widget,$/;"	p
gtk_widget_set_usize	gtkwidget.h	/^void	   gtk_widget_set_usize		  (GtkWidget	       *widget,$/;"	p
gtk_widget_set_visible	gtkwidget.h	/^void                  gtk_widget_set_visible            (GtkWidget    *widget,$/;"	p
gtk_widget_set_visual	gtkwidget.h	1075;"	d
gtk_widget_set_window	gtkwidget.h	/^void                  gtk_widget_set_window             (GtkWidget    *widget,$/;"	p
gtk_widget_shape_combine_mask	gtkwidget.h	/^void	     gtk_widget_shape_combine_mask (GtkWidget *widget,$/;"	p
gtk_widget_show	gtkwidget.h	/^void	   gtk_widget_show		  (GtkWidget	       *widget);$/;"	p
gtk_widget_show_all	gtkwidget.h	/^void	   gtk_widget_show_all		  (GtkWidget	       *widget);$/;"	p
gtk_widget_show_now	gtkwidget.h	/^void       gtk_widget_show_now            (GtkWidget           *widget);$/;"	p
gtk_widget_size_allocate	gtkwidget.h	/^void	   gtk_widget_size_allocate	  (GtkWidget	       *widget,$/;"	p
gtk_widget_size_request	gtkwidget.h	/^void	   gtk_widget_size_request	  (GtkWidget	       *widget,$/;"	p
gtk_widget_style_attach	gtkwidget.h	/^void        gtk_widget_style_attach       (GtkWidget            *style);$/;"	p
gtk_widget_style_get_property	gtkwidget.h	/^void gtk_widget_style_get_property (GtkWidget	     *widget,$/;"	p
gtk_widget_style_get_valist	gtkwidget.h	/^void gtk_widget_style_get_valist   (GtkWidget	     *widget,$/;"	p
gtk_widget_thaw_child_notify	gtkwidget.h	/^void	gtk_widget_thaw_child_notify	  (GtkWidget	       *widget);$/;"	p
gtk_widget_translate_coordinates	gtkwidget.h	/^gboolean     gtk_widget_translate_coordinates (GtkWidget  *src_widget,$/;"	p
gtk_widget_trigger_tooltip_query	gtkwidget.h	/^void       gtk_widget_trigger_tooltip_query (GtkWidget   *widget);$/;"	p
gtk_widget_unmap	gtkwidget.h	/^void	   gtk_widget_unmap		  (GtkWidget	       *widget);$/;"	p
gtk_widget_unparent	gtkwidget.h	/^void	   gtk_widget_unparent		  (GtkWidget	       *widget);$/;"	p
gtk_widget_unrealize	gtkwidget.h	/^void	   gtk_widget_unrealize		  (GtkWidget	       *widget);$/;"	p
gtk_widget_unref	gtkwidget.h	/^void	   gtk_widget_unref		  (GtkWidget	       *widget);$/;"	p
gtk_widget_unref	gtkwidget.h	1314;"	d
gtk_window_activate_default	gtkwindow.h	/^gboolean   gtk_window_activate_default	       (GtkWindow           *window);$/;"	p
gtk_window_activate_focus	gtkwindow.h	/^gboolean   gtk_window_activate_focus	       (GtkWindow           *window);$/;"	p
gtk_window_activate_key	gtkwindow.h	/^gboolean gtk_window_activate_key          (GtkWindow        *window,$/;"	p
gtk_window_add_accel_group	gtkwindow.h	/^void       gtk_window_add_accel_group          (GtkWindow           *window,$/;"	p
gtk_window_add_embedded_xid	gtkwindow.h	/^void            gtk_window_add_embedded_xid    (GtkWindow       *window,$/;"	p
gtk_window_add_mnemonic	gtkwindow.h	/^void     gtk_window_add_mnemonic          (GtkWindow       *window,$/;"	p
gtk_window_begin_move_drag	gtkwindow.h	/^void gtk_window_begin_move_drag   (GtkWindow     *window,$/;"	p
gtk_window_begin_resize_drag	gtkwindow.h	/^void gtk_window_begin_resize_drag (GtkWindow     *window,$/;"	p
gtk_window_deiconify	gtkwindow.h	/^void     gtk_window_deiconify     (GtkWindow *window);$/;"	p
gtk_window_fullscreen	gtkwindow.h	/^void     gtk_window_fullscreen    (GtkWindow *window);$/;"	p
gtk_window_get_accept_focus	gtkwindow.h	/^gboolean   gtk_window_get_accept_focus         (GtkWindow           *window);$/;"	p
gtk_window_get_decorated	gtkwindow.h	/^gboolean   gtk_window_get_decorated            (GtkWindow *window);$/;"	p
gtk_window_get_default_icon_list	gtkwindow.h	/^GList*     gtk_window_get_default_icon_list        (void);$/;"	p
gtk_window_get_default_icon_name	gtkwindow.h	/^           gtk_window_get_default_icon_name        (void);$/;"	p
gtk_window_get_default_size	gtkwindow.h	/^void     gtk_window_get_default_size (GtkWindow   *window,$/;"	p
gtk_window_get_default_widget	gtkwindow.h	/^GtkWidget *gtk_window_get_default_widget       (GtkWindow           *window);$/;"	p
gtk_window_get_deletable	gtkwindow.h	/^gboolean   gtk_window_get_deletable            (GtkWindow *window);$/;"	p
gtk_window_get_destroy_with_parent	gtkwindow.h	/^gboolean   gtk_window_get_destroy_with_parent  (GtkWindow           *window);$/;"	p
gtk_window_get_focus	gtkwindow.h	/^GtkWidget *gtk_window_get_focus                (GtkWindow           *window);$/;"	p
gtk_window_get_focus_on_map	gtkwindow.h	/^gboolean   gtk_window_get_focus_on_map         (GtkWindow           *window);$/;"	p
gtk_window_get_frame_dimensions	gtkwindow.h	/^void       gtk_window_get_frame_dimensions     (GtkWindow *window, $/;"	p
gtk_window_get_gravity	gtkwindow.h	/^GdkGravity gtk_window_get_gravity              (GtkWindow           *window);$/;"	p
gtk_window_get_group	gtkwindow.h	/^GtkWindowGroup *gtk_window_get_group (GtkWindow   *window);$/;"	p
gtk_window_get_has_frame	gtkwindow.h	/^gboolean   gtk_window_get_has_frame            (GtkWindow *window);$/;"	p
gtk_window_get_icon	gtkwindow.h	/^GdkPixbuf* gtk_window_get_icon                     (GtkWindow  *window);$/;"	p
gtk_window_get_icon_list	gtkwindow.h	/^GList*     gtk_window_get_icon_list                (GtkWindow  *window);$/;"	p
gtk_window_get_icon_name	gtkwindow.h	/^           gtk_window_get_icon_name                (GtkWindow  *window);$/;"	p
gtk_window_get_mnemonic_modifier	gtkwindow.h	/^GdkModifierType gtk_window_get_mnemonic_modifier (GtkWindow *window);$/;"	p
gtk_window_get_mnemonics_visible	gtkwindow.h	/^gboolean   gtk_window_get_mnemonics_visible    (GtkWindow           *window);$/;"	p
gtk_window_get_modal	gtkwindow.h	/^gboolean   gtk_window_get_modal      (GtkWindow *window);$/;"	p
gtk_window_get_opacity	gtkwindow.h	/^gdouble    gtk_window_get_opacity              (GtkWindow           *window);$/;"	p
gtk_window_get_position	gtkwindow.h	/^void     gtk_window_get_position     (GtkWindow   *window,$/;"	p
gtk_window_get_resizable	gtkwindow.h	/^gboolean   gtk_window_get_resizable            (GtkWindow           *window);$/;"	p
gtk_window_get_role	gtkwindow.h	/^const gchar *gtk_window_get_role               (GtkWindow           *window);$/;"	p
gtk_window_get_screen	gtkwindow.h	/^GdkScreen* gtk_window_get_screen	       (GtkWindow	    *window);$/;"	p
gtk_window_get_size	gtkwindow.h	/^void     gtk_window_get_size         (GtkWindow   *window,$/;"	p
gtk_window_get_skip_pager_hint	gtkwindow.h	/^gboolean   gtk_window_get_skip_pager_hint      (GtkWindow           *window);$/;"	p
gtk_window_get_skip_taskbar_hint	gtkwindow.h	/^gboolean   gtk_window_get_skip_taskbar_hint    (GtkWindow           *window);$/;"	p
gtk_window_get_title	gtkwindow.h	/^const gchar *gtk_window_get_title              (GtkWindow           *window);$/;"	p
gtk_window_get_transient_for	gtkwindow.h	/^GtkWindow *gtk_window_get_transient_for        (GtkWindow           *window);$/;"	p
gtk_window_get_type_hint	gtkwindow.h	/^GdkWindowTypeHint gtk_window_get_type_hint     (GtkWindow           *window);$/;"	p
gtk_window_get_urgency_hint	gtkwindow.h	/^gboolean   gtk_window_get_urgency_hint         (GtkWindow           *window);$/;"	p
gtk_window_get_window_type	gtkwindow.h	/^GtkWindowType gtk_window_get_window_type     (GtkWindow     *window);$/;"	p
gtk_window_group_add_window	gtkwindow.h	/^void             gtk_window_group_add_window    (GtkWindowGroup     *window_group,$/;"	p
gtk_window_group_get_current_grab	gtkwindow.h	/^GtkWidget      *gtk_window_group_get_current_grab (GtkWindowGroup *window_group);$/;"	p
gtk_window_group_list_windows	gtkwindow.h	/^GList *          gtk_window_group_list_windows  (GtkWindowGroup     *window_group);$/;"	p
gtk_window_group_new	gtkwindow.h	/^GtkWindowGroup * gtk_window_group_new           (void);$/;"	p
gtk_window_group_remove_window	gtkwindow.h	/^void             gtk_window_group_remove_window (GtkWindowGroup     *window_group,$/;"	p
gtk_window_has_group	gtkwindow.h	/^gboolean gtk_window_has_group        (GtkWindow   *window);$/;"	p
gtk_window_has_toplevel_focus	gtkwindow.h	/^gboolean   gtk_window_has_toplevel_focus       (GtkWindow           *window);$/;"	p
gtk_window_iconify	gtkwindow.h	/^void     gtk_window_iconify       (GtkWindow *window);$/;"	p
gtk_window_is_active	gtkwindow.h	/^gboolean   gtk_window_is_active                (GtkWindow           *window);$/;"	p
gtk_window_list_toplevels	gtkwindow.h	/^GList*     gtk_window_list_toplevels (void);$/;"	p
gtk_window_maximize	gtkwindow.h	/^void     gtk_window_maximize      (GtkWindow *window);$/;"	p
gtk_window_mnemonic_activate	gtkwindow.h	/^gboolean gtk_window_mnemonic_activate     (GtkWindow       *window,$/;"	p
gtk_window_move	gtkwindow.h	/^void     gtk_window_move             (GtkWindow   *window,$/;"	p
gtk_window_new	gtkwindow.h	/^GtkWidget* gtk_window_new                      (GtkWindowType        type);$/;"	p
gtk_window_parse_geometry	gtkwindow.h	/^gboolean gtk_window_parse_geometry   (GtkWindow   *window,$/;"	p
gtk_window_position	gtkwindow.h	361;"	d
gtk_window_present	gtkwindow.h	/^void     gtk_window_present            (GtkWindow *window);$/;"	p
gtk_window_present_with_time	gtkwindow.h	/^void     gtk_window_present_with_time  (GtkWindow *window,$/;"	p
gtk_window_propagate_key_event	gtkwindow.h	/^gboolean gtk_window_propagate_key_event   (GtkWindow        *window,$/;"	p
gtk_window_remove_accel_group	gtkwindow.h	/^void       gtk_window_remove_accel_group       (GtkWindow           *window,$/;"	p
gtk_window_remove_embedded_xid	gtkwindow.h	/^void            gtk_window_remove_embedded_xid (GtkWindow       *window,$/;"	p
gtk_window_remove_mnemonic	gtkwindow.h	/^void     gtk_window_remove_mnemonic       (GtkWindow       *window,$/;"	p
gtk_window_reshow_with_initial_size	gtkwindow.h	/^void     gtk_window_reshow_with_initial_size (GtkWindow *window);$/;"	p
gtk_window_resize	gtkwindow.h	/^void     gtk_window_resize           (GtkWindow   *window,$/;"	p
gtk_window_set_accept_focus	gtkwindow.h	/^void       gtk_window_set_accept_focus         (GtkWindow           *window,$/;"	p
gtk_window_set_auto_startup_notification	gtkwindow.h	/^void       gtk_window_set_auto_startup_notification (gboolean setting);$/;"	p
gtk_window_set_decorated	gtkwindow.h	/^void       gtk_window_set_decorated            (GtkWindow *window,$/;"	p
gtk_window_set_default	gtkwindow.h	/^void       gtk_window_set_default              (GtkWindow           *window,$/;"	p
gtk_window_set_default_icon	gtkwindow.h	/^void       gtk_window_set_default_icon             (GdkPixbuf  *icon);$/;"	p
gtk_window_set_default_icon_from_file	gtkwindow.h	/^gboolean   gtk_window_set_default_icon_from_file   (const gchar *filename,$/;"	p
gtk_window_set_default_icon_from_file	gtkwindow.h	175;"	d
gtk_window_set_default_icon_list	gtkwindow.h	/^void       gtk_window_set_default_icon_list        (GList      *list);$/;"	p
gtk_window_set_default_icon_name	gtkwindow.h	/^void       gtk_window_set_default_icon_name        (const gchar *name);$/;"	p
gtk_window_set_default_size	gtkwindow.h	/^void     gtk_window_set_default_size (GtkWindow   *window,$/;"	p
gtk_window_set_deletable	gtkwindow.h	/^void       gtk_window_set_deletable            (GtkWindow *window,$/;"	p
gtk_window_set_destroy_with_parent	gtkwindow.h	/^void       gtk_window_set_destroy_with_parent  (GtkWindow           *window,$/;"	p
gtk_window_set_focus	gtkwindow.h	/^void       gtk_window_set_focus                (GtkWindow           *window,$/;"	p
gtk_window_set_focus_on_map	gtkwindow.h	/^void       gtk_window_set_focus_on_map         (GtkWindow           *window,$/;"	p
gtk_window_set_frame_dimensions	gtkwindow.h	/^void       gtk_window_set_frame_dimensions     (GtkWindow *window, $/;"	p
gtk_window_set_geometry_hints	gtkwindow.h	/^void       gtk_window_set_geometry_hints       (GtkWindow           *window,$/;"	p
gtk_window_set_gravity	gtkwindow.h	/^void       gtk_window_set_gravity              (GtkWindow           *window,$/;"	p
gtk_window_set_has_frame	gtkwindow.h	/^void       gtk_window_set_has_frame            (GtkWindow *window, $/;"	p
gtk_window_set_icon	gtkwindow.h	/^void       gtk_window_set_icon                     (GtkWindow  *window,$/;"	p
gtk_window_set_icon_from_file	gtkwindow.h	/^gboolean   gtk_window_set_icon_from_file           (GtkWindow   *window,$/;"	p
gtk_window_set_icon_from_file	gtkwindow.h	174;"	d
gtk_window_set_icon_list	gtkwindow.h	/^void       gtk_window_set_icon_list                (GtkWindow  *window,$/;"	p
gtk_window_set_icon_name	gtkwindow.h	/^void       gtk_window_set_icon_name                (GtkWindow   *window,$/;"	p
gtk_window_set_keep_above	gtkwindow.h	/^void     gtk_window_set_keep_above    (GtkWindow *window, gboolean setting);$/;"	p
gtk_window_set_keep_below	gtkwindow.h	/^void     gtk_window_set_keep_below    (GtkWindow *window, gboolean setting);$/;"	p
gtk_window_set_mnemonic_modifier	gtkwindow.h	/^void     gtk_window_set_mnemonic_modifier (GtkWindow       *window,$/;"	p
gtk_window_set_mnemonics_visible	gtkwindow.h	/^void       gtk_window_set_mnemonics_visible    (GtkWindow           *window,$/;"	p
gtk_window_set_modal	gtkwindow.h	/^void       gtk_window_set_modal      (GtkWindow *window,$/;"	p
gtk_window_set_opacity	gtkwindow.h	/^void       gtk_window_set_opacity              (GtkWindow           *window, $/;"	p
gtk_window_set_policy	gtkwindow.h	/^void       gtk_window_set_policy               (GtkWindow           *window,$/;"	p
gtk_window_set_position	gtkwindow.h	/^void       gtk_window_set_position             (GtkWindow           *window,$/;"	p
gtk_window_set_resizable	gtkwindow.h	/^void       gtk_window_set_resizable            (GtkWindow           *window,$/;"	p
gtk_window_set_role	gtkwindow.h	/^void       gtk_window_set_role                 (GtkWindow           *window,$/;"	p
gtk_window_set_screen	gtkwindow.h	/^void	   gtk_window_set_screen	       (GtkWindow	    *window,$/;"	p
gtk_window_set_skip_pager_hint	gtkwindow.h	/^void       gtk_window_set_skip_pager_hint      (GtkWindow           *window,$/;"	p
gtk_window_set_skip_taskbar_hint	gtkwindow.h	/^void       gtk_window_set_skip_taskbar_hint    (GtkWindow           *window,$/;"	p
gtk_window_set_startup_id	gtkwindow.h	/^void       gtk_window_set_startup_id           (GtkWindow           *window,$/;"	p
gtk_window_set_title	gtkwindow.h	/^void       gtk_window_set_title                (GtkWindow           *window,$/;"	p
gtk_window_set_transient_for	gtkwindow.h	/^void       gtk_window_set_transient_for        (GtkWindow           *window, $/;"	p
gtk_window_set_type_hint	gtkwindow.h	/^void       gtk_window_set_type_hint            (GtkWindow           *window, $/;"	p
gtk_window_set_urgency_hint	gtkwindow.h	/^void       gtk_window_set_urgency_hint         (GtkWindow           *window,$/;"	p
gtk_window_set_wmclass	gtkwindow.h	/^void       gtk_window_set_wmclass              (GtkWindow           *window,$/;"	p
gtk_window_stick	gtkwindow.h	/^void     gtk_window_stick         (GtkWindow *window);$/;"	p
gtk_window_unfullscreen	gtkwindow.h	/^void     gtk_window_unfullscreen  (GtkWindow *window);$/;"	p
gtk_window_unmaximize	gtkwindow.h	/^void     gtk_window_unmaximize    (GtkWindow *window);$/;"	p
gtk_window_unstick	gtkwindow.h	/^void     gtk_window_unstick       (GtkWindow *window);$/;"	p
hadj	gtktext.h	/^  GtkAdjustment *hadj;$/;"	m	struct:_GtkText
hadjustment	gtkclist.h	/^  GtkAdjustment *hadjustment;$/;"	m	struct:_GtkCList
has_block_cursor	gtktextlayout.h	/^  guint has_block_cursor : 1;$/;"	m	struct:_GtkTextLineDisplay
has_default_sort_func	gtktreesortable.h	/^  gboolean (* has_default_sort_func) (GtkTreeSortable        *sortable);$/;"	m	struct:_GtkTreeSortableIface
has_selection	gtkoldeditable.h	/^  guint      has_selection : 1;$/;"	m	struct:_GtkOldEditable
hash_next	gtkbindings.h	/^  GtkBindingEntry	*hash_next;$/;"	m	struct:_GtkBindingEntry
have_grab	gtktooltips.h	/^  guint   have_grab : 1;$/;"	m	struct:_GtkTooltips
hbox	gtkcombo.h	/^	GtkHBox hbox;$/;"	m	struct:_GtkCombo
height	gtkcurve.h	/^  gint height;                  \/* (cached) graph height in pixels *\/$/;"	m	struct:_GtkCurve
height	gtkoptionmenu.h	/^  guint16 height;$/;"	m	struct:_GtkOptionMenu
height	gtktextlayout.h	/^  gint height;$/;"	m	struct:_GtkTextCursorDisplay
height	gtktextlayout.h	/^  gint height;$/;"	m	struct:_GtkTextLayout
height	gtktextlayout.h	/^  gint height;$/;"	m	struct:_GtkTextLineDisplay
height	gtkwidget.h	/^  gint height;$/;"	m	struct:_GtkRequisition
height	gtkwidget.h	/^  gint height;$/;"	m	struct:_GtkWidgetAuxInfo
help_button	gtkfilesel.h	/^  GtkWidget *help_button;$/;"	m	struct:_GtkFileSelection
hide	gtkwidget.h	/^  void (* hide)		       (GtkWidget        *widget);$/;"	m	struct:_GtkWidgetClass
hide_all	gtkwidget.h	/^  void (* hide_all)            (GtkWidget        *widget);$/;"	m	struct:_GtkWidgetClass
hide_on_activate	gtkmenuitem.h	/^  guint hide_on_activate : 1;$/;"	m	struct:_GtkMenuItemClass
hierarchy_changed	gtkwidget.h	/^  void (* hierarchy_changed)   (GtkWidget        *widget,$/;"	m	struct:_GtkWidgetClass
history_list	gtkfilesel.h	/^  GList     *history_list;$/;"	m	struct:_GtkFileSelection
history_menu	gtkfilesel.h	/^  GtkWidget *history_menu;$/;"	m	struct:_GtkFileSelection
history_pulldown	gtkfilesel.h	/^  GtkWidget *history_pulldown;$/;"	m	struct:_GtkFileSelection
hoffset	gtkclist.h	/^  gint hoffset;$/;"	m	struct:_GtkCList
horizontal	gtkclist.h	/^  gint16 horizontal;$/;"	m	struct:_GtkCell
horizontal	gtkclist.h	/^  gint16 horizontal;$/;"	m	struct:_GtkCellPixText
horizontal	gtkclist.h	/^  gint16 horizontal;$/;"	m	struct:_GtkCellPixmap
horizontal	gtkclist.h	/^  gint16 horizontal;$/;"	m	struct:_GtkCellText
horizontal	gtkclist.h	/^  gint16 horizontal;$/;"	m	struct:_GtkCellWidget
htimer	gtkclist.h	/^  gint htimer;$/;"	m	struct:_GtkCList
htimer	gtklist.h	/^  guint htimer;$/;"	m	struct:_GtkList
icon	gtkimage.h	/^  GIcon *icon;$/;"	m	struct:_GtkImageGIconData
icon	gtktoolbar.h	/^  GtkWidget *icon;$/;"	m	struct:_GtkToolbarChild
icon_factories	gtkrc.h	/^  GSList *icon_factories;$/;"	m	struct:_GtkRcStyle
icon_factories	gtkstyle.h	/^  GSList         *icon_factories; \/* of type GtkIconFactory* *\/$/;"	m	struct:_GtkStyle
icon_name	gtkimage.h	/^  gchar *icon_name;$/;"	m	struct:_GtkImageIconNameData
icon_set	gtkimage.h	/^    GtkImageIconSetData icon_set;$/;"	m	union:_GtkImage::__anon84
icon_set	gtkimage.h	/^  GtkIconSet *icon_set;$/;"	m	struct:_GtkImageIconSetData
image	gtkimage.h	/^    GtkImageImageData image;$/;"	m	union:_GtkImage::__anon84
image	gtkimage.h	/^  GdkImage *image;$/;"	m	struct:_GtkImageImageData
in_emission	gtkbindings.h	/^  guint			in_emission : 1;$/;"	m	struct:_GtkBindingEntry
in_query	gtktipsquery.h	/^  guint		in_query : 1;$/;"	m	struct:_GtkTipsQuery
indent	gtktexttag.h	/^  gint indent;  $/;"	m	struct:_GtkTextAttributes
indent_value	gtktree.h	/^  guint indent_value;$/;"	m	struct:_GtkTree
index	gtktext.h	/^  guint index;$/;"	m	struct:_GtkPropertyMark
info	gtkpreview.h	/^  GtkPreviewInfo info;$/;"	m	struct:_GtkPreviewClass
info	gtkselection.h	/^  guint     info;$/;"	m	struct:_GtkTargetPair
info	gtkselection.h	/^  guint  info;$/;"	m	struct:_GtkTargetEntry
init_from_rc	gtkstyle.h	/^  void     (*init_from_rc)      (GtkStyle               *style,$/;"	m	struct:_GtkStyleClass
input	gtkspinbutton.h	/^  gint (*input)  (GtkSpinButton *spin_button,$/;"	m	struct:_GtkSpinButtonClass
insert	gtkmenushell.h	/^  void (*insert)           (GtkMenuShell *menu_shell,$/;"	m	struct:_GtkMenuShellClass
insert	ubuntumenuproxy.h	/^  void     (* insert)     (UbuntuMenuProxy *proxy, GtkWidget *parent, GtkWidget *child, guint position);$/;"	m	struct:_UbuntuMenuProxyClass
insert_at_cursor	gtkentry.h	/^  void (* insert_at_cursor)   (GtkEntry             *entry,$/;"	m	struct:_GtkEntryClass
insert_at_cursor	gtktextview.h	/^  void (* insert_at_cursor)      (GtkTextView *text_view,$/;"	m	struct:_GtkTextViewClass
insert_child_anchor	gtktextbuffer.h	/^  void (* insert_child_anchor)   (GtkTextBuffer      *buffer,$/;"	m	struct:_GtkTextBufferClass
insert_index	gtktextlayout.h	/^  gint insert_index;		\/* Byte index of insert cursor within para or -1 *\/$/;"	m	struct:_GtkTextLineDisplay
insert_page	gtknotebook.h	/^  gint (* insert_page)         (GtkNotebook       *notebook,$/;"	m	struct:_GtkNotebookClass
insert_pixbuf	gtktextbuffer.h	/^  void (* insert_pixbuf)   (GtkTextBuffer *buffer,$/;"	m	struct:_GtkTextBufferClass
insert_pos	gtkclist.h	/^  GtkCListDragPos  insert_pos;$/;"	m	struct:_GtkCListDestInfo
insert_prefix	gtkentrycompletion.h	/^  gboolean (* insert_prefix)    (GtkEntryCompletion *completion,$/;"	m	struct:_GtkEntryCompletionClass
insert_row	gtkclist.h	/^  gint   (*insert_row)          (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
insert_text	gtkeditable.h	/^  void (* insert_text)              (GtkEditable    *editable,$/;"	m	struct:_GtkEditableClass
insert_text	gtkentrybuffer.h	/^  guint        (*insert_text)            (GtkEntryBuffer *buffer,$/;"	m	struct:_GtkEntryBufferClass
insert_text	gtktextbuffer.h	/^  void (* insert_text)     (GtkTextBuffer *buffer,$/;"	m	struct:_GtkTextBufferClass
inserted	ubuntumenuproxy.h	/^  void (* inserted)  (UbuntuMenuProxy *proxy, GtkWidget *child);$/;"	m	struct:_UbuntuMenuProxyClass
inserted_text	gtkentrybuffer.h	/^  void         (*inserted_text)          (GtkEntryBuffer *buffer,$/;"	m	struct:_GtkEntryBufferClass
inside_selection	gtktexttag.h	/^  guint inside_selection : 1;$/;"	m	struct:_GtkTextAppearance
int_data	gtktypeutils.h	/^    gint int_data;$/;"	m	union:_GtkArg::__anon68
internal_allocation	gtkclist.h	/^  GdkRectangle internal_allocation;$/;"	m	struct:_GtkCList
invalidate	gtktextlayout.h	/^  void  (*invalidate)           (GtkTextLayout     *layout,$/;"	m	struct:_GtkTextLayoutClass
invalidate_cursors	gtktextlayout.h	/^  void (*invalidate_cursors)    (GtkTextLayout     *layout,$/;"	m	struct:_GtkTextLayoutClass
invalidated	gtktextlayout.h	/^  void  (*invalidated)  (GtkTextLayout *layout);$/;"	m	struct:_GtkTextLayoutClass
invisible	gtktexttag.h	/^  guint invisible : 1;$/;"	m	struct:_GtkTextAttributes
is_active	gtkactiongroup.h	/^  gboolean   is_active;$/;"	m	struct:_GtkToggleActionEntry
is_leaf	gtkctree.h	/^  guint is_leaf  : 1;$/;"	m	struct:_GtkCTreeRow
is_private	gtkrecentmanager.h	/^  gboolean is_private;$/;"	m	struct:_GtkRecentData
is_secondary	gtkbox.h	/^  guint is_secondary : 1;$/;"	m	struct:_GtkBoxChild
is_selected	gtkprintoperationpreview.h	/^  gboolean          (*is_selected)    (GtkPrintOperationPreview *preview,$/;"	m	struct:_GtkPrintOperationPreviewIface
is_strong	gtktextlayout.h	/^  guint is_strong : 1;$/;"	m	struct:_GtkTextCursorDisplay
is_text	gtktexttag.h	/^  guint is_text : 1;$/;"	m	struct:_GtkTextAppearance
is_weak	gtktextlayout.h	/^  guint is_weak : 1;$/;"	m	struct:_GtkTextCursorDisplay
item	gtklistitem.h	/^  GtkItem item;$/;"	m	struct:_GtkListItem
item	gtkmenuitem.h	/^  GtkItem item;$/;"	m	struct:_GtkMenuItem
item	gtktreeitem.h	/^  GtkItem item;$/;"	m	struct:_GtkTreeItem
item_activated	gtkiconview.h	/^  void    (* item_activated)         (GtkIconView      *icon_view,$/;"	m	struct:_GtkIconViewClass
item_activated	gtkrecentchooser.h	/^  void		    (* item_activated)     (GtkRecentChooser  *chooser);$/;"	m	struct:_GtkRecentChooserIface
item_ht	gtkitemfactory.h	/^  GHashTable		*item_ht;$/;"	m	struct:_GtkItemFactoryClass
item_type	gtkitemfactory.h	/^  gchar		 *item_type;$/;"	m	struct:_GtkItemFactoryEntry
items	gtkitemfactory.h	/^  GSList		*items;$/;"	m	struct:_GtkItemFactory
iter	gtkimage.h	/^  GdkPixbufAnimationIter *iter;$/;"	m	struct:_GtkImageAnimationData
iter_children	gtktreemodel.h	/^  gboolean     (* iter_children)   (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
iter_has_child	gtktreemodel.h	/^  gboolean     (* iter_has_child)  (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
iter_n_children	gtktreemodel.h	/^  gint         (* iter_n_children) (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
iter_next	gtktreemodel.h	/^  gboolean     (* iter_next)       (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
iter_nth_child	gtktreemodel.h	/^  gboolean     (* iter_nth_child)  (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
iter_parent	gtktreemodel.h	/^  gboolean     (* iter_parent)     (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
justification	gtkclist.h	/^  GtkJustification justification;$/;"	m	struct:_GtkCListColumn
justification	gtktexttag.h	/^  GtkJustification justification;$/;"	m	struct:_GtkTextAttributes
key	gtkaccelgroup.h	/^  GtkAccelKey  key;$/;"	m	struct:_GtkAccelGroupEntry
key_press_event	gtkwidget.h	/^  gboolean (* key_press_event)		(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
key_release_event	gtkwidget.h	/^  gboolean (* key_release_event)	(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
keyboard_direction	gtktextlayout.h	/^  guint keyboard_direction : 2;$/;"	m	struct:_GtkTextLayout
keys_changed	gtkwindow.h	/^  void	   (*keys_changed)	       (GtkWindow	*window);$/;"	m	struct:_GtkWindowClass
keyval	gtkbindings.h	/^  guint			 keyval;$/;"	m	struct:_GtkBindingEntry
keyval	gtkstock.h	/^  guint keyval;$/;"	m	struct:_GtkStockItem
kill_char	gtkoldeditable.h	/^  void (* kill_char)       (GtkOldEditable *editable,$/;"	m	struct:_GtkOldEditableClass
kill_line	gtkoldeditable.h	/^  void (* kill_line)       (GtkOldEditable *editable,$/;"	m	struct:_GtkOldEditableClass
kill_word	gtkoldeditable.h	/^  void (* kill_word)       (GtkOldEditable *editable,$/;"	m	struct:_GtkOldEditableClass
label	gtkaccellabel.h	/^  GtkLabel label;$/;"	m	struct:_GtkAccelLabel
label	gtkactiongroup.h	/^  const gchar     *label;$/;"	m	struct:_GtkActionEntry
label	gtkactiongroup.h	/^  const gchar     *label;$/;"	m	struct:_GtkToggleActionEntry
label	gtkactiongroup.h	/^  const gchar *label;$/;"	m	struct:_GtkRadioActionEntry
label	gtkstock.h	/^  gchar *label;$/;"	m	struct:_GtkStockItem
label	gtktipsquery.h	/^  GtkLabel	label;$/;"	m	struct:_GtkTipsQuery
label	gtktoolbar.h	/^  GtkWidget *label;$/;"	m	struct:_GtkToolbarChild
label_inactive	gtktipsquery.h	/^  gchar		*label_inactive;$/;"	m	struct:_GtkTipsQuery
label_no_tip	gtktipsquery.h	/^  gchar		*label_no_tip;$/;"	m	struct:_GtkTipsQuery
language	gtktexttag.h	/^  PangoLanguage *language;$/;"	m	struct:_GtkTextAttributes
last	gtkcurve.h	/^  gint last;$/;"	m	struct:_GtkCurve
last_crossed	gtktipsquery.h	/^  GtkWidget	*last_crossed;$/;"	m	struct:_GtkTipsQuery
last_focus_child	gtklist.h	/^  GtkWidget *last_focus_child;$/;"	m	struct:_GtkList
last_popdown	gtktooltips.h	/^  GTimeVal last_popdown;$/;"	m	struct:_GtkTooltips
last_selected	gtkfilesel.h	/^  gchar     *last_selected;$/;"	m	struct:_GtkFileSelection
last_ver_value	gtktext.h	/^  gint last_ver_value;$/;"	m	struct:_GtkText
latin1_to_char	gtkaccellabel.h	/^  guint		 latin1_to_char : 1;$/;"	m	struct:_GtkAccelLabelClass
layout	gtktextlayout.h	/^  PangoLayout *layout;$/;"	m	struct:_GtkTextLineDisplay
leave	gtkbutton.h	/^  void (* leave)    (GtkButton *button);$/;"	m	struct:_GtkButtonClass
leave_notify_event	gtkwidget.h	/^  gboolean (* leave_notify_event)	(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
left	gtkstyle.h	/^  gint left;$/;"	m	struct:_GtkBorder
left_attach	gtktable.h	/^  guint16 left_attach;$/;"	m	struct:_GtkTableChild
left_margin	gtktextlayout.h	/^  gint left_margin;$/;"	m	struct:_GtkTextLineDisplay
left_margin	gtktexttag.h	/^  gint left_margin;$/;"	m	struct:_GtkTextAttributes
level	gtkctree.h	/^  guint16 level;$/;"	m	struct:_GtkCTreeRow
level	gtktree.h	/^  guint level;$/;"	m	struct:_GtkTree
library	ubuntumenuproxymodule.h	/^  GModule *library;$/;"	m	struct:_UbuntuMenuProxyModule
light	gtkstyle.h	/^  GdkColor light[5];$/;"	m	struct:_GtkStyle
light_gc	gtkstyle.h	/^  GdkGC *light_gc[5];$/;"	m	struct:_GtkStyle
line	gtktextlayout.h	/^  GtkTextLine *line;$/;"	m	struct:_GtkTextLineDisplay
line_arrow_bitmap	gtktext.h	/^  GdkPixmap* line_arrow_bitmap;$/;"	m	struct:_GtkText
line_start_cache	gtktext.h	/^  GList *line_start_cache;$/;"	m	struct:_GtkText
line_style	gtkctree.h	/^  guint line_style     : 2;$/;"	m	struct:_GtkCTree
line_wrap	gtktext.h	/^  guint line_wrap : 1;$/;"	m	struct:_GtkText
line_wrap_bitmap	gtktext.h	/^  GdkPixmap* line_wrap_bitmap;$/;"	m	struct:_GtkText
lines_gc	gtkctree.h	/^  GdkGC *lines_gc;$/;"	m	struct:_GtkCTree
list	gtkcombo.h	/^	GtkWidget *list;$/;"	m	struct:_GtkCombo
list	gtkctree.h	/^  GList list;$/;"	m	struct:_GtkCTreeNode
list	gtkselection.h	/^  GList *list;$/;"	m	struct:_GtkTargetList
list_change_id	gtkcombo.h	/^	guint list_change_id;	\/* unused *\/$/;"	m	struct:_GtkCombo
list_filters	gtkrecentchooser.h	/^  GSList *          (* list_filters)       (GtkRecentChooser  *chooser);$/;"	m	struct:_GtkRecentChooserIface
load	ubuntumenuproxymodule.h	/^  void        (* load)     (UbuntuMenuProxyModule *module);$/;"	m	struct:_UbuntuMenuProxyModule
long_data	gtkbindings.h	/^    glong	 long_data;$/;"	m	union:_GtkBindingArg::__anon5
long_data	gtktypeutils.h	/^    glong long_data;$/;"	m	union:_GtkArg::__anon68
lookup	gtkpreview.h	/^  guchar *lookup;$/;"	m	struct:_GtkPreviewInfo
ltr_context	gtktextlayout.h	/^  PangoContext *ltr_context;$/;"	m	struct:_GtkTextLayout
main_vbox	gtkfilesel.h	/^  GtkWidget *main_vbox;$/;"	m	struct:_GtkFileSelection
map	gtkwidget.h	/^  void (* map)		       (GtkWidget        *widget);$/;"	m	struct:_GtkWidgetClass
map_event	gtkwidget.h	/^  gboolean (* map_event)		(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
mark_deleted	gtktextbuffer.h	/^  void (* mark_deleted)       (GtkTextBuffer *buffer,$/;"	m	struct:_GtkTextBufferClass
mark_set	gtktextbuffer.h	/^  void (* mark_set)           (GtkTextBuffer *buffer,$/;"	m	struct:_GtkTextBufferClass
marks_unbound	gtkbindings.h	/^  guint                 marks_unbound : 1;$/;"	m	struct:_GtkBindingEntry
mask	gtkclist.h	/^      GdkBitmap *mask;$/;"	m	struct:_GtkCell::__anon105::__anon106
mask	gtkclist.h	/^      GdkBitmap *mask;$/;"	m	struct:_GtkCell::__anon105::__anon107
mask	gtkclist.h	/^  GdkBitmap *mask;$/;"	m	struct:_GtkCellPixText
mask	gtkclist.h	/^  GdkBitmap *mask;$/;"	m	struct:_GtkCellPixmap
mask	gtkpixmap.h	/^  GdkBitmap *mask;$/;"	m	struct:_GtkPixmap
mask_closed	gtkctree.h	/^  GdkBitmap *mask_closed;$/;"	m	struct:_GtkCTreeRow
mask_opened	gtkctree.h	/^  GdkBitmap *mask_opened;$/;"	m	struct:_GtkCTreeRow
match_selected	gtkentrycompletion.h	/^  gboolean (* match_selected)   (GtkEntryCompletion *completion,$/;"	m	struct:_GtkEntryCompletionClass
max_width	gtkclist.h	/^  gint max_width;$/;"	m	struct:_GtkCListColumn
max_x	gtkcurve.h	/^  gfloat max_x;$/;"	m	struct:_GtkCurve
max_y	gtkcurve.h	/^  gfloat max_y;$/;"	m	struct:_GtkCurve
menu	gtkoptionmenu.h	/^  GtkWidget *menu;$/;"	m	struct:_GtkOptionMenu
menu_item	gtkcheckmenuitem.h	/^  GtkMenuItem menu_item;$/;"	m	struct:_GtkCheckMenuItem
menu_item	gtkimagemenuitem.h	/^  GtkMenuItem menu_item;$/;"	m	struct:_GtkImageMenuItem
menu_item	gtkoptionmenu.h	/^  GtkWidget *menu_item;$/;"	m	struct:_GtkOptionMenu
menu_item	gtkseparatormenuitem.h	/^  GtkMenuItem menu_item;$/;"	m	struct:_GtkSeparatorMenuItem
menu_item	gtktearoffmenuitem.h	/^  GtkMenuItem menu_item;$/;"	m	struct:_GtkTearoffMenuItem
menu_item_type	gtkaction.h	/^  GType      menu_item_type;$/;"	m	struct:_GtkActionClass
menu_shell	gtkmenubar.h	/^  GtkMenuShell menu_shell;$/;"	m	struct:_GtkMenuBar
merge	gtkrc.h	/^  void      (*merge)  (GtkRcStyle *dest,$/;"	m	struct:_GtkRcStyleClass
metric_name	gtkruler.h	/^  gchar *metric_name;$/;"	m	struct:_GtkRulerMetric
mid	gtkstyle.h	/^  GdkColor mid[5];$/;"	m	struct:_GtkStyle
mid_gc	gtkstyle.h	/^  GdkGC *mid_gc[5];$/;"	m	struct:_GtkStyle
mime_type	gtkfilefilter.h	/^  const gchar *mime_type;$/;"	m	struct:_GtkFileFilterInfo
mime_type	gtkrecentfilter.h	/^  const gchar *mime_type;$/;"	m	struct:_GtkRecentFilterInfo
mime_type	gtkrecentmanager.h	/^  gchar *mime_type;$/;"	m	struct:_GtkRecentData
min_width	gtkclist.h	/^  gint min_width;$/;"	m	struct:_GtkCListColumn
min_x	gtkcurve.h	/^  gfloat min_x;$/;"	m	struct:_GtkCurve
min_y	gtkcurve.h	/^  gfloat min_y;$/;"	m	struct:_GtkCurve
minus_pix_widget	gtktreeitem.h	/^  GtkWidget *plus_pix_widget, *minus_pix_widget;$/;"	m	struct:_GtkTreeItem
misc	gtkarrow.h	/^  GtkMisc misc;$/;"	m	struct:_GtkArrow
misc	gtkimage.h	/^  GtkMisc misc;$/;"	m	struct:_GtkImage
misc	gtklabel.h	/^  GtkMisc misc;$/;"	m	struct:_GtkLabel
misc	gtkpixmap.h	/^  GtkMisc misc;$/;"	m	struct:_GtkPixmap
mnemonic_activate	gtkwidget.h	/^  gboolean (* mnemonic_activate) (GtkWidget    *widget,$/;"	m	struct:_GtkWidgetClass
mod_name_alt	gtkaccellabel.h	/^  gchar		*mod_name_alt;$/;"	m	struct:_GtkAccelLabelClass
mod_name_control	gtkaccellabel.h	/^  gchar		*mod_name_control;$/;"	m	struct:_GtkAccelLabelClass
mod_name_shift	gtkaccellabel.h	/^  gchar		*mod_name_shift;$/;"	m	struct:_GtkAccelLabelClass
mod_separator	gtkaccellabel.h	/^  gchar		*mod_separator;$/;"	m	struct:_GtkAccelLabelClass
modified_changed	gtktextbuffer.h	/^  void (* modified_changed)   (GtkTextBuffer *buffer);$/;"	m	struct:_GtkTextBufferClass
modifier	gtkstock.h	/^  GdkModifierType modifier;$/;"	m	struct:_GtkStockItem
modifiers	gtkbindings.h	/^  GdkModifierType	 modifiers;$/;"	m	struct:_GtkBindingEntry
month_changed	gtkcalendar.h	/^  void (* month_changed)		(GtkCalendar *calendar);$/;"	m	struct:_GtkCalendarClass
motion_notify_event	gtkwidget.h	/^  gboolean (* motion_notify_event)	(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
move	gtkhsv.h	/^  void (* move)    (GtkHSV          *hsv,$/;"	m	struct:_GtkHSVClass
move_current	gtkmenushell.h	/^  void (*move_current)     (GtkMenuShell        *menu_shell,$/;"	m	struct:_GtkMenuShellClass
move_cursor	gtkentry.h	/^  void (* move_cursor)        (GtkEntry             *entry,$/;"	m	struct:_GtkEntryClass
move_cursor	gtkiconview.h	/^  gboolean (* move_cursor)           (GtkIconView      *icon_view,$/;"	m	struct:_GtkIconViewClass
move_cursor	gtklabel.h	/^  void (* move_cursor)     (GtkLabel       *label,$/;"	m	struct:_GtkLabelClass
move_cursor	gtkoldeditable.h	/^  void (* move_cursor)     (GtkOldEditable *editable,$/;"	m	struct:_GtkOldEditableClass
move_cursor	gtktextview.h	/^  void (* move_cursor) (GtkTextView    *text_view,$/;"	m	struct:_GtkTextViewClass
move_cursor	gtktreeview.h	/^  gboolean (* move_cursor)                (GtkTreeView       *tree_view,$/;"	m	struct:_GtkTreeViewClass
move_focus	gtktextview.h	/^  void (* move_focus)       (GtkTextView     *text_view,$/;"	m	struct:_GtkTextViewClass
move_focus	gtkwindow.h	/^  void     (* move_focus)              (GtkWindow       *window,$/;"	m	struct:_GtkWindowClass
move_focus_out	gtknotebook.h	/^  void (* move_focus_out)      (GtkNotebook       *notebook,$/;"	m	struct:_GtkNotebookClass
move_focus_out	gtkscrolledwindow.h	/^  void (* move_focus_out) (GtkScrolledWindow *scrolled_window,$/;"	m	struct:_GtkScrolledWindowClass
move_handle	gtkpaned.h	/^  gboolean (* move_handle)         (GtkPaned      *paned,$/;"	m	struct:_GtkPanedClass
move_page	gtkoldeditable.h	/^  void (* move_page)       (GtkOldEditable *editable,$/;"	m	struct:_GtkOldEditableClass
move_selected	gtkmenushell.h	/^  gboolean (*move_selected) (GtkMenuShell *menu_shell,$/;"	m	struct:_GtkMenuShellClass
move_slider	gtkrange.h	/^  void (* move_slider)      (GtkRange     *range,$/;"	m	struct:_GtkRangeClass
move_to_column	gtkoldeditable.h	/^  void (* move_to_column)  (GtkOldEditable *editable,$/;"	m	struct:_GtkOldEditableClass
move_to_row	gtkoldeditable.h	/^  void (* move_to_row)     (GtkOldEditable *editable,$/;"	m	struct:_GtkOldEditableClass
move_word	gtkoldeditable.h	/^  void (* move_word)       (GtkOldEditable *editable,$/;"	m	struct:_GtkOldEditableClass
n_args	gtkbindings.h	/^  guint			 n_args;$/;"	m	struct:_GtkBindingSignal
name	gtkactiongroup.h	/^  const gchar     *name;$/;"	m	struct:_GtkActionEntry
name	gtkactiongroup.h	/^  const gchar     *name;$/;"	m	struct:_GtkToggleActionEntry
name	gtkactiongroup.h	/^  const gchar *name;$/;"	m	struct:_GtkRadioActionEntry
name	gtkimage.h	/^    GtkImageIconNameData name;$/;"	m	union:_GtkImage::__anon84
name	gtkrc.h	/^  gchar *name;$/;"	m	struct:_GtkRcStyle
name	gtktypeutils.h	/^  gchar *name;$/;"	m	struct:_GtkArg
name	ubuntumenuproxymodule.h	/^  gchar   *name;$/;"	m	struct:_UbuntuMenuProxyModule
need_expand	gtktable.h	/^  guint need_expand : 1;$/;"	m	struct:_GtkTableRowCol
need_shrink	gtktable.h	/^  guint need_shrink : 1;$/;"	m	struct:_GtkTableRowCol
next	gtkbindings.h	/^  GtkBindingSignal	*next;$/;"	m	struct:_GtkBindingSignal
next_month	gtkcalendar.h	/^  void (* next_month)			(GtkCalendar *calendar);$/;"	m	struct:_GtkCalendarClass
next_year	gtkcalendar.h	/^  void (* next_year)			(GtkCalendar *calendar);$/;"	m	struct:_GtkCalendarClass
no_expose_event	gtkwidget.h	/^  gboolean (* no_expose_event)		(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
num_ctlpoints	gtkcurve.h	/^  gint num_ctlpoints;           \/* number of control points *\/$/;"	m	struct:_GtkCurve
num_points	gtkcurve.h	/^  gint num_points;$/;"	m	struct:_GtkCurve
object	gtkaction.h	/^  GObject object;$/;"	m	struct:_GtkAction
object	gtkimcontextsimple.h	/^  GtkIMContext object;$/;"	m	struct:_GtkIMContextSimple
object	gtkimmulticontext.h	/^  GtkIMContext object;$/;"	m	struct:_GtkIMMulticontext
object	gtkitemfactory.h	/^  GtkObject		 object;$/;"	m	struct:_GtkItemFactory
object	gtkwidget.h	/^  GtkObject object;$/;"	m	struct:_GtkWidget
object_class	gtkitemfactory.h	/^  GtkObjectClass	 object_class;$/;"	m	struct:_GtkItemFactoryClass
object_data	gtktypeutils.h	/^    GtkObject *object_data;$/;"	m	union:_GtkArg::__anon68
object_init_func	gtktypeutils.h	/^  GtkObjectInitFunc	 object_init_func;$/;"	m	struct:_GtkTypeInfo
object_size	gtktypeutils.h	/^  guint			 object_size;$/;"	m	struct:_GtkTypeInfo
offscreen_pixmap	gtkprogress.h	/^  GdkPixmap     *offscreen_pixmap;$/;"	m	struct:_GtkProgress
offset	gtktext.h	/^  guint offset;$/;"	m	struct:_GtkPropertyMark
offset_x	gtkwidget.h	/^  gint16     offset_x;$/;"	m	struct:_GtkWidgetShapeInfo
offset_y	gtkwidget.h	/^  gint16     offset_y;$/;"	m	struct:_GtkWidgetShapeInfo
ok_button	gtkfilesel.h	/^  GtkWidget *ok_button;$/;"	m	struct:_GtkFileSelection
ok_if_empty	gtkcombo.h	/^	guint ok_if_empty:1;$/;"	m	struct:_GtkCombo
old_editable	gtktext.h	/^  GtkOldEditable old_editable;$/;"	m	struct:_GtkText
one_display_cache	gtktextlayout.h	/^  GtkTextLineDisplay *one_display_cache;$/;"	m	struct:_GtkTextLayout
one_style_cache	gtktextlayout.h	/^  GtkTextAttributes *one_style_cache;$/;"	m	struct:_GtkTextLayout
orientation_changed	gtktoolbar.h	/^  void     (* orientation_changed) (GtkToolbar       *toolbar,$/;"	m	struct:_GtkToolbarClass
origin	gtkrc.h	/^  gchar *origin;$/;"	m	struct:_GtkRcProperty
origin	gtksettings.h	/^  gchar *origin;$/;"	m	struct:_GtkSettingsValue
output	gtkspinbutton.h	/^  gint (*output) (GtkSpinButton *spin_button);$/;"	m	struct:_GtkSpinButtonClass
overwrite_mode	gtktextlayout.h	/^  guint overwrite_mode : 1;$/;"	m	struct:_GtkTextLayout
pack	gtkbox.h	/^  guint pack : 1;$/;"	m	struct:_GtkBoxChild
pack_end	gtkcelllayout.h	/^  void (* pack_end)           (GtkCellLayout         *cell_layout,$/;"	m	struct:_GtkCellLayoutIface
pack_start	gtkcelllayout.h	/^  void (* pack_start)         (GtkCellLayout         *cell_layout,$/;"	m	struct:_GtkCellLayoutIface
pad1	gtktexttag.h	/^  guint pad1 : 1;$/;"	m	struct:_GtkTextAppearance
pad1	gtktexttag.h	/^  guint pad1 : 1;$/;"	m	struct:_GtkTextAttributes
pad2	gtktexttag.h	/^  guint pad2 : 1;$/;"	m	struct:_GtkTextAppearance
pad2	gtktexttag.h	/^  guint pad2 : 1;$/;"	m	struct:_GtkTextAttributes
pad3	gtktexttag.h	/^  guint pad3 : 1;$/;"	m	struct:_GtkTextAppearance
pad3	gtktexttag.h	/^  guint pad3 : 1;$/;"	m	struct:_GtkTextAttributes
pad4	gtktexttag.h	/^  guint pad4 : 1;$/;"	m	struct:_GtkTextAppearance
pad4	gtktexttag.h	/^  guint pad4 : 1;$/;"	m	struct:_GtkTextAttributes
padding	gtkbox.h	/^  guint16 padding;$/;"	m	struct:_GtkBoxChild
padding1	gtktexttag.h	/^  gpointer padding1;$/;"	m	struct:_GtkTextAppearance
page_horizontally	gtktextview.h	/^  void (* page_horizontally) (GtkTextView *text_view,$/;"	m	struct:_GtkTextViewClass
paginate	gtkprintoperation.h	/^  gboolean (*paginate)           (GtkPrintOperation *operation,$/;"	m	struct:_GtkPrintOperationClass
paint	gtkprogress.h	/^  void (* paint)            (GtkProgress *progress);$/;"	m	struct:_GtkProgressClass
paned	gtkhpaned.h	/^  GtkPaned paned;$/;"	m	struct:_GtkHPaned
paned	gtkvpaned.h	/^  GtkPaned paned;$/;"	m	struct:_GtkVPaned
parent	gtkaccelgroup.h	/^  GObject             parent;$/;"	m	struct:_GtkAccelGroup
parent	gtkaccessible.h	/^  AtkObject parent;$/;"	m	struct:_GtkAccessible
parent	gtkactiongroup.h	/^  GObject parent;$/;"	m	struct:_GtkActionGroup
parent	gtkassistant.h	/^  GtkWindow  parent;$/;"	m	struct:_GtkAssistant
parent	gtkcellrenderer.h	/^  GtkObject parent;$/;"	m	struct:_GtkCellRenderer
parent	gtkcellrendereraccel.h	/^  GtkCellRendererText parent;$/;"	m	struct:_GtkCellRendererAccel
parent	gtkcellrenderercombo.h	/^  GtkCellRendererText parent;$/;"	m	struct:_GtkCellRendererCombo
parent	gtkcellrenderercombo.h	/^  GtkCellRendererTextClass parent;$/;"	m	struct:_GtkCellRendererComboClass
parent	gtkcellrendererpixbuf.h	/^  GtkCellRenderer parent;$/;"	m	struct:_GtkCellRendererPixbuf
parent	gtkcellrendererspin.h	/^  GtkCellRendererText parent;$/;"	m	struct:_GtkCellRendererSpin
parent	gtkcellrendererspin.h	/^  GtkCellRendererTextClass parent;$/;"	m	struct:_GtkCellRendererSpinClass
parent	gtkcellrendererspinner.h	/^  GtkCellRenderer                parent;$/;"	m	struct:_GtkCellRendererSpinner
parent	gtkcellrenderertext.h	/^  GtkCellRenderer parent;$/;"	m	struct:_GtkCellRendererText
parent	gtkcellrenderertoggle.h	/^  GtkCellRenderer parent;$/;"	m	struct:_GtkCellRendererToggle
parent	gtkctree.h	/^  GtkCTreeNode *parent;$/;"	m	struct:_GtkCTreeRow
parent	gtkfilechooserbutton.h	/^  GtkHBox parent;$/;"	m	struct:_GtkFileChooserButton
parent	gtkiconview.h	/^  GtkContainer parent;$/;"	m	struct:_GtkIconView
parent	gtkinfobar.h	/^  GtkHBox parent;$/;"	m	struct:_GtkInfoBar
parent	gtkliststore.h	/^  GObject parent;$/;"	m	struct:_GtkListStore
parent	gtkmenutoolbutton.h	/^  GtkToolButton parent;$/;"	m	struct:_GtkMenuToolButton
parent	gtkradioaction.h	/^  GtkToggleAction parent;$/;"	m	struct:_GtkRadioAction
parent	gtkradiotoolbutton.h	/^  GtkToggleToolButton parent;$/;"	m	struct:_GtkRadioToolButton
parent	gtkscalebutton.h	/^  GtkButton parent;$/;"	m	struct:_GtkScaleButton
parent	gtkseparatortoolitem.h	/^  GtkToolItem parent;$/;"	m	struct:_GtkSeparatorToolItem
parent	gtkspinner.h	/^  GtkDrawingArea parent;$/;"	m	struct:_GtkSpinner
parent	gtktoggleaction.h	/^  GtkAction parent;$/;"	m	struct:_GtkToggleAction
parent	gtktoggletoolbutton.h	/^  GtkToolButton parent;$/;"	m	struct:_GtkToggleToolButton
parent	gtktoolbutton.h	/^  GtkToolItem parent;$/;"	m	struct:_GtkToolButton
parent	gtktoolitem.h	/^  GtkBin parent;$/;"	m	struct:_GtkToolItem
parent	gtktreemodelfilter.h	/^  GObject parent;$/;"	m	struct:_GtkTreeModelFilter
parent	gtktreemodelsort.h	/^  GObject parent;$/;"	m	struct:_GtkTreeModelSort
parent	gtktreeselection.h	/^  GObject parent;$/;"	m	struct:_GtkTreeSelection
parent	gtktreestore.h	/^  GObject parent;$/;"	m	struct:_GtkTreeStore
parent	gtktreeview.h	/^  GtkContainer parent;$/;"	m	struct:_GtkTreeView
parent	gtktreeviewcolumn.h	/^  GtkObject parent;$/;"	m	struct:_GtkTreeViewColumn
parent	gtkuimanager.h	/^  GObject parent;$/;"	m	struct:_GtkUIManager
parent	gtkvolumebutton.h	/^  GtkScaleButton  parent;$/;"	m	struct:_GtkVolumeButton
parent_class	gtkaboutdialog.h	/^  GtkDialogClass parent_class;$/;"	m	struct:_GtkAboutDialogClass
parent_class	gtkaccelgroup.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkAccelGroupClass
parent_class	gtkaccellabel.h	/^  GtkLabelClass	 parent_class;$/;"	m	struct:_GtkAccelLabelClass
parent_class	gtkaccessible.h	/^  AtkObjectClass parent_class;$/;"	m	struct:_GtkAccessibleClass
parent_class	gtkaction.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkActionClass
parent_class	gtkactiongroup.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkActionGroupClass
parent_class	gtkadjustment.h	/^  GtkObjectClass parent_class;$/;"	m	struct:_GtkAdjustmentClass
parent_class	gtkalignment.h	/^  GtkBinClass parent_class;$/;"	m	struct:_GtkAlignmentClass
parent_class	gtkarrow.h	/^  GtkMiscClass parent_class;$/;"	m	struct:_GtkArrowClass
parent_class	gtkaspectframe.h	/^  GtkFrameClass parent_class;$/;"	m	struct:_GtkAspectFrameClass
parent_class	gtkassistant.h	/^  GtkWindowClass parent_class;$/;"	m	struct:_GtkAssistantClass
parent_class	gtkbbox.h	/^  GtkBoxClass parent_class;$/;"	m	struct:_GtkButtonBoxClass
parent_class	gtkbin.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkBinClass
parent_class	gtkbox.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkBoxClass
parent_class	gtkbuilder.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkBuilderClass
parent_class	gtkbutton.h	/^  GtkBinClass        parent_class;$/;"	m	struct:_GtkButtonClass
parent_class	gtkcalendar.h	/^  GtkWidgetClass parent_class;$/;"	m	struct:_GtkCalendarClass
parent_class	gtkcellrenderer.h	/^  GtkObjectClass parent_class;$/;"	m	struct:_GtkCellRendererClass
parent_class	gtkcellrendereraccel.h	/^  GtkCellRendererTextClass parent_class;$/;"	m	struct:_GtkCellRendererAccelClass
parent_class	gtkcellrendererpixbuf.h	/^  GtkCellRendererClass parent_class;$/;"	m	struct:_GtkCellRendererPixbufClass
parent_class	gtkcellrendererprogress.h	/^  GtkCellRendererClass parent_class;$/;"	m	struct:_GtkCellRendererProgressClass
parent_class	gtkcellrendererspinner.h	/^  GtkCellRendererClass parent_class;$/;"	m	struct:_GtkCellRendererSpinnerClass
parent_class	gtkcellrenderertext.h	/^  GtkCellRendererClass parent_class;$/;"	m	struct:_GtkCellRendererTextClass
parent_class	gtkcellrenderertoggle.h	/^  GtkCellRendererClass parent_class;$/;"	m	struct:_GtkCellRendererToggleClass
parent_class	gtkcellview.h	/^  GtkWidgetClass parent_class;$/;"	m	struct:_GtkCellViewClass
parent_class	gtkcheckbutton.h	/^  GtkToggleButtonClass parent_class;$/;"	m	struct:_GtkCheckButtonClass
parent_class	gtkcheckmenuitem.h	/^  GtkMenuItemClass parent_class;$/;"	m	struct:_GtkCheckMenuItemClass
parent_class	gtkclist.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkCListClass
parent_class	gtkcolorbutton.h	/^  GtkButtonClass parent_class;$/;"	m	struct:_GtkColorButtonClass
parent_class	gtkcolorsel.h	/^  GtkVBoxClass parent_class;$/;"	m	struct:_GtkColorSelectionClass
parent_class	gtkcolorseldialog.h	/^  GtkDialogClass parent_class;$/;"	m	struct:_GtkColorSelectionDialogClass
parent_class	gtkcombo.h	/^	GtkHBoxClass parent_class;$/;"	m	struct:_GtkComboClass
parent_class	gtkcombobox.h	/^  GtkBinClass parent_class;$/;"	m	struct:_GtkComboBoxClass
parent_class	gtkcomboboxentry.h	/^  GtkComboBoxClass parent_class;$/;"	m	struct:_GtkComboBoxEntryClass
parent_class	gtkcomboboxtext.h	/^  GtkComboBoxClass parent_class;$/;"	m	struct:_GtkComboBoxTextClass
parent_class	gtkcontainer.h	/^  GtkWidgetClass parent_class;$/;"	m	struct:_GtkContainerClass
parent_class	gtkctree.h	/^  GtkCListClass parent_class;$/;"	m	struct:_GtkCTreeClass
parent_class	gtkcurve.h	/^  GtkDrawingAreaClass parent_class;$/;"	m	struct:_GtkCurveClass
parent_class	gtkdialog.h	/^  GtkWindowClass parent_class;$/;"	m	struct:_GtkDialogClass
parent_class	gtkdrawingarea.h	/^  GtkWidgetClass parent_class;$/;"	m	struct:_GtkDrawingAreaClass
parent_class	gtkentry.h	/^  GtkWidgetClass parent_class;$/;"	m	struct:_GtkEntryClass
parent_class	gtkentrybuffer.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkEntryBufferClass
parent_class	gtkentrycompletion.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkEntryCompletionClass
parent_class	gtkeventbox.h	/^  GtkBinClass parent_class;$/;"	m	struct:_GtkEventBoxClass
parent_class	gtkexpander.h	/^  GtkBinClass    parent_class;$/;"	m	struct:_GtkExpanderClass
parent_class	gtkfilechooserbutton.h	/^  GtkHBoxClass parent_class;$/;"	m	struct:_GtkFileChooserButtonClass
parent_class	gtkfilechooserdialog.h	/^  GtkDialogClass parent_class;$/;"	m	struct:_GtkFileChooserDialogClass
parent_class	gtkfilechooserwidget.h	/^  GtkVBoxClass parent_class;$/;"	m	struct:_GtkFileChooserWidgetClass
parent_class	gtkfilesel.h	/^  GtkDialogClass parent_class;$/;"	m	struct:_GtkFileSelectionClass
parent_class	gtkfixed.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkFixedClass
parent_class	gtkfontbutton.h	/^  GtkButtonClass parent_class;$/;"	m	struct:_GtkFontButtonClass
parent_class	gtkfontsel.h	/^  GtkDialogClass parent_class;$/;"	m	struct:_GtkFontSelectionDialogClass
parent_class	gtkfontsel.h	/^  GtkVBoxClass parent_class;$/;"	m	struct:_GtkFontSelectionClass
parent_class	gtkframe.h	/^  GtkBinClass parent_class;$/;"	m	struct:_GtkFrameClass
parent_class	gtkgamma.h	/^  GtkVBoxClass parent_class;$/;"	m	struct:_GtkGammaCurveClass
parent_class	gtkhandlebox.h	/^  GtkBinClass parent_class;$/;"	m	struct:_GtkHandleBoxClass
parent_class	gtkhbbox.h	/^  GtkButtonBoxClass parent_class;$/;"	m	struct:_GtkHButtonBoxClass
parent_class	gtkhbox.h	/^  GtkBoxClass parent_class;$/;"	m	struct:_GtkHBoxClass
parent_class	gtkhpaned.h	/^  GtkPanedClass parent_class;$/;"	m	struct:_GtkHPanedClass
parent_class	gtkhruler.h	/^  GtkRulerClass parent_class;$/;"	m	struct:_GtkHRulerClass
parent_class	gtkhscale.h	/^  GtkScaleClass parent_class;$/;"	m	struct:_GtkHScaleClass
parent_class	gtkhscrollbar.h	/^  GtkScrollbarClass parent_class;$/;"	m	struct:_GtkHScrollbarClass
parent_class	gtkhseparator.h	/^  GtkSeparatorClass parent_class;$/;"	m	struct:_GtkHSeparatorClass
parent_class	gtkhsv.h	/^  GtkWidgetClass parent_class;$/;"	m	struct:_GtkHSVClass
parent_class	gtkiconfactory.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkIconFactoryClass
parent_class	gtkicontheme.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkIconThemeClass
parent_class	gtkiconview.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkIconViewClass
parent_class	gtkimage.h	/^  GtkMiscClass parent_class;$/;"	m	struct:_GtkImageClass
parent_class	gtkimagemenuitem.h	/^  GtkMenuItemClass parent_class;$/;"	m	struct:_GtkImageMenuItemClass
parent_class	gtkimcontext.h	/^  GtkObjectClass parent_class;$/;"	m	struct:_GtkIMContextClass
parent_class	gtkimcontextsimple.h	/^  GtkIMContextClass parent_class;$/;"	m	struct:_GtkIMContextSimpleClass
parent_class	gtkimmulticontext.h	/^  GtkIMContextClass parent_class;$/;"	m	struct:_GtkIMMulticontextClass
parent_class	gtkinfobar.h	/^  GtkHBoxClass parent_class;$/;"	m	struct:_GtkInfoBarClass
parent_class	gtkinputdialog.h	/^  GtkDialogClass parent_class;$/;"	m	struct:_GtkInputDialogClass
parent_class	gtkinvisible.h	/^  GtkWidgetClass parent_class;$/;"	m	struct:_GtkInvisibleClass
parent_class	gtkitem.h	/^  GtkBinClass parent_class;$/;"	m	struct:_GtkItemClass
parent_class	gtklabel.h	/^  GtkMiscClass parent_class;$/;"	m	struct:_GtkLabelClass
parent_class	gtklayout.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkLayoutClass
parent_class	gtklinkbutton.h	/^  GtkButtonClass parent_class;$/;"	m	struct:_GtkLinkButtonClass
parent_class	gtklist.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkListClass
parent_class	gtklistitem.h	/^  GtkItemClass parent_class;$/;"	m	struct:_GtkListItemClass
parent_class	gtkliststore.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkListStoreClass
parent_class	gtkmenu.h	/^  GtkMenuShellClass parent_class;$/;"	m	struct:_GtkMenuClass
parent_class	gtkmenubar.h	/^  GtkMenuShellClass parent_class;$/;"	m	struct:_GtkMenuBarClass
parent_class	gtkmenuitem.h	/^  GtkItemClass parent_class;$/;"	m	struct:_GtkMenuItemClass
parent_class	gtkmenushell.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkMenuShellClass
parent_class	gtkmenutoolbutton.h	/^  GtkToolButtonClass parent_class;$/;"	m	struct:_GtkMenuToolButtonClass
parent_class	gtkmessagedialog.h	/^  GtkDialogClass parent_class;$/;"	m	struct:_GtkMessageDialogClass
parent_class	gtkmisc.h	/^  GtkWidgetClass parent_class;$/;"	m	struct:_GtkMiscClass
parent_class	gtkmountoperation.h	/^  GMountOperationClass parent_class;$/;"	m	struct:_GtkMountOperationClass
parent_class	gtknotebook.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkNotebookClass
parent_class	gtkobject.h	/^  GInitiallyUnownedClass parent_class;$/;"	m	struct:_GtkObjectClass
parent_class	gtkoffscreenwindow.h	/^  GtkWindowClass parent_class;$/;"	m	struct:_GtkOffscreenWindowClass
parent_class	gtkoldeditable.h	/^  GtkWidgetClass parent_class;$/;"	m	struct:_GtkOldEditableClass
parent_class	gtkoptionmenu.h	/^  GtkButtonClass parent_class;$/;"	m	struct:_GtkOptionMenuClass
parent_class	gtkpaned.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkPanedClass
parent_class	gtkpixmap.h	/^  GtkMiscClass parent_class;$/;"	m	struct:_GtkPixmapClass
parent_class	gtkplug.h	/^  GtkWindowClass parent_class;$/;"	m	struct:_GtkPlugClass
parent_class	gtkpreview.h	/^  GtkWidgetClass parent_class;$/;"	m	struct:_GtkPreviewClass
parent_class	gtkprintoperation.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkPrintOperationClass
parent_class	gtkprogress.h	/^  GtkWidgetClass parent_class;$/;"	m	struct:_GtkProgressClass
parent_class	gtkprogressbar.h	/^  GtkProgressClass parent_class;$/;"	m	struct:_GtkProgressBarClass
parent_class	gtkradioaction.h	/^  GtkToggleActionClass parent_class;$/;"	m	struct:_GtkRadioActionClass
parent_class	gtkradiobutton.h	/^  GtkCheckButtonClass parent_class;$/;"	m	struct:_GtkRadioButtonClass
parent_class	gtkradiomenuitem.h	/^  GtkCheckMenuItemClass parent_class;$/;"	m	struct:_GtkRadioMenuItemClass
parent_class	gtkradiotoolbutton.h	/^  GtkToggleToolButtonClass parent_class;$/;"	m	struct:_GtkRadioToolButtonClass
parent_class	gtkrange.h	/^  GtkWidgetClass parent_class;$/;"	m	struct:_GtkRangeClass
parent_class	gtkrc.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkRcStyleClass
parent_class	gtkrecentaction.h	/^  GtkActionClass parent_class;$/;"	m	struct:_GtkRecentActionClass
parent_class	gtkrecentchooserdialog.h	/^  GtkDialogClass parent_class;$/;"	m	struct:_GtkRecentChooserDialogClass
parent_class	gtkrecentchoosermenu.h	/^  GtkMenuClass parent_class;$/;"	m	struct:_GtkRecentChooserMenuClass
parent_class	gtkrecentchooserwidget.h	/^  GtkVBoxClass parent_class;$/;"	m	struct:_GtkRecentChooserWidgetClass
parent_class	gtkrecentmanager.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkRecentManagerClass
parent_class	gtkruler.h	/^  GtkWidgetClass parent_class;$/;"	m	struct:_GtkRulerClass
parent_class	gtkscale.h	/^  GtkRangeClass parent_class;$/;"	m	struct:_GtkScaleClass
parent_class	gtkscalebutton.h	/^  GtkButtonClass parent_class;$/;"	m	struct:_GtkScaleButtonClass
parent_class	gtkscrollbar.h	/^  GtkRangeClass parent_class;$/;"	m	struct:_GtkScrollbarClass
parent_class	gtkscrolledwindow.h	/^  GtkBinClass parent_class;$/;"	m	struct:_GtkScrolledWindowClass
parent_class	gtkseparator.h	/^  GtkWidgetClass parent_class;$/;"	m	struct:_GtkSeparatorClass
parent_class	gtkseparatormenuitem.h	/^  GtkMenuItemClass parent_class;$/;"	m	struct:_GtkSeparatorMenuItemClass
parent_class	gtkseparatortoolitem.h	/^  GtkToolItemClass parent_class;$/;"	m	struct:_GtkSeparatorToolItemClass
parent_class	gtksettings.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkSettingsClass
parent_class	gtksizegroup.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkSizeGroupClass
parent_class	gtksocket.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkSocketClass
parent_class	gtkspinbutton.h	/^  GtkEntryClass parent_class;$/;"	m	struct:_GtkSpinButtonClass
parent_class	gtkspinner.h	/^  GtkDrawingAreaClass parent_class;$/;"	m	struct:_GtkSpinnerClass
parent_class	gtkstatusbar.h	/^  GtkHBoxClass parent_class;$/;"	m	struct:_GtkStatusbarClass
parent_class	gtkstatusicon.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkStatusIconClass
parent_class	gtkstyle.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkStyleClass
parent_class	gtktable.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkTableClass
parent_class	gtktearoffmenuitem.h	/^  GtkMenuItemClass parent_class;$/;"	m	struct:_GtkTearoffMenuItemClass
parent_class	gtktext.h	/^  GtkOldEditableClass parent_class;$/;"	m	struct:_GtkTextClass
parent_class	gtktextbuffer.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkTextBufferClass
parent_class	gtktextchild.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkTextChildAnchorClass
parent_class	gtktextlayout.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkTextLayoutClass
parent_class	gtktextmark.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkTextMarkClass
parent_class	gtktexttag.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkTextTagClass
parent_class	gtktexttagtable.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkTextTagTableClass
parent_class	gtktextview.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkTextViewClass
parent_class	gtktipsquery.h	/^  GtkLabelClass			parent_class;$/;"	m	struct:_GtkTipsQueryClass
parent_class	gtktoggleaction.h	/^  GtkActionClass parent_class;$/;"	m	struct:_GtkToggleActionClass
parent_class	gtktogglebutton.h	/^  GtkButtonClass parent_class;$/;"	m	struct:_GtkToggleButtonClass
parent_class	gtktoggletoolbutton.h	/^  GtkToolButtonClass parent_class;$/;"	m	struct:_GtkToggleToolButtonClass
parent_class	gtktoolbar.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkToolbarClass
parent_class	gtktoolbutton.h	/^  GtkToolItemClass parent_class;$/;"	m	struct:_GtkToolButtonClass
parent_class	gtktoolitem.h	/^  GtkBinClass parent_class;$/;"	m	struct:_GtkToolItemClass
parent_class	gtktoolitemgroup.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkToolItemGroupClass
parent_class	gtktoolpalette.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkToolPaletteClass
parent_class	gtktooltips.h	/^  GtkObjectClass parent_class;$/;"	m	struct:_GtkTooltipsClass
parent_class	gtktree.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkTreeClass
parent_class	gtktreeitem.h	/^  GtkItemClass parent_class;$/;"	m	struct:_GtkTreeItemClass
parent_class	gtktreemodelfilter.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkTreeModelFilterClass
parent_class	gtktreemodelsort.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkTreeModelSortClass
parent_class	gtktreeselection.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkTreeSelectionClass
parent_class	gtktreestore.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkTreeStoreClass
parent_class	gtktreeview.h	/^  GtkContainerClass parent_class;$/;"	m	struct:_GtkTreeViewClass
parent_class	gtktreeviewcolumn.h	/^  GtkObjectClass parent_class;$/;"	m	struct:_GtkTreeViewColumnClass
parent_class	gtkuimanager.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkUIManagerClass
parent_class	gtkvbbox.h	/^  GtkButtonBoxClass parent_class;$/;"	m	struct:_GtkVButtonBoxClass
parent_class	gtkvbox.h	/^  GtkBoxClass parent_class;$/;"	m	struct:_GtkVBoxClass
parent_class	gtkviewport.h	/^  GtkBinClass parent_class;$/;"	m	struct:_GtkViewportClass
parent_class	gtkvolumebutton.h	/^  GtkScaleButtonClass parent_class;$/;"	m	struct:_GtkVolumeButtonClass
parent_class	gtkvpaned.h	/^  GtkPanedClass parent_class;$/;"	m	struct:_GtkVPanedClass
parent_class	gtkvruler.h	/^  GtkRulerClass parent_class;$/;"	m	struct:_GtkVRulerClass
parent_class	gtkvscale.h	/^  GtkScaleClass parent_class;$/;"	m	struct:_GtkVScaleClass
parent_class	gtkvscrollbar.h	/^  GtkScrollbarClass parent_class;$/;"	m	struct:_GtkVScrollbarClass
parent_class	gtkvseparator.h	/^  GtkSeparatorClass parent_class;$/;"	m	struct:_GtkVSeparatorClass
parent_class	gtkwidget.h	/^  GtkObjectClass parent_class;$/;"	m	struct:_GtkWidgetClass
parent_class	gtkwindow.h	/^  GObjectClass parent_class;$/;"	m	struct:_GtkWindowGroupClass
parent_class	gtkwindow.h	/^  GtkBinClass parent_class;$/;"	m	struct:_GtkWindowClass
parent_class	ubuntumenuproxy.h	/^  GObjectClass parent_class;$/;"	m	struct:_UbuntuMenuProxyClass
parent_class	ubuntumenuproxymodule.h	/^  GTypeModuleClass parent_class;$/;"	m	struct:_UbuntuMenuProxyModuleClass
parent_instance	gtkaboutdialog.h	/^  GtkDialog parent_instance;$/;"	m	struct:_GtkAboutDialog
parent_instance	gtkadjustment.h	/^  GtkObject parent_instance;$/;"	m	struct:_GtkAdjustment
parent_instance	gtkbuilder.h	/^  GObject parent_instance;$/;"	m	struct:_GtkBuilder
parent_instance	gtkcellrendererprogress.h	/^  GtkCellRenderer parent_instance;$/;"	m	struct:_GtkCellRendererProgress
parent_instance	gtkcellview.h	/^  GtkWidget parent_instance;$/;"	m	struct:_GtkCellView
parent_instance	gtkcolorsel.h	/^  GtkVBox parent_instance;$/;"	m	struct:_GtkColorSelection
parent_instance	gtkcolorseldialog.h	/^  GtkDialog parent_instance;$/;"	m	struct:_GtkColorSelectionDialog
parent_instance	gtkcombobox.h	/^  GtkBin parent_instance;$/;"	m	struct:_GtkComboBox
parent_instance	gtkcomboboxentry.h	/^  GtkComboBox parent_instance;$/;"	m	struct:_GtkComboBoxEntry
parent_instance	gtkcomboboxtext.h	/^  GtkComboBox parent_instance;$/;"	m	struct:_GtkComboBoxText
parent_instance	gtkentrybuffer.h	/^  GObject parent_instance;$/;"	m	struct:_GtkEntryBuffer
parent_instance	gtkentrycompletion.h	/^  GObject parent_instance;$/;"	m	struct:_GtkEntryCompletion
parent_instance	gtkfilechooserdialog.h	/^  GtkDialog parent_instance;$/;"	m	struct:_GtkFileChooserDialog
parent_instance	gtkfilechooserwidget.h	/^  GtkVBox parent_instance;$/;"	m	struct:_GtkFileChooserWidget
parent_instance	gtkfilesel.h	/^  GtkDialog parent_instance;$/;"	m	struct:_GtkFileSelection
parent_instance	gtkfontsel.h	/^  GtkDialog parent_instance;$/;"	m	struct:_GtkFontSelectionDialog
parent_instance	gtkfontsel.h	/^  GtkVBox parent_instance;$/;"	m	struct:_GtkFontSelection
parent_instance	gtkhsv.h	/^  GtkWidget parent_instance;$/;"	m	struct:_GtkHSV
parent_instance	gtkiconfactory.h	/^  GObject parent_instance;$/;"	m	struct:_GtkIconFactory
parent_instance	gtkicontheme.h	/^  GObject parent_instance;$/;"	m	struct:_GtkIconTheme
parent_instance	gtkimcontext.h	/^  GObject parent_instance;$/;"	m	struct:_GtkIMContext
parent_instance	gtklinkbutton.h	/^  GtkButton parent_instance;$/;"	m	struct:_GtkLinkButton
parent_instance	gtkmessagedialog.h	/^  GtkDialog parent_instance;$/;"	m	struct:_GtkMessageDialog
parent_instance	gtkmountoperation.h	/^  GMountOperation parent_instance;$/;"	m	struct:_GtkMountOperation
parent_instance	gtkobject.h	/^  GInitiallyUnowned parent_instance;$/;"	m	struct:_GtkObject
parent_instance	gtkprintoperation.h	/^  GObject parent_instance;$/;"	m	struct:_GtkPrintOperation
parent_instance	gtkrc.h	/^  GObject parent_instance;$/;"	m	struct:_GtkRcStyle
parent_instance	gtkrecentaction.h	/^  GtkAction parent_instance;$/;"	m	struct:_GtkRecentAction
parent_instance	gtkrecentchooserdialog.h	/^  GtkDialog parent_instance;$/;"	m	struct:_GtkRecentChooserDialog
parent_instance	gtkrecentchoosermenu.h	/^  GtkMenu parent_instance;$/;"	m	struct:_GtkRecentChooserMenu
parent_instance	gtkrecentchooserwidget.h	/^  GtkVBox parent_instance;$/;"	m	struct:_GtkRecentChooserWidget
parent_instance	gtkrecentmanager.h	/^  GObject parent_instance;$/;"	m	struct:_GtkRecentManager
parent_instance	gtksettings.h	/^  GObject parent_instance;$/;"	m	struct:_GtkSettings
parent_instance	gtksizegroup.h	/^  GObject parent_instance;$/;"	m	struct:_GtkSizeGroup
parent_instance	gtkstatusicon.h	/^  GObject               parent_instance;$/;"	m	struct:_GtkStatusIcon
parent_instance	gtkstyle.h	/^  GObject parent_instance;$/;"	m	struct:_GtkStyle
parent_instance	gtktextbuffer.h	/^  GObject parent_instance;$/;"	m	struct:_GtkTextBuffer
parent_instance	gtktextchild.h	/^  GObject parent_instance;$/;"	m	struct:_GtkTextChildAnchor
parent_instance	gtktextlayout.h	/^  GObject parent_instance;$/;"	m	struct:_GtkTextLayout
parent_instance	gtktextmark.h	/^  GObject parent_instance;$/;"	m	struct:_GtkTextMark
parent_instance	gtktexttag.h	/^  GObject parent_instance;$/;"	m	struct:_GtkTextTag
parent_instance	gtktexttagtable.h	/^  GObject parent_instance;$/;"	m	struct:_GtkTextTagTable
parent_instance	gtktextview.h	/^  GtkContainer parent_instance;$/;"	m	struct:_GtkTextView
parent_instance	gtktoolitemgroup.h	/^  GtkContainer parent_instance;$/;"	m	struct:_GtkToolItemGroup
parent_instance	gtktoolpalette.h	/^  GtkContainer parent_instance;$/;"	m	struct:_GtkToolPalette
parent_instance	gtktooltips.h	/^  GtkObject parent_instance;$/;"	m	struct:_GtkTooltips
parent_instance	gtkwindow.h	/^  GObject parent_instance;$/;"	m	struct:_GtkWindowGroup
parent_instance	ubuntumenuproxymodule.h	/^  GTypeModule parent_instance;$/;"	m	struct:_UbuntuMenuProxyModule
parent_object	gtkoffscreenwindow.h	/^  GtkWindow parent_object;$/;"	m	struct:_GtkOffscreenWindow
parent_object	ubuntumenuproxy.h	/^  GObject parent_object;$/;"	m	struct:_UbuntuMenuProxy
parent_set	gtkwidget.h	/^  void (* parent_set)	       (GtkWidget        *widget,$/;"	m	struct:_GtkWidgetClass
parent_widget	gtkstatusbar.h	/^  GtkHBox parent_widget;$/;"	m	struct:_GtkStatusbar
parse	gtkrc.h	/^  guint     (*parse)  (GtkRcStyle   *rc_style,$/;"	m	struct:_GtkRcStyleClass
parsed	gtkbindings.h	/^  guint                  parsed : 1; \/* From RC content *\/$/;"	m	struct:_GtkBindingSet
parser_finished	gtkbuildable.h	/^  void          (* parser_finished)        (GtkBuildable  *buildable,$/;"	m	struct:_GtkBuildableIface
paste_clipboard	gtkentry.h	/^  void (* paste_clipboard)    (GtkEntry             *entry);$/;"	m	struct:_GtkEntryClass
paste_clipboard	gtkoldeditable.h	/^  void (* paste_clipboard) (GtkOldEditable *editable);$/;"	m	struct:_GtkOldEditableClass
paste_clipboard	gtktextview.h	/^  void (* paste_clipboard) (GtkTextView *text_view);$/;"	m	struct:_GtkTextViewClass
paste_done	gtktextbuffer.h	/^  void (* paste_done)         (GtkTextBuffer *buffer,$/;"	m	struct:_GtkTextBufferClass
path	gtkitemfactory.h	/^  gchar			*path;$/;"	m	struct:_GtkItemFactory
path	gtkitemfactory.h	/^  gchar *path;$/;"	m	struct:_GtkItemFactoryEntry
path	gtkitemfactory.h	/^  gchar *path;$/;"	m	struct:_GtkItemFactoryItem
path	gtkitemfactory.h	/^  gchar *path;$/;"	m	struct:__anon95
pg_bg_color	gtktextlayout.h	/^  GdkColor *pg_bg_color;$/;"	m	struct:_GtkTextLineDisplay
pg_bg_color	gtktexttag.h	/^  GdkColor *pg_bg_color;$/;"	m	struct:_GtkTextAttributes
pixbuf	gtkimage.h	/^    GtkImagePixbufData pixbuf;$/;"	m	union:_GtkImage::__anon84
pixbuf	gtkimage.h	/^  GdkPixbuf *pixbuf;$/;"	m	struct:_GtkImageGIconData
pixbuf	gtkimage.h	/^  GdkPixbuf *pixbuf;$/;"	m	struct:_GtkImageIconNameData
pixbuf	gtkimage.h	/^  GdkPixbuf *pixbuf;$/;"	m	struct:_GtkImagePixbufData
pixels_above_lines	gtktexttag.h	/^  gint pixels_above_lines;$/;"	m	struct:_GtkTextAttributes
pixels_below_lines	gtktexttag.h	/^  gint pixels_below_lines;$/;"	m	struct:_GtkTextAttributes
pixels_inside_wrap	gtktexttag.h	/^  gint pixels_inside_wrap;$/;"	m	struct:_GtkTextAttributes
pixels_per_unit	gtkruler.h	/^  gdouble pixels_per_unit;$/;"	m	struct:_GtkRulerMetric
pixmap	gtkclist.h	/^      GdkPixmap *pixmap;$/;"	m	struct:_GtkCell::__anon105::__anon106
pixmap	gtkclist.h	/^      GdkPixmap *pixmap;$/;"	m	struct:_GtkCell::__anon105::__anon107
pixmap	gtkclist.h	/^  GdkPixmap *pixmap;$/;"	m	struct:_GtkCellPixText
pixmap	gtkclist.h	/^  GdkPixmap *pixmap;$/;"	m	struct:_GtkCellPixmap
pixmap	gtkcurve.h	/^  GdkPixmap *pixmap;$/;"	m	struct:_GtkCurve
pixmap	gtkimage.h	/^    GtkImagePixmapData pixmap;$/;"	m	union:_GtkImage::__anon84
pixmap	gtkimage.h	/^  GdkPixmap *pixmap;$/;"	m	struct:_GtkImagePixmapData
pixmap	gtkpixmap.h	/^  GdkPixmap *pixmap;$/;"	m	struct:_GtkPixmap
pixmap_closed	gtkctree.h	/^  GdkPixmap *pixmap_closed;$/;"	m	struct:_GtkCTreeRow
pixmap_insensitive	gtkpixmap.h	/^  GdkPixmap *pixmap_insensitive;$/;"	m	struct:_GtkPixmap
pixmap_opened	gtkctree.h	/^  GdkPixmap *pixmap_opened;$/;"	m	struct:_GtkCTreeRow
pixmaps	gtktreeitem.h	/^  GList *pixmaps;		\/* pixmap node for this items color depth *\/$/;"	m	struct:_GtkTreeItem
pixmaps_box	gtktreeitem.h	/^  GtkWidget *pixmaps_box;$/;"	m	struct:_GtkTreeItem
plug_added	gtksocket.h	/^  void     (*plug_added)   (GtkSocket *socket_);$/;"	m	struct:_GtkSocketClass
plug_removed	gtksocket.h	/^  gboolean (*plug_removed) (GtkSocket *socket_);$/;"	m	struct:_GtkSocketClass
plus_pix_widget	gtktreeitem.h	/^  GtkWidget *plus_pix_widget, *minus_pix_widget;$/;"	m	struct:_GtkTreeItem
pm	gtkclist.h	/^    } pm;$/;"	m	union:_GtkCell::__anon105	typeref:struct:_GtkCell::__anon105::__anon106
point	gtkcurve.h	/^  GdkPoint *point;$/;"	m	struct:_GtkCurve
point	gtktext.h	/^  GtkPropertyMark point;$/;"	m	struct:_GtkText
pointer_data	gtktypeutils.h	/^    gpointer pointer_data;$/;"	m	union:_GtkArg::__anon68
populate_popup	gtkentry.h	/^  void (* populate_popup)   (GtkEntry       *entry,$/;"	m	struct:_GtkEntryClass
populate_popup	gtklabel.h	/^  void (* populate_popup)   (GtkLabel       *label,$/;"	m	struct:_GtkLabelClass
populate_popup	gtktextview.h	/^  void (* populate_popup)           (GtkTextView    *text_view,$/;"	m	struct:_GtkTextViewClass
popup	gtkcombo.h	/^	GtkWidget *popup;$/;"	m	struct:_GtkCombo
popup_context_menu	gtktoolbar.h	/^  gboolean (* popup_context_menu)  (GtkToolbar       *toolbar,$/;"	m	struct:_GtkToolbarClass
popup_menu	gtkstatusicon.h	/^  void     (* popup_menu)           (GtkStatusIcon  *status_icon,$/;"	m	struct:_GtkStatusIconClass
popup_menu	gtkwidget.h	/^  gboolean (* popup_menu)          (GtkWidget          *widget);$/;"	m	struct:_GtkWidgetClass
popwin	gtkcombo.h	/^	GtkWidget *popwin;$/;"	m	struct:_GtkCombo
post_activate	gtkuimanager.h	/^  void (* post_activate)    (GtkUIManager *merge,$/;"	m	struct:_GtkUIManagerClass
pre_activate	gtkuimanager.h	/^  void (* pre_activate)     (GtkUIManager *merge,$/;"	m	struct:_GtkUIManagerClass
preedit_attrs	gtktextlayout.h	/^  PangoAttrList *preedit_attrs;$/;"	m	struct:_GtkTextLayout
preedit_changed	gtkimcontext.h	/^  void     (*preedit_changed)      (GtkIMContext *context);$/;"	m	struct:_GtkIMContextClass
preedit_cursor	gtktextlayout.h	/^  gint preedit_cursor;$/;"	m	struct:_GtkTextLayout
preedit_end	gtkimcontext.h	/^  void     (*preedit_end)          (GtkIMContext *context);$/;"	m	struct:_GtkIMContextClass
preedit_len	gtktextlayout.h	/^  gint preedit_len;$/;"	m	struct:_GtkTextLayout
preedit_start	gtkimcontext.h	/^  void     (*preedit_start)        (GtkIMContext *context);$/;"	m	struct:_GtkIMContextClass
preedit_string	gtktextlayout.h	/^  gchar *preedit_string;$/;"	m	struct:_GtkTextLayout
prepare	gtkassistant.h	/^  void (* prepare) (GtkAssistant *assistant, GtkWidget *page);$/;"	m	struct:_GtkAssistantClass
pressed	gtkbutton.h	/^  void (* pressed)  (GtkButton *button);$/;"	m	struct:_GtkButtonClass
prev_month	gtkcalendar.h	/^  void (* prev_month)			(GtkCalendar *calendar);$/;"	m	struct:_GtkCalendarClass
prev_year	gtkcalendar.h	/^  void (* prev_year)			(GtkCalendar *calendar);$/;"	m	struct:_GtkCalendarClass
preview	gtkprintoperation.h	/^  gboolean (*preview)	     (GtkPrintOperation        *operation,$/;"	m	struct:_GtkPrintOperationClass
priority	gtkbindings.h	/^  gint			 priority;$/;"	m	struct:_GtkBindingSet
priv	gtkcellrendererspinner.h	/^  GtkCellRendererSpinnerPrivate *priv;$/;"	m	struct:_GtkCellRendererSpinner
priv	gtkcomboboxtext.h	/^  GtkComboBoxTextPrivate *priv;$/;"	m	struct:_GtkComboBoxText
priv	gtkentrybuffer.h	/^  GtkEntryBufferPrivate *priv;$/;"	m	struct:_GtkEntryBuffer
priv	gtkinfobar.h	/^  GtkInfoBarPrivate *priv;$/;"	m	struct:_GtkInfoBar
priv	gtkmountoperation.h	/^  GtkMountOperationPrivate *priv;$/;"	m	struct:_GtkMountOperation
priv	gtkspinner.h	/^  GtkSpinnerPrivate *priv;$/;"	m	struct:_GtkSpinner
priv	gtktoolitemgroup.h	/^  GtkToolItemGroupPrivate *priv;$/;"	m	struct:_GtkToolItemGroup
priv	gtktoolpalette.h	/^  GtkToolPalettePrivate *priv;$/;"	m	struct:_GtkToolPalette
priv	ubuntumenuproxymodule.h	/^  UbuntuMenuProxyModulePrivate *priv;$/;"	m	struct:_UbuntuMenuProxyModule
private_font	gtkstyle.h	/^  GdkFont *private_font;$/;"	m	struct:_GtkStyle
private_font_desc	gtkstyle.h	/^  PangoFontDescription *private_font_desc; \/* Font description for style->private_font or %NULL *\/$/;"	m	struct:_GtkStyle
progress	gtkprogressbar.h	/^  GtkProgress progress;$/;"	m	struct:_GtkProgressBar
property	gtktext.h	/^  GList* property;$/;"	m	struct:_GtkPropertyMark
property_cache	gtkstyle.h	/^  GArray	 *property_cache;$/;"	m	struct:_GtkStyle
property_name	gtkrc.h	/^  GQuark property_name;$/;"	m	struct:_GtkRcProperty
property_notify_event	gtkwidget.h	/^  gboolean (* property_notify_event)	(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
proximity_in_event	gtkwidget.h	/^  gboolean (* proximity_in_event)	(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
proximity_out_event	gtkwidget.h	/^  gboolean (* proximity_out_event)	(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
pt	gtkclist.h	/^    } pt;$/;"	m	union:_GtkCell::__anon105	typeref:struct:_GtkCell::__anon105::__anon107
query_cursor	gtktipsquery.h	/^  GdkCursor	*query_cursor;$/;"	m	struct:_GtkTipsQuery
query_tooltip	gtkstatusicon.h	/^  gboolean (* query_tooltip)        (GtkStatusIcon  *status_icon,$/;"	m	struct:_GtkStatusIconClass
query_tooltip	gtkwidget.h	/^  gboolean     (* query_tooltip)      (GtkWidget  *widget,$/;"	m	struct:_GtkWidgetClass
range	gtkscale.h	/^  GtkRange range;$/;"	m	struct:_GtkScale
range	gtkscrollbar.h	/^  GtkRange range;$/;"	m	struct:_GtkScrollbar
rc_properties	gtkrc.h	/^  GArray *rc_properties;$/;"	m	struct:_GtkRcStyle
rc_style	gtkstyle.h	/^  GtkRcStyle	 *rc_style;$/;"	m	struct:_GtkStyle
rc_style_lists	gtkrc.h	/^  GSList *rc_style_lists;$/;"	m	struct:_GtkRcStyle
ready	gtkprintoperationpreview.h	/^  void              (*ready)          (GtkPrintOperationPreview *preview,$/;"	m	struct:_GtkPrintOperationPreviewIface
realize	gtkstyle.h	/^  void (*realize)               (GtkStyle               *style);$/;"	m	struct:_GtkStyleClass
realize	gtkwidget.h	/^  void (* realize)	       (GtkWidget        *widget);$/;"	m	struct:_GtkWidgetClass
realized	gtktexttag.h	/^  guint realized : 1;$/;"	m	struct:_GtkTextAttributes
rebuild_menu	gtktoolshell.h	/^  void               (*rebuild_menu)         (GtkToolShell *shell);$/;"	m	struct:_GtkToolShellIface
ref_count	gtkselection.h	/^  guint ref_count;$/;"	m	struct:_GtkTargetList
ref_node	gtktreemodel.h	/^  void         (* ref_node)        (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
refcount	gtktexttag.h	/^  guint refcount;$/;"	m	struct:_GtkTextAttributes
refresh	gtkclist.h	/^  void   (*refresh)             (GtkCList       *clist);$/;"	m	struct:_GtkCListClass
released	gtkbutton.h	/^  void (* released) (GtkButton *button);$/;"	m	struct:_GtkButtonClass
remove	gtkcontainer.h	/^  void    (*remove)    		(GtkContainer	 *container,$/;"	m	struct:_GtkContainerClass
remove_filter	gtkrecentchooser.h	/^  void              (* remove_filter)      (GtkRecentChooser  *chooser,$/;"	m	struct:_GtkRecentChooserIface
remove_row	gtkclist.h	/^  void   (*remove_row)          (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
remove_tag	gtktextbuffer.h	/^  void (* remove_tag)         (GtkTextBuffer *buffer,$/;"	m	struct:_GtkTextBufferClass
remove_widget	gtkcelleditable.h	/^  void (* remove_widget) (GtkCellEditable *cell_editable);$/;"	m	struct:_GtkCellEditableIface
render	gtkcellrenderer.h	/^  void             (* render)        (GtkCellRenderer      *cell,$/;"	m	struct:_GtkCellRendererClass
render_icon	gtkstyle.h	/^  GdkPixbuf * (* render_icon)   (GtkStyle               *style,$/;"	m	struct:_GtkStyleClass
render_page	gtkprintoperationpreview.h	/^  void              (*render_page)    (GtkPrintOperationPreview *preview,$/;"	m	struct:_GtkPrintOperationPreviewIface
reorder	gtkcelllayout.h	/^  void (* reorder)            (GtkCellLayout         *cell_layout,$/;"	m	struct:_GtkCellLayoutIface
reorder_tab	gtknotebook.h	/^  gboolean (* reorder_tab)     (GtkNotebook       *notebook,$/;"	m	struct:_GtkNotebookClass
request_page_setup	gtkprintoperation.h	/^  void     (*request_page_setup) (GtkPrintOperation *operation,$/;"	m	struct:_GtkPrintOperationClass
requisition	gtktable.h	/^  guint16 requisition;$/;"	m	struct:_GtkTableRowCol
reserved	gtkstatusbar.h	/^  gpointer reserved;$/;"	m	struct:_GtkStatusbarClass
reserved1	gtkclist.h	/^  gpointer reserved1;$/;"	m	struct:_GtkCList
reserved2	gtkclist.h	/^  gpointer reserved2;$/;"	m	struct:_GtkCList
reserved_1	gtktypeutils.h	/^  gpointer		 reserved_1;$/;"	m	struct:_GtkTypeInfo
reserved_2	gtktypeutils.h	/^  gpointer		 reserved_2;$/;"	m	struct:_GtkTypeInfo
reset	gtkimcontext.h	/^  void     (*reset)               (GtkIMContext   *context);$/;"	m	struct:_GtkIMContextClass
resize_column	gtkclist.h	/^  void   (*resize_column)       (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
resizeable	gtkclist.h	/^  guint resizeable     : 1;$/;"	m	struct:_GtkCListColumn
response	gtkdialog.h	/^  void (* response) (GtkDialog *dialog, gint response_id);$/;"	m	struct:_GtkDialogClass
response	gtkinfobar.h	/^  void (* response) (GtkInfoBar *info_bar, gint response_id);$/;"	m	struct:_GtkInfoBarClass
resync_selection	gtkclist.h	/^  void   (*resync_selection)    (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
retrieve_surrounding	gtkimcontext.h	/^  gboolean (*retrieve_surrounding) (GtkIMContext *context);$/;"	m	struct:_GtkIMContextClass
right	gtkstyle.h	/^  gint right;$/;"	m	struct:_GtkBorder
right_attach	gtktable.h	/^  guint16 right_attach;$/;"	m	struct:_GtkTableChild
right_margin	gtktextlayout.h	/^  gint right_margin;$/;"	m	struct:_GtkTextLineDisplay
right_margin	gtktexttag.h	/^  gint right_margin;$/;"	m	struct:_GtkTextAttributes
rise	gtktexttag.h	/^  gint rise;$/;"	m	struct:_GtkTextAppearance
root_tree	gtktree.h	/^  GtkTree* root_tree; \/* owner of selection list *\/$/;"	m	struct:_GtkTree
row	gtkclist.h	/^  gint row;$/;"	m	struct:_GtkCListCellInfo
row	gtkctree.h	/^  GtkCListRow row;$/;"	m	struct:_GtkCTreeRow
row_activated	gtktreeview.h	/^  void     (* row_activated)              (GtkTreeView       *tree_view,$/;"	m	struct:_GtkTreeViewClass
row_changed	gtktreemodel.h	/^  void         (* row_changed)           (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
row_collapsed	gtktreeview.h	/^  void     (* row_collapsed)              (GtkTreeView       *tree_view,$/;"	m	struct:_GtkTreeViewClass
row_deleted	gtktreemodel.h	/^  void         (* row_deleted)           (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
row_draggable	gtktreednd.h	/^  gboolean     (* row_draggable)        (GtkTreeDragSource   *drag_source,$/;"	m	struct:_GtkTreeDragSourceIface
row_drop_possible	gtktreednd.h	/^  gboolean     (* row_drop_possible)  (GtkTreeDragDest   *drag_dest,$/;"	m	struct:_GtkTreeDragDestIface
row_expanded	gtktreeview.h	/^  void     (* row_expanded)               (GtkTreeView       *tree_view,$/;"	m	struct:_GtkTreeViewClass
row_has_child_toggled	gtktreemodel.h	/^  void         (* row_has_child_toggled) (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
row_height	gtkclist.h	/^  gint row_height;$/;"	m	struct:_GtkCList
row_inserted	gtktreemodel.h	/^  void         (* row_inserted)          (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
row_list	gtkclist.h	/^  GList *row_list;$/;"	m	struct:_GtkCList
row_list_end	gtkclist.h	/^  GList *row_list_end;$/;"	m	struct:_GtkCList
row_move	gtkclist.h	/^  void   (*row_move)            (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
rows	gtkclist.h	/^  gint rows;$/;"	m	struct:_GtkCList
rows_reordered	gtktreemodel.h	/^  void         (* rows_reordered)        (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
rowstride	gtkpreview.h	/^  guint16 rowstride;$/;"	m	struct:_GtkPreview
rtl_context	gtktextlayout.h	/^  PangoContext *rtl_context;$/;"	m	struct:_GtkTextLayout
ruler	gtkhruler.h	/^  GtkRuler ruler;$/;"	m	struct:_GtkHRuler
ruler	gtkvruler.h	/^  GtkRuler ruler;$/;"	m	struct:_GtkVRuler
ruler_scale	gtkruler.h	/^  gdouble ruler_scale[10];$/;"	m	struct:_GtkRulerMetric
s	gtkpreview.h	/^  gushort s[2];$/;"	m	union:_GtkDitherInfo
scale	gtkhscale.h	/^  GtkScale scale;$/;"	m	struct:_GtkHScale
scale	gtkvscale.h	/^  GtkScale scale;$/;"	m	struct:_GtkVScale
scratch_buffer	gtktext.h	/^  union { GdkWChar *wc; guchar *ch; } scratch_buffer;$/;"	m	struct:_GtkText	typeref:union:_GtkText::__anon98
scratch_buffer_len	gtktext.h	/^  guint   scratch_buffer_len;$/;"	m	struct:_GtkText
screen_changed	gtkwidget.h	/^  void         (*screen_changed)     (GtkWidget *widget,$/;"	m	struct:_GtkWidgetClass
screen_width	gtktextlayout.h	/^  gint screen_width;$/;"	m	struct:_GtkTextLayout
scroll_child	gtkscrolledwindow.h	/^  gboolean (*scroll_child) (GtkScrolledWindow *scrolled_window,$/;"	m	struct:_GtkScrolledWindowClass
scroll_event	gtkstatusicon.h	/^  gboolean (* scroll_event)         (GtkStatusIcon  *status_icon,$/;"	m	struct:_GtkStatusIconClass
scroll_event	gtkwidget.h	/^  gboolean (* scroll_event)		(GtkWidget           *widget,$/;"	m	struct:_GtkWidgetClass
scroll_horizontal	gtkclist.h	/^  void   (*scroll_horizontal)   (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
scroll_horizontal	gtklistitem.h	/^  void (*scroll_horizontal) (GtkListItem   *list_item,$/;"	m	struct:_GtkListItemClass
scroll_vertical	gtkclist.h	/^  void   (*scroll_vertical)     (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
scroll_vertical	gtklistitem.h	/^  void (*scroll_vertical)   (GtkListItem   *list_item,$/;"	m	struct:_GtkListItemClass
scrollbar	gtkhscrollbar.h	/^  GtkScrollbar scrollbar;$/;"	m	struct:_GtkHScrollbar
scrollbar	gtkvscrollbar.h	/^  GtkScrollbar scrollbar;$/;"	m	struct:_GtkVScrollbar
scrollbar_spacing	gtkscrolledwindow.h	/^  gint scrollbar_spacing;$/;"	m	struct:_GtkScrolledWindowClass
select	gtkitem.h	/^  void (* select)   (GtkItem *item);$/;"	m	struct:_GtkItemClass
select_all	gtkclist.h	/^  void   (*select_all)          (GtkCList       *clist);$/;"	m	struct:_GtkCListClass
select_all	gtkiconview.h	/^  void    (* select_all)             (GtkIconView      *icon_view);$/;"	m	struct:_GtkIconViewClass
select_all	gtklistitem.h	/^  void (*select_all)        (GtkListItem   *list_item);$/;"	m	struct:_GtkListItemClass
select_all	gtkrecentchooser.h	/^  void              (* select_all)         (GtkRecentChooser  *chooser);$/;"	m	struct:_GtkRecentChooserIface
select_all	gtktreeview.h	/^  gboolean (* select_all)                 (GtkTreeView       *tree_view);$/;"	m	struct:_GtkTreeViewClass
select_child	gtklist.h	/^  void (* select_child)	     (GtkList	*list,$/;"	m	struct:_GtkListClass
select_child	gtktree.h	/^  void (* select_child)      (GtkTree   *tree,$/;"	m	struct:_GtkTreeClass
select_cursor_item	gtkiconview.h	/^  void    (* select_cursor_item)     (GtkIconView      *icon_view);$/;"	m	struct:_GtkIconViewClass
select_cursor_parent	gtktreeview.h	/^  gboolean (* select_cursor_parent)       (GtkTreeView       *tree_view);$/;"	m	struct:_GtkTreeViewClass
select_cursor_row	gtktreeview.h	/^  gboolean (* select_cursor_row)          (GtkTreeView       *tree_view,$/;"	m	struct:_GtkTreeViewClass
select_item	gtkmenushell.h	/^  void (*select_item)      (GtkMenuShell *menu_shell,$/;"	m	struct:_GtkMenuShellClass
select_page	gtknotebook.h	/^  gboolean (* select_page)     (GtkNotebook       *notebook,$/;"	m	struct:_GtkNotebookClass
select_row	gtkclist.h	/^  void   (*select_row)          (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
select_uri	gtkrecentchooser.h	/^  gboolean          (* select_uri)         (GtkRecentChooser  *chooser,$/;"	m	struct:_GtkRecentChooserIface
selectable	gtkclist.h	/^  guint selectable : 1;$/;"	m	struct:_GtkCListRow
selected_names	gtkfilesel.h	/^  GPtrArray *selected_names;$/;"	m	struct:_GtkFileSelection
selection	gtkclist.h	/^  GList *selection;$/;"	m	struct:_GtkCList
selection	gtklist.h	/^  GList *selection;$/;"	m	struct:_GtkList
selection	gtktree.h	/^  GList *selection;$/;"	m	struct:_GtkTree
selection_changed	gtkiconview.h	/^  void    (* selection_changed)      (GtkIconView      *icon_view);$/;"	m	struct:_GtkIconViewClass
selection_changed	gtklist.h	/^  void (* selection_changed) (GtkList	*list);$/;"	m	struct:_GtkListClass
selection_changed	gtkrecentchooser.h	/^  void		    (* selection_changed)  (GtkRecentChooser  *chooser);$/;"	m	struct:_GtkRecentChooserIface
selection_changed	gtktree.h	/^  void (* selection_changed) (GtkTree   *tree);$/;"	m	struct:_GtkTreeClass
selection_clear_event	gtkwidget.h	/^  gboolean (* selection_clear_event)	(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
selection_done	gtkmenushell.h	/^  void (*selection_done) (GtkMenuShell *menu_shell);$/;"	m	struct:_GtkMenuShellClass
selection_end	gtkclist.h	/^  GList *selection_end;$/;"	m	struct:_GtkCList
selection_end_pos	gtkoldeditable.h	/^  guint      selection_end_pos;$/;"	m	struct:_GtkOldEditable
selection_entry	gtkfilesel.h	/^  GtkWidget *selection_entry;$/;"	m	struct:_GtkFileSelection
selection_find	gtkclist.h	/^  GList* (*selection_find)      (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
selection_get	gtkwidget.h	/^  void (* selection_get)           (GtkWidget          *widget,$/;"	m	struct:_GtkWidgetClass
selection_mode	gtkclist.h	/^  GtkSelectionMode selection_mode;$/;"	m	struct:_GtkCList
selection_mode	gtklist.h	/^  guint selection_mode : 2;$/;"	m	struct:_GtkList
selection_mode	gtktree.h	/^  guint selection_mode : 2;$/;"	m	struct:_GtkTree
selection_notify_event	gtkwidget.h	/^  gboolean (* selection_notify_event)	(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
selection_received	gtkwidget.h	/^  void (* selection_received)      (GtkWidget          *widget,$/;"	m	struct:_GtkWidgetClass
selection_request_event	gtkwidget.h	/^  gboolean (* selection_request_event)	(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
selection_start_pos	gtkoldeditable.h	/^  guint      selection_start_pos;$/;"	m	struct:_GtkOldEditable
selection_text	gtkfilesel.h	/^  GtkWidget *selection_text;$/;"	m	struct:_GtkFileSelection
separator	gtkhseparator.h	/^  GtkSeparator separator;$/;"	m	struct:_GtkHSeparator
separator	gtkvseparator.h	/^  GtkSeparator separator;$/;"	m	struct:_GtkVSeparator
set_anchor	gtktextview.h	/^  void (* set_anchor)  (GtkTextView    *text_view);$/;"	m	struct:_GtkTextViewClass
set_arg	gtkobject.h	/^  void (*set_arg) (GtkObject *object,$/;"	m	struct:_GtkObjectClass
set_background	gtkstyle.h	/^  void (*set_background)        (GtkStyle               *style,$/;"	m	struct:_GtkStyleClass
set_buildable_property	gtkbuildable.h	/^  void          (* set_buildable_property) (GtkBuildable  *buildable,$/;"	m	struct:_GtkBuildableIface
set_cell_contents	gtkclist.h	/^  void   (*set_cell_contents)   (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
set_cell_data_func	gtkcelllayout.h	/^  void (* set_cell_data_func) (GtkCellLayout         *cell_layout,$/;"	m	struct:_GtkCellLayoutIface
set_child_property	gtkcontainer.h	/^  void    (*set_child_property) (GtkContainer    *container,$/;"	m	struct:_GtkContainerClass
set_client_window	gtkimcontext.h	/^  void     (*set_client_window)   (GtkIMContext   *context,$/;"	m	struct:_GtkIMContextClass
set_current_uri	gtkrecentchooser.h	/^  gboolean          (* set_current_uri)    (GtkRecentChooser  *chooser,$/;"	m	struct:_GtkRecentChooserIface
set_cursor_location	gtkimcontext.h	/^  void     (*set_cursor_location) (GtkIMContext   *context,$/;"	m	struct:_GtkIMContextClass
set_default_sort_func	gtktreesortable.h	/^  void     (* set_default_sort_func) (GtkTreeSortable        *sortable,$/;"	m	struct:_GtkTreeSortableIface
set_editable	gtkoldeditable.h	/^  void (* set_editable)    (GtkOldEditable *editable,$/;"	m	struct:_GtkOldEditableClass
set_focus	gtkwindow.h	/^  void     (* set_focus)   (GtkWindow *window,$/;"	m	struct:_GtkWindowClass
set_focus_child	gtkcontainer.h	/^  void    (*set_focus_child)	(GtkContainer	 *container,$/;"	m	struct:_GtkContainerClass
set_label	gtkmenuitem.h	/^  void (* set_label)            (GtkMenuItem *menu_item,$/;"	m	struct:_GtkMenuItemClass
set_name	gtkbindings.h	/^  gchar			*set_name;$/;"	m	struct:_GtkBindingSet
set_name	gtkbuildable.h	/^  void          (* set_name)               (GtkBuildable  *buildable,$/;"	m	struct:_GtkBuildableIface
set_next	gtkbindings.h	/^  GtkBindingEntry	*set_next;$/;"	m	struct:_GtkBindingEntry
set_position	gtkeditable.h	/^  void (* set_position)             (GtkEditable    *editable,$/;"	m	struct:_GtkEditableClass
set_position	gtkoldeditable.h	/^  void (* set_position) (GtkOldEditable  *editable,$/;"	m	struct:_GtkOldEditableClass
set_scroll_adjustments	gtkclist.h	/^  void  (*set_scroll_adjustments) (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
set_scroll_adjustments	gtkiconview.h	/^  void    (* set_scroll_adjustments) (GtkIconView      *icon_view,$/;"	m	struct:_GtkIconViewClass
set_scroll_adjustments	gtklayout.h	/^  void  (*set_scroll_adjustments)   (GtkLayout	    *layout,$/;"	m	struct:_GtkLayoutClass
set_scroll_adjustments	gtktext.h	/^  void  (*set_scroll_adjustments)   (GtkText	    *text,$/;"	m	struct:_GtkTextClass
set_scroll_adjustments	gtktextview.h	/^  void (* set_scroll_adjustments)   (GtkTextView    *text_view,$/;"	m	struct:_GtkTextViewClass
set_scroll_adjustments	gtktoolpalette.h	/^  void (*set_scroll_adjustments) (GtkWidget     *widget,$/;"	m	struct:_GtkToolPaletteClass
set_scroll_adjustments	gtktreeview.h	/^  void     (* set_scroll_adjustments)     (GtkTreeView       *tree_view,$/;"	m	struct:_GtkTreeViewClass
set_scroll_adjustments	gtkviewport.h	/^  void	(*set_scroll_adjustments)	(GtkViewport	*viewport,$/;"	m	struct:_GtkViewportClass
set_scroll_adjustments_signal	gtkwidget.h	/^  guint set_scroll_adjustments_signal;$/;"	m	struct:_GtkWidgetClass
set_selection	gtkoldeditable.h	/^  void (* set_selection)(GtkOldEditable  *editable,$/;"	m	struct:_GtkOldEditableClass
set_selection_bounds	gtkeditable.h	/^  void (* set_selection_bounds)     (GtkEditable    *editable,$/;"	m	struct:_GtkEditableClass
set_sort_column_id	gtktreesortable.h	/^  void     (* set_sort_column_id)    (GtkTreeSortable        *sortable,$/;"	m	struct:_GtkTreeSortableIface
set_sort_func	gtkrecentchooser.h	/^  void              (* set_sort_func)      (GtkRecentChooser  *chooser,$/;"	m	struct:_GtkRecentChooserIface
set_sort_func	gtktreesortable.h	/^  void     (* set_sort_func)         (GtkTreeSortable        *sortable,$/;"	m	struct:_GtkTreeSortableIface
set_surrounding	gtkimcontext.h	/^  void     (*set_surrounding)     (GtkIMContext   *context,$/;"	m	struct:_GtkIMContextClass
set_tooltip	gtktoolitem.h	/^  gboolean   (* set_tooltip)	      (GtkToolItem *tool_item,$/;"	m	struct:_GtkToolItemClass
set_use_preedit	gtkimcontext.h	/^  void     (*set_use_preedit)     (GtkIMContext   *context,$/;"	m	struct:_GtkIMContextClass
shadow_type	gtkclist.h	/^  GtkShadowType shadow_type;$/;"	m	struct:_GtkCList
shape_mask	gtkwidget.h	/^  GdkBitmap *shape_mask;$/;"	m	struct:_GtkWidgetShapeInfo
shaped_objects	gtktextlayout.h	/^  GSList *shaped_objects;	\/* Only for backwards compatibility *\/$/;"	m	struct:_GtkTextLineDisplay
show	gtkwidget.h	/^  void (* show)		       (GtkWidget        *widget);$/;"	m	struct:_GtkWidgetClass
show_all	gtkwidget.h	/^  void (* show_all)            (GtkWidget        *widget);$/;"	m	struct:_GtkWidgetClass
show_help	gtkwidget.h	/^  gboolean (* show_help)           (GtkWidget          *widget,$/;"	m	struct:_GtkWidgetClass
show_local	ubuntumenuproxy.h	/^  gboolean (* show_local) (UbuntuMenuProxy *proxy);$/;"	m	struct:_UbuntuMenuProxyClass
show_menu	gtkmenutoolbutton.h	/^  void (*show_menu) (GtkMenuToolButton *button);$/;"	m	struct:_GtkMenuToolButtonClass
show_stub	gtkctree.h	/^  guint show_stub      : 1;$/;"	m	struct:_GtkCTree
show_text	gtkprogress.h	/^  guint          show_text : 1;$/;"	m	struct:_GtkProgress
shrink	gtktable.h	/^  guint shrink : 1;$/;"	m	struct:_GtkTableRowCol
sibling	gtkctree.h	/^  GtkCTreeNode *sibling;$/;"	m	struct:_GtkCTreeRow
signal_data	gtktypeutils.h	/^    } signal_data;$/;"	m	union:_GtkArg::__anon68	typeref:struct:_GtkArg::__anon68::__anon69
signal_name	gtkbindings.h	/^  gchar 		*signal_name;$/;"	m	struct:_GtkBindingSignal
signal_quote1	gtkaccellabel.h	/^  gchar		*signal_quote1;$/;"	m	struct:_GtkAccelLabelClass
signal_quote2	gtkaccellabel.h	/^  gchar		*signal_quote2;$/;"	m	struct:_GtkAccelLabelClass
signals	gtkbindings.h	/^  GtkBindingSignal	*signals;$/;"	m	struct:_GtkBindingEntry
size_allocate	gtkwidget.h	/^  void (* size_allocate)       (GtkWidget        *widget,$/;"	m	struct:_GtkWidgetClass
size_changed	gtkstatusicon.h	/^  gboolean (* size_changed)         (GtkStatusIcon  *status_icon,$/;"	m	struct:_GtkStatusIconClass
size_only	gtktextlayout.h	/^  gboolean size_only;$/;"	m	struct:_GtkTextLineDisplay
size_request	gtkwidget.h	/^  void (* size_request)	       (GtkWidget        *widget,$/;"	m	struct:_GtkWidgetClass
slider_detail	gtkrange.h	/^  gchar *slider_detail;$/;"	m	struct:_GtkRangeClass
sort_column	gtkclist.h	/^  gint sort_column;$/;"	m	struct:_GtkCList
sort_column_changed	gtktreesortable.h	/^  void     (* sort_column_changed)   (GtkTreeSortable        *sortable);$/;"	m	struct:_GtkTreeSortableIface
sort_list	gtkclist.h	/^  void   (*sort_list)           (GtkCList       *clist);$/;"	m	struct:_GtkCListClass
sort_type	gtkclist.h	/^  GtkSortType sort_type;$/;"	m	struct:_GtkCList
spacing	gtkclist.h	/^      guint8 spacing;$/;"	m	struct:_GtkCell::__anon105::__anon107
spacing	gtkclist.h	/^  guint8 spacing;$/;"	m	struct:_GtkCellPixText
spacing	gtktable.h	/^  guint16 spacing;$/;"	m	struct:_GtkTableRowCol
stamp	gtktreemodel.h	/^  gint stamp;$/;"	m	struct:_GtkTreeIter
start	gtkprintsettings.h	/^  gint start;$/;"	m	struct:_GtkPageRange
start_editing	gtkcelleditable.h	/^  void (* start_editing) (GtkCellEditable *cell_editable,$/;"	m	struct:_GtkCellEditableIface
start_editing	gtkcellrenderer.h	/^  GtkCellEditable *(* start_editing) (GtkCellRenderer      *cell,$/;"	m	struct:_GtkCellRendererClass
start_interactive_search	gtktreeview.h	/^  gboolean (* start_interactive_search)   (GtkTreeView       *tree_view);$/;"	m	struct:_GtkTreeViewClass
start_query	gtktipsquery.h	/^  void	(*start_query)		(GtkTipsQuery	*tips_query);$/;"	m	struct:_GtkTipsQueryClass
start_selection	gtkclist.h	/^  void   (*start_selection)     (GtkCList       *clist);$/;"	m	struct:_GtkCListClass
start_selection	gtklistitem.h	/^  void (*start_selection)   (GtkListItem   *list_item);$/;"	m	struct:_GtkListItemClass
state	gtkclist.h	/^  GtkStateType state;$/;"	m	struct:_GtkCListRow
state_changed	gtkwidget.h	/^  void (* state_changed)       (GtkWidget        *widget,$/;"	m	struct:_GtkWidgetClass
status_changed	gtkprintoperation.h	/^  void     (*status_changed)     (GtkPrintOperation *operation);$/;"	m	struct:_GtkPrintOperationClass
stepper_detail	gtkrange.h	/^  gchar *stepper_detail;$/;"	m	struct:_GtkRangeClass
stock	gtkimage.h	/^    GtkImageStockData stock;$/;"	m	union:_GtkImage::__anon84
stock_id	gtkactiongroup.h	/^  const gchar     *stock_id;$/;"	m	struct:_GtkActionEntry
stock_id	gtkactiongroup.h	/^  const gchar     *stock_id;$/;"	m	struct:_GtkToggleActionEntry
stock_id	gtkactiongroup.h	/^  const gchar *stock_id;$/;"	m	struct:_GtkRadioActionEntry
stock_id	gtkimage.h	/^  gchar *stock_id;$/;"	m	struct:_GtkImageStockData
stock_id	gtkstock.h	/^  gchar *stock_id;$/;"	m	struct:_GtkStockItem
stop_query	gtktipsquery.h	/^  void	(*stop_query)		(GtkTipsQuery	*tips_query);$/;"	m	struct:_GtkTipsQueryClass
strikethrough	gtktexttag.h	/^  guint strikethrough : 1;$/;"	m	struct:_GtkTextAppearance
string_data	gtkbindings.h	/^    gchar	*string_data;$/;"	m	union:_GtkBindingArg::__anon5
string_data	gtktypeutils.h	/^    gchar *string_data;$/;"	m	union:_GtkArg::__anon68
style	gtkclist.h	/^  GtkStyle *style;$/;"	m	struct:_GtkCListRow
style	gtkclist.h	/^  GtkStyle *style;$/;"	m	struct:_GtkCell
style	gtkclist.h	/^  GtkStyle *style;$/;"	m	struct:_GtkCellPixText
style	gtkclist.h	/^  GtkStyle *style;$/;"	m	struct:_GtkCellPixmap
style	gtkclist.h	/^  GtkStyle *style;$/;"	m	struct:_GtkCellText
style	gtkclist.h	/^  GtkStyle *style;$/;"	m	struct:_GtkCellWidget
style_changed	gtktoolbar.h	/^  void     (* style_changed)       (GtkToolbar       *toolbar,$/;"	m	struct:_GtkToolbarClass
style_set	gtkwidget.h	/^  void (* style_set)	       (GtkWidget        *widget,$/;"	m	struct:_GtkWidgetClass
styles	gtkstyle.h	/^  GSList	 *styles;	  \/* of type GtkStyle* *\/$/;"	m	struct:_GtkStyle
subdivide	gtkruler.h	/^  gint subdivide[5];        \/* five possible modes of subdivision *\/$/;"	m	struct:_GtkRulerMetric
submenu_placement	gtkmenushell.h	/^  guint submenu_placement : 1;$/;"	m	struct:_GtkMenuShellClass
subtree	gtktreeitem.h	/^  GtkWidget *subtree;$/;"	m	struct:_GtkTreeItem
switch_page	gtknotebook.h	/^  void (* switch_page)       (GtkNotebook     *notebook,$/;"	m	struct:_GtkNotebookClass
sync_action_properties	gtkactivatable.h	/^  void   (* sync_action_properties)   (GtkActivatable *activatable,$/;"	m	struct:_GtkActivatableIface
tab_stops	gtktext.h	/^  GList *tab_stops;$/;"	m	struct:_GtkText
tabs	gtktexttag.h	/^  PangoTabArray *tabs;$/;"	m	struct:_GtkTextAttributes
tag_added	gtktexttagtable.h	/^  void (* tag_added) (GtkTextTagTable *table, GtkTextTag *tag);$/;"	m	struct:_GtkTextTagTableClass
tag_changed	gtktexttagtable.h	/^  void (* tag_changed) (GtkTextTagTable *table, GtkTextTag *tag, gboolean size_changed);$/;"	m	struct:_GtkTextTagTableClass
tag_removed	gtktexttagtable.h	/^  void (* tag_removed) (GtkTextTagTable *table, GtkTextTag *tag);$/;"	m	struct:_GtkTextTagTableClass
target	gtkselection.h	/^  GdkAtom   target;$/;"	m	struct:_GtkTargetPair
target	gtkselection.h	/^  gchar *target;$/;"	m	struct:_GtkTargetEntry
test_collapse_row	gtktreeview.h	/^  gboolean (* test_collapse_row)          (GtkTreeView       *tree_view,$/;"	m	struct:_GtkTreeViewClass
test_expand_row	gtktreeview.h	/^  gboolean (* test_expand_row)            (GtkTreeView       *tree_view,$/;"	m	struct:_GtkTreeViewClass
text	gtkclist.h	/^      gchar *text;$/;"	m	struct:_GtkCell::__anon105::__anon107
text	gtkclist.h	/^    gchar *text;$/;"	m	union:_GtkCell::__anon105
text	gtkclist.h	/^  gchar *text;$/;"	m	struct:_GtkCellPixText
text	gtkclist.h	/^  gchar *text;$/;"	m	struct:_GtkCellText
text	gtkrc.h	/^  GdkColor   text[5];$/;"	m	struct:_GtkRcStyle
text	gtkstyle.h	/^  GdkColor text[5];$/;"	m	struct:_GtkStyle
text	gtktext.h	/^  union { GdkWChar *wc; guchar  *ch; } text;$/;"	m	struct:_GtkText	typeref:union:_GtkText::__anon97
text_aa	gtkstyle.h	/^  GdkColor text_aa[5];		\/* Halfway between text\/base *\/$/;"	m	struct:_GtkStyle
text_aa_gc	gtkstyle.h	/^  GdkGC *text_aa_gc[5];$/;"	m	struct:_GtkStyle
text_area	gtktext.h	/^  GdkWindow *text_area;$/;"	m	struct:_GtkText
text_end	gtktext.h	/^  guint text_end;$/;"	m	struct:_GtkText
text_gc	gtkstyle.h	/^  GdkGC *text_gc[5];$/;"	m	struct:_GtkStyle
text_len	gtktext.h	/^  guint text_len;$/;"	m	struct:_GtkText
text_popped	gtkstatusbar.h	/^  void	(*text_popped)	(GtkStatusbar	*statusbar,$/;"	m	struct:_GtkStatusbarClass
text_properties	gtktext.h	/^  GList *text_properties;$/;"	m	struct:_GtkText
text_properties_end	gtktext.h	/^  GList *text_properties_end;$/;"	m	struct:_GtkText
text_pushed	gtkstatusbar.h	/^  void	(*text_pushed)	(GtkStatusbar	*statusbar,$/;"	m	struct:_GtkStatusbarClass
theme_change_id	gtkimage.h	/^  guint theme_change_id;$/;"	m	struct:_GtkImageGIconData
theme_change_id	gtkimage.h	/^  guint theme_change_id;$/;"	m	struct:_GtkImageIconNameData
timer	gtktext.h	/^  gint timer;$/;"	m	struct:_GtkText
timer_tag	gtktooltips.h	/^  gint	  timer_tag;$/;"	m	struct:_GtkTooltips
tip_label	gtktooltips.h	/^  GtkWidget *tip_label;$/;"	m	struct:_GtkTooltips
tip_private	gtktooltips.h	/^  gchar *tip_private;$/;"	m	struct:_GtkTooltipsData
tip_text	gtktooltips.h	/^  gchar *tip_text;$/;"	m	struct:_GtkTooltipsData
tip_window	gtktooltips.h	/^  GtkWidget *tip_window;$/;"	m	struct:_GtkTooltips
tips_data_list	gtktooltips.h	/^  GList *tips_data_list; \/* unused *\/$/;"	m	struct:_GtkTooltips
title	gtkclist.h	/^  gchar *title;$/;"	m	struct:_GtkCListColumn
title_window	gtkclist.h	/^  GdkWindow *title_window;$/;"	m	struct:_GtkCList
toggle	gtkitem.h	/^  void (* toggle)   (GtkItem *item);$/;"	m	struct:_GtkItemClass
toggle_add_mode	gtkclist.h	/^  void   (*toggle_add_mode)     (GtkCList       *clist);$/;"	m	struct:_GtkCListClass
toggle_add_mode	gtklistitem.h	/^  void (*toggle_add_mode)   (GtkListItem   *list_item);$/;"	m	struct:_GtkListItemClass
toggle_button	gtkcheckbutton.h	/^  GtkToggleButton toggle_button;$/;"	m	struct:_GtkCheckButton
toggle_cursor_item	gtkiconview.h	/^  void    (* toggle_cursor_item)     (GtkIconView      *icon_view);$/;"	m	struct:_GtkIconViewClass
toggle_cursor_row	gtktreeview.h	/^  gboolean (* toggle_cursor_row)          (GtkTreeView       *tree_view);$/;"	m	struct:_GtkTreeViewClass
toggle_focus_row	gtkclist.h	/^  void   (*toggle_focus_row)    (GtkCList       *clist);$/;"	m	struct:_GtkCListClass
toggle_focus_row	gtklistitem.h	/^  void (*toggle_focus_row)  (GtkListItem   *list_item);$/;"	m	struct:_GtkListItemClass
toggle_handle_focus	gtkpaned.h	/^  gboolean (* toggle_handle_focus) (GtkPaned      *paned);$/;"	m	struct:_GtkPanedClass
toggle_overwrite	gtkentry.h	/^  void (* toggle_overwrite)   (GtkEntry             *entry);$/;"	m	struct:_GtkEntryClass
toggle_overwrite	gtktextview.h	/^  void (* toggle_overwrite) (GtkTextView *text_view);$/;"	m	struct:_GtkTextViewClass
toggle_size_allocate	gtkmenuitem.h	/^  void (* toggle_size_allocate) (GtkMenuItem *menu_item,$/;"	m	struct:_GtkMenuItemClass
toggle_size_request	gtkmenuitem.h	/^  void (* toggle_size_request)  (GtkMenuItem *menu_item,$/;"	m	struct:_GtkMenuItemClass
toggled	gtkcellrenderertoggle.h	/^  void (* toggled) (GtkCellRendererToggle *cell_renderer_toggle,$/;"	m	struct:_GtkCellRendererToggleClass
toggled	gtkcheckmenuitem.h	/^  void (* toggled)	  (GtkCheckMenuItem *check_menu_item);$/;"	m	struct:_GtkCheckMenuItemClass
toggled	gtktoggleaction.h	/^  void (* toggled) (GtkToggleAction *action);$/;"	m	struct:_GtkToggleActionClass
toggled	gtktogglebutton.h	/^  void (* toggled) (GtkToggleButton *toggle_button);$/;"	m	struct:_GtkToggleButtonClass
toggled	gtktoggletoolbutton.h	/^  void (* toggled) (GtkToggleToolButton *button);$/;"	m	struct:_GtkToggleToolButtonClass
toolbar_item_type	gtkaction.h	/^  GType      toolbar_item_type;$/;"	m	struct:_GtkActionClass
toolbar_reconfigured	gtktoolitem.h	/^  void       (* toolbar_reconfigured) (GtkToolItem *tool_item);$/;"	m	struct:_GtkToolItemClass
tooltip	gtkactiongroup.h	/^  const gchar     *tooltip;$/;"	m	struct:_GtkActionEntry
tooltip	gtkactiongroup.h	/^  const gchar     *tooltip;$/;"	m	struct:_GtkToggleActionEntry
tooltip	gtkactiongroup.h	/^  const gchar *tooltip;$/;"	m	struct:_GtkRadioActionEntry
tooltips	gtktooltips.h	/^  GtkTooltips *tooltips;$/;"	m	struct:_GtkTooltipsData
top	gtkstyle.h	/^  gint top;$/;"	m	struct:_GtkBorder
top_attach	gtktable.h	/^  guint16 top_attach;$/;"	m	struct:_GtkTableChild
top_margin	gtktextlayout.h	/^  gint top_margin;$/;"	m	struct:_GtkTextLineDisplay
total_width	gtktextlayout.h	/^  gint total_width;             \/* width - margins, if no width set on layout, if width set on layout, -1 *\/$/;"	m	struct:_GtkTextLineDisplay
translate_data	gtkitemfactory.h	/^  gpointer               translate_data;$/;"	m	struct:_GtkItemFactory
translate_func	gtkitemfactory.h	/^  GtkTranslateFunc       translate_func;$/;"	m	struct:_GtkItemFactory
translate_notify	gtkitemfactory.h	/^  GDestroyNotify         translate_notify;$/;"	m	struct:_GtkItemFactory
translation_domain	gtkstock.h	/^  gchar *translation_domain;$/;"	m	struct:_GtkStockItem
tree_collapse	gtkctree.h	/^  void (*tree_collapse)     (GtkCTree     *ctree,$/;"	m	struct:_GtkCTreeClass
tree_column	gtkctree.h	/^  gint tree_column;$/;"	m	struct:_GtkCTree
tree_expand	gtkctree.h	/^  void (*tree_expand)       (GtkCTree     *ctree,$/;"	m	struct:_GtkCTreeClass
tree_indent	gtkctree.h	/^  gint tree_indent;$/;"	m	struct:_GtkCTree
tree_move	gtkctree.h	/^  void (*tree_move)         (GtkCTree     *ctree,$/;"	m	struct:_GtkCTreeClass
tree_owner	gtktree.h	/^  GtkWidget* tree_owner;$/;"	m	struct:_GtkTree
tree_select_row	gtkctree.h	/^  void (*tree_select_row)   (GtkCTree     *ctree,$/;"	m	struct:_GtkCTreeClass
tree_spacing	gtkctree.h	/^  gint tree_spacing;$/;"	m	struct:_GtkCTree
tree_unselect_row	gtkctree.h	/^  void (*tree_unselect_row) (GtkCTree     *ctree,$/;"	m	struct:_GtkCTreeClass
type	gtkclist.h	/^  GtkCellType type;$/;"	m	struct:_GtkCell
type	gtkclist.h	/^  GtkCellType type;$/;"	m	struct:_GtkCellPixText
type	gtkclist.h	/^  GtkCellType type;$/;"	m	struct:_GtkCellPixmap
type	gtkclist.h	/^  GtkCellType type;$/;"	m	struct:_GtkCellText
type	gtkclist.h	/^  GtkCellType type;$/;"	m	struct:_GtkCellWidget
type	gtkpreview.h	/^  guint type : 1;$/;"	m	struct:_GtkPreview
type	gtktoolbar.h	/^  GtkToolbarChildType type;$/;"	m	struct:_GtkToolbarChild
type	gtktypeutils.h	/^  GType type;$/;"	m	struct:_GtkArg
type_name	gtkrc.h	/^  GQuark type_name;$/;"	m	struct:_GtkRcProperty
type_name	gtktypeutils.h	/^  gchar			*type_name;$/;"	m	struct:_GtkTypeInfo
u	gtkclist.h	/^  } u;$/;"	m	struct:_GtkCell	typeref:union:_GtkCell::__anon105
ubuntu_gtk_widget_set_has_grab	gtkwidget.h	/^void   ubuntu_gtk_widget_set_has_grab  (GtkWidget *widget,$/;"	p
ubuntu_menu_proxy_activate_menu	ubuntumenuproxy.h	/^void               ubuntu_menu_proxy_activate_menu (UbuntuMenuProxy *proxy,$/;"	p
ubuntu_menu_proxy_get	ubuntumenuproxy.h	/^UbuntuMenuProxy*   ubuntu_menu_proxy_get           (void);$/;"	p
ubuntu_menu_proxy_insert	ubuntumenuproxy.h	/^void               ubuntu_menu_proxy_insert        (UbuntuMenuProxy *proxy,$/;"	p
ubuntu_menu_proxy_module_get	ubuntumenuproxymodule.h	/^UbuntuMenuProxyModule *ubuntu_menu_proxy_module_get      (void);$/;"	p
ubuntu_menu_proxy_show_local	ubuntumenuproxy.h	/^gboolean           ubuntu_menu_proxy_show_local    (UbuntuMenuProxy *proxy);$/;"	p
uchar_data	gtktypeutils.h	/^    guchar uchar_data;$/;"	m	union:_GtkArg::__anon68
uint_data	gtktypeutils.h	/^    guint uint_data;$/;"	m	union:_GtkArg::__anon68
ulong_data	gtktypeutils.h	/^    gulong ulong_data;$/;"	m	union:_GtkArg::__anon68
underline	gtktexttag.h	/^  guint underline : 4;          \/* PangoUnderline *\/$/;"	m	struct:_GtkTextAppearance
undo_anchor	gtkclist.h	/^  gint undo_anchor;$/;"	m	struct:_GtkCList
undo_focus_child	gtklist.h	/^  GtkWidget *undo_focus_child;$/;"	m	struct:_GtkList
undo_selection	gtkclist.h	/^  GList *undo_selection;$/;"	m	struct:_GtkCList
undo_selection	gtkclist.h	/^  void   (*undo_selection)      (GtkCList       *clist);$/;"	m	struct:_GtkCListClass
undo_selection	gtklist.h	/^  GList *undo_selection;$/;"	m	struct:_GtkList
undo_selection	gtklistitem.h	/^  void (*undo_selection)    (GtkListItem   *list_item);$/;"	m	struct:_GtkListItemClass
undo_unselection	gtkclist.h	/^  GList *undo_unselection;$/;"	m	struct:_GtkCList
undo_unselection	gtklist.h	/^  GList *undo_unselection;$/;"	m	struct:_GtkList
unload	ubuntumenuproxymodule.h	/^  void        (* unload)   (UbuntuMenuProxyModule *module);$/;"	m	struct:_UbuntuMenuProxyModule
unmap	gtkwidget.h	/^  void (* unmap)	       (GtkWidget        *widget);$/;"	m	struct:_GtkWidgetClass
unmap_event	gtkwidget.h	/^  gboolean (* unmap_event)		(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
unrealize	gtkstyle.h	/^  void (*unrealize)             (GtkStyle               *style);$/;"	m	struct:_GtkStyleClass
unrealize	gtkwidget.h	/^  void (* unrealize)	       (GtkWidget        *widget);$/;"	m	struct:_GtkWidgetClass
unref_node	gtktreemodel.h	/^  void         (* unref_node)      (GtkTreeModel *tree_model,$/;"	m	struct:_GtkTreeModelIface
unselect_all	gtkclist.h	/^  void   (*unselect_all)        (GtkCList       *clist);$/;"	m	struct:_GtkCListClass
unselect_all	gtkiconview.h	/^  void    (* unselect_all)           (GtkIconView      *icon_view);$/;"	m	struct:_GtkIconViewClass
unselect_all	gtklistitem.h	/^  void (*unselect_all)      (GtkListItem   *list_item);$/;"	m	struct:_GtkListItemClass
unselect_all	gtkrecentchooser.h	/^  void              (* unselect_all)       (GtkRecentChooser  *chooser);$/;"	m	struct:_GtkRecentChooserIface
unselect_all	gtktreeview.h	/^  gboolean (* unselect_all)               (GtkTreeView       *tree_view);$/;"	m	struct:_GtkTreeViewClass
unselect_child	gtklist.h	/^  void (* unselect_child)    (GtkList	*list,$/;"	m	struct:_GtkListClass
unselect_child	gtktree.h	/^  void (* unselect_child)    (GtkTree   *tree,$/;"	m	struct:_GtkTreeClass
unselect_row	gtkclist.h	/^  void   (*unselect_row)        (GtkCList       *clist,$/;"	m	struct:_GtkCListClass
unselect_uri	gtkrecentchooser.h	/^  void              (* unselect_uri)       (GtkRecentChooser  *chooser,$/;"	m	struct:_GtkRecentChooserIface
update	gtkactivatable.h	/^  void   (* update)                   (GtkActivatable *activatable,$/;"	m	struct:_GtkActivatableIface
update	gtkprogress.h	/^  void (* update)           (GtkProgress *progress);$/;"	m	struct:_GtkProgressClass
update_custom_widget	gtkprintoperation.h	/^  void     (*update_custom_widget) (GtkPrintOperation *operation,$/;"	m	struct:_GtkPrintOperationClass
update_text	gtkoldeditable.h	/^  void (* update_text)  (GtkOldEditable  *editable,$/;"	m	struct:_GtkOldEditableClass
uri	gtkfilefilter.h	/^  const gchar *uri;$/;"	m	struct:_GtkFileFilterInfo
uri	gtkrecentfilter.h	/^  const gchar *uri;$/;"	m	struct:_GtkRecentFilterInfo
use_arrows	gtkcombo.h	/^	guint use_arrows:1;$/;"	m	struct:_GtkCombo
use_arrows_always	gtkcombo.h	/^	guint use_arrows_always:1;$/;"	m	struct:_GtkCombo
use_sticky_delay	gtktooltips.h	/^  guint   use_sticky_delay : 1;$/;"	m	struct:_GtkTooltips
use_text_format	gtkprogress.h	/^  guint          use_text_format : 1;$/;"	m	struct:_GtkProgress
use_wchar	gtktext.h	/^  guint use_wchar : 1;$/;"	m	struct:_GtkText
user_data	gtktreemodel.h	/^  gpointer user_data;$/;"	m	struct:_GtkTreeIter
user_data2	gtktreemodel.h	/^  gpointer user_data2;$/;"	m	struct:_GtkTreeIter
user_data3	gtktreemodel.h	/^  gpointer user_data3;$/;"	m	struct:_GtkTreeIter
vadj	gtktext.h	/^  GtkAdjustment *vadj;$/;"	m	struct:_GtkText
vadjustment	gtkclist.h	/^  GtkAdjustment *vadjustment;$/;"	m	struct:_GtkCList
value	gtkactiongroup.h	/^  gint   value; $/;"	m	struct:_GtkRadioActionEntry
value	gtkrc.h	/^  GValue value;$/;"	m	struct:_GtkRcProperty
value	gtksettings.h	/^  GValue value;$/;"	m	struct:_GtkSettingsValue
value_changed	gtkadjustment.h	/^  void (* value_changed) (GtkAdjustment *adjustment);$/;"	m	struct:_GtkAdjustmentClass
value_changed	gtkrange.h	/^  void (* value_changed)    (GtkRange     *range);$/;"	m	struct:_GtkRangeClass
value_changed	gtkscalebutton.h	/^  void	(* value_changed) (GtkScaleButton *button,$/;"	m	struct:_GtkScaleButtonClass
value_changed	gtkspinbutton.h	/^  void (*value_changed) (GtkSpinButton *spin_button);$/;"	m	struct:_GtkSpinButtonClass
value_in_list	gtkcombo.h	/^	guint value_in_list:1;$/;"	m	struct:_GtkCombo
vbox	gtkgamma.h	/^  GtkVBox vbox;$/;"	m	struct:_GtkGammaCurve
vertical	gtkclist.h	/^  gint16 vertical;$/;"	m	struct:_GtkCell
vertical	gtkclist.h	/^  gint16 vertical;$/;"	m	struct:_GtkCellPixText
vertical	gtkclist.h	/^  gint16 vertical;$/;"	m	struct:_GtkCellPixmap
vertical	gtkclist.h	/^  gint16 vertical;$/;"	m	struct:_GtkCellText
vertical	gtkclist.h	/^  gint16 vertical;$/;"	m	struct:_GtkCellWidget
view_line	gtktree.h	/^  guint view_line : 1;$/;"	m	struct:_GtkTree
view_mode	gtktree.h	/^  guint view_mode : 1;$/;"	m	struct:_GtkTree
visibility_notify_event	gtkwidget.h	/^  gboolean (* visibility_notify_event)	(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
visible	gtkclist.h	/^  guint visible        : 1;  $/;"	m	struct:_GtkCListColumn
visible	gtkoldeditable.h	/^  guint      visible : 1;$/;"	m	struct:_GtkOldEditable
voffset	gtkclist.h	/^  gint voffset;$/;"	m	struct:_GtkCList
vtimer	gtkclist.h	/^  gint vtimer;$/;"	m	struct:_GtkCList
vtimer	gtklist.h	/^  guint vtimer;$/;"	m	struct:_GtkList
wc	gtktext.h	/^  union { GdkWChar *wc; guchar  *ch; } text;$/;"	m	union:_GtkText::__anon97
wc	gtktext.h	/^  union { GdkWChar *wc; guchar *ch; } scratch_buffer;$/;"	m	union:_GtkText::__anon98
white	gtkstyle.h	/^  GdkColor white;$/;"	m	struct:_GtkStyle
white_gc	gtkstyle.h	/^  GdkGC *white_gc;$/;"	m	struct:_GtkStyle
widget	gtkbox.h	/^  GtkWidget *widget;$/;"	m	struct:_GtkBoxChild
widget	gtkcalendar.h	/^  GtkWidget widget;$/;"	m	struct:_GtkCalendar
widget	gtkclist.h	/^    GtkWidget *widget;$/;"	m	union:_GtkCell::__anon105
widget	gtkclist.h	/^  GtkWidget *widget;$/;"	m	struct:_GtkCellWidget
widget	gtkcontainer.h	/^  GtkWidget widget;$/;"	m	struct:_GtkContainer
widget	gtkdrawingarea.h	/^  GtkWidget widget;$/;"	m	struct:_GtkDrawingArea
widget	gtkentry.h	/^  GtkWidget  widget;$/;"	m	struct:_GtkEntry
widget	gtkfixed.h	/^  GtkWidget *widget;$/;"	m	struct:_GtkFixedChild
widget	gtkinvisible.h	/^  GtkWidget widget;$/;"	m	struct:_GtkInvisible
widget	gtkitemfactory.h	/^  GtkWidget		*widget;$/;"	m	struct:_GtkItemFactory
widget	gtkitemfactory.h	/^  GtkWidget *widget;$/;"	m	struct:__anon95
widget	gtkmisc.h	/^  GtkWidget widget;$/;"	m	struct:_GtkMisc
widget	gtkoldeditable.h	/^  GtkWidget widget;$/;"	m	struct:_GtkOldEditable
widget	gtkpreview.h	/^  GtkWidget widget;$/;"	m	struct:_GtkPreview
widget	gtkprogress.h	/^  GtkWidget widget;$/;"	m	struct:_GtkProgress
widget	gtkrange.h	/^  GtkWidget widget;$/;"	m	struct:_GtkRange
widget	gtkruler.h	/^  GtkWidget widget;$/;"	m	struct:_GtkRuler
widget	gtkseparator.h	/^  GtkWidget widget;$/;"	m	struct:_GtkSeparator
widget	gtktable.h	/^  GtkWidget *widget;$/;"	m	struct:_GtkTableChild
widget	gtktoolbar.h	/^  GtkWidget *widget;$/;"	m	struct:_GtkToolbarChild
widget	gtktooltips.h	/^  GtkWidget *widget;$/;"	m	struct:_GtkTooltipsData
widget_class_pspecs	gtkbindings.h	/^  GSList		*widget_class_pspecs;$/;"	m	struct:_GtkBindingSet
widget_entered	gtktipsquery.h	/^  void	(*widget_entered)	(GtkTipsQuery	*tips_query,$/;"	m	struct:_GtkTipsQueryClass
widget_path_pspecs	gtkbindings.h	/^  GSList		*widget_path_pspecs;$/;"	m	struct:_GtkBindingSet
widget_selected	gtktipsquery.h	/^  gint	(*widget_selected)	(GtkTipsQuery	*tips_query,$/;"	m	struct:_GtkTipsQueryClass
widgets	gtkitemfactory.h	/^  GSList *widgets;$/;"	m	struct:_GtkItemFactoryItem
width	gtkclist.h	/^  gint width;$/;"	m	struct:_GtkCListColumn
width	gtkoptionmenu.h	/^  guint16 width;$/;"	m	struct:_GtkOptionMenu
width	gtktextlayout.h	/^  gint width;                   \/* Width of layout *\/$/;"	m	struct:_GtkTextLineDisplay
width	gtktextlayout.h	/^  gint width;$/;"	m	struct:_GtkTextLayout
width	gtkwidget.h	/^  gint width;$/;"	m	struct:_GtkRequisition
width	gtkwidget.h	/^  gint width;$/;"	m	struct:_GtkWidgetAuxInfo
width_set	gtkclist.h	/^  guint width_set      : 1;$/;"	m	struct:_GtkCListColumn
window	gtkclist.h	/^  GdkWindow *window;$/;"	m	struct:_GtkCListColumn
window	gtkdialog.h	/^  GtkWindow window;$/;"	m	struct:_GtkDialog
window	gtkplug.h	/^  GtkWindow window;$/;"	m	struct:_GtkPlug
window_state_event	gtkwidget.h	/^  gboolean (* window_state_event)	(GtkWidget	     *widget,$/;"	m	struct:_GtkWidgetClass
word_wrap	gtktext.h	/^  guint word_wrap : 1;$/;"	m	struct:_GtkText
wrap	gtktextlayout.h	/^  GtkTextLineData* (*wrap)      (GtkTextLayout     *layout,$/;"	m	struct:_GtkTextLayoutClass
wrap_loop_count	gtktextlayout.h	/^  gint wrap_loop_count;$/;"	m	struct:_GtkTextLayout
wrap_mode	gtktexttag.h	/^  GtkWrapMode wrap_mode;        \/* How to handle wrap-around for this tag.$/;"	m	struct:_GtkTextAttributes
wrapped	gtkspinbutton.h	/^  void (*wrapped) (GtkSpinButton *spin_button);$/;"	m	struct:_GtkSpinButtonClass
x	gtkfixed.h	/^  gint x;$/;"	m	struct:_GtkFixedChild
x	gtktextlayout.h	/^  gint x;$/;"	m	struct:_GtkTextCursorDisplay
x	gtkwidget.h	/^  gint x;$/;"	m	struct:_GtkWidgetAuxInfo
x_align	gtkprogress.h	/^  gfloat         x_align;$/;"	m	struct:_GtkProgress
x_drag	gtkclist.h	/^  gint x_drag;$/;"	m	struct:_GtkCList
x_offset	gtktextlayout.h	/^  gint x_offset;$/;"	m	struct:_GtkTextLineDisplay
x_set	gtkwidget.h	/^  guint x_set : 1;$/;"	m	struct:_GtkWidgetAuxInfo
xexpand	gtktable.h	/^  guint xexpand : 1;$/;"	m	struct:_GtkTableChild
xfill	gtktable.h	/^  guint xfill : 1;$/;"	m	struct:_GtkTableChild
xor_gc	gtkclist.h	/^  GdkGC *xor_gc;$/;"	m	struct:_GtkCList
xpadding	gtktable.h	/^  guint16 xpadding;$/;"	m	struct:_GtkTableChild
xshrink	gtktable.h	/^  guint xshrink : 1;$/;"	m	struct:_GtkTableChild
xthickness	gtkrc.h	/^  gint xthickness;$/;"	m	struct:_GtkRcStyle
xthickness	gtkstyle.h	/^  gint xthickness;$/;"	m	struct:_GtkStyle
y	gtkfixed.h	/^  gint y;$/;"	m	struct:_GtkFixedChild
y	gtktextlayout.h	/^  gint y;$/;"	m	struct:_GtkTextCursorDisplay
y	gtkwidget.h	/^  gint y;$/;"	m	struct:_GtkWidgetAuxInfo
y_align	gtkprogress.h	/^  gfloat         y_align;$/;"	m	struct:_GtkProgress
y_set	gtkwidget.h	/^  guint y_set : 1;$/;"	m	struct:_GtkWidgetAuxInfo
yexpand	gtktable.h	/^  guint yexpand : 1;$/;"	m	struct:_GtkTableChild
yfill	gtktable.h	/^  guint yfill : 1;$/;"	m	struct:_GtkTableChild
ypadding	gtktable.h	/^  guint16 ypadding;$/;"	m	struct:_GtkTableChild
yshrink	gtktable.h	/^  guint yshrink : 1;$/;"	m	struct:_GtkTableChild
ythickness	gtkrc.h	/^  gint ythickness;$/;"	m	struct:_GtkRcStyle
ythickness	gtkstyle.h	/^  gint ythickness;$/;"	m	struct:_GtkStyle
